[{"lineNumber": 9, "col_offset": 0, "nodeName": "create_strings_from_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "create_strings_from_dict", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_strings_from_wikipedia", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "create_strings_randomly", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "dict_len", "type": "int"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "sentences", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "pool", "type": "str"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "let", "type": "Union[bool, Any]"}, {"lineNumber": 89, "col_offset": 7, "nodeName": "num", "type": "Union[bool, Any]"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "sym", "type": "Union[bool, Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 49, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "lang_dict", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "count", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "current_string", "type": "str"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "count", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "page", "type": "requests.models.Response"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "soup", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "script", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "sentences", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "pool", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "pool", "type": "str"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "lang", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "min_seq_len", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "min_seq_len", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "count", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "current_string", "type": "str"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "filename", "type": "Any"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "count", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "current_string", "type": "str"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "current_string", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "sentences", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "BeautifulSoup", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "text", "type": "str"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "soup", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "count", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "let", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "num", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "sym", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "let", "type": "bool"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "num", "type": "bool"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "sym", "type": "bool"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "lang", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "pool", "type": "str"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "pool", "type": "str"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "ascii_letters", "type": "str"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "current_string", "type": "str"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "current_string", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "l", "type": "str"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "allow_variable", "type": "Any"}, {"lineNumber": 37, "col_offset": 75, "nodeName": "length", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "current_string", "type": "str"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "requests", "type": "module"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 82, "nodeName": "lang", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "page", "type": "requests.models.Response"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "extract", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "sentences", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "string", "type": "module"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "allow_variable", "type": "Any"}, {"lineNumber": 104, "col_offset": 75, "nodeName": "length", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "min_seq_len", "type": "int"}, {"lineNumber": 105, "col_offset": 50, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "current_string", "type": "str"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "count", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "length", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "lang_dict", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "script", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "length", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "random", "type": "module"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "l", "type": "str"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "random", "type": "module"}, {"lineNumber": 65, "col_offset": 70, "nodeName": "s", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "max", "type": "Callable"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "chr", "type": "Callable[[int], str]"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "random", "type": "module"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "pool", "type": "str"}, {"lineNumber": 106, "col_offset": 63, "nodeName": "_", "type": "int"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "randrange", "type": "Callable[..., int]"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "dict_len", "type": "int"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 65, "col_offset": 75, "nodeName": "splitlines", "type": "Any"}, {"lineNumber": 86, "col_offset": 45, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "random", "type": "module"}, {"lineNumber": 106, "col_offset": 68, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 106, "col_offset": 74, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "count", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "random", "type": "module"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 22, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "strings", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "re", "type": "module"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "strip", "type": "Any"}, {"lineNumber": 65, "col_offset": 75, "nodeName": "get_text", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "s", "type": "Any"}, {"lineNumber": 65, "col_offset": 75, "nodeName": "soup", "type": "Any"}]