[{"lineNumber": 55, "col_offset": 0, "nodeName": "_benchmark_aflw", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "_benchmark_aflw2000", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "benchmark_alfw_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "benchmark_aflw2000_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "benchmark_pipeline", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "map_location", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "dataset", "type": "ddfa_utils.DDFATestDataset"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "data_loader", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "benchmark", "type": "bool"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "end", "type": "float"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "outputs", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "device_ids", "type": "List[int]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 117, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "set_device", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "DDFATestDataset", "type": "Type[ddfa_utils.DDFATestDataset]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "dataset", "type": "ddfa_utils.DDFATestDataset"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "cudnn", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "eval", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "outputs", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "ana_aflw", "type": "Callable[[Any], Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "ana_alfw2000", "type": "Callable[[Any], Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "lm", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "_benchmark_aflw", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "lm", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "_benchmark_aflw2000", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "aflw2000", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "aflw", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "benchmark_pipeline", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "arch", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "checkpoint_fp", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "load", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "checkpoint_fp", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "device_ids", "type": "List[int]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "mobilenet_v1", "type": "module"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "arch", "type": "Any"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "filelists", "type": "str"}, {"lineNumber": 31, "col_offset": 56, "nodeName": "root", "type": "str"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 54, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 33, "col_offset": 78, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "time", "type": "module"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "data_loader", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "calc_nme_alfw", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "calc_nme_alfw2000", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "reconstruct_vertex", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "reconstruct_vertex", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "extract_param", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "benchmark_alfw_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "extract_param", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "benchmark_aflw2000_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 110, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 111, "col_offset": 96, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 56, "nodeName": "map_location", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "Compose", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "param_prediction", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "lm", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "lm", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "checkpoint_fp", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "arch", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "device_ids", "type": "List[int]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "checkpoint_fp", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "arch", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "device_ids", "type": "List[int]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "device_ids", "type": "List[int]"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "transforms", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "param_prediction", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 32, "col_offset": 60, "nodeName": "ToTensorGjz", "type": "Type[ddfa_utils.ToTensorGjz]"}, {"lineNumber": 32, "col_offset": 75, "nodeName": "NormalizeGjz", "type": "Type[ddfa_utils.NormalizeGjz]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "i", "type": "int"}]