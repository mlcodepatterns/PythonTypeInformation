[{"lineNumber": 9, "col_offset": 16, "nodeName": "Module", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "Module", "type": "Any"}, {"lineNumber": 9, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 9, "col_offset": 16, "nodeName": "th", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "depth", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "depth", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "initial_block", "type": "pro_gan_pytorch.CustomLayers.GenInitialBlock"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "temporaryUpsampler", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "height", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "height", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "final_block", "type": "pro_gan_pytorch.CustomLayers.DisFinalBlock"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "temporaryDownsampler", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "th", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "height", "type": "Any"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "height", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "embedding_size", "type": "Any"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "embedding_size", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "compressed_latent_size", "type": "Any"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "compressed_latent_size", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "temporaryDownsampler", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "dis", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "depth", "type": "Any"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "depth", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "drift", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "drift", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.LSGAN_SIGMOID, pro_gan_pytorch.Losses.LSGAN, pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.LSGAN_SIGMOID, pro_gan_pytorch.Losses.LSGAN, pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "down_sample_factor", "type": "int"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "prior_downsample_factor", "type": "int"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "loss_val", "type": "int"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 457, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 505, "col_offset": 27, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "compressed_latent_size", "type": "Any"}, {"lineNumber": 506, "col_offset": 38, "nodeName": "compressed_latent_size", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "depth", "type": "Any"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "depth", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 508, "col_offset": 23, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 509, "col_offset": 25, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 510, "col_offset": 24, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 511, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 512, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "drift", "type": "Any"}, {"lineNumber": 513, "col_offset": 21, "nodeName": "drift", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 560, "col_offset": 15, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "down_sample_factor", "type": "int"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "prior_downsample_factor", "type": "int"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "loss_val", "type": "int"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "depth", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "GenInitialBlock", "type": "Type[pro_gan_pytorch.CustomLayers.GenInitialBlock]"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "self", "type": "Generator"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "Upsample", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "depth", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "depth", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "initial_block", "type": "pro_gan_pytorch.CustomLayers.GenInitialBlock"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "depth", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "block", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "residual", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "straight", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "height", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "DisFinalBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisFinalBlock]"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "height", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "height", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "height", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "residual", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "straight", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "block", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "final_block", "type": "pro_gan_pytorch.CustomLayers.DisFinalBlock"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "height", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "ConDisFinalBlock", "type": "Type[pro_gan_pytorch.CustomLayers.ConDisFinalBlock]"}, {"lineNumber": 221, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 221, "col_offset": 63, "nodeName": "embedding_size", "type": "Any"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "compressed_latent_size", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 256, "col_offset": 36, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "height", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "height", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "height", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "residual", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "straight", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "block", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "final_block", "type": "pro_gan_pytorch.CustomLayers.ConDisFinalBlock"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "latent_vector", "type": "Any"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "device", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "to", "type": "Any"}, {"lineNumber": 322, "col_offset": 69, "nodeName": "device", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "to", "type": "Any"}, {"lineNumber": 323, "col_offset": 73, "nodeName": "device", "type": "Any"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "dis", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 344, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 348, "col_offset": 38, "nodeName": "loss", "type": "Any"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "ema", "type": "pro_gan_pytorch.CustomLayers.EMA"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "param", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 362, "col_offset": 18, "nodeName": "param", "type": "Any"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 407, "col_offset": 34, "nodeName": "max", "type": "Callable"}, {"lineNumber": 409, "col_offset": 56, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "depth", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 415, "col_offset": 36, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "loss_val", "type": "Any"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "loss_val", "type": "Union[Any, int]"}, {"lineNumber": 434, "col_offset": 26, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 446, "col_offset": 23, "nodeName": "gen", "type": "Any"}, {"lineNumber": 446, "col_offset": 32, "nodeName": "noise", "type": "Any"}, {"lineNumber": 446, "col_offset": 39, "nodeName": "depth", "type": "Any"}, {"lineNumber": 446, "col_offset": 46, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "gen_loss", "type": "Union[Any, Callable[[Any, Any, Any, Any], Any]]"}, {"lineNumber": 449, "col_offset": 40, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 449, "col_offset": 54, "nodeName": "depth", "type": "Any"}, {"lineNumber": 449, "col_offset": 61, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 457, "col_offset": 11, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "device", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 499, "col_offset": 19, "nodeName": "to", "type": "Any"}, {"lineNumber": 499, "col_offset": 69, "nodeName": "device", "type": "Any"}, {"lineNumber": 502, "col_offset": 64, "nodeName": "device", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 516, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 519, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 523, "col_offset": 38, "nodeName": "loss", "type": "Any"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "ema", "type": "pro_gan_pytorch.CustomLayers.EMA"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 532, "col_offset": 18, "nodeName": "param", "type": "Any"}, {"lineNumber": 532, "col_offset": 27, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 533, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 537, "col_offset": 18, "nodeName": "param", "type": "Any"}, {"lineNumber": 537, "col_offset": 27, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 538, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 544, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 544, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 578, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 579, "col_offset": 34, "nodeName": "max", "type": "Callable"}, {"lineNumber": 581, "col_offset": 56, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 583, "col_offset": 11, "nodeName": "depth", "type": "Any"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 587, "col_offset": 36, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 593, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "use_matching_aware", "type": "Any"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "loss_val", "type": "Any"}, {"lineNumber": 613, "col_offset": 15, "nodeName": "loss_val", "type": "Union[Any, int]"}, {"lineNumber": 613, "col_offset": 26, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 626, "col_offset": 23, "nodeName": "gen", "type": "Any"}, {"lineNumber": 626, "col_offset": 32, "nodeName": "noise", "type": "Any"}, {"lineNumber": 626, "col_offset": 39, "nodeName": "depth", "type": "Any"}, {"lineNumber": 626, "col_offset": 46, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "gen_loss", "type": "Union[Any, Callable[[Any, Any, Any, Any, Any], Any]]"}, {"lineNumber": 629, "col_offset": 40, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 629, "col_offset": 54, "nodeName": "latent_vector", "type": "Any"}, {"lineNumber": 629, "col_offset": 69, "nodeName": "depth", "type": "Any"}, {"lineNumber": 629, "col_offset": 76, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 641, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "self", "type": "Generator"}, {"lineNumber": 35, "col_offset": 71, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "depth", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.GenGeneralConvBlock"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.GenGeneralConvBlock"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.GenGeneralConvBlock"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "self", "type": "Generator"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 124, "col_offset": 68, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "height", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 221, "col_offset": 44, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 221, "col_offset": 63, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 222, "col_offset": 81, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "height", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 253, "col_offset": 40, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "th", "type": "Any"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "dis", "type": "Any"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 341, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 342, "col_offset": 58, "nodeName": "eps", "type": "Any"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 344, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 345, "col_offset": 58, "nodeName": "eps", "type": "Any"}, {"lineNumber": 348, "col_offset": 20, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 353, "col_offset": 23, "nodeName": "EMA", "type": "Type[pro_gan_pytorch.CustomLayers.EMA]"}, {"lineNumber": 353, "col_offset": 27, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.WGAN_GP"}, {"lineNumber": 406, "col_offset": 33, "nodeName": "power", "type": "Any"}, {"lineNumber": 407, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 409, "col_offset": 36, "nodeName": "down_sample_factor", "type": "int"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "upsample", "type": "Any"}, {"lineNumber": 418, "col_offset": 24, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 418, "col_offset": 32, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 418, "col_offset": 66, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 423, "col_offset": 27, "nodeName": "detach", "type": "Any"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "dis_loss", "type": "Union[Any, Callable[[Any, Any, Any, Any], Any]]"}, {"lineNumber": 425, "col_offset": 38, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 425, "col_offset": 52, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 425, "col_offset": 66, "nodeName": "depth", "type": "Any"}, {"lineNumber": 425, "col_offset": 73, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 432, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 434, "col_offset": 26, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 446, "col_offset": 23, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.LSGAN_SIGMOID, pro_gan_pytorch.Losses.LSGAN, pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "th", "type": "Any"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 516, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 517, "col_offset": 58, "nodeName": "eps", "type": "Any"}, {"lineNumber": 519, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 519, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 520, "col_offset": 58, "nodeName": "eps", "type": "Any"}, {"lineNumber": 523, "col_offset": 20, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 528, "col_offset": 23, "nodeName": "EMA", "type": "Type[pro_gan_pytorch.CustomLayers.EMA]"}, {"lineNumber": 528, "col_offset": 27, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 532, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 533, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 537, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 538, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 545, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 547, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.CondWGAN_GP"}, {"lineNumber": 578, "col_offset": 33, "nodeName": "power", "type": "Any"}, {"lineNumber": 579, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 581, "col_offset": 26, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 581, "col_offset": 36, "nodeName": "down_sample_factor", "type": "int"}, {"lineNumber": 584, "col_offset": 36, "nodeName": "upsample", "type": "Any"}, {"lineNumber": 590, "col_offset": 24, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 590, "col_offset": 32, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 590, "col_offset": 66, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 595, "col_offset": 27, "nodeName": "detach", "type": "Any"}, {"lineNumber": 597, "col_offset": 19, "nodeName": "dis_loss", "type": "Union[Any, Callable[[Any, Any, Any, Any, Any], Any]]"}, {"lineNumber": 597, "col_offset": 38, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 597, "col_offset": 52, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 598, "col_offset": 38, "nodeName": "latent_vector", "type": "Any"}, {"lineNumber": 598, "col_offset": 53, "nodeName": "depth", "type": "Any"}, {"lineNumber": 598, "col_offset": 60, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "mis_match_text", "type": "Any"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "m_a_d", "type": "Any"}, {"lineNumber": 604, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 611, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 613, "col_offset": 26, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 626, "col_offset": 23, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 641, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "Generator", "type": "Type[Generator]"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "self", "type": "Generator"}, {"lineNumber": 24, "col_offset": 38, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "power", "type": "Any"}, {"lineNumber": 35, "col_offset": 71, "nodeName": "self", "type": "Generator"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "_equalized_conv2d", "type": "Type[pro_gan_pytorch.CustomLayers._equalized_conv2d]"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 53, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "self", "type": "Generator"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "GenGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.GenGeneralConvBlock]"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "GenGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.GenGeneralConvBlock]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "self", "type": "Generator"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "block", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "temporaryUpsampler", "type": "Any"}, {"lineNumber": 87, "col_offset": 78, "nodeName": "y", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 88, "col_offset": 73, "nodeName": "y", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "straight", "type": "Any"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "residual", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "Discriminator", "type": "Type[Discriminator]"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "power", "type": "Any"}, {"lineNumber": 124, "col_offset": 68, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "_equalized_conv2d", "type": "Type[pro_gan_pytorch.CustomLayers._equalized_conv2d]"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 136, "col_offset": 58, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 56, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "DisGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisGeneralConvBlock]"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "DisGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisGeneralConvBlock]"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 172, "col_offset": 56, "nodeName": "temporaryDownsampler", "type": "Any"}, {"lineNumber": 172, "col_offset": 82, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 175, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "straight", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "residual", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "block", "type": "Any"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "ConditionalDiscriminator", "type": "Type[ConditionalDiscriminator]"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 212, "col_offset": 35, "nodeName": "power", "type": "Any"}, {"lineNumber": 222, "col_offset": 81, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "_equalized_conv2d", "type": "Type[pro_gan_pytorch.CustomLayers._equalized_conv2d]"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 234, "col_offset": 58, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 236, "col_offset": 43, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 56, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "DisGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisGeneralConvBlock]"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "DisGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisGeneralConvBlock]"}, {"lineNumber": 248, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 249, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 271, "col_offset": 56, "nodeName": "temporaryDownsampler", "type": "Any"}, {"lineNumber": 271, "col_offset": 82, "nodeName": "x", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 274, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "straight", "type": "Any"}, {"lineNumber": 277, "col_offset": 52, "nodeName": "residual", "type": "Any"}, {"lineNumber": 279, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "block", "type": "Any"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "Generator", "type": "Type[Generator]"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "depth", "type": "Any"}, {"lineNumber": 322, "col_offset": 36, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "Discriminator", "type": "Type[Discriminator]"}, {"lineNumber": 323, "col_offset": 33, "nodeName": "depth", "type": "Any"}, {"lineNumber": 323, "col_offset": 40, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "th", "type": "Any"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "gen", "type": "Any"}, {"lineNumber": 342, "col_offset": 37, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "dis", "type": "Any"}, {"lineNumber": 345, "col_offset": 37, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 345, "col_offset": 45, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 353, "col_offset": 27, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "register", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 359, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 359, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "ema", "type": "pro_gan_pytorch.CustomLayers.EMA"}, {"lineNumber": 364, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 364, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 372, "col_offset": 23, "nodeName": "WGAN_GP", "type": "Type[pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 372, "col_offset": 38, "nodeName": "device", "type": "Any"}, {"lineNumber": 372, "col_offset": 51, "nodeName": "dis", "type": "Any"}, {"lineNumber": 372, "col_offset": 61, "nodeName": "drift", "type": "Any"}, {"lineNumber": 376, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.WGAN_GP"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "loss", "type": "Any"}, {"lineNumber": 388, "col_offset": 34, "nodeName": "GANLoss", "type": "Type[pro_gan_pytorch.Losses.GANLoss]"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 406, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 42, "nodeName": "power", "type": "Any"}, {"lineNumber": 412, "col_offset": 80, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 418, "col_offset": 57, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.LSGAN_SIGMOID, pro_gan_pytorch.Losses.LSGAN, pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 432, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 499, "col_offset": 19, "nodeName": "Generator", "type": "Type[Generator]"}, {"lineNumber": 499, "col_offset": 29, "nodeName": "depth", "type": "Any"}, {"lineNumber": 499, "col_offset": 36, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "ConditionalDiscriminator", "type": "Type[ConditionalDiscriminator]"}, {"lineNumber": 500, "col_offset": 44, "nodeName": "depth", "type": "Any"}, {"lineNumber": 500, "col_offset": 51, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 501, "col_offset": 44, "nodeName": "embedding_size", "type": "Any"}, {"lineNumber": 501, "col_offset": 60, "nodeName": "compressed_latent_size", "type": "Any"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "gen", "type": "Any"}, {"lineNumber": 517, "col_offset": 37, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 517, "col_offset": 45, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 519, "col_offset": 30, "nodeName": "dis", "type": "Any"}, {"lineNumber": 520, "col_offset": 37, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 520, "col_offset": 45, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 528, "col_offset": 27, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 532, "col_offset": 27, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 534, "col_offset": 16, "nodeName": "register", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 534, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 534, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 537, "col_offset": 27, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 539, "col_offset": 29, "nodeName": "ema", "type": "pro_gan_pytorch.CustomLayers.EMA"}, {"lineNumber": 539, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 539, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 545, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 547, "col_offset": 23, "nodeName": "CondWGAN_GP", "type": "Type[pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 547, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 547, "col_offset": 55, "nodeName": "dis", "type": "Any"}, {"lineNumber": 547, "col_offset": 65, "nodeName": "drift", "type": "Any"}, {"lineNumber": 551, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.CondWGAN_GP"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 557, "col_offset": 28, "nodeName": "loss", "type": "Any"}, {"lineNumber": 557, "col_offset": 34, "nodeName": "ConditionalGANLoss", "type": "Type[pro_gan_pytorch.Losses.ConditionalGANLoss]"}, {"lineNumber": 558, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 578, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 579, "col_offset": 42, "nodeName": "power", "type": "Any"}, {"lineNumber": 584, "col_offset": 80, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 590, "col_offset": 57, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 597, "col_offset": 19, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 602, "col_offset": 33, "nodeName": "latent_vector", "type": "Any"}, {"lineNumber": 603, "col_offset": 24, "nodeName": "dis", "type": "Any"}, {"lineNumber": 603, "col_offset": 33, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 603, "col_offset": 47, "nodeName": "mis_match_text", "type": "Any"}, {"lineNumber": 603, "col_offset": 63, "nodeName": "depth", "type": "Any"}, {"lineNumber": 603, "col_offset": 70, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 604, "col_offset": 23, "nodeName": "loss", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 611, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 24, "col_offset": 53, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "depth", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "self", "type": "Generator"}, {"lineNumber": 49, "col_offset": 53, "nodeName": "self", "type": "Generator"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "self", "type": "Generator"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "self", "type": "Generator"}, {"lineNumber": 55, "col_offset": 70, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "self", "type": "Generator"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "self", "type": "Generator"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "self", "type": "Generator"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "depth", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "self", "type": "Generator"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "self", "type": "Generator"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "self", "type": "Generator"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "depth", "type": "Any"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "layers", "type": "Any"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "self", "type": "Generator"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "height", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 138, "col_offset": 56, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 151, "col_offset": 71, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 172, "col_offset": 56, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 209, "col_offset": 55, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 212, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 47, "nodeName": "height", "type": "Any"}, {"lineNumber": 236, "col_offset": 43, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 236, "col_offset": 56, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 248, "col_offset": 44, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 249, "col_offset": 44, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 249, "col_offset": 71, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 271, "col_offset": 56, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 279, "col_offset": 34, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 322, "col_offset": 57, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 323, "col_offset": 61, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "ema", "type": "pro_gan_pytorch.CustomLayers.EMA"}, {"lineNumber": 359, "col_offset": 40, "nodeName": "param", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 364, "col_offset": 44, "nodeName": "param", "type": "Any"}, {"lineNumber": 372, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 372, "col_offset": 38, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 372, "col_offset": 51, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 372, "col_offset": 61, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "WGAN_GP", "type": "Type[pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 377, "col_offset": 38, "nodeName": "device", "type": "Any"}, {"lineNumber": 377, "col_offset": 51, "nodeName": "dis", "type": "Any"}, {"lineNumber": 377, "col_offset": 61, "nodeName": "drift", "type": "Any"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.LSGAN"}, {"lineNumber": 388, "col_offset": 34, "nodeName": "losses", "type": "module"}, {"lineNumber": 406, "col_offset": 45, "nodeName": "depth", "type": "Any"}, {"lineNumber": 406, "col_offset": 58, "nodeName": "depth", "type": "Any"}, {"lineNumber": 407, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 54, "nodeName": "depth", "type": "Any"}, {"lineNumber": 407, "col_offset": 67, "nodeName": "depth", "type": "Any"}, {"lineNumber": 412, "col_offset": 45, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 412, "col_offset": 55, "nodeName": "prior_downsample_factor", "type": "int"}, {"lineNumber": 423, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 423, "col_offset": 36, "nodeName": "noise", "type": "Any"}, {"lineNumber": 423, "col_offset": 43, "nodeName": "depth", "type": "Any"}, {"lineNumber": 423, "col_offset": 50, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 499, "col_offset": 57, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 502, "col_offset": 52, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 534, "col_offset": 16, "nodeName": "ema", "type": "pro_gan_pytorch.CustomLayers.EMA"}, {"lineNumber": 534, "col_offset": 40, "nodeName": "param", "type": "Any"}, {"lineNumber": 539, "col_offset": 29, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 539, "col_offset": 44, "nodeName": "param", "type": "Any"}, {"lineNumber": 547, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 547, "col_offset": 42, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 547, "col_offset": 55, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 547, "col_offset": 65, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 552, "col_offset": 23, "nodeName": "CondWGAN_GP", "type": "Type[pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 552, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 552, "col_offset": 55, "nodeName": "dis", "type": "Any"}, {"lineNumber": 552, "col_offset": 65, "nodeName": "drift", "type": "Any"}, {"lineNumber": 555, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 557, "col_offset": 34, "nodeName": "losses", "type": "module"}, {"lineNumber": 578, "col_offset": 45, "nodeName": "depth", "type": "Any"}, {"lineNumber": 578, "col_offset": 58, "nodeName": "depth", "type": "Any"}, {"lineNumber": 579, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 579, "col_offset": 54, "nodeName": "depth", "type": "Any"}, {"lineNumber": 579, "col_offset": 67, "nodeName": "depth", "type": "Any"}, {"lineNumber": 584, "col_offset": 45, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 584, "col_offset": 55, "nodeName": "prior_downsample_factor", "type": "int"}, {"lineNumber": 595, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 595, "col_offset": 36, "nodeName": "noise", "type": "Any"}, {"lineNumber": 595, "col_offset": 43, "nodeName": "depth", "type": "Any"}, {"lineNumber": 595, "col_offset": 50, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 597, "col_offset": 19, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 603, "col_offset": 24, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 604, "col_offset": 30, "nodeName": "mean", "type": "Any"}, {"lineNumber": 604, "col_offset": 38, "nodeName": "m_a_d", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 55, "col_offset": 70, "nodeName": "self", "type": "Generator"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "self", "type": "Generator"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "depth", "type": "Any"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "self", "type": "Generator"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 151, "col_offset": 71, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "height", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "height", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "height", "type": "Any"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "height", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 249, "col_offset": 71, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 271, "col_offset": 44, "nodeName": "height", "type": "Any"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "height", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "height", "type": "Any"}, {"lineNumber": 279, "col_offset": 47, "nodeName": "height", "type": "Any"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 377, "col_offset": 38, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 377, "col_offset": 51, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 377, "col_offset": 61, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "LSGAN", "type": "Type[pro_gan_pytorch.Losses.LSGAN]"}, {"lineNumber": 380, "col_offset": 36, "nodeName": "device", "type": "Any"}, {"lineNumber": 380, "col_offset": 49, "nodeName": "dis", "type": "Any"}, {"lineNumber": 382, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.LSGAN_SIGMOID"}, {"lineNumber": 406, "col_offset": 45, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 407, "col_offset": 54, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 423, "col_offset": 27, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 534, "col_offset": 16, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 552, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 552, "col_offset": 42, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 552, "col_offset": 55, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 552, "col_offset": 65, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 578, "col_offset": 45, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 579, "col_offset": 54, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 595, "col_offset": 27, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 604, "col_offset": 30, "nodeName": "th", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "self", "type": "Generator"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "power", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "self", "type": "Generator"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "power", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "self", "type": "Generator"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "power", "type": "Any"}, {"lineNumber": 88, "col_offset": 62, "nodeName": "depth", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "power", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "power", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 148, "col_offset": 60, "nodeName": "power", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 242, "col_offset": 45, "nodeName": "power", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 243, "col_offset": 45, "nodeName": "power", "type": "Any"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 246, "col_offset": 60, "nodeName": "power", "type": "Any"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 380, "col_offset": 36, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 380, "col_offset": 49, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "LSGAN_SIGMOID", "type": "Type[pro_gan_pytorch.Losses.LSGAN_SIGMOID]"}, {"lineNumber": 383, "col_offset": 44, "nodeName": "device", "type": "Any"}, {"lineNumber": 383, "col_offset": 57, "nodeName": "dis", "type": "Any"}, {"lineNumber": 386, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 602, "col_offset": 47, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 242, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 243, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 246, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 383, "col_offset": 44, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 383, "col_offset": 57, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 602, "col_offset": 47, "nodeName": "random", "type": "Any"}, {"lineNumber": 602, "col_offset": 69, "nodeName": "shape", "type": "Any"}, {"lineNumber": 602, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 69, "nodeName": "latent_vector", "type": "Any"}]