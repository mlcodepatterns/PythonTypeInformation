[{"lineNumber": 18, "col_offset": 16, "nodeName": "Module", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "Module", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "th", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "depth", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "depth", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "initial_block", "type": "pro_gan_pytorch.CustomLayers.GenInitialBlock"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "temporaryUpsampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "height", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "height", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "final_block", "type": "pro_gan_pytorch.CustomLayers.DisFinalBlock"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "temporaryDownsampler", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "th", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "height", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "height", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 238, "col_offset": 28, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "temporaryDownsampler", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "out", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "dis", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "depth", "type": "Any"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "depth", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "drift", "type": "Any"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "drift", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.RelativisticAverageHingeGAN, pro_gan_pytorch.Losses.HingeGAN, pro_gan_pytorch.Losses.LSGAN_SIGMOID, pro_gan_pytorch.Losses.LSGAN, pro_gan_pytorch.Losses.StandardGAN, pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 424, "col_offset": 15, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.RelativisticAverageHingeGAN, pro_gan_pytorch.Losses.HingeGAN, pro_gan_pytorch.Losses.LSGAN_SIGMOID, pro_gan_pytorch.Losses.LSGAN, pro_gan_pytorch.Losses.StandardGAN, pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "down_sample_factor", "type": "int"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "prior_downsample_factor", "type": "int"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "loss_val", "type": "int"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 510, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 572, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "global_time", "type": "float"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "fixed_input", "type": "Any"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 687, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 745, "col_offset": 27, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "depth", "type": "Any"}, {"lineNumber": 746, "col_offset": 21, "nodeName": "depth", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 747, "col_offset": 23, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 748, "col_offset": 27, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 749, "col_offset": 25, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 750, "col_offset": 24, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 751, "col_offset": 23, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 752, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "drift", "type": "Any"}, {"lineNumber": 753, "col_offset": 21, "nodeName": "drift", "type": "Any"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.CondRelativisticAverageHingeGAN, pro_gan_pytorch.Losses.CondStandardGAN, pro_gan_pytorch.Losses.CondHingeGAN, pro_gan_pytorch.Losses.CondLSGAN_SIGMOID, pro_gan_pytorch.Losses.CondLSGAN, pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 813, "col_offset": 15, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.CondRelativisticAverageHingeGAN, pro_gan_pytorch.Losses.CondStandardGAN, pro_gan_pytorch.Losses.CondHingeGAN, pro_gan_pytorch.Losses.CondLSGAN_SIGMOID, pro_gan_pytorch.Losses.CondLSGAN, pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "down_sample_factor", "type": "int"}, {"lineNumber": 830, "col_offset": 8, "nodeName": "prior_downsample_factor", "type": "int"}, {"lineNumber": 832, "col_offset": 8, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 844, "col_offset": 15, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "loss_val", "type": "int"}, {"lineNumber": 860, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 903, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 989, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 993, "col_offset": 8, "nodeName": "global_time", "type": "float"}, {"lineNumber": 996, "col_offset": 8, "nodeName": "temp_data_loader", "type": "Any"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "fixed_labels", "type": "Any"}, {"lineNumber": 1000, "col_offset": 8, "nodeName": "fixed_input", "type": "Any"}, {"lineNumber": 1002, "col_offset": 8, "nodeName": "fixed_input", "type": "Any"}, {"lineNumber": 1009, "col_offset": 12, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1123, "col_offset": 11, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "depth", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "GenInitialBlock", "type": "Type[pro_gan_pytorch.CustomLayers.GenInitialBlock]"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "self", "type": "Generator"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Generator"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "depth", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "depth", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "initial_block", "type": "pro_gan_pytorch.CustomLayers.GenInitialBlock"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "depth", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "block", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "residual", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "straight", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "height", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "DisFinalBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisFinalBlock]"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "height", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "height", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "height", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "residual", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "straight", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "block", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "final_block", "type": "pro_gan_pytorch.CustomLayers.DisFinalBlock"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "height", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "ConDisFinalBlock", "type": "Type[pro_gan_pytorch.CustomLayers.ConDisFinalBlock]"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 241, "col_offset": 63, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 276, "col_offset": 36, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "height", "type": "Any"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "height", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "height", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "residual", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "straight", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "block", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "final_block", "type": "pro_gan_pytorch.CustomLayers.ConDisFinalBlock"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 305, "col_offset": 34, "nodeName": "labels", "type": "Any"}, {"lineNumber": 320, "col_offset": 24, "nodeName": "device", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "to", "type": "Any"}, {"lineNumber": 347, "col_offset": 69, "nodeName": "device", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "to", "type": "Any"}, {"lineNumber": 348, "col_offset": 73, "nodeName": "device", "type": "Any"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "dis", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "loss", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "ema_updater", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "update_average", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "max", "type": "Callable"}, {"lineNumber": 443, "col_offset": 56, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "depth", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 449, "col_offset": 36, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 467, "col_offset": 55, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 467, "col_offset": 67, "nodeName": "depth", "type": "Any"}, {"lineNumber": 467, "col_offset": 74, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 470, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "loss_val", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "loss_val", "type": "Union[Any, int]"}, {"lineNumber": 483, "col_offset": 26, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 495, "col_offset": 55, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 495, "col_offset": 67, "nodeName": "depth", "type": "Any"}, {"lineNumber": 495, "col_offset": 74, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 498, "col_offset": 23, "nodeName": "gen", "type": "Any"}, {"lineNumber": 498, "col_offset": 32, "nodeName": "noise", "type": "Any"}, {"lineNumber": 498, "col_offset": 39, "nodeName": "depth", "type": "Any"}, {"lineNumber": 498, "col_offset": 46, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "gen_loss", "type": "Union[Any, Callable[[Any, Any, Any, Any], Any]]"}, {"lineNumber": 502, "col_offset": 34, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 502, "col_offset": 48, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 502, "col_offset": 62, "nodeName": "depth", "type": "Any"}, {"lineNumber": 502, "col_offset": 69, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 510, "col_offset": 11, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "save_image", "type": "Any"}, {"lineNumber": 533, "col_offset": 19, "nodeName": "samples", "type": "Any"}, {"lineNumber": 533, "col_offset": 28, "nodeName": "img_file", "type": "str"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "depth", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 572, "col_offset": 11, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 576, "col_offset": 22, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 579, "col_offset": 22, "nodeName": "to", "type": "Any"}, {"lineNumber": 579, "col_offset": 65, "nodeName": "device", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 582, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 582, "col_offset": 35, "nodeName": "start_depth", "type": "Any"}, {"lineNumber": 582, "col_offset": 48, "nodeName": "depth", "type": "Any"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "current_res", "type": "Any"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 589, "col_offset": 12, "nodeName": "ticker", "type": "int"}, {"lineNumber": 591, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 687, "col_offset": 11, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 704, "col_offset": 24, "nodeName": "device", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 733, "col_offset": 19, "nodeName": "to", "type": "Any"}, {"lineNumber": 733, "col_offset": 69, "nodeName": "device", "type": "Any"}, {"lineNumber": 737, "col_offset": 32, "nodeName": "device", "type": "Any"}, {"lineNumber": 740, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "gen", "type": "Any"}, {"lineNumber": 742, "col_offset": 12, "nodeName": "dis", "type": "Any"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 756, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 759, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 763, "col_offset": 38, "nodeName": "loss", "type": "Any"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 770, "col_offset": 12, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 773, "col_offset": 12, "nodeName": "ema_updater", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 773, "col_offset": 31, "nodeName": "update_average", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 782, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 782, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 782, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 783, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 829, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 830, "col_offset": 34, "nodeName": "max", "type": "Callable"}, {"lineNumber": 832, "col_offset": 56, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 834, "col_offset": 11, "nodeName": "depth", "type": "Any"}, {"lineNumber": 835, "col_offset": 12, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 838, "col_offset": 36, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 857, "col_offset": 55, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 857, "col_offset": 67, "nodeName": "depth", "type": "Any"}, {"lineNumber": 857, "col_offset": 74, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 860, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 860, "col_offset": 23, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 864, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 872, "col_offset": 12, "nodeName": "loss_val", "type": "Any"}, {"lineNumber": 874, "col_offset": 15, "nodeName": "loss_val", "type": "Union[Any, int]"}, {"lineNumber": 874, "col_offset": 26, "nodeName": "n_critic", "type": "Any"}, {"lineNumber": 888, "col_offset": 55, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 888, "col_offset": 67, "nodeName": "depth", "type": "Any"}, {"lineNumber": 888, "col_offset": 74, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 891, "col_offset": 23, "nodeName": "gen", "type": "Any"}, {"lineNumber": 891, "col_offset": 32, "nodeName": "noise", "type": "Any"}, {"lineNumber": 891, "col_offset": 39, "nodeName": "depth", "type": "Any"}, {"lineNumber": 891, "col_offset": 46, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 895, "col_offset": 15, "nodeName": "gen_loss", "type": "Union[Any, Callable[[Any, Any, Any, Any, Any], Any]]"}, {"lineNumber": 895, "col_offset": 34, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 895, "col_offset": 48, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 895, "col_offset": 62, "nodeName": "labels", "type": "Any"}, {"lineNumber": 895, "col_offset": 70, "nodeName": "depth", "type": "Any"}, {"lineNumber": 895, "col_offset": 77, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 903, "col_offset": 11, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 907, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 922, "col_offset": 11, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "save_image", "type": "Any"}, {"lineNumber": 926, "col_offset": 19, "nodeName": "samples", "type": "Any"}, {"lineNumber": 926, "col_offset": 28, "nodeName": "img_file", "type": "str"}, {"lineNumber": 938, "col_offset": 38, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 939, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 939, "col_offset": 25, "nodeName": "labels", "type": "Any"}, {"lineNumber": 949, "col_offset": 12, "nodeName": "label_oh_encoder", "type": "Any"}, {"lineNumber": 950, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 952, "col_offset": 15, "nodeName": "label_oh_encoder", "type": "Any"}, {"lineNumber": 984, "col_offset": 15, "nodeName": "depth", "type": "Any"}, {"lineNumber": 987, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 989, "col_offset": 11, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 993, "col_offset": 22, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 996, "col_offset": 27, "nodeName": "get_data_loader", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 996, "col_offset": 43, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 997, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 997, "col_offset": 11, "nodeName": "fx_labels", "type": "Any"}, {"lineNumber": 997, "col_offset": 23, "nodeName": "next", "type": "Callable"}, {"lineNumber": 999, "col_offset": 23, "nodeName": "to", "type": "Any"}, {"lineNumber": 999, "col_offset": 69, "nodeName": "device", "type": "Any"}, {"lineNumber": 1001, "col_offset": 71, "nodeName": "device", "type": "Any"}, {"lineNumber": 1002, "col_offset": 22, "nodeName": "cat", "type": "Any"}, {"lineNumber": 1005, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 1005, "col_offset": 20, "nodeName": "sample_dir", "type": "Any"}, {"lineNumber": 1006, "col_offset": 76, "nodeName": "fx_labels", "type": "Any"}, {"lineNumber": 1008, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1009, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1009, "col_offset": 35, "nodeName": "start_depth", "type": "Any"}, {"lineNumber": 1009, "col_offset": 48, "nodeName": "depth", "type": "Any"}, {"lineNumber": 1012, "col_offset": 12, "nodeName": "current_res", "type": "Any"}, {"lineNumber": 1015, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 1016, "col_offset": 12, "nodeName": "ticker", "type": "int"}, {"lineNumber": 1018, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1122, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1123, "col_offset": 11, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1126, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "self", "type": "Generator"}, {"lineNumber": 45, "col_offset": 71, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "depth", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.GenGeneralConvBlock"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.GenGeneralConvBlock"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.GenGeneralConvBlock"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "interpolate", "type": "Any"}, {"lineNumber": 78, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "self", "type": "Generator"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 140, "col_offset": 68, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "height", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 241, "col_offset": 63, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "height", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "layer", "type": "pro_gan_pytorch.CustomLayers.DisGeneralConvBlock"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 273, "col_offset": 40, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 303, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 305, "col_offset": 14, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 320, "col_offset": 24, "nodeName": "th", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 352, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 353, "col_offset": 23, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 353, "col_offset": 36, "nodeName": "dis", "type": "Any"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 366, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 367, "col_offset": 58, "nodeName": "eps", "type": "Any"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 369, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 370, "col_offset": 58, "nodeName": "eps", "type": "Any"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 379, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "ema_updater", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 386, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 392, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.WGAN_GP"}, {"lineNumber": 440, "col_offset": 33, "nodeName": "power", "type": "Any"}, {"lineNumber": 441, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 443, "col_offset": 26, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 443, "col_offset": 36, "nodeName": "down_sample_factor", "type": "int"}, {"lineNumber": 446, "col_offset": 36, "nodeName": "interpolate", "type": "Any"}, {"lineNumber": 452, "col_offset": 24, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 452, "col_offset": 32, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 452, "col_offset": 66, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 467, "col_offset": 23, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 472, "col_offset": 27, "nodeName": "detach", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "dis_loss", "type": "Union[Any, Callable[[Any, Any, Any, Any], Any]]"}, {"lineNumber": 474, "col_offset": 38, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 474, "col_offset": 52, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 474, "col_offset": 66, "nodeName": "depth", "type": "Any"}, {"lineNumber": 474, "col_offset": 73, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 483, "col_offset": 26, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 495, "col_offset": 23, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 498, "col_offset": 23, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.RelativisticAverageHingeGAN, pro_gan_pytorch.Losses.HingeGAN, pro_gan_pytorch.Losses.LSGAN_SIGMOID, pro_gan_pytorch.Losses.LSGAN, pro_gan_pytorch.Losses.StandardGAN, pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "ema_updater", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 511, "col_offset": 29, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 511, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 511, "col_offset": 56, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 530, "col_offset": 22, "nodeName": "interpolate", "type": "Any"}, {"lineNumber": 530, "col_offset": 34, "nodeName": "samples", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 567, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 567, "col_offset": 33, "nodeName": "batch_sizes", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "dis", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 576, "col_offset": 22, "nodeName": "time", "type": "module"}, {"lineNumber": 579, "col_offset": 65, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 582, "col_offset": 48, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 584, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 584, "col_offset": 54, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 585, "col_offset": 26, "nodeName": "power", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 588, "col_offset": 19, "nodeName": "get_data_loader", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 588, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 588, "col_offset": 72, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 591, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "start", "type": "float"}, {"lineNumber": 595, "col_offset": 16, "nodeName": "total_batches", "type": "int"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "fader_point", "type": "int"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "step", "type": "int"}, {"lineNumber": 659, "col_offset": 16, "nodeName": "stop", "type": "float"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "dis", "type": "Any"}, {"lineNumber": 688, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 704, "col_offset": 24, "nodeName": "th", "type": "Any"}, {"lineNumber": 740, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 741, "col_offset": 23, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 741, "col_offset": 36, "nodeName": "gen", "type": "Any"}, {"lineNumber": 742, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 742, "col_offset": 23, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 742, "col_offset": 36, "nodeName": "dis", "type": "Any"}, {"lineNumber": 756, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 756, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 757, "col_offset": 58, "nodeName": "eps", "type": "Any"}, {"lineNumber": 759, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 759, "col_offset": 56, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 760, "col_offset": 58, "nodeName": "eps", "type": "Any"}, {"lineNumber": 763, "col_offset": 20, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 770, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 770, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 770, "col_offset": 44, "nodeName": "gen", "type": "Any"}, {"lineNumber": 773, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "ema_updater", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 777, "col_offset": 29, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 777, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 783, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 784, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 785, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.CondWGAN_GP"}, {"lineNumber": 829, "col_offset": 33, "nodeName": "power", "type": "Any"}, {"lineNumber": 830, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 832, "col_offset": 26, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 832, "col_offset": 36, "nodeName": "down_sample_factor", "type": "int"}, {"lineNumber": 835, "col_offset": 36, "nodeName": "interpolate", "type": "Any"}, {"lineNumber": 841, "col_offset": 24, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 841, "col_offset": 32, "nodeName": "ds_real_samples", "type": "Any"}, {"lineNumber": 841, "col_offset": 66, "nodeName": "prior_ds_real_samples", "type": "Any"}, {"lineNumber": 857, "col_offset": 23, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 860, "col_offset": 23, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 862, "col_offset": 27, "nodeName": "detach", "type": "Any"}, {"lineNumber": 864, "col_offset": 19, "nodeName": "dis_loss", "type": "Union[Any, Callable[[Any, Any, Any, Any, Any], Any]]"}, {"lineNumber": 864, "col_offset": 38, "nodeName": "real_samples", "type": "Any"}, {"lineNumber": 864, "col_offset": 52, "nodeName": "fake_samples", "type": "Any"}, {"lineNumber": 865, "col_offset": 38, "nodeName": "labels", "type": "Any"}, {"lineNumber": 865, "col_offset": 46, "nodeName": "depth", "type": "Any"}, {"lineNumber": 865, "col_offset": 53, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 870, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 872, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 874, "col_offset": 26, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 888, "col_offset": 23, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 891, "col_offset": 23, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 895, "col_offset": 15, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.CondRelativisticAverageHingeGAN, pro_gan_pytorch.Losses.CondStandardGAN, pro_gan_pytorch.Losses.CondHingeGAN, pro_gan_pytorch.Losses.CondLSGAN_SIGMOID, pro_gan_pytorch.Losses.CondLSGAN, pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 904, "col_offset": 12, "nodeName": "ema_updater", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 904, "col_offset": 29, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 904, "col_offset": 46, "nodeName": "gen", "type": "Any"}, {"lineNumber": 904, "col_offset": 56, "nodeName": "ema_decay", "type": "Any"}, {"lineNumber": 907, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 923, "col_offset": 22, "nodeName": "interpolate", "type": "Any"}, {"lineNumber": 923, "col_offset": 34, "nodeName": "samples", "type": "Any"}, {"lineNumber": 938, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 938, "col_offset": 18, "nodeName": "label_file", "type": "str"}, {"lineNumber": 948, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 948, "col_offset": 23, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 949, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 949, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 949, "col_offset": 52, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 949, "col_offset": 70, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 950, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 950, "col_offset": 48, "nodeName": "eye", "type": "Any"}, {"lineNumber": 950, "col_offset": 55, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 952, "col_offset": 15, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 952, "col_offset": 37, "nodeName": "view", "type": "Any"}, {"lineNumber": 984, "col_offset": 15, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 984, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 984, "col_offset": 33, "nodeName": "batch_sizes", "type": "Any"}, {"lineNumber": 987, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "dis", "type": "Any"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 993, "col_offset": 22, "nodeName": "time", "type": "module"}, {"lineNumber": 996, "col_offset": 52, "nodeName": "batch_sizes", "type": "Any"}, {"lineNumber": 997, "col_offset": 28, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 997, "col_offset": 33, "nodeName": "temp_data_loader", "type": "Any"}, {"lineNumber": 999, "col_offset": 69, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1001, "col_offset": 71, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1002, "col_offset": 22, "nodeName": "th", "type": "Any"}, {"lineNumber": 1002, "col_offset": 30, "nodeName": "fixed_labels", "type": "Any"}, {"lineNumber": 1002, "col_offset": 44, "nodeName": "fixed_input", "type": "Any"}, {"lineNumber": 1005, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 1006, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1006, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1006, "col_offset": 49, "nodeName": "sample_dir", "type": "Any"}, {"lineNumber": 1009, "col_offset": 48, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1011, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1011, "col_offset": 54, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1012, "col_offset": 26, "nodeName": "power", "type": "Any"}, {"lineNumber": 1013, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1015, "col_offset": 19, "nodeName": "get_data_loader", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1015, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1015, "col_offset": 72, "nodeName": "num_workers", "type": "Any"}, {"lineNumber": 1018, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1019, "col_offset": 16, "nodeName": "start", "type": "float"}, {"lineNumber": 1022, "col_offset": 16, "nodeName": "total_batches", "type": "int"}, {"lineNumber": 1024, "col_offset": 16, "nodeName": "fader_point", "type": "int"}, {"lineNumber": 1027, "col_offset": 16, "nodeName": "step", "type": "int"}, {"lineNumber": 1095, "col_offset": 16, "nodeName": "stop", "type": "float"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1122, "col_offset": 8, "nodeName": "dis", "type": "Any"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "Generator", "type": "Type[Generator]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "self", "type": "Generator"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "power", "type": "Any"}, {"lineNumber": 45, "col_offset": 71, "nodeName": "self", "type": "Generator"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "_equalized_conv2d", "type": "Type[pro_gan_pytorch.CustomLayers._equalized_conv2d]"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 57, "col_offset": 52, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "self", "type": "Generator"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "GenGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.GenGeneralConvBlock]"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "GenGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.GenGeneralConvBlock]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "toRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "self", "type": "Generator"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "block", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "temporaryUpsampler", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 78, "nodeName": "y", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 98, "col_offset": 73, "nodeName": "y", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "straight", "type": "Any"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "residual", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "rgb_converters", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "Discriminator", "type": "Type[Discriminator]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "power", "type": "Any"}, {"lineNumber": 140, "col_offset": 68, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "_equalized_conv2d", "type": "Type[pro_gan_pytorch.CustomLayers._equalized_conv2d]"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 152, "col_offset": 48, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 152, "col_offset": 58, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 56, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "DisGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisGeneralConvBlock]"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "DisGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisGeneralConvBlock]"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 188, "col_offset": 56, "nodeName": "temporaryDownsampler", "type": "Any"}, {"lineNumber": 188, "col_offset": 82, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "straight", "type": "Any"}, {"lineNumber": 194, "col_offset": 52, "nodeName": "residual", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "block", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "ConditionalDiscriminator", "type": "Type[ConditionalDiscriminator]"}, {"lineNumber": 228, "col_offset": 40, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "power", "type": "Any"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "_equalized_conv2d", "type": "Type[pro_gan_pytorch.CustomLayers._equalized_conv2d]"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 254, "col_offset": 48, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 254, "col_offset": 58, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 256, "col_offset": 43, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 56, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "DisGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisGeneralConvBlock]"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "DisGeneralConvBlock", "type": "Type[pro_gan_pytorch.CustomLayers.DisGeneralConvBlock]"}, {"lineNumber": 268, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 269, "col_offset": 44, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "fromRGB", "type": "Callable[[Any], Any]"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 292, "col_offset": 56, "nodeName": "temporaryDownsampler", "type": "Any"}, {"lineNumber": 292, "col_offset": 82, "nodeName": "x", "type": "Any"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "straight", "type": "Any"}, {"lineNumber": 298, "col_offset": 52, "nodeName": "residual", "type": "Any"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "block", "type": "Any"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "Generator", "type": "Type[Generator]"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "depth", "type": "Any"}, {"lineNumber": 347, "col_offset": 36, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "Discriminator", "type": "Type[Discriminator]"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "depth", "type": "Any"}, {"lineNumber": 348, "col_offset": 40, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "th", "type": "Any"}, {"lineNumber": 352, "col_offset": 36, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 353, "col_offset": 36, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "gen", "type": "Any"}, {"lineNumber": 367, "col_offset": 37, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 367, "col_offset": 45, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "dis", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 370, "col_offset": 45, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "copy", "type": "module"}, {"lineNumber": 379, "col_offset": 44, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 386, "col_offset": 46, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 392, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 394, "col_offset": 23, "nodeName": "WGAN_GP", "type": "Type[pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 394, "col_offset": 38, "nodeName": "dis", "type": "Any"}, {"lineNumber": 394, "col_offset": 48, "nodeName": "drift", "type": "Any"}, {"lineNumber": 400, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.WGAN_GP"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "loss", "type": "Any"}, {"lineNumber": 421, "col_offset": 34, "nodeName": "GANLoss", "type": "Type[pro_gan_pytorch.Losses.GANLoss]"}, {"lineNumber": 422, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 440, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 42, "nodeName": "power", "type": "Any"}, {"lineNumber": 446, "col_offset": 83, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 452, "col_offset": 57, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.RelativisticAverageHingeGAN, pro_gan_pytorch.Losses.HingeGAN, pro_gan_pytorch.Losses.LSGAN_SIGMOID, pro_gan_pytorch.Losses.LSGAN, pro_gan_pytorch.Losses.StandardGAN, pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 511, "col_offset": 29, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 511, "col_offset": 46, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 511, "col_offset": 56, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 530, "col_offset": 56, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 533, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 579, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 579, "col_offset": 31, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 579, "col_offset": 44, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 585, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 38, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 588, "col_offset": 44, "nodeName": "batch_sizes", "type": "Any"}, {"lineNumber": 592, "col_offset": 24, "nodeName": "default_timer", "type": "Callable[[], float]"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 595, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 597, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 602, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 602, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 602, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 602, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "alpha", "type": "Union[float, int]"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "images", "type": "Any"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "gan_input", "type": "Any"}, {"lineNumber": 612, "col_offset": 20, "nodeName": "dis_loss", "type": "Any"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "gen_loss", "type": "Any"}, {"lineNumber": 656, "col_offset": 20, "nodeName": "ticker", "type": "int"}, {"lineNumber": 657, "col_offset": 20, "nodeName": "step", "type": "int"}, {"lineNumber": 659, "col_offset": 23, "nodeName": "default_timer", "type": "Callable[[], float]"}, {"lineNumber": 660, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "gen_save_file", "type": "str"}, {"lineNumber": 665, "col_offset": 20, "nodeName": "dis_save_file", "type": "str"}, {"lineNumber": 666, "col_offset": 20, "nodeName": "gen_optim_save_file", "type": "str"}, {"lineNumber": 669, "col_offset": 20, "nodeName": "dis_optim_save_file", "type": "str"}, {"lineNumber": 679, "col_offset": 23, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 688, "col_offset": 12, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 733, "col_offset": 19, "nodeName": "Generator", "type": "Type[Generator]"}, {"lineNumber": 733, "col_offset": 29, "nodeName": "depth", "type": "Any"}, {"lineNumber": 733, "col_offset": 36, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 734, "col_offset": 19, "nodeName": "ConditionalDiscriminator", "type": "Type[ConditionalDiscriminator]"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 740, "col_offset": 21, "nodeName": "th", "type": "Any"}, {"lineNumber": 741, "col_offset": 36, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 742, "col_offset": 36, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 756, "col_offset": 30, "nodeName": "gen", "type": "Any"}, {"lineNumber": 757, "col_offset": 37, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 757, "col_offset": 45, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 759, "col_offset": 30, "nodeName": "dis", "type": "Any"}, {"lineNumber": 760, "col_offset": 37, "nodeName": "beta_1", "type": "Any"}, {"lineNumber": 760, "col_offset": 45, "nodeName": "beta_2", "type": "Any"}, {"lineNumber": 770, "col_offset": 30, "nodeName": "copy", "type": "module"}, {"lineNumber": 770, "col_offset": 44, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 777, "col_offset": 29, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 777, "col_offset": 46, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 783, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 785, "col_offset": 23, "nodeName": "CondWGAN_GP", "type": "Type[pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 785, "col_offset": 42, "nodeName": "dis", "type": "Any"}, {"lineNumber": 785, "col_offset": 52, "nodeName": "drift", "type": "Any"}, {"lineNumber": 789, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 790, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.CondWGAN_GP"}, {"lineNumber": 810, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 810, "col_offset": 28, "nodeName": "loss", "type": "Any"}, {"lineNumber": 810, "col_offset": 34, "nodeName": "ConditionalGANLoss", "type": "Type[pro_gan_pytorch.Losses.ConditionalGANLoss]"}, {"lineNumber": 811, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 829, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 830, "col_offset": 42, "nodeName": "power", "type": "Any"}, {"lineNumber": 835, "col_offset": 83, "nodeName": "real_batch", "type": "Any"}, {"lineNumber": 841, "col_offset": 57, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 864, "col_offset": 19, "nodeName": "loss", "type": "Union[Any, pro_gan_pytorch.Losses.CondRelativisticAverageHingeGAN, pro_gan_pytorch.Losses.CondStandardGAN, pro_gan_pytorch.Losses.CondHingeGAN, pro_gan_pytorch.Losses.CondLSGAN_SIGMOID, pro_gan_pytorch.Losses.CondLSGAN, pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 870, "col_offset": 12, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 872, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 895, "col_offset": 15, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 904, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 904, "col_offset": 29, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 904, "col_offset": 46, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 904, "col_offset": 56, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 923, "col_offset": 56, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 926, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 940, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 949, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 949, "col_offset": 52, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 949, "col_offset": 70, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 950, "col_offset": 12, "nodeName": "label_oh_encoder", "type": "Any"}, {"lineNumber": 950, "col_offset": 48, "nodeName": "th", "type": "Any"}, {"lineNumber": 950, "col_offset": 55, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 952, "col_offset": 37, "nodeName": "labels", "type": "Any"}, {"lineNumber": 987, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 999, "col_offset": 23, "nodeName": "one_hot_encode", "type": "Callable[[Any], Any]"}, {"lineNumber": 1000, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1006, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 1012, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1012, "col_offset": 38, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1015, "col_offset": 44, "nodeName": "batch_sizes", "type": "Any"}, {"lineNumber": 1019, "col_offset": 24, "nodeName": "default_timer", "type": "Callable[[], float]"}, {"lineNumber": 1021, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1022, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1024, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1029, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 1029, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 1029, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1029, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 1031, "col_offset": 20, "nodeName": "alpha", "type": "Union[float, int]"}, {"lineNumber": 1034, "col_offset": 37, "nodeName": "batch", "type": "Any"}, {"lineNumber": 1035, "col_offset": 20, "nodeName": "images", "type": "Any"}, {"lineNumber": 1036, "col_offset": 20, "nodeName": "labels", "type": "Any"}, {"lineNumber": 1039, "col_offset": 20, "nodeName": "label_information", "type": "Any"}, {"lineNumber": 1040, "col_offset": 20, "nodeName": "latent_vector", "type": "Any"}, {"lineNumber": 1042, "col_offset": 20, "nodeName": "gan_input", "type": "Any"}, {"lineNumber": 1045, "col_offset": 20, "nodeName": "dis_loss", "type": "Any"}, {"lineNumber": 1049, "col_offset": 20, "nodeName": "gen_loss", "type": "Any"}, {"lineNumber": 1092, "col_offset": 20, "nodeName": "ticker", "type": "int"}, {"lineNumber": 1093, "col_offset": 20, "nodeName": "step", "type": "int"}, {"lineNumber": 1095, "col_offset": 23, "nodeName": "default_timer", "type": "Callable[[], float]"}, {"lineNumber": 1096, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1100, "col_offset": 20, "nodeName": "gen_save_file", "type": "str"}, {"lineNumber": 1101, "col_offset": 20, "nodeName": "dis_save_file", "type": "str"}, {"lineNumber": 1102, "col_offset": 20, "nodeName": "gen_optim_save_file", "type": "str"}, {"lineNumber": 1105, "col_offset": 20, "nodeName": "dis_optim_save_file", "type": "str"}, {"lineNumber": 1115, "col_offset": 23, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 1121, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1122, "col_offset": 8, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 34, "col_offset": 53, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "depth", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "self", "type": "Generator"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "self", "type": "Generator"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "self", "type": "Generator"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "self", "type": "Generator"}, {"lineNumber": 65, "col_offset": 70, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "self", "type": "Generator"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "self", "type": "Generator"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "self", "type": "Generator"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "Generator"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "depth", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "self", "type": "Generator"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "self", "type": "Generator"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "self", "type": "Generator"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "depth", "type": "Any"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "layers", "type": "Any"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "self", "type": "Generator"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "height", "type": "Any"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 154, "col_offset": 56, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 167, "col_offset": 71, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 188, "col_offset": 56, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 194, "col_offset": 43, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 230, "col_offset": 55, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 47, "nodeName": "height", "type": "Any"}, {"lineNumber": 256, "col_offset": 43, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 256, "col_offset": 56, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 264, "col_offset": 28, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 266, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 268, "col_offset": 44, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 269, "col_offset": 44, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 269, "col_offset": 71, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 292, "col_offset": 56, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "rgb_to_features", "type": "Any"}, {"lineNumber": 298, "col_offset": 43, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 347, "col_offset": 57, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 348, "col_offset": 61, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 394, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 394, "col_offset": 38, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 394, "col_offset": 48, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "WGAN_GP", "type": "Type[pro_gan_pytorch.Losses.WGAN_GP]"}, {"lineNumber": 401, "col_offset": 38, "nodeName": "dis", "type": "Any"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "drift", "type": "Any"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.StandardGAN"}, {"lineNumber": 421, "col_offset": 34, "nodeName": "losses", "type": "module"}, {"lineNumber": 440, "col_offset": 45, "nodeName": "depth", "type": "Any"}, {"lineNumber": 440, "col_offset": 58, "nodeName": "depth", "type": "Any"}, {"lineNumber": 441, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 54, "nodeName": "depth", "type": "Any"}, {"lineNumber": 441, "col_offset": 67, "nodeName": "depth", "type": "Any"}, {"lineNumber": 446, "col_offset": 48, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 446, "col_offset": 58, "nodeName": "prior_downsample_factor", "type": "int"}, {"lineNumber": 472, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 472, "col_offset": 36, "nodeName": "noise", "type": "Any"}, {"lineNumber": 472, "col_offset": 43, "nodeName": "depth", "type": "Any"}, {"lineNumber": 472, "col_offset": 50, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 533, "col_offset": 47, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 579, "col_offset": 22, "nodeName": "th", "type": "Any"}, {"lineNumber": 579, "col_offset": 44, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 586, "col_offset": 51, "nodeName": "current_res", "type": "Any"}, {"lineNumber": 586, "col_offset": 64, "nodeName": "current_res", "type": "Any"}, {"lineNumber": 588, "col_offset": 56, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 591, "col_offset": 34, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 592, "col_offset": 24, "nodeName": "timeit", "type": "module"}, {"lineNumber": 594, "col_offset": 38, "nodeName": "epoch", "type": "int"}, {"lineNumber": 595, "col_offset": 36, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 595, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 598, "col_offset": 60, "nodeName": "total_batches", "type": "int"}, {"lineNumber": 607, "col_offset": 29, "nodeName": "to", "type": "Any"}, {"lineNumber": 607, "col_offset": 38, "nodeName": "device", "type": "Any"}, {"lineNumber": 609, "col_offset": 32, "nodeName": "to", "type": "Any"}, {"lineNumber": 609, "col_offset": 79, "nodeName": "device", "type": "Any"}, {"lineNumber": 612, "col_offset": 31, "nodeName": "optimize_discriminator", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 612, "col_offset": 59, "nodeName": "gan_input", "type": "Any"}, {"lineNumber": 612, "col_offset": 70, "nodeName": "images", "type": "Any"}, {"lineNumber": 613, "col_offset": 59, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 613, "col_offset": 74, "nodeName": "alpha", "type": "Union[float, int]"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "optimize_generator", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 616, "col_offset": 55, "nodeName": "gan_input", "type": "Any"}, {"lineNumber": 616, "col_offset": 66, "nodeName": "images", "type": "Any"}, {"lineNumber": 616, "col_offset": 74, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 616, "col_offset": 89, "nodeName": "alpha", "type": "Union[float, int]"}, {"lineNumber": 620, "col_offset": 24, "nodeName": "elapsed", "type": "float"}, {"lineNumber": 621, "col_offset": 24, "nodeName": "elapsed", "type": "str"}, {"lineNumber": 627, "col_offset": 24, "nodeName": "log_file", "type": "str"}, {"lineNumber": 634, "col_offset": 24, "nodeName": "gen_img_file", "type": "str"}, {"lineNumber": 659, "col_offset": 23, "nodeName": "timeit", "type": "module"}, {"lineNumber": 662, "col_offset": 53, "nodeName": "epoch", "type": "int"}, {"lineNumber": 662, "col_offset": 67, "nodeName": "epoch", "type": "int"}, {"lineNumber": 663, "col_offset": 20, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 663, "col_offset": 32, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 664, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 664, "col_offset": 49, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 665, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 665, "col_offset": 49, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 666, "col_offset": 42, "nodeName": "join", "type": "Callable"}, {"lineNumber": 666, "col_offset": 55, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 669, "col_offset": 42, "nodeName": "join", "type": "Callable"}, {"lineNumber": 669, "col_offset": 55, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 673, "col_offset": 20, "nodeName": "save", "type": "Any"}, {"lineNumber": 673, "col_offset": 51, "nodeName": "gen_save_file", "type": "str"}, {"lineNumber": 674, "col_offset": 20, "nodeName": "save", "type": "Any"}, {"lineNumber": 674, "col_offset": 51, "nodeName": "dis_save_file", "type": "str"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "save", "type": "Any"}, {"lineNumber": 675, "col_offset": 57, "nodeName": "gen_optim_save_file", "type": "str"}, {"lineNumber": 676, "col_offset": 20, "nodeName": "save", "type": "Any"}, {"lineNumber": 676, "col_offset": 57, "nodeName": "dis_optim_save_file", "type": "str"}, {"lineNumber": 679, "col_offset": 23, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 680, "col_offset": 24, "nodeName": "gen_shadow_save_file", "type": "str"}, {"lineNumber": 688, "col_offset": 12, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 733, "col_offset": 57, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 735, "col_offset": 32, "nodeName": "depth", "type": "Any"}, {"lineNumber": 736, "col_offset": 25, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 737, "col_offset": 20, "nodeName": "use_eql", "type": "Any"}, {"lineNumber": 785, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 785, "col_offset": 42, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 785, "col_offset": 52, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 790, "col_offset": 23, "nodeName": "CondWGAN_GP", "type": "Type[pro_gan_pytorch.Losses.CondWGAN_GP]"}, {"lineNumber": 790, "col_offset": 42, "nodeName": "dis", "type": "Any"}, {"lineNumber": 790, "col_offset": 52, "nodeName": "drift", "type": "Any"}, {"lineNumber": 792, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 793, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.CondLSGAN"}, {"lineNumber": 810, "col_offset": 34, "nodeName": "losses", "type": "module"}, {"lineNumber": 829, "col_offset": 45, "nodeName": "depth", "type": "Any"}, {"lineNumber": 829, "col_offset": 58, "nodeName": "depth", "type": "Any"}, {"lineNumber": 830, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 830, "col_offset": 54, "nodeName": "depth", "type": "Any"}, {"lineNumber": 830, "col_offset": 67, "nodeName": "depth", "type": "Any"}, {"lineNumber": 835, "col_offset": 48, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 835, "col_offset": 58, "nodeName": "prior_downsample_factor", "type": "int"}, {"lineNumber": 862, "col_offset": 27, "nodeName": "gen", "type": "Any"}, {"lineNumber": 862, "col_offset": 36, "nodeName": "noise", "type": "Any"}, {"lineNumber": 862, "col_offset": 43, "nodeName": "depth", "type": "Any"}, {"lineNumber": 862, "col_offset": 50, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 864, "col_offset": 19, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 870, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 926, "col_offset": 47, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 940, "col_offset": 16, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 949, "col_offset": 36, "nodeName": "th", "type": "Any"}, {"lineNumber": 950, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 990, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 999, "col_offset": 23, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 999, "col_offset": 43, "nodeName": "view", "type": "Any"}, {"lineNumber": 1000, "col_offset": 22, "nodeName": "th", "type": "Any"}, {"lineNumber": 1000, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1001, "col_offset": 31, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 1001, "col_offset": 50, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 1006, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 1013, "col_offset": 51, "nodeName": "current_res", "type": "Any"}, {"lineNumber": 1013, "col_offset": 64, "nodeName": "current_res", "type": "Any"}, {"lineNumber": 1015, "col_offset": 56, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1018, "col_offset": 34, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 1019, "col_offset": 24, "nodeName": "timeit", "type": "module"}, {"lineNumber": 1021, "col_offset": 38, "nodeName": "epoch", "type": "int"}, {"lineNumber": 1022, "col_offset": 36, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 1022, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 1025, "col_offset": 60, "nodeName": "total_batches", "type": "int"}, {"lineNumber": 1034, "col_offset": 20, "nodeName": "images", "type": "Any"}, {"lineNumber": 1034, "col_offset": 28, "nodeName": "labels", "type": "Any"}, {"lineNumber": 1035, "col_offset": 29, "nodeName": "to", "type": "Any"}, {"lineNumber": 1035, "col_offset": 39, "nodeName": "device", "type": "Any"}, {"lineNumber": 1036, "col_offset": 29, "nodeName": "view", "type": "Any"}, {"lineNumber": 1039, "col_offset": 40, "nodeName": "to", "type": "Any"}, {"lineNumber": 1039, "col_offset": 71, "nodeName": "device", "type": "Any"}, {"lineNumber": 1041, "col_offset": 85, "nodeName": "device", "type": "Any"}, {"lineNumber": 1042, "col_offset": 32, "nodeName": "cat", "type": "Any"}, {"lineNumber": 1045, "col_offset": 31, "nodeName": "optimize_discriminator", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 1045, "col_offset": 59, "nodeName": "gan_input", "type": "Any"}, {"lineNumber": 1045, "col_offset": 70, "nodeName": "images", "type": "Any"}, {"lineNumber": 1046, "col_offset": 59, "nodeName": "labels", "type": "Any"}, {"lineNumber": 1046, "col_offset": 67, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1046, "col_offset": 82, "nodeName": "alpha", "type": "Union[float, int]"}, {"lineNumber": 1049, "col_offset": 31, "nodeName": "optimize_generator", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 1049, "col_offset": 55, "nodeName": "gan_input", "type": "Any"}, {"lineNumber": 1049, "col_offset": 66, "nodeName": "images", "type": "Any"}, {"lineNumber": 1050, "col_offset": 55, "nodeName": "labels", "type": "Any"}, {"lineNumber": 1050, "col_offset": 63, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1050, "col_offset": 78, "nodeName": "alpha", "type": "Union[float, int]"}, {"lineNumber": 1054, "col_offset": 24, "nodeName": "elapsed", "type": "float"}, {"lineNumber": 1055, "col_offset": 24, "nodeName": "elapsed", "type": "str"}, {"lineNumber": 1061, "col_offset": 24, "nodeName": "log_file", "type": "str"}, {"lineNumber": 1068, "col_offset": 24, "nodeName": "gen_img_file", "type": "str"}, {"lineNumber": 1095, "col_offset": 23, "nodeName": "timeit", "type": "module"}, {"lineNumber": 1098, "col_offset": 53, "nodeName": "epoch", "type": "int"}, {"lineNumber": 1098, "col_offset": 67, "nodeName": "epoch", "type": "int"}, {"lineNumber": 1099, "col_offset": 20, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 1099, "col_offset": 32, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 1100, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1100, "col_offset": 49, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 1101, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1101, "col_offset": 49, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 1102, "col_offset": 42, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1102, "col_offset": 55, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 1105, "col_offset": 42, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1105, "col_offset": 55, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 1109, "col_offset": 20, "nodeName": "save", "type": "Any"}, {"lineNumber": 1109, "col_offset": 51, "nodeName": "gen_save_file", "type": "str"}, {"lineNumber": 1110, "col_offset": 20, "nodeName": "save", "type": "Any"}, {"lineNumber": 1110, "col_offset": 51, "nodeName": "dis_save_file", "type": "str"}, {"lineNumber": 1111, "col_offset": 20, "nodeName": "save", "type": "Any"}, {"lineNumber": 1111, "col_offset": 57, "nodeName": "gen_optim_save_file", "type": "str"}, {"lineNumber": 1112, "col_offset": 20, "nodeName": "save", "type": "Any"}, {"lineNumber": 1112, "col_offset": 57, "nodeName": "dis_optim_save_file", "type": "str"}, {"lineNumber": 1115, "col_offset": 23, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1116, "col_offset": 24, "nodeName": "gen_shadow_save_file", "type": "str"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 65, "col_offset": 70, "nodeName": "self", "type": "Generator"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "self", "type": "Generator"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "depth", "type": "Any"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "self", "type": "Generator"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 167, "col_offset": 71, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "height", "type": "Any"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "height", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "height", "type": "Any"}, {"lineNumber": 196, "col_offset": 47, "nodeName": "height", "type": "Any"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 264, "col_offset": 28, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "feature_size", "type": "Any"}, {"lineNumber": 269, "col_offset": 71, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 292, "col_offset": 44, "nodeName": "height", "type": "Any"}, {"lineNumber": 294, "col_offset": 35, "nodeName": "height", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "height", "type": "Any"}, {"lineNumber": 300, "col_offset": 47, "nodeName": "height", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 401, "col_offset": 38, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 401, "col_offset": 48, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 404, "col_offset": 23, "nodeName": "StandardGAN", "type": "Type[pro_gan_pytorch.Losses.StandardGAN]"}, {"lineNumber": 404, "col_offset": 42, "nodeName": "dis", "type": "Any"}, {"lineNumber": 406, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 407, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.LSGAN"}, {"lineNumber": 440, "col_offset": 45, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 441, "col_offset": 54, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 472, "col_offset": 27, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 533, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 533, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 533, "col_offset": 59, "nodeName": "samples", "type": "Any"}, {"lineNumber": 591, "col_offset": 41, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 604, "col_offset": 52, "nodeName": "ticker", "type": "int"}, {"lineNumber": 604, "col_offset": 62, "nodeName": "fader_point", "type": "int"}, {"lineNumber": 604, "col_offset": 28, "nodeName": "ticker", "type": "int"}, {"lineNumber": 604, "col_offset": 37, "nodeName": "fader_point", "type": "int"}, {"lineNumber": 607, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 607, "col_offset": 38, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 609, "col_offset": 79, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 612, "col_offset": 31, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 619, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 620, "col_offset": 48, "nodeName": "global_time", "type": "float"}, {"lineNumber": 621, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 622, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 626, "col_offset": 24, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 626, "col_offset": 36, "nodeName": "log_dir", "type": "Any"}, {"lineNumber": 627, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 627, "col_offset": 48, "nodeName": "log_dir", "type": "Any"}, {"lineNumber": 628, "col_offset": 52, "nodeName": "log", "type": "TextIO"}, {"lineNumber": 633, "col_offset": 24, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 633, "col_offset": 36, "nodeName": "sample_dir", "type": "Any"}, {"lineNumber": 634, "col_offset": 39, "nodeName": "join", "type": "Callable"}, {"lineNumber": 634, "col_offset": 52, "nodeName": "sample_dir", "type": "Any"}, {"lineNumber": 660, "col_offset": 59, "nodeName": "stop", "type": "float"}, {"lineNumber": 660, "col_offset": 66, "nodeName": "start", "type": "float"}, {"lineNumber": 662, "col_offset": 19, "nodeName": "epoch", "type": "int"}, {"lineNumber": 662, "col_offset": 27, "nodeName": "checkpoint_factor", "type": "Any"}, {"lineNumber": 662, "col_offset": 76, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 663, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 664, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 665, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 666, "col_offset": 42, "nodeName": "path", "type": "module"}, {"lineNumber": 669, "col_offset": 42, "nodeName": "path", "type": "module"}, {"lineNumber": 673, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 673, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 674, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 674, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 675, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 676, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 676, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 680, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 680, "col_offset": 60, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "save", "type": "Any"}, {"lineNumber": 682, "col_offset": 62, "nodeName": "gen_shadow_save_file", "type": "str"}, {"lineNumber": 790, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 790, "col_offset": 42, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 790, "col_offset": 52, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 793, "col_offset": 23, "nodeName": "CondLSGAN", "type": "Type[pro_gan_pytorch.Losses.CondLSGAN]"}, {"lineNumber": 793, "col_offset": 40, "nodeName": "dis", "type": "Any"}, {"lineNumber": 795, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.CondLSGAN_SIGMOID"}, {"lineNumber": 829, "col_offset": 45, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 830, "col_offset": 54, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 862, "col_offset": 27, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 926, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 926, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 926, "col_offset": 59, "nodeName": "samples", "type": "Any"}, {"lineNumber": 940, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 999, "col_offset": 43, "nodeName": "fx_labels", "type": "Any"}, {"lineNumber": 1000, "col_offset": 31, "nodeName": "fixed_labels", "type": "Any"}, {"lineNumber": 1001, "col_offset": 31, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1001, "col_offset": 50, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1018, "col_offset": 41, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1031, "col_offset": 52, "nodeName": "ticker", "type": "int"}, {"lineNumber": 1031, "col_offset": 62, "nodeName": "fader_point", "type": "int"}, {"lineNumber": 1031, "col_offset": 28, "nodeName": "ticker", "type": "int"}, {"lineNumber": 1031, "col_offset": 37, "nodeName": "fader_point", "type": "int"}, {"lineNumber": 1035, "col_offset": 29, "nodeName": "images", "type": "Any"}, {"lineNumber": 1035, "col_offset": 39, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1036, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 1039, "col_offset": 71, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1041, "col_offset": 85, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1042, "col_offset": 32, "nodeName": "th", "type": "Any"}, {"lineNumber": 1042, "col_offset": 40, "nodeName": "label_information", "type": "Any"}, {"lineNumber": 1042, "col_offset": 59, "nodeName": "latent_vector", "type": "Any"}, {"lineNumber": 1045, "col_offset": 31, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1049, "col_offset": 31, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1053, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 1054, "col_offset": 48, "nodeName": "global_time", "type": "float"}, {"lineNumber": 1055, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1056, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 1060, "col_offset": 24, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 1060, "col_offset": 36, "nodeName": "log_dir", "type": "Any"}, {"lineNumber": 1061, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1061, "col_offset": 48, "nodeName": "log_dir", "type": "Any"}, {"lineNumber": 1062, "col_offset": 52, "nodeName": "log", "type": "TextIO"}, {"lineNumber": 1067, "col_offset": 24, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 1067, "col_offset": 36, "nodeName": "sample_dir", "type": "Any"}, {"lineNumber": 1068, "col_offset": 39, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1068, "col_offset": 52, "nodeName": "sample_dir", "type": "Any"}, {"lineNumber": 1073, "col_offset": 24, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 1074, "col_offset": 24, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 1096, "col_offset": 59, "nodeName": "stop", "type": "float"}, {"lineNumber": 1096, "col_offset": 66, "nodeName": "start", "type": "float"}, {"lineNumber": 1098, "col_offset": 19, "nodeName": "epoch", "type": "int"}, {"lineNumber": 1098, "col_offset": 27, "nodeName": "checkpoint_factor", "type": "Any"}, {"lineNumber": 1098, "col_offset": 76, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 1099, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 1100, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 1101, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 1102, "col_offset": 42, "nodeName": "path", "type": "module"}, {"lineNumber": 1105, "col_offset": 42, "nodeName": "path", "type": "module"}, {"lineNumber": 1109, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 1109, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1110, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 1110, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1111, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 1111, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1112, "col_offset": 20, "nodeName": "th", "type": "Any"}, {"lineNumber": 1112, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1116, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1116, "col_offset": 60, "nodeName": "save_dir", "type": "Any"}, {"lineNumber": 1118, "col_offset": 24, "nodeName": "save", "type": "Any"}, {"lineNumber": 1118, "col_offset": 62, "nodeName": "gen_shadow_save_file", "type": "str"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "self", "type": "Generator"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "power", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "self", "type": "Generator"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "power", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "self", "type": "Generator"}, {"lineNumber": 73, "col_offset": 57, "nodeName": "power", "type": "Any"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "depth", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "power", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "power", "type": "Any"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "self", "type": "Discriminator"}, {"lineNumber": 164, "col_offset": 60, "nodeName": "power", "type": "Any"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 262, "col_offset": 45, "nodeName": "power", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 263, "col_offset": 45, "nodeName": "power", "type": "Any"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "self", "type": "ConditionalDiscriminator"}, {"lineNumber": 266, "col_offset": 60, "nodeName": "power", "type": "Any"}, {"lineNumber": 404, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 404, "col_offset": 42, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 407, "col_offset": 23, "nodeName": "LSGAN", "type": "Type[pro_gan_pytorch.Losses.LSGAN]"}, {"lineNumber": 407, "col_offset": 36, "nodeName": "dis", "type": "Any"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 410, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.LSGAN_SIGMOID"}, {"lineNumber": 598, "col_offset": 36, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 609, "col_offset": 32, "nodeName": "randn", "type": "Any"}, {"lineNumber": 609, "col_offset": 58, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 619, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 620, "col_offset": 34, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 621, "col_offset": 38, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 626, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 627, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 628, "col_offset": 29, "nodeName": "open", "type": "Callable"}, {"lineNumber": 628, "col_offset": 34, "nodeName": "log_file", "type": "str"}, {"lineNumber": 629, "col_offset": 28, "nodeName": "write", "type": "Callable"}, {"lineNumber": 633, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 634, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 639, "col_offset": 29, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 640, "col_offset": 28, "nodeName": "create_grid", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 662, "col_offset": 83, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 664, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 665, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 666, "col_offset": 42, "nodeName": "os", "type": "module"}, {"lineNumber": 669, "col_offset": 42, "nodeName": "os", "type": "module"}, {"lineNumber": 673, "col_offset": 28, "nodeName": "gen", "type": "Any"}, {"lineNumber": 674, "col_offset": 28, "nodeName": "dis", "type": "Any"}, {"lineNumber": 675, "col_offset": 28, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 676, "col_offset": 28, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 680, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "th", "type": "Any"}, {"lineNumber": 682, "col_offset": 32, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 793, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 793, "col_offset": 40, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 796, "col_offset": 23, "nodeName": "CondLSGAN_SIGMOID", "type": "Type[pro_gan_pytorch.Losses.CondLSGAN_SIGMOID]"}, {"lineNumber": 796, "col_offset": 48, "nodeName": "dis", "type": "Any"}, {"lineNumber": 798, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 799, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.CondHingeGAN"}, {"lineNumber": 940, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 1025, "col_offset": 36, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 1039, "col_offset": 40, "nodeName": "one_hot_encode", "type": "Callable[[Any], Any]"}, {"lineNumber": 1039, "col_offset": 60, "nodeName": "labels", "type": "Any"}, {"lineNumber": 1040, "col_offset": 36, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1053, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 1054, "col_offset": 34, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 1055, "col_offset": 38, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 1060, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 1061, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 1062, "col_offset": 29, "nodeName": "open", "type": "Callable"}, {"lineNumber": 1062, "col_offset": 34, "nodeName": "log_file", "type": "str"}, {"lineNumber": 1063, "col_offset": 28, "nodeName": "write", "type": "Callable"}, {"lineNumber": 1067, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 1068, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 1073, "col_offset": 24, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 1074, "col_offset": 24, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 1075, "col_offset": 29, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 1076, "col_offset": 28, "nodeName": "create_grid", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1098, "col_offset": 83, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1100, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 1101, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 1102, "col_offset": 42, "nodeName": "os", "type": "module"}, {"lineNumber": 1105, "col_offset": 42, "nodeName": "os", "type": "module"}, {"lineNumber": 1109, "col_offset": 28, "nodeName": "gen", "type": "Any"}, {"lineNumber": 1110, "col_offset": 28, "nodeName": "dis", "type": "Any"}, {"lineNumber": 1111, "col_offset": 28, "nodeName": "gen_optim", "type": "Any"}, {"lineNumber": 1112, "col_offset": 28, "nodeName": "dis_optim", "type": "Any"}, {"lineNumber": 1116, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 1118, "col_offset": 24, "nodeName": "th", "type": "Any"}, {"lineNumber": 1118, "col_offset": 32, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 73, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 262, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 263, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 266, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 407, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 407, "col_offset": 36, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "LSGAN_SIGMOID", "type": "Type[pro_gan_pytorch.Losses.LSGAN_SIGMOID]"}, {"lineNumber": 410, "col_offset": 44, "nodeName": "dis", "type": "Any"}, {"lineNumber": 412, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.HingeGAN"}, {"lineNumber": 598, "col_offset": 43, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 609, "col_offset": 32, "nodeName": "th", "type": "Any"}, {"lineNumber": 609, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 609, "col_offset": 58, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 619, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 620, "col_offset": 34, "nodeName": "time", "type": "module"}, {"lineNumber": 621, "col_offset": 38, "nodeName": "datetime", "type": "module"}, {"lineNumber": 621, "col_offset": 65, "nodeName": "elapsed", "type": "float"}, {"lineNumber": 623, "col_offset": 33, "nodeName": "elapsed", "type": "str"}, {"lineNumber": 623, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 623, "col_offset": 45, "nodeName": "dis_loss", "type": "Any"}, {"lineNumber": 623, "col_offset": 55, "nodeName": "gen_loss", "type": "Any"}, {"lineNumber": 627, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 629, "col_offset": 28, "nodeName": "log", "type": "TextIO"}, {"lineNumber": 634, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 639, "col_offset": 29, "nodeName": "th", "type": "Any"}, {"lineNumber": 640, "col_offset": 28, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 652, "col_offset": 41, "nodeName": "gen_img_file", "type": "str"}, {"lineNumber": 664, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 664, "col_offset": 76, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 665, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 665, "col_offset": 76, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 673, "col_offset": 28, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 674, "col_offset": 28, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 675, "col_offset": 28, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 676, "col_offset": 28, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 680, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 682, "col_offset": 32, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 796, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 796, "col_offset": 48, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 799, "col_offset": 23, "nodeName": "CondHingeGAN", "type": "Type[pro_gan_pytorch.Losses.CondHingeGAN]"}, {"lineNumber": 799, "col_offset": 43, "nodeName": "dis", "type": "Any"}, {"lineNumber": 801, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 802, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.CondStandardGAN"}, {"lineNumber": 940, "col_offset": 29, "nodeName": "label", "type": "Any"}, {"lineNumber": 1025, "col_offset": 43, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1039, "col_offset": 40, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1040, "col_offset": 36, "nodeName": "th", "type": "Any"}, {"lineNumber": 1040, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1041, "col_offset": 45, "nodeName": "latent_size", "type": "Any"}, {"lineNumber": 1041, "col_offset": 64, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 1053, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1054, "col_offset": 34, "nodeName": "time", "type": "module"}, {"lineNumber": 1055, "col_offset": 38, "nodeName": "datetime", "type": "module"}, {"lineNumber": 1055, "col_offset": 65, "nodeName": "elapsed", "type": "float"}, {"lineNumber": 1057, "col_offset": 33, "nodeName": "elapsed", "type": "str"}, {"lineNumber": 1057, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 1057, "col_offset": 45, "nodeName": "dis_loss", "type": "Any"}, {"lineNumber": 1057, "col_offset": 55, "nodeName": "gen_loss", "type": "Any"}, {"lineNumber": 1061, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 1063, "col_offset": 28, "nodeName": "log", "type": "TextIO"}, {"lineNumber": 1068, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 1073, "col_offset": 24, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1074, "col_offset": 24, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1075, "col_offset": 29, "nodeName": "th", "type": "Any"}, {"lineNumber": 1076, "col_offset": 28, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1088, "col_offset": 41, "nodeName": "gen_img_file", "type": "str"}, {"lineNumber": 1100, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1100, "col_offset": 76, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1101, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1101, "col_offset": 76, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1109, "col_offset": 28, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1110, "col_offset": 28, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1111, "col_offset": 28, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1112, "col_offset": 28, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1116, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 1118, "col_offset": 32, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 410, "col_offset": 44, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "HingeGAN", "type": "Type[pro_gan_pytorch.Losses.HingeGAN]"}, {"lineNumber": 413, "col_offset": 39, "nodeName": "dis", "type": "Any"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.RelativisticAverageHingeGAN"}, {"lineNumber": 609, "col_offset": 41, "nodeName": "images", "type": "Any"}, {"lineNumber": 619, "col_offset": 31, "nodeName": "total_batches", "type": "int"}, {"lineNumber": 619, "col_offset": 47, "nodeName": "feedback_factor", "type": "Any"}, {"lineNumber": 627, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 627, "col_offset": 71, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 636, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 636, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 651, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 681, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 681, "col_offset": 64, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 682, "col_offset": 32, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 799, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 799, "col_offset": 43, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 802, "col_offset": 23, "nodeName": "CondStandardGAN", "type": "Type[pro_gan_pytorch.Losses.CondStandardGAN]"}, {"lineNumber": 802, "col_offset": 46, "nodeName": "dis", "type": "Any"}, {"lineNumber": 804, "col_offset": 17, "nodeName": "loss", "type": "Any"}, {"lineNumber": 805, "col_offset": 16, "nodeName": "loss", "type": "pro_gan_pytorch.Losses.CondRelativisticAverageHingeGAN"}, {"lineNumber": 1040, "col_offset": 45, "nodeName": "images", "type": "Any"}, {"lineNumber": 1041, "col_offset": 45, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1041, "col_offset": 64, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1053, "col_offset": 31, "nodeName": "total_batches", "type": "int"}, {"lineNumber": 1053, "col_offset": 47, "nodeName": "feedback_factor", "type": "Any"}, {"lineNumber": 1061, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1061, "col_offset": 71, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1070, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1070, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 1087, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1117, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1117, "col_offset": 64, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1118, "col_offset": 32, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 413, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 413, "col_offset": 39, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "RelativisticAverageHingeGAN", "type": "Type[pro_gan_pytorch.Losses.RelativisticAverageHingeGAN]"}, {"lineNumber": 416, "col_offset": 58, "nodeName": "dis", "type": "Any"}, {"lineNumber": 419, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 630, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 630, "col_offset": 49, "nodeName": "gen_loss", "type": "Any"}, {"lineNumber": 645, "col_offset": 50, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 651, "col_offset": 49, "nodeName": "power", "type": "Any"}, {"lineNumber": 802, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 802, "col_offset": 46, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 805, "col_offset": 23, "nodeName": "CondRelativisticAverageHingeGAN", "type": "Type[pro_gan_pytorch.Losses.CondRelativisticAverageHingeGAN]"}, {"lineNumber": 805, "col_offset": 62, "nodeName": "dis", "type": "Any"}, {"lineNumber": 808, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1064, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1064, "col_offset": 49, "nodeName": "gen_loss", "type": "Any"}, {"lineNumber": 1081, "col_offset": 41, "nodeName": "use_ema", "type": "Any"}, {"lineNumber": 1082, "col_offset": 37, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 1083, "col_offset": 36, "nodeName": "fixed_input", "type": "Any"}, {"lineNumber": 1084, "col_offset": 36, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1085, "col_offset": 36, "nodeName": "alpha", "type": "Union[float, int]"}, {"lineNumber": 1087, "col_offset": 49, "nodeName": "power", "type": "Any"}, {"lineNumber": 416, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 416, "col_offset": 58, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 645, "col_offset": 50, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 651, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 805, "col_offset": 23, "nodeName": "losses", "type": "module"}, {"lineNumber": 805, "col_offset": 62, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1081, "col_offset": 41, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1082, "col_offset": 37, "nodeName": "self", "type": "ConditionalProGAN"}, {"lineNumber": 1087, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 646, "col_offset": 37, "nodeName": "gen_shadow", "type": "Any"}, {"lineNumber": 647, "col_offset": 36, "nodeName": "fixed_input", "type": "Any"}, {"lineNumber": 648, "col_offset": 36, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 649, "col_offset": 36, "nodeName": "alpha", "type": "Union[float, int]"}, {"lineNumber": 651, "col_offset": 61, "nodeName": "depth", "type": "Any"}, {"lineNumber": 651, "col_offset": 74, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 1087, "col_offset": 61, "nodeName": "depth", "type": "Any"}, {"lineNumber": 1087, "col_offset": 74, "nodeName": "current_depth", "type": "int"}, {"lineNumber": 646, "col_offset": 37, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 651, "col_offset": 61, "nodeName": "self", "type": "ProGAN"}, {"lineNumber": 1087, "col_offset": 61, "nodeName": "self", "type": "ConditionalProGAN"}]