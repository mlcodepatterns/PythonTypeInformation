[{"lineNumber": 31, "col_offset": 0, "nodeName": "keras_mock", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "enumerate_backends", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "model_with_containers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "simple_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "simple_data", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "ctc_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "ctc_data", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 1, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 1, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 1, "nodeName": "all_backends", "type": "Generator[Any, Any, None]"}, {"lineNumber": 53, "col_offset": 5, "nodeName": "backend", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "all_backends", "type": "Generator[Any, Any, None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 1, "nodeName": "cls", "type": "Any"}, {"lineNumber": 71, "col_offset": 7, "nodeName": "param", "type": "Any"}, {"lineNumber": 129, "col_offset": 1, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 130, "col_offset": 1, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 145, "col_offset": 1, "nodeName": "number_of_samples", "type": "int"}, {"lineNumber": 146, "col_offset": 1, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 147, "col_offset": 1, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 148, "col_offset": 1, "nodeName": "maximum_transcription_length", "type": "int"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 37, "col_offset": 1, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 1, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "get_all_backends", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 71, "col_offset": 7, "nodeName": "request", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "Model", "type": "Type[kur.model.model.Model]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "model_with_containers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "BatchProvider", "type": "Type[kur.providers.batch_provider.BatchProvider]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "model_with_containers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "BatchProvider", "type": "Type[kur.providers.batch_provider.BatchProvider]"}, {"lineNumber": 178, "col_offset": 1, "nodeName": "model", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "request", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "cls", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "Backend", "type": "Type[kur.backend.backend.Backend]"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "backend", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "is_supported", "type": "Any"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "request", "type": "Any"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "backend", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "a_backend", "type": "Any"}, {"lineNumber": 132, "col_offset": 10, "nodeName": "a_backend", "type": "Any"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "a_backend", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "backend", "type": "str"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "backend", "type": "str"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "get_backend_by_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 3, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 60, "col_offset": 3, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "backend", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "is_supported", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "Backend", "type": "Type[kur.backend.backend.Backend]"}, {"lineNumber": 55, "col_offset": 3, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 3, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "container", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "containers", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "cls", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "keras_mock", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "keras_mock", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "random_integers", "type": "Any"}, {"lineNumber": 160, "col_offset": 7, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "random_integers", "type": "Any"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "maximum_transcription_length", "type": "int"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "can_import", "type": "Callable[..., bool]"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "dep", "type": "str"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "dep", "type": "str"}, {"lineNumber": 38, "col_offset": 64, "nodeName": "deps", "type": "Tuple[str]"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "random", "type": "Any"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "random", "type": "Any"}, {"lineNumber": 155, "col_offset": 7, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "ones", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "number_of_samples", "type": "int"}, {"lineNumber": 152, "col_offset": 45, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 156, "col_offset": 10, "nodeName": "number_of_samples", "type": "int"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "maximum_transcription_length", "type": "int"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 163, "col_offset": 10, "nodeName": "number_of_samples", "type": "int"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "number_of_samples", "type": "int"}]