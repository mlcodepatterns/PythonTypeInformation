[{"lineNumber": 31, "col_offset": 0, "nodeName": "pytest_addoption", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "keras_mock", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "enumerate_backends", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "passthrough_engine", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "jinja_engine", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "model_with_containers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "simple_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "simple_data", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "ctc_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "ctc_data", "type": "Callable[[], Any]"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "uber_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 0, "nodeName": "uber_data", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 1, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 1, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 1, "nodeName": "all_backends", "type": "Generator[Any, Any, None]"}, {"lineNumber": 58, "col_offset": 5, "nodeName": "backend", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "all_backends", "type": "Generator[Any, Any, None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 1, "nodeName": "cls", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "param", "type": "Any"}, {"lineNumber": 148, "col_offset": 1, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 149, "col_offset": 1, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 164, "col_offset": 1, "nodeName": "number_of_samples", "type": "int"}, {"lineNumber": 165, "col_offset": 1, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 166, "col_offset": 1, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 167, "col_offset": 1, "nodeName": "maximum_transcription_length", "type": "int"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "addoption", "type": "Any"}, {"lineNumber": 42, "col_offset": 1, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 1, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "result", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "get_all_backends", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "request", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "JinjaEngine", "type": "Type[kur.engine.jinja_engine.JinjaEngine]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "JinjaEngine", "type": "Type[kur.engine.jinja_engine.JinjaEngine]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "Model", "type": "Type[kur.model.model.Model]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "model_with_containers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "BatchProvider", "type": "Type[kur.providers.batch_provider.BatchProvider]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "model_with_containers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "BatchProvider", "type": "Type[kur.providers.batch_provider.BatchProvider]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "model_with_containers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "BatchProvider", "type": "Type[kur.providers.batch_provider.BatchProvider]"}, {"lineNumber": 255, "col_offset": 1, "nodeName": "model", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "request", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "cls", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "Backend", "type": "Type[kur.backend.backend.Backend]"}, {"lineNumber": 59, "col_offset": 5, "nodeName": "backend", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "is_supported", "type": "Any"}, {"lineNumber": 78, "col_offset": 2, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "request", "type": "Any"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "backend", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "a_backend", "type": "Any"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "a_backend", "type": "Any"}, {"lineNumber": 194, "col_offset": 10, "nodeName": "a_backend", "type": "Any"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "model", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "a_backend", "type": "Any"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "backend", "type": "str"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, bool]"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "backend", "type": "str"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "get_backend_by_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 3, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 65, "col_offset": 3, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "backend", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 78, "col_offset": 2, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "is_supported", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "Backend", "type": "Type[kur.backend.backend.Backend]"}, {"lineNumber": 60, "col_offset": 3, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 3, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "container", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "containers", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "VanillaSource", "type": "Type[kur.sources.vanilla.VanillaSource]"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "cls", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "cls", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "keras_mock", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "keras_mock", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "backend", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "random_integers", "type": "Any"}, {"lineNumber": 179, "col_offset": 7, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "random_integers", "type": "Any"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "maximum_transcription_length", "type": "int"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "can_import", "type": "Callable[..., bool]"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "dep", "type": "str"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "dep", "type": "str"}, {"lineNumber": 43, "col_offset": 64, "nodeName": "deps", "type": "Tuple[str]"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "random", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "random", "type": "Any"}, {"lineNumber": 174, "col_offset": 7, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "ones", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "number_of_samples", "type": "int"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "output_timesteps", "type": "int"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "numpy", "type": "module"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "number_of_samples", "type": "int"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "maximum_transcription_length", "type": "int"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 182, "col_offset": 10, "nodeName": "number_of_samples", "type": "int"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "number_of_samples", "type": "int"}]