[{"lineNumber": 21, "col_offset": 14, "nodeName": "Operator", "type": "Any"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "limit", "type": "None"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "index", "type": "None"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "limit", "type": "Any"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "target", "type": "Any"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "index", "type": "int"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "child", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "children", "type": "Any"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 64, "col_offset": 3, "nodeName": "limit", "type": "Any"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 70, "col_offset": 3, "nodeName": "index", "type": "str"}, {"lineNumber": 72, "col_offset": 3, "nodeName": "index", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "limit", "type": "int"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "ParsingError", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "engine", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "args", "type": "Any"}, {"lineNumber": 64, "col_offset": 3, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "limit", "type": "int"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 70, "col_offset": 3, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 72, "col_offset": 3, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "ParsingError", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "engine", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "entry", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "target", "type": "Any"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "ParsingError", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "engine", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "scope", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "build", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "limit", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "engine", "type": "Any"}, {"lineNumber": 82, "col_offset": 5, "nodeName": "parse", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "engine", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "child", "type": "Any"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "index", "type": "Union[Any, str]"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "self", "type": "ForLoop"}, {"lineNumber": 82, "col_offset": 5, "nodeName": "new_child_from_data", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "entry", "type": "Any"}, {"lineNumber": 82, "col_offset": 5, "nodeName": "self", "type": "ForLoop"}]