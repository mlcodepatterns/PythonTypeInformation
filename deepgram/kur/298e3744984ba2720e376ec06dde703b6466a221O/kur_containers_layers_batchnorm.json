[{"lineNumber": 20, "col_offset": 25, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "axis", "type": "None"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "backend", "type": "Any"}, {"lineNumber": 75, "col_offset": 2, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "self", "type": "BatchNormalization"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "_parse", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "engine", "type": "Any"}, {"lineNumber": 45, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "get_backend", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "self", "type": "BatchNormalization"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "axis", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 5, "nodeName": "get_name", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "self", "type": "BatchNormalization"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "self", "type": "BatchNormalization"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 56, "col_offset": 5, "nodeName": "backend", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "backend", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "engine", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "axis", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "ParsingError", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "L", "type": "Any"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "name", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "self", "type": "BatchNormalization"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "self", "type": "BatchNormalization"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "axis", "type": "Any"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "self", "type": "BatchNormalization"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "axis", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "self", "type": "BatchNormalization"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "BatchNormalization"}]