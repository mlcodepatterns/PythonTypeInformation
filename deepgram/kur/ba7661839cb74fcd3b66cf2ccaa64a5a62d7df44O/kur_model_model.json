[{"lineNumber": 25, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "ContainerNode", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "SimpleNamespace", "type": "Any"}, {"lineNumber": 43, "col_offset": 1, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 1, "nodeName": "has_data_source", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 1, "nodeName": "add_data_source", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 1, "nodeName": "get_data_sources", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 1, "nodeName": "register_provider", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 1, "nodeName": "supplement_provider", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 1, "nodeName": "get_inferred_shape", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 1, "nodeName": "get_layer_name_by_data_name", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 1, "nodeName": "get_backend", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 1, "nodeName": "save", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 1, "nodeName": "restore", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 1, "nodeName": "parse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 1, "nodeName": "is_built", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 1, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 1, "nodeName": "build_graph", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 393, "col_offset": 1, "nodeName": "assemble_graph", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 521, "col_offset": 1, "nodeName": "enumerate_nodes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 544, "col_offset": 1, "nodeName": "get_shape_at_layer", "type": "Callable[..., Any]"}, {"lineNumber": 551, "col_offset": 1, "nodeName": "get_shape_at_node", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "types", "type": "module"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "root", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "backend", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "backend", "type": "Any"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "network", "type": "None"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "inputs", "type": "None"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "outputs", "type": "None"}, {"lineNumber": 64, "col_offset": 2, "nodeName": "endpoints", "type": "None"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "container_nodes", "type": "None"}, {"lineNumber": 67, "col_offset": 2, "nodeName": "_parsed", "type": "bool"}, {"lineNumber": 69, "col_offset": 2, "nodeName": "input_aliases", "type": "Dict[nothing, nothing]"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "output_aliases", "type": "Dict[nothing, nothing]"}, {"lineNumber": 71, "col_offset": 2, "nodeName": "key_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "provider", "type": "None"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "additional_sources", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "compiled", "type": "None"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "source", "type": "Any"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "provider", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "provider", "type": "Any"}, {"lineNumber": 142, "col_offset": 2, "nodeName": "shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 9, "nodeName": "shape", "type": "Any"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "key_cache", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 167, "col_offset": 2, "nodeName": "aliases", "type": "Union[Any, Tuple[Union[Dict[nothing, nothing], Dict[Any, Any]], Union[Dict[nothing, nothing], Dict[Any, Any]]]]"}, {"lineNumber": 169, "col_offset": 2, "nodeName": "key", "type": "Optional[Any]"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "alias_list", "type": "Union[Any, Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "aliases", "type": "Union[Any, Tuple[Union[Dict[nothing, nothing], Dict[Any, Any]], Union[Dict[nothing, nothing], Dict[Any, Any]]]]"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 192, "col_offset": 9, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 198, "col_offset": 9, "nodeName": "backend", "type": "Any"}, {"lineNumber": 263, "col_offset": 2, "nodeName": "nodes", "type": "Union[List[`namedtuple-CollapsedContainer-inputs-container-names`], List[Any]]"}, {"lineNumber": 287, "col_offset": 2, "nodeName": "inputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "inputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 288, "col_offset": 2, "nodeName": "outputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "outputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 289, "col_offset": 2, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 290, "col_offset": 2, "nodeName": "input_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "input_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 291, "col_offset": 2, "nodeName": "output_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "output_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 292, "col_offset": 2, "nodeName": "key_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 294, "col_offset": 2, "nodeName": "compiled", "type": "None"}, {"lineNumber": 303, "col_offset": 2, "nodeName": "inputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 306, "col_offset": 2, "nodeName": "input_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 307, "col_offset": 2, "nodeName": "outputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 308, "col_offset": 2, "nodeName": "output_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "node", "type": "Any"}, {"lineNumber": 402, "col_offset": 2, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 403, "col_offset": 2, "nodeName": "by_name", "type": "Dict[Any, Any]"}, {"lineNumber": 404, "col_offset": 6, "nodeName": "node", "type": "Any"}, {"lineNumber": 404, "col_offset": 14, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 417, "col_offset": 2, "nodeName": "recent", "type": "collections.deque[Any]"}, {"lineNumber": 418, "col_offset": 6, "nodeName": "node", "type": "Any"}, {"lineNumber": 418, "col_offset": 14, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 466, "col_offset": 6, "nodeName": "node", "type": "Any"}, {"lineNumber": 470, "col_offset": 2, "nodeName": "used_as_output", "type": "Set[Any]"}, {"lineNumber": 472, "col_offset": 2, "nodeName": "input_names", "type": "Set[Any]"}, {"lineNumber": 473, "col_offset": 2, "nodeName": "output_names", "type": "Set[Any]"}, {"lineNumber": 485, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 488, "col_offset": 2, "nodeName": "input_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 489, "col_offset": 2, "nodeName": "output_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 492, "col_offset": 2, "nodeName": "ordered", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 497, "col_offset": 6, "nodeName": "k", "type": "Any"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "ordered", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 515, "col_offset": 2, "nodeName": "by_name", "type": "Dict[Any, Any]"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "by_name", "type": "Dict[Any, Any]"}, {"lineNumber": 516, "col_offset": 2, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "ordered", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 531, "col_offset": 2, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 532, "col_offset": 6, "nodeName": "child", "type": "Any"}, {"lineNumber": 534, "col_offset": 5, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 541, "col_offset": 9, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 556, "col_offset": 5, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 55, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "containers", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "Container", "type": "Any"}, {"lineNumber": 56, "col_offset": 3, "nodeName": "containers", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "ContainerGroup", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "containers", "type": "Union[Any, List[Any]]"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 64, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 65, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 67, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 69, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 71, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "name", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "additional_sources", "type": "Dict[Any, Any]"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "additional_sources", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "items", "type": "Callable"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "source", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "get_data_sources", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 2, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 5, "nodeName": "provider", "type": "Any"}, {"lineNumber": 130, "col_offset": 5, "nodeName": "keys", "type": "Any"}, {"lineNumber": 136, "col_offset": 3, "nodeName": "index", "type": "Any"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 142, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 143, "col_offset": 2, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 143, "col_offset": 58, "nodeName": "shape", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "key_cache", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "key_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "aliases", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "get", "type": "Union[Any, Callable]"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 170, "col_offset": 5, "nodeName": "key", "type": "Optional[Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "keys", "type": "Any"}, {"lineNumber": 171, "col_offset": 10, "nodeName": "key", "type": "Optional[Any]"}, {"lineNumber": 186, "col_offset": 5, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "input_aliases", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 188, "col_offset": 5, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "output_aliases", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 190, "col_offset": 2, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 49, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 198, "col_offset": 9, "nodeName": "self", "type": "Model"}, {"lineNumber": 213, "col_offset": 2, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 46, "nodeName": "filename", "type": "Any"}, {"lineNumber": 214, "col_offset": 2, "nodeName": "save", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "self", "type": "Model"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "filename", "type": "Any"}, {"lineNumber": 229, "col_offset": 2, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "filename", "type": "Any"}, {"lineNumber": 230, "col_offset": 2, "nodeName": "restore", "type": "Any"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "self", "type": "Model"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "_parsed", "type": "bool"}, {"lineNumber": 241, "col_offset": 3, "nodeName": "_parsed", "type": "bool"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "network", "type": "Any"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "_parsed", "type": "bool"}, {"lineNumber": 260, "col_offset": 2, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 10, "nodeName": "enumerate_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "root", "type": "Any"}, {"lineNumber": 265, "col_offset": 2, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 2, "nodeName": "input_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "output_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "assemble_graph", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 59, "nodeName": "nodes", "type": "Union[List[Any], List[`namedtuple-CollapsedContainer-inputs-container-names`]]"}, {"lineNumber": 268, "col_offset": 5, "nodeName": "isEnabledFor", "type": "Callable[[int], bool]"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 269, "col_offset": 3, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 280, "col_offset": 2, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 3, "nodeName": "build_graph", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "input_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "output_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 282, "col_offset": 47, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 284, "col_offset": 2, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 2, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 288, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 289, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 290, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 291, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 292, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 294, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "values", "type": "Callable"}, {"lineNumber": 314, "col_offset": 7, "nodeName": "x", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 317, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 390, "col_offset": 9, "nodeName": "inputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 390, "col_offset": 17, "nodeName": "input_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 390, "col_offset": 32, "nodeName": "outputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 390, "col_offset": 41, "nodeName": "output_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 403, "col_offset": 2, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 412, "col_offset": 34, "nodeName": "container_node", "type": "Any"}, {"lineNumber": 413, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "names", "type": "Any"}, {"lineNumber": 417, "col_offset": 11, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 420, "col_offset": 3, "nodeName": "resolved", "type": "Any"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "values", "type": "Callable"}, {"lineNumber": 467, "col_offset": 7, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 473, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 474, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 482, "col_offset": 6, "nodeName": "sink", "type": "Any"}, {"lineNumber": 485, "col_offset": 36, "nodeName": "used_as_output", "type": "Set[Any]"}, {"lineNumber": 488, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 489, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 494, "col_offset": 6, "nodeName": "k", "type": "Any"}, {"lineNumber": 494, "col_offset": 9, "nodeName": "v", "type": "Any"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "items", "type": "Callable"}, {"lineNumber": 502, "col_offset": 3, "nodeName": "changed", "type": "Set[Any]"}, {"lineNumber": 513, "col_offset": 7, "nodeName": "k", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "changed", "type": "Set[Any]"}, {"lineNumber": 515, "col_offset": 2, "nodeName": "ordered", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 518, "col_offset": 9, "nodeName": "input_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 518, "col_offset": 22, "nodeName": "output_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 518, "col_offset": 36, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 524, "col_offset": 5, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "get_children", "type": "Any"}, {"lineNumber": 535, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 537, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 539, "col_offset": 6, "nodeName": "sink", "type": "Any"}, {"lineNumber": 545, "col_offset": 9, "nodeName": "get_shape_at_node", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 552, "col_offset": 6, "nodeName": "k", "type": "Any"}, {"lineNumber": 552, "col_offset": 9, "nodeName": "v", "type": "Any"}, {"lineNumber": 552, "col_offset": 14, "nodeName": "items", "type": "Union[Callable, Any]"}, {"lineNumber": 556, "col_offset": 5, "nodeName": "node", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "containers", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "self", "type": "Model"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "additional_sources", "type": "Dict[Any, Any]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "self", "type": "Model"}, {"lineNumber": 108, "col_offset": 3, "nodeName": "add_source", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "source", "type": "Any"}, {"lineNumber": 125, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 126, "col_offset": 5, "nodeName": "self", "type": "Model"}, {"lineNumber": 127, "col_offset": 3, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 5, "nodeName": "provider", "type": "Any"}, {"lineNumber": 131, "col_offset": 3, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 143, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "self", "type": "Model"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "input_aliases", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "output_aliases", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "key_cache", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 174, "col_offset": 7, "nodeName": "key", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "items", "type": "Union[Callable, Any]"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "self", "type": "Model"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "input_aliases", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "self", "type": "Model"}, {"lineNumber": 189, "col_offset": 10, "nodeName": "output_aliases", "type": "Union[Dict[nothing, nothing], Dict[Any, Any]]"}, {"lineNumber": 190, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 213, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 214, "col_offset": 2, "nodeName": "backend", "type": "Any"}, {"lineNumber": 229, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 230, "col_offset": 2, "nodeName": "backend", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "self", "type": "Model"}, {"lineNumber": 237, "col_offset": 6, "nodeName": "engine", "type": "None"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "engine", "type": "Any"}, {"lineNumber": 240, "col_offset": 3, "nodeName": "parse", "type": "Any"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "engine", "type": "Any"}, {"lineNumber": 241, "col_offset": 3, "nodeName": "self", "type": "Model"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "self", "type": "Model"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "self", "type": "Model"}, {"lineNumber": 255, "col_offset": 3, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 3, "nodeName": "parse", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 263, "col_offset": 10, "nodeName": "self", "type": "Model"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "self", "type": "Model"}, {"lineNumber": 265, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "self", "type": "Model"}, {"lineNumber": 268, "col_offset": 5, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "logging", "type": "module"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "node", "type": "Any"}, {"lineNumber": 280, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 282, "col_offset": 3, "nodeName": "self", "type": "Model"}, {"lineNumber": 284, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 284, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 285, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 285, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 311, "col_offset": 3, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 312, "col_offset": 3, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 3, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 317, "col_offset": 6, "nodeName": "node", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "meat", "type": "bool"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 342, "col_offset": 7, "nodeName": "meat", "type": "bool"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "value", "type": "None"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "value", "type": "Any"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 382, "col_offset": 3, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 385, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "output_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 386, "col_offset": 35, "nodeName": "node", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "names", "type": "Any"}, {"lineNumber": 398, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 398, "col_offset": 33, "nodeName": "names", "type": "Any"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "ContainerNode", "type": "Any"}, {"lineNumber": 412, "col_offset": 3, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "container_node", "type": "Any"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "node", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 463, "col_offset": 3, "nodeName": "append", "type": "Callable"}, {"lineNumber": 463, "col_offset": 17, "nodeName": "resolved", "type": "Any"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 475, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 479, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 482, "col_offset": 6, "nodeName": "container", "type": "Any"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 486, "col_offset": 3, "nodeName": "add", "type": "Callable"}, {"lineNumber": 486, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 488, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 488, "col_offset": 50, "nodeName": "input_names", "type": "Set[Any]"}, {"lineNumber": 489, "col_offset": 25, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 489, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 489, "col_offset": 51, "nodeName": "output_names", "type": "Set[Any]"}, {"lineNumber": 494, "col_offset": 14, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 495, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 496, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 498, "col_offset": 7, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 502, "col_offset": 13, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 503, "col_offset": 7, "nodeName": "k", "type": "Any"}, {"lineNumber": 503, "col_offset": 10, "nodeName": "v", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "items", "type": "Callable"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 510, "col_offset": 10, "nodeName": "changed", "type": "Set[Any]"}, {"lineNumber": 524, "col_offset": 5, "nodeName": "root", "type": "Any"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 533, "col_offset": 3, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 535, "col_offset": 6, "nodeName": "root", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 536, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 537, "col_offset": 6, "nodeName": "root", "type": "Any"}, {"lineNumber": 539, "col_offset": 6, "nodeName": "root", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "sink", "type": "bool"}, {"lineNumber": 545, "col_offset": 9, "nodeName": "self", "type": "Model"}, {"lineNumber": 546, "col_offset": 3, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 547, "col_offset": 3, "nodeName": "assumptions", "type": "Any"}, {"lineNumber": 552, "col_offset": 14, "nodeName": "assumptions", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 553, "col_offset": 6, "nodeName": "k", "type": "Any"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "names", "type": "Any"}, {"lineNumber": 554, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 557, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 564, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "self", "type": "Model"}, {"lineNumber": 108, "col_offset": 3, "nodeName": "provider", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 127, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 130, "col_offset": 5, "nodeName": "self", "type": "Model"}, {"lineNumber": 131, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "keys", "type": "Any"}, {"lineNumber": 138, "col_offset": 3, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 142, "col_offset": 10, "nodeName": "sources", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "self", "type": "Model"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "self", "type": "Model"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "alias_list", "type": "Union[Dict[Any, Any], Any, Dict[nothing, nothing]]"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "key", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "self", "type": "Model"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 189, "col_offset": 10, "nodeName": "self", "type": "Model"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 214, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 230, "col_offset": 2, "nodeName": "self", "type": "Model"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 13, "nodeName": "PassthroughEngine", "type": "Any"}, {"lineNumber": 240, "col_offset": 3, "nodeName": "root", "type": "Any"}, {"lineNumber": 255, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 258, "col_offset": 3, "nodeName": "self", "type": "Model"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "values", "type": "Callable"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 284, "col_offset": 45, "nodeName": "node", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "node", "type": "Any"}, {"lineNumber": 311, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "container", "type": "Any"}, {"lineNumber": 312, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 312, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "names", "type": "Any"}, {"lineNumber": 313, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 315, "col_offset": 49, "nodeName": "value", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "build", "type": "Any"}, {"lineNumber": 333, "col_offset": 38, "nodeName": "self", "type": "Model"}, {"lineNumber": 336, "col_offset": 5, "nodeName": "meat", "type": "bool"}, {"lineNumber": 343, "col_offset": 5, "nodeName": "value", "type": "Union[List[Any], Any]"}, {"lineNumber": 343, "col_offset": 18, "nodeName": "value", "type": "Union[List[Any], Any]"}, {"lineNumber": 350, "col_offset": 5, "nodeName": "value", "type": "Any"}, {"lineNumber": 352, "col_offset": 5, "nodeName": "names", "type": "List[nothing]"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "build", "type": "Any"}, {"lineNumber": 356, "col_offset": 38, "nodeName": "self", "type": "Model"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "node", "type": "Any"}, {"lineNumber": 382, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 385, "col_offset": 6, "nodeName": "container", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "outputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 398, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "container", "type": "Any"}, {"lineNumber": 409, "col_offset": 10, "nodeName": "names", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "by_name", "type": "Dict[Any, Any]"}, {"lineNumber": 420, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 424, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "container", "type": "Any"}, {"lineNumber": 424, "col_offset": 34, "nodeName": "Placeholder", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 446, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 446, "col_offset": 18, "nodeName": "container", "type": "Any"}, {"lineNumber": 446, "col_offset": 34, "nodeName": "Placeholder", "type": "Any"}, {"lineNumber": 448, "col_offset": 5, "nodeName": "recent", "type": "collections.deque[Any]"}, {"lineNumber": 449, "col_offset": 9, "nodeName": "recent", "type": "collections.deque[Any]"}, {"lineNumber": 463, "col_offset": 3, "nodeName": "recent", "type": "collections.deque[Any]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 468, "col_offset": 30, "nodeName": "node", "type": "Any"}, {"lineNumber": 475, "col_offset": 10, "nodeName": "node", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "add", "type": "Callable"}, {"lineNumber": 476, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 479, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 482, "col_offset": 6, "nodeName": "node", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "add", "type": "Callable"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 485, "col_offset": 18, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 486, "col_offset": 3, "nodeName": "output_names", "type": "Set[Any]"}, {"lineNumber": 488, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 495, "col_offset": 10, "nodeName": "v", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "ordered", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 508, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 511, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 525, "col_offset": 11, "nodeName": "CollapsedContainer", "type": "Type[`namedtuple-CollapsedContainer-inputs-container-names`]"}, {"lineNumber": 533, "col_offset": 3, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 533, "col_offset": 17, "nodeName": "enumerate_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 533, "col_offset": 38, "nodeName": "child", "type": "Any"}, {"lineNumber": 536, "col_offset": 23, "nodeName": "root", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 538, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 546, "col_offset": 3, "nodeName": "network", "type": "Any"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 557, "col_offset": 10, "nodeName": "container", "type": "Any"}, {"lineNumber": 564, "col_offset": 10, "nodeName": "container", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "provider", "type": "Any"}, {"lineNumber": 138, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 142, "col_offset": 10, "nodeName": "provider", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "index", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "key", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "keys", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 176, "col_offset": 5, "nodeName": "key_cache", "type": "Union[Any, Dict[Any, Any]]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 240, "col_offset": 3, "nodeName": "self", "type": "Model"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "input_nodes", "type": "Dict[Any, Any]"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "container", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 275, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "names", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "node", "type": "Any"}, {"lineNumber": 284, "col_offset": 54, "nodeName": "node", "type": "Any"}, {"lineNumber": 284, "col_offset": 62, "nodeName": "inputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 285, "col_offset": 54, "nodeName": "node", "type": "Any"}, {"lineNumber": 285, "col_offset": 62, "nodeName": "outputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "node", "type": "Any"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "node", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "container", "type": "Any"}, {"lineNumber": 315, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "container", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "connect", "type": "Any"}, {"lineNumber": 343, "col_offset": 5, "nodeName": "node", "type": "Any"}, {"lineNumber": 350, "col_offset": 5, "nodeName": "node", "type": "Any"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "value", "type": "Union[List[Any], Any]"}, {"lineNumber": 351, "col_offset": 5, "nodeName": "extend", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "names", "type": "Any"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "container", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "value", "type": "None"}, {"lineNumber": 360, "col_offset": 6, "nodeName": "value", "type": "Any"}, {"lineNumber": 360, "col_offset": 14, "nodeName": "layer", "type": "Any"}, {"lineNumber": 362, "col_offset": 36, "nodeName": "node", "type": "Any"}, {"lineNumber": 363, "col_offset": 10, "nodeName": "name", "type": "Any"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "names", "type": "Any"}, {"lineNumber": 385, "col_offset": 6, "nodeName": "node", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 388, "col_offset": 5, "nodeName": "output_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "container", "type": "Any"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 409, "col_offset": 10, "nodeName": "node", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "container", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 420, "col_offset": 22, "nodeName": "container", "type": "Any"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 432, "col_offset": 16, "nodeName": "name_map", "type": "Dict[Any, Any]"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "container", "type": "Any"}, {"lineNumber": 436, "col_offset": 6, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 446, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "input_names", "type": "Set[Any]"}, {"lineNumber": 480, "col_offset": 5, "nodeName": "add", "type": "Callable"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "output_names", "type": "Set[Any]"}, {"lineNumber": 485, "col_offset": 18, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 505, "col_offset": 35, "nodeName": "ordered", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 508, "col_offset": 5, "nodeName": "ordered", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 509, "col_offset": 5, "nodeName": "add", "type": "Callable"}, {"lineNumber": 509, "col_offset": 17, "nodeName": "k", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "root", "type": "Any"}, {"lineNumber": 533, "col_offset": 17, "nodeName": "self", "type": "Model"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "names", "type": "Any"}, {"lineNumber": 538, "col_offset": 28, "nodeName": "root", "type": "Any"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 546, "col_offset": 3, "nodeName": "self", "type": "Model"}, {"lineNumber": 557, "col_offset": 10, "nodeName": "node", "type": "Any"}, {"lineNumber": 564, "col_offset": 10, "nodeName": "node", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "self", "type": "Model"}, {"lineNumber": 142, "col_offset": 10, "nodeName": "self", "type": "Model"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "node", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 5, "nodeName": "value", "type": "Any"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "node", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "backend", "type": "Any"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "value", "type": "List[Any]"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "layer", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "value", "type": "Union[List[Any], Any]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 351, "col_offset": 5, "nodeName": "names", "type": "Any"}, {"lineNumber": 352, "col_offset": 5, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "node", "type": "Any"}, {"lineNumber": 362, "col_offset": 6, "nodeName": "inputs", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "container", "type": "Any"}, {"lineNumber": 388, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 420, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 425, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 434, "col_offset": 18, "nodeName": "name_map", "type": "Dict[Any, Any]"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "network", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 438, "col_offset": 6, "nodeName": "append", "type": "Any"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 451, "col_offset": 5, "nodeName": "append", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 480, "col_offset": 5, "nodeName": "used_as_output", "type": "Set[Any]"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "container", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "container", "type": "Any"}, {"lineNumber": 508, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 509, "col_offset": 5, "nodeName": "changed", "type": "Set[Any]"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 528, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 560, "col_offset": 9, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 560, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "container", "type": "Any"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "container", "type": "Any"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 329, "col_offset": 5, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "self", "type": "Model"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 348, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 351, "col_offset": 5, "nodeName": "node", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 352, "col_offset": 5, "nodeName": "node", "type": "Any"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 364, "col_offset": 7, "nodeName": "input_aliases", "type": "Dict[Any, Any]"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "container", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "container", "type": "Any"}, {"lineNumber": 434, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 438, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 441, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 443, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 451, "col_offset": 5, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 451, "col_offset": 28, "nodeName": "recent", "type": "collections.deque[Any]"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 459, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "input_node", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "root", "type": "Any"}, {"lineNumber": 528, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 528, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 560, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "node", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "node", "type": "Any"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 348, "col_offset": 30, "nodeName": "container", "type": "Any"}, {"lineNumber": 349, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "value", "type": "Union[List[Any], Any]"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "container", "type": "Any"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "container", "type": "Any"}, {"lineNumber": 438, "col_offset": 6, "nodeName": "resolved", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "container", "type": "Any"}, {"lineNumber": 451, "col_offset": 5, "nodeName": "resolved", "type": "Any"}, {"lineNumber": 459, "col_offset": 7, "nodeName": "container", "type": "Any"}, {"lineNumber": 460, "col_offset": 7, "nodeName": "get_container_name", "type": "Any"}, {"lineNumber": 528, "col_offset": 11, "nodeName": "root", "type": "Any"}, {"lineNumber": 348, "col_offset": 30, "nodeName": "node", "type": "Any"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "node", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 459, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 460, "col_offset": 7, "nodeName": "Placeholder", "type": "Any"}]