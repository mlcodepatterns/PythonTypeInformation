[{"lineNumber": 34, "col_offset": 0, "nodeName": "load_wav", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "load_pydub", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "scale_signal", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "get_mime_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "load_audio", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 0, "nodeName": "get_audio_features", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "warn", "type": "bool"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 74, "col_offset": 1, "nodeName": "raw", "type": "Any"}, {"lineNumber": 75, "col_offset": 1, "nodeName": "raw", "type": "Any"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "get_mime_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 1, "nodeName": "ftype", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 38, "col_offset": 1, "nodeName": "rate", "type": "Any"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "sig", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "read", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "filename", "type": "Any"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "sig", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "sig", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "rate", "type": "Any"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "FileNotFoundError", "type": "Type[FileNotFoundError]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "channels", "type": "Any"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "get_array_of_samples", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "frombuffer", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "raw", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "raw", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "frame_rate", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "channels", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 111, "col_offset": 2, "nodeName": "mime_magic", "type": "Any"}, {"lineNumber": 112, "col_offset": 2, "nodeName": "ftype", "type": "Any"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "ftype", "type": "Any"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "get_mime_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "filename", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "load_wav", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "load_pydub", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "load_pydub", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "ftype", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "loaders", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "audio", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 200, "col_offset": 2, "nodeName": "audio", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "wav", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "itemsize", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "filename", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "numpy", "type": "module"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "typecode", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "sample_width", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "audio", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 97, "col_offset": 5, "nodeName": "warn", "type": "bool"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "ext", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "Magic", "type": "Any"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "filename", "type": "Any"}, {"lineNumber": 113, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "ftype", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "bytes", "type": "Type[bytes]"}, {"lineNumber": 114, "col_offset": 3, "nodeName": "ftype", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "IOError", "type": "Type[OSError]"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "filename", "type": "Any"}, {"lineNumber": 200, "col_offset": 10, "nodeName": "load_audio", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "audio", "type": "Any"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "audio", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 213, "col_offset": 2, "nodeName": "num_features", "type": "Optional[Union[Any, int]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "sig", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "AudioSegment", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "exception", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "filename", "type": "Any"}, {"lineNumber": 63, "col_offset": 5, "nodeName": "isfile", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "filename", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "functools", "type": "module"}, {"lineNumber": 71, "col_offset": 3, "nodeName": "split_to_mono", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "raw", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 5, "nodeName": "get_mime_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 3, "nodeName": "warn", "type": "bool"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "lower", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "ext", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "magic", "type": "Any"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "mime_magic", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "decode", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "ftype", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "filename", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "loaders", "type": "Dict[str, Callable[[Any], Any]]"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "mfcc", "type": "Any"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 225, "col_offset": 2, "nodeName": "window_size", "type": "float"}, {"lineNumber": 227, "col_offset": 2, "nodeName": "step_size", "type": "float"}, {"lineNumber": 229, "col_offset": 2, "nodeName": "signal", "type": "Any"}, {"lineNumber": 231, "col_offset": 2, "nodeName": "hop_size", "type": "int"}, {"lineNumber": 232, "col_offset": 2, "nodeName": "frame_size", "type": "int"}, {"lineNumber": 235, "col_offset": 2, "nodeName": "remove", "type": "int"}, {"lineNumber": 236, "col_offset": 5, "nodeName": "remove", "type": "int"}, {"lineNumber": 244, "col_offset": 2, "nodeName": "num_frames", "type": "int"}, {"lineNumber": 251, "col_offset": 2, "nodeName": "filter_window", "type": "Any"}, {"lineNumber": 256, "col_offset": 2, "nodeName": "norm", "type": "Any"}, {"lineNumber": 258, "col_offset": 2, "nodeName": "scale", "type": "Any"}, {"lineNumber": 259, "col_offset": 2, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 263, "col_offset": 2, "nodeName": "spec", "type": "Any"}, {"lineNumber": 263, "col_offset": 9, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 267, "col_offset": 2, "nodeName": "low_freq", "type": "Optional[Any]"}, {"lineNumber": 268, "col_offset": 2, "nodeName": "high_freq", "type": "Optional[Any]"}, {"lineNumber": 285, "col_offset": 2, "nodeName": "spec", "type": "Any"}, {"lineNumber": 287, "col_offset": 2, "nodeName": "spec", "type": "Any"}, {"lineNumber": 287, "col_offset": 9, "nodeName": "T", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "spec", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "sig", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "sig", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "sig", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 63, "col_offset": 5, "nodeName": "path", "type": "module"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "DependencyError", "type": "Type[DependencyError]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "overlay", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 71, "col_offset": 3, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "audio", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 98, "col_offset": 3, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 3, "nodeName": "get_mime_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "ftype", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "ftype", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "python_speech_features", "type": "Any"}, {"lineNumber": 215, "col_offset": 3, "nodeName": "audio", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 216, "col_offset": 3, "nodeName": "audio", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 217, "col_offset": 10, "nodeName": "num_features", "type": "Optional[Union[int, Any]]"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "scale_signal", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "audio", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "hop_size", "type": "int"}, {"lineNumber": 237, "col_offset": 3, "nodeName": "clean", "type": "Any"}, {"lineNumber": 239, "col_offset": 3, "nodeName": "clean", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "signal", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "as_strided", "type": "Any"}, {"lineNumber": 246, "col_offset": 3, "nodeName": "clean", "type": "Any"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "hanning", "type": "Any"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "frame_size", "type": "int"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "rfft", "type": "Any"}, {"lineNumber": 260, "col_offset": 2, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "scale", "type": "Any"}, {"lineNumber": 261, "col_offset": 2, "nodeName": "scaled", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "get", "type": "Callable"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "get", "type": "Callable"}, {"lineNumber": 269, "col_offset": 5, "nodeName": "low_freq", "type": "Optional[Any]"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "high_freq", "type": "Optional[Any]"}, {"lineNumber": 271, "col_offset": 3, "nodeName": "num_bins", "type": "Any"}, {"lineNumber": 273, "col_offset": 3, "nodeName": "delta_freq", "type": "float"}, {"lineNumber": 276, "col_offset": 3, "nodeName": "get_bin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 283, "col_offset": 3, "nodeName": "spec", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "log", "type": "Any"}, {"lineNumber": 287, "col_offset": 9, "nodeName": "spec", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 63, "col_offset": 5, "nodeName": "os", "type": "module"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 209, "col_offset": 3, "nodeName": "exception", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "num_features", "type": "Optional[Union[int, Any]]"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "step_size", "type": "float"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "window_size", "type": "float"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "frame_size", "type": "int"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "signal", "type": "Any"}, {"lineNumber": 244, "col_offset": 44, "nodeName": "hop_size", "type": "int"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "stride_tricks", "type": "Any"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "numpy", "type": "module"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "fft", "type": "Any"}, {"lineNumber": 253, "col_offset": 3, "nodeName": "frames", "type": "Any"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "absolute", "type": "Any"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "fft", "type": "Any"}, {"lineNumber": 258, "col_offset": 10, "nodeName": "sum", "type": "Any"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "audio", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "window_size", "type": "float"}, {"lineNumber": 283, "col_offset": 10, "nodeName": "spec", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "numpy", "type": "module"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "spec", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 291, "col_offset": 57, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "filename", "type": "Any"}, {"lineNumber": 209, "col_offset": 3, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "audio", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "audio", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "signal", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "frame_size", "type": "int"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "lib", "type": "Any"}, {"lineNumber": 247, "col_offset": 10, "nodeName": "frame_size", "type": "int"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "num_frames", "type": "int"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "filter_window", "type": "Any"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "numpy", "type": "module"}, {"lineNumber": 258, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "filter_window", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "spec", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "f", "type": "Optional[Any]"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "alt", "type": "int"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "path", "type": "module"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "remove", "type": "int"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "clean", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "strides", "type": "Any"}, {"lineNumber": 248, "col_offset": 49, "nodeName": "hop_size", "type": "int"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "get_bin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "low_freq", "type": "Optional[Any]"}, {"lineNumber": 283, "col_offset": 36, "nodeName": "get_bin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 283, "col_offset": 44, "nodeName": "high_freq", "type": "Optional[Any]"}, {"lineNumber": 283, "col_offset": 55, "nodeName": "num_bins", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "clean", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "strides", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "clean", "type": "Any"}]