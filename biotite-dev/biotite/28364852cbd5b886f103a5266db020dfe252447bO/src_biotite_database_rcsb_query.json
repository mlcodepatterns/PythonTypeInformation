[{"lineNumber": 241, "col_offset": 0, "nodeName": "count", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 0, "nodeName": "search", "type": "Callable[..., Any]"}, {"lineNumber": 350, "col_offset": 0, "nodeName": "_to_isoformat", "type": "Callable[[Any], Any]"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "__name__", "type": "str"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "_search_url", "type": "str"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "Query", "type": "Type[Query]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "Query", "type": "Type[Query]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_queries", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "queries", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_operator", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "operator", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[List[Any], Any, str]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_term", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "term", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "_term", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_field", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "field", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "clone", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "clone", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "_field", "type": "Any"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "_operator", "type": "str"}, {"lineNumber": 156, "col_offset": 44, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "_min_identity", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "min_identity", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "_max_expect_value", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "max_expect_value", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "_sequence", "type": "str"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "_min_identity", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "_max_expect_value", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "_pattern", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "_pattern_type", "type": "Any"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "pattern_type", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "_pattern", "type": "Any"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "_pattern_type", "type": "Any"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "_value", "type": "Dict[str, Any]"}, {"lineNumber": 237, "col_offset": 44, "nodeName": "_operator", "type": "str"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 242, "col_offset": 7, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 260, "col_offset": 21, "nodeName": "_search_url", "type": "str"}, {"lineNumber": 262, "col_offset": 7, "nodeName": "status_code", "type": "int"}, {"lineNumber": 302, "col_offset": 7, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 308, "col_offset": 7, "nodeName": "sort_by", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "sort_by", "type": "str"}, {"lineNumber": 311, "col_offset": 7, "nodeName": "range", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "start", "type": "int"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 335, "col_offset": 21, "nodeName": "_search_url", "type": "str"}, {"lineNumber": 337, "col_offset": 7, "nodeName": "status_code", "type": "int"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "strftime", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "CompositeQuery", "type": "Type[CompositeQuery]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "CompositeQuery", "type": "Type[CompositeQuery]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "operator", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "_operator", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "_operator", "type": "str"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "clone", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 156, "col_offset": 44, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "_value", "type": "Any"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "_value", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "negate", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "_sequence", "type": "str"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "_sequence", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], None]"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "strict", "type": "Any"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "self", "type": "StructureQuery"}, {"lineNumber": 237, "col_offset": 44, "nodeName": "self", "type": "StructureQuery"}, {"lineNumber": 246, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "get_content", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "requests", "type": "module"}, {"lineNumber": 262, "col_offset": 7, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "status_code", "type": "int"}, {"lineNumber": 306, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "count", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "query", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 321, "col_offset": 17, "nodeName": "get_content", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "requests", "type": "module"}, {"lineNumber": 337, "col_offset": 7, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 339, "col_offset": 9, "nodeName": "status_code", "type": "int"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "object", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "self", "type": "SingleQuery"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "query", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "self", "type": "SingleQuery"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "query", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "_operator", "type": "str"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_value", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "_operator", "type": "str"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "_value", "type": "None"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "_to_isoformat", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "_value", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "_scope_to_target", "type": "Dict[str, str]"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "lower", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "NucleotideSequence", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "_scope_to_target", "type": "Dict[str, str]"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "lower", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "chain", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "JSONDecodeError", "type": "Type[json.decoder.JSONDecodeError]"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "range", "type": "Any"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "range", "type": "Any"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "range", "type": "Any"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "start", "type": "Any"}, {"lineNumber": 321, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "start", "type": "Union[int, Any]"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "rows", "type": "Any"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 338, "col_offset": 41, "nodeName": "result", "type": "Any"}, {"lineNumber": 339, "col_offset": 9, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "JSONDecodeError", "type": "Type[json.decoder.JSONDecodeError]"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "get_content", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "query", "type": "Any"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "_queries", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "_operator", "type": "str"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "_operator", "type": "str"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "scope", "type": "Any"}, {"lineNumber": 173, "col_offset": 56, "nodeName": "lower", "type": "Any"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "scope", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "chain", "type": "Any"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "assembly", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "assembly", "type": "Any"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "pdb_id", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "assembly", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "pdb_id", "type": "Any"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "chain", "type": "Any"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 260, "col_offset": 50, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 260, "col_offset": 61, "nodeName": "query_dict", "type": "Dict[str, Union[Dict[str, Dict[str, int]], Any]]"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "decoder", "type": "module"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "range", "type": "Any"}, {"lineNumber": 330, "col_offset": 31, "nodeName": "sort_by", "type": "Union[Any, str]"}, {"lineNumber": 335, "col_offset": 50, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 335, "col_offset": 61, "nodeName": "query_dict", "type": "Dict[str, Union[Dict[str, Union[List[Dict[str, Union[str, Any]]], Dict[str, Any]]], Any]]"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "decoder", "type": "module"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "operator", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "query", "type": "Any"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "_operator", "type": "str"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "val", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "scope", "type": "Any"}, {"lineNumber": 173, "col_offset": 56, "nodeName": "scope", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 260, "col_offset": 50, "nodeName": "json", "type": "module"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 335, "col_offset": 50, "nodeName": "json", "type": "module"}, {"lineNumber": 338, "col_offset": 51, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 347, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "values", "type": "Callable"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 269, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 338, "col_offset": 51, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 344, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 269, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 344, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 347, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 269, "col_offset": 57, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 344, "col_offset": 57, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 269, "col_offset": 57, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 344, "col_offset": 57, "nodeName": "r", "type": "requests.models.Response"}]