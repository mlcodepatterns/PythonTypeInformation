[{"lineNumber": 410, "col_offset": 0, "nodeName": "count", "type": "Callable[..., Any]"}, {"lineNumber": 481, "col_offset": 0, "nodeName": "search", "type": "Callable[..., Any]"}, {"lineNumber": 582, "col_offset": 0, "nodeName": "_to_isoformat", "type": "Callable[[Any], Any]"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "__name__", "type": "str"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "_search_url", "type": "str"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "Query", "type": "Type[Query]"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "Query", "type": "Type[Query]"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_queries", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "queries", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_operator", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "operator", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[List[Any], Any, str]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "_term", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "term", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "_field", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "field", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 238, "col_offset": 45, "nodeName": "_field", "type": "Any"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "_operator", "type": "str"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "clone", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "clone", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "_min_identity", "type": "Any"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "min_identity", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "_max_expect_value", "type": "Any"}, {"lineNumber": 300, "col_offset": 33, "nodeName": "max_expect_value", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "_sequence", "type": "str"}, {"lineNumber": 307, "col_offset": 42, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 308, "col_offset": 51, "nodeName": "_min_identity", "type": "Any"}, {"lineNumber": 309, "col_offset": 49, "nodeName": "_max_expect_value", "type": "Any"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "_pattern", "type": "Any"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "_pattern_type", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "pattern_type", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "_pattern", "type": "Any"}, {"lineNumber": 347, "col_offset": 48, "nodeName": "_pattern_type", "type": "Any"}, {"lineNumber": 348, "col_offset": 42, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 405, "col_offset": 41, "nodeName": "_value", "type": "Dict[str, Any]"}, {"lineNumber": 406, "col_offset": 44, "nodeName": "_operator", "type": "str"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 448, "col_offset": 7, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 456, "col_offset": 23, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 466, "col_offset": 21, "nodeName": "_search_url", "type": "str"}, {"lineNumber": 468, "col_offset": 7, "nodeName": "status_code", "type": "int"}, {"lineNumber": 534, "col_offset": 7, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 540, "col_offset": 7, "nodeName": "sort_by", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "sort_by", "type": "str"}, {"lineNumber": 543, "col_offset": 7, "nodeName": "range", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "start", "type": "int"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 554, "col_offset": 23, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 567, "col_offset": 21, "nodeName": "_search_url", "type": "str"}, {"lineNumber": 569, "col_offset": 7, "nodeName": "status_code", "type": "int"}, {"lineNumber": 586, "col_offset": 11, "nodeName": "strftime", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "CompositeQuery", "type": "Type[CompositeQuery]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "CompositeQuery", "type": "Type[CompositeQuery]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "operator", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "_operator", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "_operator", "type": "str"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 238, "col_offset": 45, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "_value", "type": "Any"}, {"lineNumber": 242, "col_offset": 45, "nodeName": "_value", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "clone", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "_sequence", "type": "str"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "_sequence", "type": "str"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 307, "col_offset": 42, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 308, "col_offset": 51, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 309, "col_offset": 49, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 343, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 347, "col_offset": 48, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 348, "col_offset": 42, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 398, "col_offset": 49, "nodeName": "strict", "type": "Any"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 405, "col_offset": 41, "nodeName": "self", "type": "StructureQuery"}, {"lineNumber": 406, "col_offset": 44, "nodeName": "self", "type": "StructureQuery"}, {"lineNumber": 452, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 455, "col_offset": 17, "nodeName": "get_content", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "requests", "type": "module"}, {"lineNumber": 468, "col_offset": 7, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 470, "col_offset": 9, "nodeName": "status_code", "type": "int"}, {"lineNumber": 538, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "count", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 21, "nodeName": "query", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 553, "col_offset": 17, "nodeName": "get_content", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "requests", "type": "module"}, {"lineNumber": 569, "col_offset": 7, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 571, "col_offset": 9, "nodeName": "status_code", "type": "int"}, {"lineNumber": 586, "col_offset": 11, "nodeName": "object", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "self", "type": "SingleQuery"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "query", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "self", "type": "SingleQuery"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "query", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "_term", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "_operator", "type": "str"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "_value", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "_operator", "type": "str"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "_value", "type": "None"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "_to_isoformat", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "_value", "type": "Any"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 242, "col_offset": 45, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "_scope_to_target", "type": "Dict[str, str]"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "lower", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 294, "col_offset": 32, "nodeName": "NucleotideSequence", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "_scope_to_target", "type": "Dict[str, str]"}, {"lineNumber": 340, "col_offset": 44, "nodeName": "lower", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 384, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 387, "col_offset": 13, "nodeName": "chain", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 455, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 9, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "JSONDecodeError", "type": "Type[json.decoder.JSONDecodeError]"}, {"lineNumber": 546, "col_offset": 9, "nodeName": "range", "type": "Any"}, {"lineNumber": 546, "col_offset": 21, "nodeName": "range", "type": "Any"}, {"lineNumber": 547, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 549, "col_offset": 16, "nodeName": "range", "type": "Any"}, {"lineNumber": 550, "col_offset": 26, "nodeName": "start", "type": "Any"}, {"lineNumber": 553, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 557, "col_offset": 25, "nodeName": "start", "type": "Union[int, Any]"}, {"lineNumber": 558, "col_offset": 24, "nodeName": "rows", "type": "Any"}, {"lineNumber": 570, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 570, "col_offset": 41, "nodeName": "result", "type": "Any"}, {"lineNumber": 571, "col_offset": 9, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 577, "col_offset": 15, "nodeName": "JSONDecodeError", "type": "Type[json.decoder.JSONDecodeError]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "get_content", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "query", "type": "Any"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "_queries", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "_operator", "type": "str"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "_operator", "type": "str"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 228, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "scope", "type": "Any"}, {"lineNumber": 294, "col_offset": 56, "nodeName": "lower", "type": "Any"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 340, "col_offset": 44, "nodeName": "scope", "type": "Any"}, {"lineNumber": 343, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "chain", "type": "Any"}, {"lineNumber": 382, "col_offset": 30, "nodeName": "assembly", "type": "Any"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "assembly", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "pdb_id", "type": "Any"}, {"lineNumber": 390, "col_offset": 32, "nodeName": "assembly", "type": "Any"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "pdb_id", "type": "Any"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "chain", "type": "Any"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 452, "col_offset": 29, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 466, "col_offset": 50, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 466, "col_offset": 61, "nodeName": "query_dict", "type": "Dict[str, Union[Dict[str, Dict[str, int]], Any]]"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 475, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "decoder", "type": "module"}, {"lineNumber": 538, "col_offset": 29, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "range", "type": "Any"}, {"lineNumber": 562, "col_offset": 31, "nodeName": "sort_by", "type": "Union[str, Any]"}, {"lineNumber": 567, "col_offset": 50, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 567, "col_offset": 61, "nodeName": "query_dict", "type": "Dict[str, Union[Dict[str, Union[List[Dict[str, Union[Any, str]]], Dict[str, Any]]], Any]]"}, {"lineNumber": 576, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 577, "col_offset": 15, "nodeName": "decoder", "type": "module"}, {"lineNumber": 100, "col_offset": 56, "nodeName": "operator", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "query", "type": "Any"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "_operator", "type": "str"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "val", "type": "Any"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "scope", "type": "Any"}, {"lineNumber": 294, "col_offset": 56, "nodeName": "scope", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 295, "col_offset": 33, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 466, "col_offset": 50, "nodeName": "json", "type": "module"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 567, "col_offset": 50, "nodeName": "json", "type": "module"}, {"lineNumber": 570, "col_offset": 51, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 577, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 579, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "values", "type": "Callable"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 475, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 570, "col_offset": 51, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 576, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 475, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 478, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 576, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 579, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 475, "col_offset": 57, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 478, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 576, "col_offset": 57, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 579, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 475, "col_offset": 57, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 576, "col_offset": 57, "nodeName": "r", "type": "requests.models.Response"}]