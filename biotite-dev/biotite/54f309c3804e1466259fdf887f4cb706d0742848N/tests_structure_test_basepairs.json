[{"lineNumber": 16, "col_offset": 0, "nodeName": "reversed_iterator", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "nuc_sample_array", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "basepairs", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "check_output", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "test_base_pairs_forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "test_base_pairs_forward_no_hydrogen", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "test_base_pairs_reverse", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "test_base_pairs_reverse_no_hydrogen", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "test_base_pairs_reordered", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "test_map_nucleotide", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "get_reference_orientation", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "test_base_pairs_edge", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "T", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "seen", "type": "Set[nothing]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "comp_basepair", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "residue", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "residue", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "nuc_sample_array_reordered", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "residue", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "pyrimidines", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "purines", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "psu_tuple", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "psu_tuple", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "i_tuple", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "m7g_tuple", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "reference", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "glycosidic_bond_orientations", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "load_structure", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "residue_indices", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "residue_names", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "base_pairs", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "check_output", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "res_id", "type": "Any"}, {"lineNumber": 62, "col_offset": 62, "nodeName": "basepairs", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "base_pairs", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "check_output", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "res_id", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "basepairs", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "AtomArray", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "reversed_iterator", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "base_pairs", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "check_output", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "res_id", "type": "Any"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "basepairs", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "AtomArray", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "reversed_iterator", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "base_pairs", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "check_output", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "res_id", "type": "Any"}, {"lineNumber": 107, "col_offset": 62, "nodeName": "basepairs", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "AtomArray", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "seed", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "residue_iter", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "bound", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "indices", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "nuc_sample_array_reordered", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "pyrimidines", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "pyrimidines", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "purines", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "purines", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "load_structure", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "sugar_orientations", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "reference", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "sugar_orientations", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "reference_structure", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 47, "nodeName": "get_reference_orientation", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "pdb_id", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "base_pairs", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "reference_structure", "type": "Any"}, {"lineNumber": 186, "col_offset": 35, "nodeName": "base_pairs_glycosidic_bonds", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "reference_structure", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "pair", "type": "Any"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "pair_orientation", "type": "Any"}, {"lineNumber": 191, "col_offset": 34, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "glycosidic_bond_orientations", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "pair_res_ids", "type": "Any"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "res_id", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "iter", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "strucio", "type": "Any"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "get_residues", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 47, "col_offset": 56, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "basepairs", "type": "Any"}, {"lineNumber": 61, "col_offset": 61, "nodeName": "unique_bool", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "struc", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "residue_iter", "type": "Any"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 84, "col_offset": 64, "nodeName": "residue", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "unique_bool", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "struc", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "residue_iter", "type": "Any"}, {"lineNumber": 102, "col_offset": 56, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "residue", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "struc", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "struc", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "array_length", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "choice", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "bound", "type": "Any"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "residue", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "residue", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "psu_tuple", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "psu_tuple", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "residue", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "psu_tuple", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "psu_tuple", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "residue", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "i_tuple", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "i_tuple", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "residue", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "m7g_tuple", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "m7g_tuple", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "map_nucleotide", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "strucio", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "any", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "reference_orientation", "type": "Any"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "residues", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "base1", "type": "Any"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "base2", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "comp_basepair", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "basepairs", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "comp_basepair", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "element", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "struc", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "element", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "struc", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "reversed_nuc_sample_array", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "residue", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "bound", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "base_pairs", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "base_pairs", "type": "Any"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "nuc_sample_array_reordered", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "residue", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "residue", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "residue", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "residue", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "residue", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "residue", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "load", "type": "Any"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "file", "type": "TextIO"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "reference_structure", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "where", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "glycosidic_bond", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "reference_orientation", "type": "Any"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "pair_orientation", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "any", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "reference_orientation", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "struc", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "residue_indices", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "seen", "type": "Set[nothing]"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "base1", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "base2", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "flip", "type": "Any"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "basepairs", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "nuc_sample_array", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "computed_basepairs", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "indices", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "struc", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "struc", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "json", "type": "Any"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "pair", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "where", "type": "Any"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "glycosidic_bond", "type": "Any"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "reference_orientation", "type": "Any"}, {"lineNumber": 224, "col_offset": 44, "nodeName": "pair_orientation", "type": "Any"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "flip", "type": "Any"}, {"lineNumber": 35, "col_offset": 52, "nodeName": "residue_indices", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "pair_res_ids", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "pair_res_ids", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 49, "nodeName": "pair_res_ids", "type": "Any"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "pair_res_ids", "type": "Any"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "index", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 49, "nodeName": "pair_res_ids", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "pair_res_ids", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 218, "col_offset": 49, "nodeName": "pair_res_ids", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "reference_gly_bonds", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 49, "nodeName": "pair_res_ids", "type": "Any"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "index", "type": "Any"}]