[{"lineNumber": 18, "col_offset": 0, "nodeName": "get_sequence", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "get_sequences", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "set_sequence", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "set_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "get_alignment", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "set_alignment", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "_convert_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 0, "nodeName": "_convert_to_string", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "__name__", "type": "str"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "seq_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "seq_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "seq_strings", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "char", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "additional_gap_chars", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "sequences", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "trace", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "gapped_seq_strings", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "nuc_seq_str", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "header", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "seq_str", "type": "None"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "_convert_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "seq_str", "type": "Optional[Any]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 110, "col_offset": 7, "nodeName": "header", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "header", "type": "str"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "_convert_to_string", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "as_rna", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "trace_from_strings", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "seq_strings", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "sequences", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "trace", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "get_gapped_sequences", "type": "Any"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "upper", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "replace", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "code", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "code", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "code", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "seq", "type": "Any"}, {"lineNumber": 228, "col_offset": 52, "nodeName": "as_rna", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "seq_str", "type": "Optional[Any]"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "seq_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "_convert_to_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "header", "type": "Union[str, Any]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "sequence_dict", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "_convert_to_string", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 137, "col_offset": 58, "nodeName": "as_rna", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "seq_strings", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "seq_strings", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "Alignment", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "alignment", "type": "Any"}, {"lineNumber": 184, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "gapped_seq_strings", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "seq_names", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "gapped_seq_strings", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "gapped_seq_strings", "type": "Any"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "encode_multiple", "type": "Any"}, {"lineNumber": 201, "col_offset": 65, "nodeName": "nuc_seq_str", "type": "Any"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "NucleotideSequence", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 225, "col_offset": 47, "nodeName": "LetterAlphabet", "type": "Any"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "NucleotideSequence", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "header", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "header", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "header", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "fasta_file", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "seq_strings", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "char", "type": "Any"}, {"lineNumber": 190, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "replace", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "alphabet_unamb", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "get_alphabet", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "seq_names", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "seq_str", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "NucleotideSequence", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "i", "type": "int"}]