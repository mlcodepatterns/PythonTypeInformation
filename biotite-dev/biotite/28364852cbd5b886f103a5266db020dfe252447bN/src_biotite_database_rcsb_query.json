[{"lineNumber": 359, "col_offset": 0, "nodeName": "count", "type": "Callable[..., Any]"}, {"lineNumber": 430, "col_offset": 0, "nodeName": "search", "type": "Callable[..., Any]"}, {"lineNumber": 528, "col_offset": 0, "nodeName": "_to_isoformat", "type": "Callable[[Any], Any]"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "__name__", "type": "str"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "_search_url", "type": "str"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "Query", "type": "Type[Query]"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "Query", "type": "Type[Query]"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_queries", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "queries", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_operator", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "operator", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[List[Any], Any, str]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_term", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "term", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "_field", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "field", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 216, "col_offset": 45, "nodeName": "_field", "type": "Any"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "_operator", "type": "str"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "clone", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "_negation", "type": "bool"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "clone", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "_min_identity", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "min_identity", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "_max_expect_value", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "max_expect_value", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "_sequence", "type": "str"}, {"lineNumber": 275, "col_offset": 42, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 276, "col_offset": 51, "nodeName": "_min_identity", "type": "Any"}, {"lineNumber": 277, "col_offset": 49, "nodeName": "_max_expect_value", "type": "Any"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "_pattern", "type": "Any"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "_pattern_type", "type": "Any"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "pattern_type", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 305, "col_offset": 41, "nodeName": "_pattern", "type": "Any"}, {"lineNumber": 306, "col_offset": 48, "nodeName": "_pattern_type", "type": "Any"}, {"lineNumber": 307, "col_offset": 42, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 354, "col_offset": 41, "nodeName": "_value", "type": "Dict[str, Any]"}, {"lineNumber": 355, "col_offset": 44, "nodeName": "_operator", "type": "str"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 397, "col_offset": 7, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "_search_url", "type": "str"}, {"lineNumber": 417, "col_offset": 7, "nodeName": "status_code", "type": "int"}, {"lineNumber": 480, "col_offset": 7, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 486, "col_offset": 7, "nodeName": "sort_by", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "sort_by", "type": "str"}, {"lineNumber": 489, "col_offset": 7, "nodeName": "range", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "start", "type": "int"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 500, "col_offset": 23, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 513, "col_offset": 21, "nodeName": "_search_url", "type": "str"}, {"lineNumber": 515, "col_offset": 7, "nodeName": "status_code", "type": "int"}, {"lineNumber": 532, "col_offset": 11, "nodeName": "strftime", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "SingleQuery", "type": "Type[SingleQuery]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "_node_id", "type": "int"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "CompositeQuery", "type": "Type[CompositeQuery]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "CompositeQuery", "type": "Type[CompositeQuery]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "operator", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "_operator", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "_operator", "type": "str"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 216, "col_offset": 45, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "_value", "type": "Any"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "_value", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "clone", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "_target", "type": "Optional[str]"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "_sequence", "type": "str"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "_sequence", "type": "str"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 275, "col_offset": 42, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 276, "col_offset": 51, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 277, "col_offset": 49, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 305, "col_offset": 41, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 306, "col_offset": 48, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 307, "col_offset": 42, "nodeName": "self", "type": "MotifQuery"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 347, "col_offset": 49, "nodeName": "strict", "type": "Any"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "get_content", "type": "Callable[[], Any]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 354, "col_offset": 41, "nodeName": "self", "type": "StructureQuery"}, {"lineNumber": 355, "col_offset": 44, "nodeName": "self", "type": "StructureQuery"}, {"lineNumber": 401, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "get_content", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "requests", "type": "module"}, {"lineNumber": 417, "col_offset": 7, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "status_code", "type": "int"}, {"lineNumber": 484, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "count", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 21, "nodeName": "query", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 499, "col_offset": 17, "nodeName": "get_content", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "requests", "type": "module"}, {"lineNumber": 515, "col_offset": 7, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 517, "col_offset": 9, "nodeName": "status_code", "type": "int"}, {"lineNumber": 532, "col_offset": 11, "nodeName": "object", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "self", "type": "SingleQuery"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "query", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "self", "type": "SingleQuery"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "query", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, str], int, str]]"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "_term", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "_operator", "type": "str"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "_value", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "_operator", "type": "str"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "_value", "type": "None"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "_to_isoformat", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "_value", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "_scope_to_target", "type": "Dict[str, str]"}, {"lineNumber": 258, "col_offset": 44, "nodeName": "lower", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "NucleotideSequence", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "self", "type": "SequenceQuery"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[str, Any]]], int, str]]"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "_scope_to_target", "type": "Dict[str, str]"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "lower", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Optional[Union[Any, str]]], int, str]]"}, {"lineNumber": 333, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "chain", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Union[Dict[str, Any], str]], int, str]]"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "JSONDecodeError", "type": "Type[json.decoder.JSONDecodeError]"}, {"lineNumber": 492, "col_offset": 9, "nodeName": "range", "type": "Any"}, {"lineNumber": 492, "col_offset": 21, "nodeName": "range", "type": "Any"}, {"lineNumber": 493, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "range", "type": "Any"}, {"lineNumber": 496, "col_offset": 26, "nodeName": "start", "type": "Any"}, {"lineNumber": 499, "col_offset": 17, "nodeName": "query", "type": "Any"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "start", "type": "Union[int, Any]"}, {"lineNumber": 504, "col_offset": 24, "nodeName": "rows", "type": "Any"}, {"lineNumber": 516, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 516, "col_offset": 41, "nodeName": "result", "type": "Any"}, {"lineNumber": 517, "col_offset": 9, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "JSONDecodeError", "type": "Type[json.decoder.JSONDecodeError]"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "get_content", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "query", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "_queries", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "self", "type": "BasicQuery"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "_operator", "type": "str"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "_operator", "type": "str"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "content", "type": "Dict[str, Union[Dict[str, Any], int, str]]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 258, "col_offset": 44, "nodeName": "scope", "type": "Any"}, {"lineNumber": 262, "col_offset": 56, "nodeName": "lower", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "scope", "type": "Any"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "chain", "type": "Any"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "assembly", "type": "Any"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 332, "col_offset": 37, "nodeName": "assembly", "type": "Any"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "pdb_id", "type": "Any"}, {"lineNumber": 339, "col_offset": 32, "nodeName": "assembly", "type": "Any"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "pdb_id", "type": "Any"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "chain", "type": "Any"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 415, "col_offset": 50, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 415, "col_offset": 61, "nodeName": "query_dict", "type": "Dict[str, Union[Dict[str, Dict[str, int]], Any]]"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "decoder", "type": "module"}, {"lineNumber": 484, "col_offset": 29, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "range", "type": "Any"}, {"lineNumber": 508, "col_offset": 31, "nodeName": "sort_by", "type": "Union[str, Any]"}, {"lineNumber": 513, "col_offset": 50, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 513, "col_offset": 61, "nodeName": "query_dict", "type": "Dict[str, Union[Dict[str, Union[List[Dict[str, Union[str, Any]]], Dict[str, Any]]], Any]]"}, {"lineNumber": 522, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "decoder", "type": "module"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "operator", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "query", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "self", "type": "CompositeQuery"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "_operator", "type": "str"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "val", "type": "Any"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "_value", "type": "Optional[Any]"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "scope", "type": "Any"}, {"lineNumber": 262, "col_offset": 56, "nodeName": "scope", "type": "Any"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 415, "col_offset": 50, "nodeName": "json", "type": "module"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 513, "col_offset": 50, "nodeName": "json", "type": "module"}, {"lineNumber": 516, "col_offset": 51, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 525, "col_offset": 18, "nodeName": "RequestError", "type": "Any"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "values", "type": "Callable"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "self", "type": "FieldQuery"}, {"lineNumber": 424, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 516, "col_offset": 51, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 522, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 424, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 427, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 522, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 525, "col_offset": 40, "nodeName": "status_code", "type": "int"}, {"lineNumber": 424, "col_offset": 57, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 522, "col_offset": 57, "nodeName": "json", "type": "Callable[..., Any]"}, {"lineNumber": 525, "col_offset": 40, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 424, "col_offset": 57, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 522, "col_offset": 57, "nodeName": "r", "type": "requests.models.Response"}]