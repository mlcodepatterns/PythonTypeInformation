[{"lineNumber": 15, "col_offset": 0, "nodeName": "legalize_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "tf_log", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "training_process_variables", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "variables_to_save", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "variables_to_restore", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "variables_to_train", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "num_neurons_and_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "active_neurons", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "MODEL_SUMMARIES", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "variables_to_train", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "scope", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "scope_list", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "variables_to_train", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "binary_tensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "collection", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "summary", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "variables_to_save", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "variables", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "add_list", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "num_neurons", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "shape", "type": "List[Union[int, Any]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "num_neurons", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "shape", "type": "List[Union[int, Any]]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "num_neurons", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "shape", "type": "List[Union[int, Any]]"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "cast", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "binary_tensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "variable", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "add_list", "type": "List[nothing]"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "training_process_variables", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "exclude_scope_list", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "variable", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "scope_list", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 80, "col_offset": 72, "nodeName": "scope", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "variables", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "layer", "type": "Any"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "value", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "greater", "type": "Any"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "off_value", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "global_variables", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "variables_to_train", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "value", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "variable", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "REQUIRED_NON_TRAINABLES", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 68, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "var", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "layer", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "scope", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "scope", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "exclude_scope_list", "type": "Any"}]