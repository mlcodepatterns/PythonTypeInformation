[{"lineNumber": 24, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "word_embeddings", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "decoder_start_lookup", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "softmax_comp_w", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "softmax_comp_b", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "ofs", "type": "int"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "ofs", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "losses", "type": "List[nothing]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "total_loss", "type": "int"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "total_loss", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "examples", "type": "List[ExpandedToken]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "example", "type": "ExpandedToken"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "examples", "type": "List[ExpandedToken]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "alignments", "type": "List[int]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "y_pred", "type": "List[str]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "index_src", "type": "int"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "index_dst", "type": "int"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "y_pred", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "w1", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "w2", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "attention_weights", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "w2dt", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "input_vector", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "input_vectors", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "attention_weights", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "output_vectors", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "output_vectors", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "y_pred", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "num_preds", "type": "int"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "i_src", "type": "int"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "y_pred", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "y_target", "type": "List[str]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "y_predicted", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "y_pred", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "i_src", "type": "int"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "token", "type": "str"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "y_pred", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "compound", "type": "bool"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "word", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "new_seq", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "entry", "type": "Any"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "seq", "type": "Any"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "new_seq", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "examples", "type": "List[ExpandedToken]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "cww", "type": "int"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "entry", "type": "Any"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "seq", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "examples", "type": "List[ExpandedToken]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "new_sequences", "type": "List[List[Any]]"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "new_sequences", "type": "List[List[Any]]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "source", "type": "Any"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "source", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "destination", "type": "None"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "destination", "type": "None"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "should_expand", "type": "bool"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "should_expand", "type": "bool"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "Model", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "AdamTrainer", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "model", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "CharacterNetwork", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "character_embeddings_size", "type": "Any"}, {"lineNumber": 31, "col_offset": 79, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 31, "col_offset": 90, "nodeName": "encoder_size", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "encoder_layers", "type": "Any"}, {"lineNumber": 32, "col_offset": 68, "nodeName": "character_embeddings_size", "type": "Any"}, {"lineNumber": 32, "col_offset": 107, "nodeName": "model", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "VanillaLSTMBuilder", "type": "Any"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "decoder_layers", "type": "Any"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "decoder_size", "type": "Any"}, {"lineNumber": 36, "col_offset": 71, "nodeName": "model", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "add_lookup_parameters", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "add_parameters", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "add_parameters", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "add_parameters", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "add_parameters", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "char2int", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "ofs", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "ofs", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "ofs", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "renew_cg", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "total_loss", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "renew_cg", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "_get_examples", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "seq", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "esum", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "loss", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "i", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "i", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "j", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "source", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "destination", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "index_dst", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "expr", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "expr", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "expr", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "w2", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "attention_weight", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "esum", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "add_input", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "num_preds", "type": "int"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "max_preds", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "softmax_out", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "num_preds", "type": "int"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "_compute_transduction_states", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 53, "nodeName": "source", "type": "Any"}, {"lineNumber": 193, "col_offset": 61, "nodeName": "destination", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "_decode", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "y_real", "type": "nothing"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "y_pred", "type": "nothing"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "y_target", "type": "List[str]"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "y_predicted", "type": "List[Any]"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "esum", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "states", "type": "Any"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "compute_embeddings", "type": "Any"}, {"lineNumber": 207, "col_offset": 54, "nodeName": "word", "type": "Any"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "states", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "_decode", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "renew_cg", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "unicode", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "word", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "ce_out", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "_predict_is_compound_entry", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 65, "nodeName": "word", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "compound", "type": "bool"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "compound", "type": "bool"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "tokens", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "renew_cg", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "filename", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "populate", "type": "Any"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "path", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "new_sequence", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "ExpandedToken"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "ExpandedToken"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "ExpandedToken"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "dy", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "dy", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 31, "col_offset": 90, "nodeName": "config", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 32, "col_offset": 68, "nodeName": "config", "type": "Any"}, {"lineNumber": 32, "col_offset": 107, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "dy", "type": "Any"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 35, "col_offset": 73, "nodeName": "encoder_size", "type": "Any"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 36, "col_offset": 71, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "decoder_size", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "character_embeddings_size", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "dy", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "esum", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "dy", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "_predict_is_compound_entry", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 69, "nodeName": "source", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "should_expand", "type": "Union[bool, Any]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "dy", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "cost", "type": "int"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "destination", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "j", "type": "int"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "source", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "destination", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "alignments", "type": "List[int]"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "destination", "type": "Any"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "index_src", "type": "int"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "index_dst", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "y_pred", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "att_w1", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "att_w2", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "att_v", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "attention_weight", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "dy", "type": "Any"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 161, "col_offset": 54, "nodeName": "attention_weights", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "dy", "type": "Any"}, {"lineNumber": 171, "col_offset": 54, "nodeName": "decoder_start_lookup", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "add_input", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "softmax_out", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 194, "col_offset": 101, "nodeName": "y_target", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "y_real", "type": "nothing"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "dy", "type": "Any"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 207, "col_offset": 68, "nodeName": "runtime", "type": "Any"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "dy", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "i_src", "type": "int"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "dy", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "_transduce", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "word", "type": "Any"}, {"lineNumber": 240, "col_offset": 43, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "dy", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "is_compound_entry", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "cww", "type": "int"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "et", "type": "ExpandedToken"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "is_compound_entry", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 317, "col_offset": 27, "nodeName": "tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 36, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "new_sequence", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 32, "col_offset": 68, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 35, "col_offset": 73, "nodeName": "config", "type": "Any"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 37, "col_offset": 73, "nodeName": "encoder_size", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "config", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "char2int", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "config", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "dy", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "loss", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 82, "col_offset": 69, "nodeName": "example", "type": "ExpandedToken"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "example", "type": "ExpandedToken"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "source", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "destination", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "source", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "cost", "type": "int"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "min", "type": "Callable"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "a", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "m", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "cost", "type": "int"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "source", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "destination", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "alignments", "type": "List[int]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "j", "type": "int"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "alignments", "type": "List[int]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "index_src", "type": "int"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "h", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "attention_weights", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "dy", "type": "Any"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "vector", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "attention_weight", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 171, "col_offset": 54, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "i_src", "type": "int"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "dy", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "y_pred", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "y_pred", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "i_src", "type": "int"}, {"lineNumber": 194, "col_offset": 76, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 80, "nodeName": "y_target", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "y_real", "type": "nothing"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "char2int", "type": "Any"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 208, "col_offset": 57, "nodeName": "emb", "type": "Any"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "expr", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "npvalue", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "i_src", "type": "int"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "npvalue", "type": "Any"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "entry", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "ce_out", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "_predict_is_compound_entry", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 252, "col_offset": 34, "nodeName": "index", "type": "int"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "compounds", "type": "List[str]"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "ExpandedToken", "type": "Type[ExpandedToken]"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "entry", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "should_expand", "type": "bool"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "destination", "type": "str"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "interval", "type": "Any"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "index", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "interval", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "stop", "type": "int"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "start", "type": "int"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "cww", "type": "int"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "destination", "type": "Any"}, {"lineNumber": 297, "col_offset": 37, "nodeName": "source", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 317, "col_offset": 27, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "new_sequences", "type": "List[List[Any]]"}, {"lineNumber": 37, "col_offset": 73, "nodeName": "config", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "char2int", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "_learn_transduction", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "source", "type": "Any"}, {"lineNumber": 87, "col_offset": 71, "nodeName": "destination", "type": "Any"}, {"lineNumber": 87, "col_offset": 92, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "source", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "destination", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "i", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "i", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "destination", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "source", "type": "Any"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "destination", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "j", "type": "int"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "j", "type": "int"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "index_dst", "type": "int"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "y_pred", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "alignments", "type": "List[int]"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "index_dst", "type": "int"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "index_dst", "type": "int"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "dy", "type": "Any"}, {"lineNumber": 158, "col_offset": 63, "nodeName": "w2dt", "type": "Any"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "vector", "type": "Any"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "attention_weight", "type": "Any"}, {"lineNumber": 164, "col_offset": 71, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 164, "col_offset": 75, "nodeName": "input_vectors", "type": "Any"}, {"lineNumber": 164, "col_offset": 90, "nodeName": "attention_weights", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 177, "col_offset": 77, "nodeName": "expr", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 181, "col_offset": 55, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "i_src", "type": "int"}, {"lineNumber": 186, "col_offset": 55, "nodeName": "i_src", "type": "int"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "softmax_comp_b", "type": "Any"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "i_src", "type": "int"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "token", "type": "str"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "token", "type": "str"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "ce_out", "type": "Any"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 250, "col_offset": 73, "nodeName": "unicode", "type": "Any"}, {"lineNumber": 250, "col_offset": 81, "nodeName": "word", "type": "Any"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "entry", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "entry", "type": "Any"}, {"lineNumber": 256, "col_offset": 32, "nodeName": "_transduce", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 256, "col_offset": 78, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "index", "type": "int"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "index", "type": "int"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "index", "type": "int"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "index", "type": "str"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "is_compound_entry", "type": "bool"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "upos", "type": "str"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "xpos", "type": "str"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "attrs", "type": "str"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "label", "type": "str"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "head", "type": "str"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "deps", "type": "str"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "word", "type": "str"}, {"lineNumber": 271, "col_offset": 36, "nodeName": "compounds", "type": "List[str]"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "et", "type": "ExpandedToken"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "et", "type": "ExpandedToken"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "entry", "type": "Any"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "split", "type": "Any"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "et", "type": "ExpandedToken"}, {"lineNumber": 297, "col_offset": 37, "nodeName": "et", "type": "ExpandedToken"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 298, "col_offset": 36, "nodeName": "et", "type": "ExpandedToken"}, {"lineNumber": 37, "col_offset": 73, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "log", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "log", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "example", "type": "ExpandedToken"}, {"lineNumber": 87, "col_offset": 71, "nodeName": "example", "type": "ExpandedToken"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "a", "type": "Any"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "a", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "i", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "j", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "j", "type": "int"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "j", "type": "int"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "j", "type": "int"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "index_dst", "type": "int"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "destination", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "y_pred", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "w1", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "input_vector", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "expr", "type": "Any"}, {"lineNumber": 177, "col_offset": 61, "nodeName": "output", "type": "Any"}, {"lineNumber": 177, "col_offset": 77, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "npvalue", "type": "Any"}, {"lineNumber": 181, "col_offset": 55, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 183, "col_offset": 85, "nodeName": "i_src", "type": "int"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "gs_labels", "type": "Any"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "log", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "losses", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "softmax_comp_w", "type": "Any"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 219, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 219, "col_offset": 60, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "source", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "source", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 224, "col_offset": 49, "nodeName": "y", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "token", "type": "str"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "token", "type": "str"}, {"lineNumber": 250, "col_offset": 81, "nodeName": "entry", "type": "Any"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "npvalue", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "new_seq", "type": "List[Any]"}, {"lineNumber": 256, "col_offset": 32, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "unicode", "type": "Any"}, {"lineNumber": 256, "col_offset": 56, "nodeName": "word", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "compounds", "type": "List[str]"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "entry", "type": "Any"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 259, "col_offset": 39, "nodeName": "entry", "type": "Any"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "entry", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "entry", "type": "Any"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "entry", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "entry", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "entry", "type": "Any"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "entry", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "entry", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "entry", "type": "Any"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "entry", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "entry", "type": "Any"}, {"lineNumber": 278, "col_offset": 28, "nodeName": "index", "type": "int"}, {"lineNumber": 287, "col_offset": 42, "nodeName": "unicode", "type": "Any"}, {"lineNumber": 287, "col_offset": 50, "nodeName": "word", "type": "Any"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "interval", "type": "Any"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "interval", "type": "Any"}, {"lineNumber": 294, "col_offset": 32, "nodeName": "interval", "type": "Any"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "stop", "type": "int"}, {"lineNumber": 295, "col_offset": 33, "nodeName": "start", "type": "int"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "examples", "type": "List[ExpandedToken]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "dy", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "pick", "type": "Any"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "dy", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "pick", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "i", "type": "Any"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "j", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "a", "type": "Any"}, {"lineNumber": 119, "col_offset": 73, "nodeName": "a", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "index_dst", "type": "int"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "y_pred", "type": "List[str]"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "y_pred", "type": "List[str]"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "destination", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 177, "col_offset": 61, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 177, "col_offset": 77, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "softmax_out", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 183, "col_offset": 57, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "num_preds", "type": "int"}, {"lineNumber": 186, "col_offset": 63, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 67, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "dy", "type": "Any"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "pick", "type": "Any"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "y_pred", "type": "nothing"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "log", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "i_src", "type": "int"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 224, "col_offset": 54, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "characters", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "characters", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "ce_out", "type": "Any"}, {"lineNumber": 256, "col_offset": 56, "nodeName": "entry", "type": "Any"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "new_seq", "type": "List[Any]"}, {"lineNumber": 262, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "new_seq", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 36, "nodeName": "ConllEntry", "type": "Any"}, {"lineNumber": 273, "col_offset": 47, "nodeName": "index", "type": "int"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "entry", "type": "Any"}, {"lineNumber": 287, "col_offset": 50, "nodeName": "entry", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "dy", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "dy", "type": "Any"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "j", "type": "Any"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 122, "col_offset": 56, "nodeName": "a", "type": "Any"}, {"lineNumber": 122, "col_offset": 71, "nodeName": "a", "type": "Any"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "index_dst", "type": "int"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "npvalue", "type": "Any"}, {"lineNumber": 183, "col_offset": 57, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 183, "col_offset": 93, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 183, "col_offset": 97, "nodeName": "encoder_states", "type": "Any"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "dy", "type": "Any"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "label2int", "type": "Dict[str, int]"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "dy", "type": "Any"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "pick", "type": "Any"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "y_pred", "type": "nothing"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 224, "col_offset": 54, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 229, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 262, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "index", "type": "int"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 273, "col_offset": 76, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "new_seq", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "i", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "j", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "i", "type": "Any"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "j", "type": "Any"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "j", "type": "int"}, {"lineNumber": 119, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "j", "type": "int"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "softmax_out", "type": "Any"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 197, "col_offset": 69, "nodeName": "y_real", "type": "nothing"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "dy", "type": "Any"}, {"lineNumber": 200, "col_offset": 58, "nodeName": "char2int", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "self", "type": "CompoundWordExpander"}, {"lineNumber": 262, "col_offset": 61, "nodeName": "index", "type": "int"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "word", "type": "str"}, {"lineNumber": 273, "col_offset": 76, "nodeName": "word", "type": "str"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "j", "type": "int"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 63, "nodeName": "j", "type": "int"}, {"lineNumber": 119, "col_offset": 78, "nodeName": "j", "type": "int"}, {"lineNumber": 122, "col_offset": 65, "nodeName": "j", "type": "int"}, {"lineNumber": 122, "col_offset": 73, "nodeName": "i", "type": "int"}, {"lineNumber": 200, "col_offset": 58, "nodeName": "encodings", "type": "Any"}, {"lineNumber": 200, "col_offset": 82, "nodeName": "y_real", "type": "nothing"}, {"lineNumber": 262, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 262, "col_offset": 73, "nodeName": "compounds", "type": "List[str]"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "j", "type": "int"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 76, "nodeName": "j", "type": "int"}, {"lineNumber": 200, "col_offset": 58, "nodeName": "self", "type": "CompoundWordExpander"}]