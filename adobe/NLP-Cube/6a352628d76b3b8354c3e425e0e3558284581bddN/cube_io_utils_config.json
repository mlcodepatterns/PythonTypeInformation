[{"lineNumber": 30, "col_offset": 13, "nodeName": "object", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "_auto_cast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "Config", "type": "Type[Config]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "Config", "type": "Type[Config]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "Config", "type": "Type[Config]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "Config", "type": "Type[Config]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "Config", "type": "Type[Config]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "Config", "type": "Type[Config]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "Config", "type": "Type[Config]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "__config__", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "sorted_dict", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "items", "type": "Iterator[Tuple[nothing, nothing]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "base", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "char_vocabulary_size", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "char_embedding_size", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "char_generic_feature_vocabulary_size", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "char_generic_feature_embedding_size", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "encoder_char_input_attribute_dropout", "type": "float"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "encoder_char_lstm_size", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "next_chars_embedding_size", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "next_chars_window_size", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "encoder_word_input_w2i_array", "type": "Dict[nothing, nothing]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "encoder_word_vocab_size", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "encoder_word_embedding_size", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "encoder_word_lstm_size", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "decoder_attribute_dropout", "type": "float"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "decoder_hidden_size", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "dropout_rate", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "patience", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "tokenize_maximum_sequence_length", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_valid", "type": "bool"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "layers", "type": "List[int]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "layer_dropouts", "type": "List[float]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "aux_softmax_layer", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "_valid", "type": "bool"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "input_dropout_prob", "type": "float"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "presoftmax_mlp_layers", "type": "List[int]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "presoftmax_mlp_dropouts", "type": "List[float]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "input_size", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "layers", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "layer_dropouts", "type": "List[float]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "aux_softmax_layer", "type": "int"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "_valid", "type": "bool"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "input_dropout_prob", "type": "float"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "arc_proj_size", "type": "int"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "label_proj_size", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "presoftmax_mlp_dropout", "type": "float"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "predict_morphology", "type": "bool"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "use_morphology", "type": "bool"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "use_lexical", "type": "bool"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "input_embeddings_size", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "rnn_size", "type": "int"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "rnn_layers", "type": "int"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "char_embeddings", "type": "int"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "char_rnn_size", "type": "int"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "char_rnn_layers", "type": "int"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "tag_embeddings_size", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "encoder_layers", "type": "List[int]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "encoder_layer_dropouts", "type": "List[float]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "decoder_layers", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "decoder_size", "type": "int"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "decoder_dropout", "type": "float"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "input_size", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "aux_we_layer_size", "type": "int"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "input_dropout_prob", "type": "float"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "ss_char_embeddings_size", "type": "int"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "ss_char_peek_count", "type": "int"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "ss_mlp_layers", "type": "List[int]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "ss_mlp_dropouts", "type": "List[float]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "ss_lstm_size", "type": "int"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "ss_lstm_layers", "type": "int"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "ss_lstm_dropout", "type": "float"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "ss_peek_lstm_size", "type": "int"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "ss_peek_lstm_layers", "type": "int"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "ss_peek_lstm_dropout", "type": "float"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "tok_char_embeddings_size", "type": "int"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "tok_word_embeddings_size", "type": "int"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "tok_mlp_layers", "type": "List[int]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "tok_mlp_dropouts", "type": "List[float]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "tok_char_lstm_layers", "type": "int"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "tok_char_lstm_size", "type": "int"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "tok_char_lstm_dropout", "type": "float"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "tok_word_lstm_layers", "type": "int"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "tok_word_lstm_size", "type": "int"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "tok_word_lstm_dropout", "type": "float"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "tok_char_peek_lstm_layers", "type": "int"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "tok_char_peek_lstm_size", "type": "int"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "tok_char_peek_lstm_dropout", "type": "float"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "_valid", "type": "bool"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "character_embeddings_size", "type": "int"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "encoder_size", "type": "int"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "encoder_layers", "type": "int"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "decoder_size", "type": "int"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "decoder_layers", "type": "int"}, {"lineNumber": 24, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Config"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "config", "type": "ConfigParser.ConfigParser"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "add_section", "type": "Callable[[str], None]"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "__config__", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "items", "type": "Iterator[Tuple[nothing, nothing]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "k", "type": "nothing"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "v", "type": "nothing"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "cfgfile", "type": "file"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "config", "type": "ConfigParser.ConfigParser"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "read", "type": "Callable[[Union[str, Sequence[str]]], List[str]]"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "filename", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "items", "type": "Callable[..., List[Tuple[str, Any]]]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "__config__", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "filename", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "filename", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "input_size", "type": "int"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "layers", "type": "List[int]"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "layer_dropouts", "type": "List[float]"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "aux_softmax_layer", "type": "int"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "input_dropout_prob", "type": "float"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "presoftmax_mlp_layers", "type": "List[int]"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "presoftmax_mlp_dropouts", "type": "List[float]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "_valid", "type": "bool"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "filename", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "layers", "type": "List[int]"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "layer_dropouts", "type": "List[float]"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "aux_softmax_layer", "type": "int"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "input_dropout_prob", "type": "float"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "arc_proj_size", "type": "int"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "label_proj_size", "type": "int"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "presoftmax_mlp_dropout", "type": "float"}, {"lineNumber": 185, "col_offset": 56, "nodeName": "predict_morphology", "type": "bool"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "use_morphology", "type": "bool"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "input_embeddings_size", "type": "int"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "_valid", "type": "bool"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "use_morphology", "type": "bool"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "LemmatizerConfig"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "LemmatizerConfig"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "LemmatizerConfig"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "LemmatizerConfig"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "LemmatizerConfig"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "LemmatizerConfig"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "filename", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "NMTConfig"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "NMTConfig"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "NMTConfig"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "NMTConfig"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "NMTConfig"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "NMTConfig"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "NMTConfig"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "NMTConfig"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "filename", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "filename", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "filename", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "self", "type": "Config"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "literal_eval", "type": "Callable[[Union[str, unicode, _ast.AST]], Any]"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "s", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "collections", "type": "module"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "ConfigParser", "type": "Type[ConfigParser.ConfigParser]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "config", "type": "ConfigParser.ConfigParser"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "self", "type": "Config"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "v", "type": "str"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "filename", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "write", "type": "Callable[[IO[str]], None]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "cfgfile", "type": "file"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "ConfigParser", "type": "Type[ConfigParser.ConfigParser]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "config", "type": "ConfigParser.ConfigParser"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "has_section", "type": "Callable[[str], bool]"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "__config__", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "config", "type": "ConfigParser.ConfigParser"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "_auto_cast", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "v", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "filename", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "filename", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "aux_softmax_layer", "type": "int"}, {"lineNumber": 150, "col_offset": 60, "nodeName": "aux_softmax_layer", "type": "int"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "filename", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 185, "col_offset": 56, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "aux_softmax_layer", "type": "int"}, {"lineNumber": 189, "col_offset": 60, "nodeName": "aux_softmax_layer", "type": "int"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "filename", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "filename", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 22, "nodeName": "filename", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "filename", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "ast", "type": "module"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "items", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "ConfigParser", "type": "module"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "sorted_dict", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "startswith", "type": "nothing"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "v", "type": "nothing"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "str_v", "type": "str"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "v", "type": "str"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "set", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "__config__", "type": "Any"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "k", "type": "nothing"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "v", "type": "str"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "config", "type": "ConfigParser.ConfigParser"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "ConfigParser", "type": "module"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "config", "type": "ConfigParser.ConfigParser"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "k", "type": "str"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "super", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "TokenizerConfig"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "super", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 150, "col_offset": 60, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "super", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 189, "col_offset": 60, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "super", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "self", "type": "LemmatizerConfig"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "super", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "NMTConfig"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "super", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "self", "type": "TieredTokenizerConfig"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "super", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "k", "type": "nothing"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "v", "type": "nothing"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "v", "type": "str"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "config", "type": "ConfigParser.ConfigParser"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "self", "type": "Config"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 77, "col_offset": 128, "nodeName": "__config__", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 118, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 139, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "layers", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 175, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "layers", "type": "List[int]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 212, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 231, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 267, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 285, "col_offset": 61, "nodeName": "filename", "type": "Any"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "self", "type": "Config"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "str_v", "type": "str"}, {"lineNumber": 60, "col_offset": 55, "nodeName": "str_v", "type": "str"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "str_v", "type": "str"}, {"lineNumber": 77, "col_offset": 128, "nodeName": "self", "type": "CompoundWordConfig"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "self", "type": "TaggerConfig"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "self", "type": "ParserConfig"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "filename", "type": "Any"}]