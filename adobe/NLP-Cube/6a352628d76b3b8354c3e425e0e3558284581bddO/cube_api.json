[{"lineNumber": 8, "col_offset": 0, "nodeName": "BASE_PATH", "type": "str"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "TOKENIZER", "type": "str"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "COMPOUND", "type": "str"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "TAGGER", "type": "str"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "PARSER", "type": "str"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "LEMMATIZER", "type": "str"}, {"lineNumber": 206, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "cube", "type": "Cube"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "ds", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "loaded", "type": "bool"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "tokenizer_enabled", "type": "bool"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "compound_enabled", "type": "bool"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "lemmatizer_enabled", "type": "bool"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "parser_enabled", "type": "bool"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "tokenizer_enabled", "type": "bool"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "tagger_enabled", "type": "bool"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "embeddings", "type": "None"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "Cube", "type": "Type[Cube]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "process_text", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 213, "col_offset": 9, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "ds", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "write_stdout", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "base_path", "type": "None"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "base_path", "type": "str"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "BASE_PATH", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "WordEmbeddings", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "read_from_file", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "tokenizer_enabled", "type": "bool"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "tokenizer_encodings", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "tokenizer_object", "type": "Any"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "tokenizer_object", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "compound_enabled", "type": "bool"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "compound_encodings", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "compound_object", "type": "Any"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "compound_object", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "lemmatizer_enabled", "type": "bool"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "lemmatizer_encodings", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "lemmatizer_object", "type": "Any"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "lemmatizer_object", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "tagger_enabled", "type": "bool"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "tagger_encodings", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "tagger_upos_object", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "tagger_xpos_object", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "tagger_attrs_object", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "parser_enabled", "type": "bool"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "lemmatizer_encodings", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "parser_object", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "parser_object", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "pipeline", "type": "None"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "pipeline", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "tokenizer_enabled", "type": "bool"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "test", "type": "str"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "useSpaces", "type": "str"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "cnt", "type": "int"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "input_string", "type": "str"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "sequences", "type": "str"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "text", "type": "str"}, {"lineNumber": 179, "col_offset": 55, "nodeName": "compound_enabled", "type": "bool"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "parser_enabled", "type": "bool"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 185, "col_offset": 53, "nodeName": "tagger_enabled", "type": "bool"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "new_sequences", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "sequences", "type": "List[Any]"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "new_sequences", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 57, "nodeName": "lemmatizer_enabled", "type": "bool"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "cube", "type": "Cube"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "cube", "type": "Cube"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "ds", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "join", "type": "Callable"}, {"lineNumber": 56, "col_offset": 52, "nodeName": "base_path", "type": "str"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "Encodings", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "TieredTokenizerConfig", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "TieredTokenizer", "type": "Any"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 55, "nodeName": "tokenizer_encodings", "type": "Any"}, {"lineNumber": 69, "col_offset": 76, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "Encodings", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "CompoundWordConfig", "type": "Any"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "CompoundWordExpander", "type": "Any"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "config", "type": "Any"}, {"lineNumber": 84, "col_offset": 59, "nodeName": "compound_encodings", "type": "Any"}, {"lineNumber": 84, "col_offset": 79, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "Encodings", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "LemmatizerConfig", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "FSTLemmatizer", "type": "Any"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "lemmatizer_encodings", "type": "Any"}, {"lineNumber": 99, "col_offset": 76, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "Encodings", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "TaggerConfig", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "BDRNNTagger", "type": "Any"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "tagger_encodings", "type": "Any"}, {"lineNumber": 115, "col_offset": 71, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "BDRNNTagger", "type": "Any"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 117, "col_offset": 53, "nodeName": "tagger_encodings", "type": "Any"}, {"lineNumber": 117, "col_offset": 71, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "BDRNNTagger", "type": "Any"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "config", "type": "Any"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "tagger_encodings", "type": "Any"}, {"lineNumber": 119, "col_offset": 72, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 54, "nodeName": "tagger_upos_object", "type": "Any"}, {"lineNumber": 122, "col_offset": 74, "nodeName": "tagger_xpos_object", "type": "Any"}, {"lineNumber": 122, "col_offset": 94, "nodeName": "tagger_attrs_object", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "Encodings", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "ParserConfig", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "BDRNNParser", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "lemmatizer_encodings", "type": "Any"}, {"lineNumber": 135, "col_offset": 70, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "TOKENIZER", "type": "str"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "PARSER", "type": "str"}, {"lineNumber": 147, "col_offset": 81, "nodeName": "TAGGER", "type": "str"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "LEMMATIZER", "type": "str"}, {"lineNumber": 148, "col_offset": 55, "nodeName": "COMPOUND", "type": "str"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "TOKENIZER", "type": "str"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "pipeline", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "self", "type": "Cube"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "test", "type": "str"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "cnt", "type": "int"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "useSpaces", "type": "str"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "input_string", "type": "str"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 173, "col_offset": 75, "nodeName": "input_string", "type": "str"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "COMPOUND", "type": "str"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "pipeline", "type": "List[str]"}, {"lineNumber": 179, "col_offset": 55, "nodeName": "self", "type": "Cube"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "expand_sequences", "type": "Any"}, {"lineNumber": 180, "col_offset": 82, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "PARSER", "type": "str"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "pipeline", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "self", "type": "Cube"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "parse_sequences", "type": "Any"}, {"lineNumber": 183, "col_offset": 79, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "TAGGER", "type": "str"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "pipeline", "type": "List[str]"}, {"lineNumber": 185, "col_offset": 53, "nodeName": "self", "type": "Cube"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "new_sequence", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "predicted_tags_UPOS", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "predicted_tags_XPOS", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "predicted_tags_ATTRS", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "entryIndex", "type": "int"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "LEMMATIZER", "type": "str"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "pipeline", "type": "List[str]"}, {"lineNumber": 200, "col_offset": 57, "nodeName": "self", "type": "Cube"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "lemmatize_sequences", "type": "Any"}, {"lineNumber": 201, "col_offset": 87, "nodeName": "sequences", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 41, "col_offset": 59, "nodeName": "lang_code", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Cube"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "base_path", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "tokenizer_encodings", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "base_path", "type": "str"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 68, "col_offset": 56, "nodeName": "base_path", "type": "str"}, {"lineNumber": 69, "col_offset": 76, "nodeName": "self", "type": "Cube"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "tokenizer_object", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "base_path", "type": "str"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "TOKENIZER", "type": "str"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "base_path", "type": "str"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "compound_encodings", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "base_path", "type": "str"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 83, "col_offset": 53, "nodeName": "base_path", "type": "str"}, {"lineNumber": 84, "col_offset": 79, "nodeName": "self", "type": "Cube"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "compound_object", "type": "Any"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "base_path", "type": "str"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "COMPOUND", "type": "str"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "base_path", "type": "str"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "lemmatizer_encodings", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "join", "type": "Callable"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "base_path", "type": "str"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "join", "type": "Callable"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "base_path", "type": "str"}, {"lineNumber": 99, "col_offset": 76, "nodeName": "self", "type": "Cube"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "lemmatizer_object", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "base_path", "type": "str"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "LEMMATIZER", "type": "str"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "base_path", "type": "str"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "tagger_encodings", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "base_path", "type": "str"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "base_path", "type": "str"}, {"lineNumber": 115, "col_offset": 71, "nodeName": "self", "type": "Cube"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "tagger_upos_object", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "base_path", "type": "str"}, {"lineNumber": 117, "col_offset": 71, "nodeName": "self", "type": "Cube"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "tagger_xpos_object", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 118, "col_offset": 49, "nodeName": "base_path", "type": "str"}, {"lineNumber": 119, "col_offset": 72, "nodeName": "self", "type": "Cube"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "tagger_attrs_object", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "base_path", "type": "str"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "TAGGER", "type": "str"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "base_path", "type": "str"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "lemmatizer_encodings", "type": "Any"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "join", "type": "Callable"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "base_path", "type": "str"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "base_path", "type": "str"}, {"lineNumber": 135, "col_offset": 70, "nodeName": "self", "type": "Cube"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "parser_object", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "base_path", "type": "str"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "Cube"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "PARSER", "type": "str"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 147, "col_offset": 81, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 148, "col_offset": 55, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "test", "type": "str"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 101, "nodeName": "useSpaces", "type": "str"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "deepcopy", "type": "Any"}, {"lineNumber": 188, "col_offset": 45, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "tag", "type": "Any"}, {"lineNumber": 189, "col_offset": 84, "nodeName": "new_sequence", "type": "Any"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "tag", "type": "Any"}, {"lineNumber": 190, "col_offset": 84, "nodeName": "new_sequence", "type": "Any"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "tag", "type": "Any"}, {"lineNumber": 191, "col_offset": 85, "nodeName": "new_sequence", "type": "Any"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "upos", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "xpos", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 196, "col_offset": 37, "nodeName": "new_sequence", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 56, "col_offset": 86, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 65, "col_offset": 61, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "path", "type": "module"}, {"lineNumber": 68, "col_offset": 67, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "path", "type": "module"}, {"lineNumber": 83, "col_offset": 64, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 88, "col_offset": 54, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 95, "col_offset": 62, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 100, "col_offset": 59, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 113, "col_offset": 58, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 118, "col_offset": 60, "nodeName": "tagger_encodings", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 120, "col_offset": 61, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 131, "col_offset": 62, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 134, "col_offset": 58, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 44, "nodeName": "cnt", "type": "int"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "input_string", "type": "str"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "copy", "type": "Any"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "sequence", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "new_sequences", "type": "List[Any]"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 63, "nodeName": "lang_code", "type": "str"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "text", "type": "str"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "cnt", "type": "int"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "cnt", "type": "int"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "test", "type": "str"}, {"lineNumber": 171, "col_offset": 46, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "self", "type": "Cube"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "TOKENIZER", "type": "str"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "self", "type": "Cube"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "COMPOUND", "type": "str"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "self", "type": "Cube"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "PARSER", "type": "str"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "new_sequence", "type": "Any"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "predicted_tags_UPOS", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "new_sequence", "type": "Any"}, {"lineNumber": 194, "col_offset": 52, "nodeName": "predicted_tags_XPOS", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "new_sequence", "type": "Any"}, {"lineNumber": 195, "col_offset": 53, "nodeName": "predicted_tags_ATTRS", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "self", "type": "Cube"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "LEMMATIZER", "type": "str"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "test", "type": "str"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "models", "type": "Dict[str, Any]"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "entryIndex", "type": "int"}, {"lineNumber": 193, "col_offset": 72, "nodeName": "entryIndex", "type": "int"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "entryIndex", "type": "int"}, {"lineNumber": 194, "col_offset": 72, "nodeName": "entryIndex", "type": "int"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "entryIndex", "type": "int"}, {"lineNumber": 195, "col_offset": 74, "nodeName": "entryIndex", "type": "int"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 171, "col_offset": 46, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "self", "type": "Cube"}, {"lineNumber": 189, "col_offset": 50, "nodeName": "TAGGER", "type": "str"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "self", "type": "Cube"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "TAGGER", "type": "str"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "self", "type": "Cube"}, {"lineNumber": 191, "col_offset": 51, "nodeName": "TAGGER", "type": "str"}, {"lineNumber": 189, "col_offset": 50, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 191, "col_offset": 51, "nodeName": "PipelineComponents", "type": "Type[PipelineComponents]"}, {"lineNumber": 171, "col_offset": 46, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 171, "col_offset": 46, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 52, "nodeName": "i", "type": "int"}]