[{"lineNumber": 14, "col_offset": 0, "nodeName": "merge_state_abs", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "make_sa", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "make_multitask_sa", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "make_singletask_sa", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "visualize_state_abstr_grid", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "merged", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "merged", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "_q_eps_approx_indicator", "type": "Callable[..., bool]"}, {"lineNumber": 29, "col_offset": 75, "nodeName": "State", "type": "Type[simple_rl.mdp.StateClass.State]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "q_equiv_sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "save", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "q_equiv_sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "State", "type": "Type[simple_rl.mdp.StateClass.State]"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "_q_eps_approx_indicator", "type": "Callable[..., bool]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "sa_list", "type": "List[simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "multitask_sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "multitask_sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "vi", "type": "simple_rl.planning.ValueIterationClass.ValueIteration"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "clusters", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "num_states", "type": "int"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "actions", "type": "Any"}, {"lineNumber": 124, "col_offset": 7, "nodeName": "aa_single_act", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "title_font", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "small_font", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "screen", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "width_buffer", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "height_buffer", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "cell_height", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "font_size", "type": "int"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "reg_font", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "cc_font", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "state_dict", "type": "collections.defaultdict[Union[Any, int], Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "sa_colors", "type": "List[Union[List[int], Tuple[int, int, int]]]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "list_of_sa", "type": "List[simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction]"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "list_of_sa", "type": "List[simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "merged", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "ind_funcs", "type": "module"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "StateAbstraction", "type": "Type[simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction]"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "MDPDistribution", "type": "Type[simple_rl.mdp.MDPDistributionClass.MDPDistribution]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "q_equiv_sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "q_equiv_sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "ind_funcs", "type": "module"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "get_mdps", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "sa_list", "type": "List[simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "merge_state_abs", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "sa_list", "type": "List[simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "MDPDistribution", "type": "Type[simple_rl.mdp.MDPDistributionClass.MDPDistribution]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "ValueIteration", "type": "Type[simple_rl.planning.ValueIterationClass.ValueIteration]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "iters", "type": "int"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "val", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "run_vi", "type": "Callable[[], Tuple[int, Any]]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "StateAbstraction", "type": "Type[simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "get_actions", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "state_x", "type": "Any"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "state_y", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "state", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "new_cluster", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "ground_s", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "num_states", "type": "int"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "SysFont", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "SysFont", "type": "Any"}, {"lineNumber": 153, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "MDPDistribution", "type": "Type[simple_rl.mdp.MDPDistributionClass.MDPDistribution]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "goal_locs", "type": "Set[Any]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "goal_locs", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "set_mode", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "fill", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "update", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "_draw_title_text", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "screen", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "scr_width", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "scr_height", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "scr_width", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "width", "type": "Any"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "height", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "SysFont", "type": "Any"}, {"lineNumber": 176, "col_offset": 48, "nodeName": "font_size", "type": "int"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "SysFont", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "get_ground_states", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "s", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "first_five", "type": "List[List[int]]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "color_ls", "type": "List[List[int]]"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "width", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "j", "type": "int"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "flip", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "raw_input", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "merged", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "track_act_opt_pr", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "make_multitask_sa", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "make_singletask_sa", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "save_sa", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "q_equiv_sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "mdp_distr", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "make_singletask_sa", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "indic_func", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "state_class", "type": "Any"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 68, "col_offset": 61, "nodeName": "track_act_opt_pr", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "sample", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "vi", "type": "simple_rl.planning.ValueIterationClass.ValueIteration"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "state_class", "type": "Any"}, {"lineNumber": 96, "col_offset": 76, "nodeName": "track_act_opt_pr", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "get_states", "type": "Callable[[], List[Any]]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "get_states", "type": "Callable[[], List[Any]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "clusters", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "state_x", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "clusters", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "make_cluster", "type": "Callable[[Union[Iterable[Any], Sized]], None]"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "new_cluster", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "clusters", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "get_ground_states", "type": "Callable[[], Union[dict_keys[Any], Iterable[Any]]]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "a_star_set", "type": "Set[Any]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "get_num_abstr_states", "type": "Callable[[], int]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "font", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "font", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "get_all_mdps", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "g", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "get_goal_locs", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "display", "type": "Any"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "scr_width", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "scr_height", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "screen", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "display", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "mdp_visualizer", "type": "module"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "get_width", "type": "Any"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "get_height", "type": "Any"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "scr_height", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "scr_width", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "scr_height", "type": "Any"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "font", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "font", "type": "Any"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "state_abstr", "type": "Any"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "get_num_abstr_states", "type": "Any"}, {"lineNumber": 187, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "sa_colors", "type": "List[Union[List[int], Tuple[int, int, int]]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "height", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "abs_state", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "cluster_num", "type": "Any"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "abstr_state_color", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "display", "type": "Any"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "state_class", "type": "Any"}, {"lineNumber": 42, "col_offset": 80, "nodeName": "indic_func", "type": "Any"}, {"lineNumber": 42, "col_offset": 100, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 42, "col_offset": 126, "nodeName": "track_act_opt_pr", "type": "Any"}, {"lineNumber": 44, "col_offset": 57, "nodeName": "state_class", "type": "Any"}, {"lineNumber": 44, "col_offset": 81, "nodeName": "indic_func", "type": "Any"}, {"lineNumber": 44, "col_offset": 101, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 44, "col_offset": 127, "nodeName": "track_act_opt_pr", "type": "Any"}, {"lineNumber": 65, "col_offset": 85, "nodeName": "aa_single_act", "type": "Any"}, {"lineNumber": 65, "col_offset": 161, "nodeName": "track_act_opt_pr", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "vi", "type": "simple_rl.planning.ValueIterationClass.ValueIteration"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "vi", "type": "simple_rl.planning.ValueIterationClass.ValueIteration"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "state_x", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "get_states", "type": "Callable[[], List[Any]]"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "clusters", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "set_actions_state_opt_dict", "type": "Any"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "ground_s", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "a_star_set", "type": "Set[Any]"}, {"lineNumber": 128, "col_offset": 64, "nodeName": "prob_of_mdp", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "get_goal_locs", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "screen", "type": "Any"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "screen", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "width_buffer", "type": "Any"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "height_buffer", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "min", "type": "Callable"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "cell_height", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 177, "col_offset": 45, "nodeName": "font_size", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "state_dict", "type": "collections.defaultdict[Union[Any, int], Any]"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "state_abstr", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "sa_colors", "type": "List[Union[List[int], Tuple[int, int, int]]]"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "phi", "type": "Any"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "abs_state", "type": "Any"}, {"lineNumber": 204, "col_offset": 32, "nodeName": "sa_colors", "type": "List[Union[List[int], Tuple[int, int, int]]]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "rect", "type": "Any"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "screen", "type": "Any"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "abstr_state_color", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "rect", "type": "Any"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "screen", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "is_wall", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "r", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "goal_locs", "type": "Union[Set[Any], Any]"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "circle_center", "type": "Tuple[int, int]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "circler_color", "type": "Tuple[int, int, int]"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "offset", "type": "int"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "goal_text_point", "type": "Tuple[int, float]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 65, "col_offset": 112, "nodeName": "get_prob_of_mdp", "type": "Any"}, {"lineNumber": 65, "col_offset": 138, "nodeName": "mdp", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "vi", "type": "simple_rl.planning.ValueIterationClass.ValueIteration"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "indic_func", "type": "Any"}, {"lineNumber": 107, "col_offset": 55, "nodeName": "state_x", "type": "Any"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "state_y", "type": "Any"}, {"lineNumber": 107, "col_offset": 73, "nodeName": "vi", "type": "simple_rl.planning.ValueIterationClass.ValueIteration"}, {"lineNumber": 107, "col_offset": 77, "nodeName": "actions", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "state_y", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "state_x", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "get_max_q_actions", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "ground_s", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "sa", "type": "simple_rl.abstraction.state_abs.StateAbstractionClass.StateAbstraction"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "m", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "g", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 188, "col_offset": 72, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "width_buffer", "type": "Any"}, {"lineNumber": 200, "col_offset": 58, "nodeName": "height_buffer", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "state_dict", "type": "collections.defaultdict[Union[Any, int], Any]"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "state_abstr", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "draw", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "draw", "type": "Any"}, {"lineNumber": 206, "col_offset": 55, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "height", "type": "Any"}, {"lineNumber": 208, "col_offset": 55, "nodeName": "j", "type": "int"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "rect", "type": "Any"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "screen", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "render", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "blit", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "circle", "type": "Any"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "screen", "type": "Any"}, {"lineNumber": 219, "col_offset": 43, "nodeName": "circler_color", "type": "Tuple[int, int, int]"}, {"lineNumber": 219, "col_offset": 58, "nodeName": "circle_center", "type": "Tuple[int, int]"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "render", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "blit", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "goal_text_point", "type": "Tuple[int, float]"}, {"lineNumber": 65, "col_offset": 112, "nodeName": "mdp_distr", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "state_x", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "state_y", "type": "Any"}, {"lineNumber": 107, "col_offset": 94, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "clusters", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "clusters", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "vi", "type": "simple_rl.planning.ValueIterationClass.ValueIteration"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "goal_locs", "type": "Set[Any]"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "random", "type": "module"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "random", "type": "module"}, {"lineNumber": 188, "col_offset": 72, "nodeName": "random", "type": "module"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "state_dict", "type": "collections.defaultdict[Union[Any, int], Any]"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 200, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 200, "col_offset": 74, "nodeName": "cell_height", "type": "Any"}, {"lineNumber": 200, "col_offset": 86, "nodeName": "j", "type": "int"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "height", "type": "Any"}, {"lineNumber": 201, "col_offset": 50, "nodeName": "j", "type": "int"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "cluster_num", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 206, "col_offset": 73, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 206, "col_offset": 85, "nodeName": "cell_height", "type": "Any"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "draw", "type": "Any"}, {"lineNumber": 211, "col_offset": 62, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "reg_font", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "screen", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "height", "type": "Any"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "j", "type": "int"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 217, "col_offset": 73, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "draw", "type": "Any"}, {"lineNumber": 219, "col_offset": 73, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "reg_font", "type": "Any"}, {"lineNumber": 224, "col_offset": 53, "nodeName": "font_size", "type": "int"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "screen", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "clusters", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "clusters", "type": "collections.defaultdict[Any, Any]"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "height", "type": "Any"}, {"lineNumber": 195, "col_offset": 53, "nodeName": "j", "type": "int"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 204, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 204, "col_offset": 60, "nodeName": "sa_colors", "type": "List[Union[List[int], Tuple[int, int, int]]]"}, {"lineNumber": 205, "col_offset": 110, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 205, "col_offset": 125, "nodeName": "cell_height", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "width_buffer", "type": "Any"}, {"lineNumber": 210, "col_offset": 66, "nodeName": "height_buffer", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "pygame", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "min", "type": "Callable"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "cell_height", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "circle_center", "type": "Tuple[int, int]"}, {"lineNumber": 224, "col_offset": 64, "nodeName": "circle_center", "type": "Tuple[int, int]"}, {"lineNumber": 224, "col_offset": 83, "nodeName": "font_size", "type": "int"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "state_x", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "state_y", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "grid_mdp", "type": "Any"}, {"lineNumber": 205, "col_offset": 61, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 205, "col_offset": 84, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 210, "col_offset": 48, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 210, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 210, "col_offset": 82, "nodeName": "cell_height", "type": "Any"}, {"lineNumber": 210, "col_offset": 94, "nodeName": "j", "type": "int"}, {"lineNumber": 211, "col_offset": 80, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 211, "col_offset": 95, "nodeName": "cell_height", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 213, "col_offset": 59, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 217, "col_offset": 56, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 217, "col_offset": 77, "nodeName": "top_left_point", "type": "Tuple[Any, Any]"}, {"lineNumber": 217, "col_offset": 97, "nodeName": "cell_height", "type": "Any"}, {"lineNumber": 219, "col_offset": 77, "nodeName": "min", "type": "Callable"}, {"lineNumber": 219, "col_offset": 81, "nodeName": "cell_width", "type": "Any"}, {"lineNumber": 219, "col_offset": 93, "nodeName": "cell_height", "type": "Any"}]