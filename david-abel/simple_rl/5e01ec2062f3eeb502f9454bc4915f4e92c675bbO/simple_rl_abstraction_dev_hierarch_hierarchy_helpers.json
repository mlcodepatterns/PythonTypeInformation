[{"lineNumber": 17, "col_offset": 0, "nodeName": "make_hierarchy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "add_layer", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "add_layer_to_sa_stack", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "_convert_abstr_states", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "add_layer_to_aa_stack", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "parent_dir", "type": "str"}, {"lineNumber": 6, "col_offset": 13, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 7, "col_offset": 16, "nodeName": "parent_dir", "type": "str"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "new_sa", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "new_phi", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "phi_dict", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "next_options", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "next_aa", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "mdp_class", "type": "str"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "environment", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "actions", "type": "Any"}, {"lineNumber": 183, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 6, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 6, "col_offset": 26, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "num_levels", "type": "int"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "StateAbstractionStack", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "ActionAbstractionStack", "type": "Any"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "num_levels", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "epsilon_incr", "type": "float"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "init_epsilon", "type": "float"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "abstr_mdp_level", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "is_too_many_options", "type": "bool"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "abstr_mdp_distr", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "abstr_mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "make_multitask_sa", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "abstr_mdp_distr", "type": "Any"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "_convert_abstr_states", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "_phi", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "add_phi", "type": "Any"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "new_phi", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "state_num", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "abstr_mdp_distr", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "abstr_mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "set_level_to_max", "type": "Any"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "get_directed_options_for_sa", "type": "Any"}, {"lineNumber": 157, "col_offset": 58, "nodeName": "abstr_mdp_distr", "type": "Any"}, {"lineNumber": 157, "col_offset": 75, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "next_options", "type": "Any"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "ActionAbstraction", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "add_aa", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "next_aa", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "make_mdp_distr", "type": "Callable[..., simple_rl.mdp.MDPDistributionClass.MDPDistribution]"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "get_actions", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "make_hierarchy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "environment", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 6, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 6, "col_offset": 39, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 6, "col_offset": 52, "nodeName": "__file__", "type": "str"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "quit", "type": "Callable[[], None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "add_layer", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 45, "col_offset": 59, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 45, "col_offset": 69, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "min", "type": "Callable"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "set_level", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "abstr_mdp_level", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "set_level", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "abstr_mdp_level", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "add_layer_to_sa_stack", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 79, "col_offset": 72, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "is_too_many_options", "type": "bool"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "add_layer_to_aa_stack", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 62, "nodeName": "mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 82, "col_offset": 73, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 82, "col_offset": 83, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "epsilon_incr", "type": "float"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "get_num_levels", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "make_abstr_mdp_distr_multi_level", "type": "Any"}, {"lineNumber": 108, "col_offset": 74, "nodeName": "mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 108, "col_offset": 85, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 108, "col_offset": 95, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "sa_helpers", "type": "Any"}, {"lineNumber": 113, "col_offset": 67, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "new_sa", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "phi_dict", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "phi_dict", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "phi_dict", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "HierarchyState", "type": "Any"}, {"lineNumber": 150, "col_offset": 7, "nodeName": "get_num_levels", "type": "Any"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "make_abstr_mdp_distr_multi_level", "type": "Any"}, {"lineNumber": 151, "col_offset": 74, "nodeName": "mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 151, "col_offset": 85, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 151, "col_offset": 95, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "aa_helpers", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "next_options", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "make_mdp", "type": "module"}, {"lineNumber": 174, "col_offset": 52, "nodeName": "mdp_class", "type": "str"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "environment", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 6, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 38, "col_offset": 66, "nodeName": "get_actions", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 92, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "get_num_levels", "type": "Any"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "get_num_levels", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "remove_last_phi", "type": "Any"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "make_abstr_mdp", "type": "Any"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "get_num_levels", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "key", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "key", "type": "Any"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "state_num", "type": "Any"}, {"lineNumber": 133, "col_offset": 61, "nodeName": "level", "type": "Any"}, {"lineNumber": 150, "col_offset": 7, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "make_abstr_mdp", "type": "Any"}, {"lineNumber": 163, "col_offset": 67, "nodeName": "get_actions", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 66, "nodeName": "mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "aa_stack", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "sa_stack", "type": "Any"}, {"lineNumber": 163, "col_offset": 67, "nodeName": "mdp_distr", "type": "simple_rl.mdp.MDPDistributionClass.MDPDistribution"}, {"lineNumber": 34, "col_offset": 86, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 90, "nodeName": "num_levels", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 157, "col_offset": 128, "nodeName": "get_num_levels", "type": "Any"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 128, "nodeName": "aa_stack", "type": "Any"}]