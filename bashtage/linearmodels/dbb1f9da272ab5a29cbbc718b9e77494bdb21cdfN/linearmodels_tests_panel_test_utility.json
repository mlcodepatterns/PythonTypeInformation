[{"lineNumber": 18, "col_offset": 0, "nodeName": "format", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "test_dummy_format", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_dummy_last", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "test_invalid_format", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_dummy_pandas", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "test_drop_singletons_single", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_drop_singletons_slow", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "test_drop_singletons", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "test_drop_singletons_pandas", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 14, "col_offset": 54, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "coo_matrix", "type": "Any"}, {"lineNumber": 15, "col_offset": 56, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "format", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "c1", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "c2", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "rs", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "retain", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "nonsingletons", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "vc", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "singletons", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "rs", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "c1", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "c2", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "retain", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "nonsingletons", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "idx", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "dummies", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "to_drop", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "rs", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "c1", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "c2", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "remain", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "rs", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "c1", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "c2", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "remain", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "csc", "type": "Any"}, {"lineNumber": 14, "col_offset": 54, "nodeName": "csr", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "coo", "type": "Any"}, {"lineNumber": 15, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "code", "type": "Any"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "expected_type", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "dummy_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "cats", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "expected_type", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 75, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "dummy_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "cats", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 75, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "Series", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "Series", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "concat", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "dummy_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "cats", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "out", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 65, "col_offset": 75, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "randint", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "in_2core_graph_slow", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "cats", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "cats", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "Series", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "value_counts", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "sort", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "randint", "type": "Any"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "randint", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "in_2core_graph_slow", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "cats", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "cats", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "c1", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "c2", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "arange", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "last", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "col", "type": "str"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "nonsingletons", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "nonsingletons", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "expected", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "dummy_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "cats", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "dummies", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "randint", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "randint", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "in_2core_graph", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "cats", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "in_2core_graph_slow", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "cats", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "remain", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "randint", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "randint", "type": "Any"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "concat", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "df", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "in_2core_graph", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "cats", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "in_2core_graph_slow", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "cats", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "remain", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 14, "col_offset": 54, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "formats", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "int8", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "code", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "int32", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "int8", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "csc", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "int32", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "int8", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "dummy_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "cats", "type": "Any"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "Categorical", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "Categorical", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "c1", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "c2", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "csc", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "out", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "int32", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "rs", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "retain", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "cats", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "cats", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "unique", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "nonsingletons", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "rs", "type": "Any"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "rs", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "c1", "type": "Any"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "c2", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "retain", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "uniq", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "counts", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "unique", "type": "Any"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "col", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "copy", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "keep", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "col2", "type": "str"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "last", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "rs", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "rs", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "c1", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "c2", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "rs", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "rs", "type": "Any"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 14, "col_offset": 54, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "index", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "nonsingletons", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "vc", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "nonsingletons", "type": "Any"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "isin", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "nonsingletons", "type": "Any"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "singletons", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "any", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "c1", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "c2", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "in_2core_graph_slow", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "idx", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "c1", "type": "Any"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "c2", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "retain", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "to_drop", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "sum", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "let", "type": "nothing"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "cat", "type": "nothing"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "request", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "sum", "type": "Any"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "int32", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "sum", "type": "Any"}, {"lineNumber": 47, "col_offset": 63, "nodeName": "int32", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "sum", "type": "Any"}, {"lineNumber": 65, "col_offset": 63, "nodeName": "int32", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "vc", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "vc", "type": "Any"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "vc", "type": "Any"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "singletons", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "isin", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "keep", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "idx", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "idx", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "let", "type": "nothing"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "c", "type": "nothing"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "c", "type": "nothing"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "c1", "type": "Any"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "c2", "type": "Any"}, {"lineNumber": 33, "col_offset": 45, "nodeName": "out", "type": "Any"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "out", "type": "Any"}, {"lineNumber": 47, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "out", "type": "Any"}, {"lineNumber": 65, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "vc", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "col", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "uniq", "type": "Any"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "col", "type": "str"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "col2", "type": "str"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "keep", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "cols", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "retain", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "vc", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "retain", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "col2", "type": "str"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "counts", "type": "Any"}]