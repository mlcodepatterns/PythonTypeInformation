[{"lineNumber": 31, "col_offset": 0, "nodeName": "arr", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "panel", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "test_bool", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "test_float", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "test_string", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "test_array_like", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "test_panel_data_like", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "ARRAY_LIKE", "type": "Tuple[Type[Any], ...]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "PANEL_LIKE", "type": "Tuple[Type[Any], ...]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "ARRAYS", "type": "Tuple[Any, ...]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "PANELS", "type": "Tuple[Any, ...]"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 16, "col_offset": 44, "nodeName": "Series", "type": "Any"}, {"lineNumber": 16, "col_offset": 55, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 17, "col_offset": 31, "nodeName": "ARRAY_LIKE", "type": "Tuple[Type[Any], ...]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "ARRAYS", "type": "Tuple[Any, ...]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "ARRAY_LIKE", "type": "Tuple[Any, ...]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "PANEL_LIKE", "type": "Tuple[Any, ...]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "ARRAYS", "type": "Tuple[Any, ...]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "PANELS", "type": "Tuple[Any, ...]"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 44, "nodeName": "pd", "type": "Any"}, {"lineNumber": 16, "col_offset": 55, "nodeName": "pd", "type": "Any"}, {"lineNumber": 17, "col_offset": 45, "nodeName": "PanelData", "type": "Type[linearmodels.panel.data.PanelData]"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 18, "col_offset": 44, "nodeName": "Series", "type": "Any"}, {"lineNumber": 18, "col_offset": 62, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "DataArray", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "DataArray", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "get_bool", "type": "Callable[[Mapping[str, Any], str], bool]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "ARRAY_LIKE", "type": "Union[Tuple[Any, ...], Tuple[Type[Any], ...]]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 80, "col_offset": 62, "nodeName": "PANEL_LIKE", "type": "Union[Tuple[Any, ...], Tuple[Type[Any], ...]]"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "Type", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "Type", "type": "Any"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "Any", "type": "Any"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 44, "nodeName": "pd", "type": "Any"}, {"lineNumber": 18, "col_offset": 62, "nodeName": "pd", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "Any", "type": "Any"}, {"lineNumber": 19, "col_offset": 36, "nodeName": "PanelData", "type": "Type[linearmodels.panel.data.PanelData]"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "xr", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "xr", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "DataArray", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "DataArray", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "get_bool", "type": "Callable[[Mapping[str, Any], str], bool]"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "get_bool", "type": "Callable[[Mapping[str, Any], str], bool]"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "get_bool", "type": "Callable[[Mapping[str, Any], str], bool]"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "get_bool", "type": "Callable[[Mapping[str, Any], str], bool]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "get_float", "type": "Callable[[Mapping[str, Any], str], Optional[float]]"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "get_float", "type": "Callable[[Mapping[str, Any], str], Optional[float]]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "get_string", "type": "Callable[[Mapping[str, Any], str], Optional[str]]"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "get_float", "type": "Callable[[Mapping[str, Any], str], Optional[float]]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "get_string", "type": "Callable[[Mapping[str, Any], str], Optional[str]]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "get_string", "type": "Callable[[Mapping[str, Any], str], Optional[str]]"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "get_string", "type": "Callable[[Mapping[str, Any], str], Optional[str]]"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "get_string", "type": "Callable[[Mapping[str, Any], str], Optional[str]]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "get_string", "type": "Callable[[Mapping[str, Any], str], Optional[str]]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "get_array_like", "type": "Callable[[Mapping[str, Any], str], Any]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "get_array_like", "type": "Callable[[Mapping[str, Any], str], Any]"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "get_array_like", "type": "Callable[[Mapping[str, Any], str], Any]"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "get_array_like", "type": "Callable[[Mapping[str, Any], str], Any]"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "get_panel_data_like", "type": "Callable[[Mapping[str, Any], str], Any]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "get_panel_data_like", "type": "Callable[[Mapping[str, Any], str], Any]"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "get_panel_data_like", "type": "Callable[[Mapping[str, Any], str], Any]"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "get_panel_data_like", "type": "Callable[[Mapping[str, Any], str], Any]"}, {"lineNumber": 19, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "xr", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "ARRAYS", "type": "Tuple[Any, ...]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "xr", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "ARRAYS", "type": "Tuple[Any, ...]"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "arr", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "arr", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "panel", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "panel", "type": "Any"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 19, "col_offset": 46, "nodeName": "np", "type": "module"}]