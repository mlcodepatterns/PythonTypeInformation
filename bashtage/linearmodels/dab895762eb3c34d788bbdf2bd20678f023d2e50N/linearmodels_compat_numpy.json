[{"lineNumber": 9, "col_offset": 0, "nodeName": "lstsq", "type": "Callable[..., Any]"}, {"lineNumber": 5, "col_offset": 0, "nodeName": "NP_LT_113", "type": "bool"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "NP_LT_114", "type": "bool"}, {"lineNumber": 18, "col_offset": 3, "nodeName": "NP_LT_113", "type": "bool"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "isin", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "isin", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "isin", "type": "Any"}, {"lineNumber": 5, "col_offset": 12, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 5, "col_offset": 25, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 5, "col_offset": 43, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 6, "col_offset": 12, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 6, "col_offset": 25, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 6, "col_offset": 43, "nodeName": "LooseVersion", "type": "Type[distutils.version.LooseVersion]"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "NP_LT_114", "type": "bool"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "rcond", "type": "int"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "lstsq", "type": "Any"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "element", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 5, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 6, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "rcond", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 15, "col_offset": 39, "nodeName": "rcond", "type": "Union[int, Any]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "element", "type": "Any"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "element", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "in1d", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "element", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "test_elements", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 61, "nodeName": "assume_unique", "type": "Any"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "invert", "type": "Any"}]