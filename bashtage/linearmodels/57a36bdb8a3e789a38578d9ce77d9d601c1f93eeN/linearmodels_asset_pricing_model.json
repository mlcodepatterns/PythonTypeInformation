[{"lineNumber": 43, "col_offset": 4, "nodeName": "callback", "type": "Callable[[numpy.ndarray], None]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "_FactorModelBase", "type": "Type[_FactorModelBase]"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "_FactorModelBase", "type": "Type[_FactorModelBase]"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "_LinearFactorModelBase", "type": "Type[_LinearFactorModelBase]"}, {"lineNumber": 753, "col_offset": 27, "nodeName": "_LinearFactorModelBase", "type": "Type[_LinearFactorModelBase]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "d", "type": "Dict[str, int]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "disp", "type": "int"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "callback", "type": "Callable[[numpy.ndarray], None]"}, {"lineNumber": 39, "col_offset": 5, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "LinearFactorModelResults", "type": "Type[linearmodels.asset_pricing.results.LinearFactorModelResults]"}, {"lineNumber": 414, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "LinearFactorModelResults", "type": "Type[linearmodels.asset_pricing.results.LinearFactorModelResults]"}, {"lineNumber": 706, "col_offset": 74, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 735, "col_offset": 9, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 874, "col_offset": 9, "nodeName": "GMMFactorModelResults", "type": "Type[linearmodels.asset_pricing.results.GMMFactorModelResults]"}, {"lineNumber": 1099, "col_offset": 69, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1120, "col_offset": 75, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1132, "col_offset": 9, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1140, "col_offset": 66, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "disp", "type": "Union[bool, int]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "fval", "type": "float"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_name", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_formula", "type": "None"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "__name__", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "out", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "data", "type": "Tuple[linearmodels.iv.data.IVData, linearmodels.iv.data.IVData]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "missing", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "missing", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "_formula", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "_formula", "type": "Optional[str]"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "value", "type": "Optional[str]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "na_action", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "orig_formula", "type": "str"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "formula", "type": "str"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "mod", "type": "TradedFactorModel"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "formula", "type": "str"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "formula", "type": "str"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "mod", "type": "TradedFactorModel"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "fc", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "rp", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "fe", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "eps", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "T", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "nloading", "type": "int"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "xpxi", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "f_rep", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "xe", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "xe", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "cov", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "rp_cov", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "cov", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "vcv", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "vcv", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "alpha_vcv", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "stat", "type": "float"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "jstat", "type": "linearmodels.shared.hypotheses.WaldTestStatistic"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "T", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "betas", "type": "Any"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "T", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "residual_ss", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "e", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "total_ss", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "portfolio", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "factor", "type": "Any"}, {"lineNumber": 359, "col_offset": 22, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "res", "type": "linearmodels.shared.utility.AttrDict"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "_risk_free", "type": "bool"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "out", "type": "str"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "nrp", "type": "int"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "nport", "type": "int"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "nrf", "type": "int"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "s1", "type": "int"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "s2", "type": "int"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "s3", "type": "int"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "mod", "type": "LinearFactorModel"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "formula", "type": "str"}, {"lineNumber": 564, "col_offset": 22, "nodeName": "formula", "type": "str"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "mod", "type": "LinearFactorModel"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 599, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "nport", "type": "int"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "fc", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "eps", "type": "Any"}, {"lineNumber": 607, "col_offset": 11, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "sigma_m12", "type": "Any"}, {"lineNumber": 613, "col_offset": 20, "nodeName": "_sigma_m12", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "lam", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "pricing_errors", "type": "Any"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "moments", "type": "numpy.ndarray"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "jacobian", "type": "numpy.ndarray"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 647, "col_offset": 19, "nodeName": "cov", "type": "numpy.ndarray"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "alpha_vcv", "type": "Any"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "stat", "type": "float"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "jstat", "type": "linearmodels.shared.hypotheses.WaldTestStatistic"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "total_ss", "type": "Any"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "residual_ss", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "rp", "type": "Any"}, {"lineNumber": 657, "col_offset": 13, "nodeName": "lam", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "rp_cov", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "betas", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "portfolio", "type": "Any"}, {"lineNumber": 662, "col_offset": 25, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "factor", "type": "Any"}, {"lineNumber": 668, "col_offset": 22, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "full_vcv", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "factor_names", "type": "List[Any]"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "rp_names", "type": "List[Any]"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "res", "type": "linearmodels.shared.utility.AttrDict"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "fc", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "bc", "type": "numpy.ndarray"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "betas", "type": "numpy.ndarray"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "sigma_inv", "type": "Any"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "_sigma_inv", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "fpf", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "b_tilde", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "alpha_tilde", "type": "Any"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "_lam", "type": "Any"}, {"lineNumber": 721, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "zero_lam", "type": "Any"}, {"lineNumber": 729, "col_offset": 28, "nodeName": "bc", "type": "numpy.ndarray"}, {"lineNumber": 731, "col_offset": 15, "nodeName": "jac", "type": "Any"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "sigma_inv", "type": "Any"}, {"lineNumber": 736, "col_offset": 20, "nodeName": "_sigma_inv", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "fc", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "f_rep", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 743, "col_offset": 18, "nodeName": "T", "type": "Any"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "g1", "type": "Any"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "g2", "type": "Any"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "g3", "type": "Any"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "mod", "type": "LinearFactorModelGMM"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "formula", "type": "str"}, {"lineNumber": 858, "col_offset": 22, "nodeName": "formula", "type": "str"}, {"lineNumber": 859, "col_offset": 15, "nodeName": "mod", "type": "LinearFactorModelGMM"}, {"lineNumber": 922, "col_offset": 18, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 923, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 924, "col_offset": 8, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "nrf", "type": "int"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "mod", "type": "LinearFactorModel"}, {"lineNumber": 930, "col_offset": 8, "nodeName": "res", "type": "linearmodels.asset_pricing.results.LinearFactorModelResults"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "betas", "type": "Any"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 933, "col_offset": 8, "nodeName": "mu", "type": "Any"}, {"lineNumber": 934, "col_offset": 8, "nodeName": "sv", "type": "Any"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 945, "col_offset": 8, "nodeName": "kernel", "type": "Optional[str]"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "bandwidth", "type": "Optional[float]"}, {"lineNumber": 960, "col_offset": 8, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 962, "col_offset": 8, "nodeName": "args", "type": "Tuple[bool, numpy.ndarray]"}, {"lineNumber": 965, "col_offset": 8, "nodeName": "callback", "type": "Callable[[numpy.ndarray], None]"}, {"lineNumber": 966, "col_offset": 8, "nodeName": "_default_options", "type": "Dict[Any, Any]"}, {"lineNumber": 967, "col_offset": 8, "nodeName": "options", "type": "Dict[Union[str, Any], Union[int, bool, Any]]"}, {"lineNumber": 968, "col_offset": 8, "nodeName": "opt_options", "type": "Optional[Union[Dict[nothing, nothing], Dict[str, Any]]]"}, {"lineNumber": 971, "col_offset": 38, "nodeName": "options", "type": "Dict[Union[str, Any], Union[int, bool, Any]]"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "opt_res", "type": "Any"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 978, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "last_obj", "type": "Any"}, {"lineNumber": 979, "col_offset": 19, "nodeName": "fun", "type": "Any"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "iters", "type": "int"}, {"lineNumber": 1017, "col_offset": 8, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1018, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 1019, "col_offset": 8, "nodeName": "jac", "type": "numpy.ndarray"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 1039, "col_offset": 19, "nodeName": "cov", "type": "numpy.ndarray"}, {"lineNumber": 1040, "col_offset": 8, "nodeName": "sel", "type": "slice"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "rp", "type": "Any"}, {"lineNumber": 1042, "col_offset": 8, "nodeName": "rp_cov", "type": "Any"}, {"lineNumber": 1043, "col_offset": 8, "nodeName": "sel", "type": "slice"}, {"lineNumber": 1044, "col_offset": 8, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 1045, "col_offset": 8, "nodeName": "alpha_vcv", "type": "Any"}, {"lineNumber": 1046, "col_offset": 8, "nodeName": "stat", "type": "float"}, {"lineNumber": 1047, "col_offset": 8, "nodeName": "jstat", "type": "linearmodels.shared.hypotheses.WaldTestStatistic"}, {"lineNumber": 1052, "col_offset": 8, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1053, "col_offset": 8, "nodeName": "resids", "type": "Any"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "resids", "type": "Any"}, {"lineNumber": 1055, "col_offset": 8, "nodeName": "residual_ss", "type": "Any"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "total", "type": "numpy.ndarray"}, {"lineNumber": 1056, "col_offset": 16, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "total", "type": "Any"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "total_ss", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "r2", "type": "Any"}, {"lineNumber": 1060, "col_offset": 8, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 1061, "col_offset": 12, "nodeName": "portfolio", "type": "Any"}, {"lineNumber": 1061, "col_offset": 25, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "rp_names", "type": "List[Any]"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 1073, "col_offset": 8, "nodeName": "res_dict", "type": "linearmodels.shared.utility.AttrDict"}, {"lineNumber": 1101, "col_offset": 8, "nodeName": "nrf", "type": "int"}, {"lineNumber": 1102, "col_offset": 8, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 1102, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 1103, "col_offset": 18, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1104, "col_offset": 8, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 1107, "col_offset": 8, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1108, "col_offset": 8, "nodeName": "lam", "type": "Any"}, {"lineNumber": 1109, "col_offset": 8, "nodeName": "mu", "type": "Any"}, {"lineNumber": 1110, "col_offset": 8, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1111, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "fe", "type": "Any"}, {"lineNumber": 1113, "col_offset": 8, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1114, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 1116, "col_offset": 8, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1116, "col_offset": 14, "nodeName": "T", "type": "Any"}, {"lineNumber": 1117, "col_offset": 8, "nodeName": "g", "type": "Any"}, {"lineNumber": 1118, "col_offset": 15, "nodeName": "g", "type": "Any"}, {"lineNumber": 1122, "col_offset": 8, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1123, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1124, "col_offset": 8, "nodeName": "gbar", "type": "Any"}, {"lineNumber": 1134, "col_offset": 8, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1135, "col_offset": 8, "nodeName": "gbar", "type": "Any"}, {"lineNumber": 1136, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1137, "col_offset": 8, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 1142, "col_offset": 18, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1143, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 1144, "col_offset": 8, "nodeName": "nrf", "type": "int"}, {"lineNumber": 1145, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 1147, "col_offset": 8, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1148, "col_offset": 8, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1149, "col_offset": 8, "nodeName": "lam", "type": "Any"}, {"lineNumber": 1150, "col_offset": 8, "nodeName": "mu", "type": "Any"}, {"lineNumber": 1151, "col_offset": 8, "nodeName": "lam_tilde", "type": "Any"}, {"lineNumber": 1152, "col_offset": 8, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 1152, "col_offset": 12, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 1153, "col_offset": 8, "nodeName": "fe", "type": "Any"}, {"lineNumber": 1154, "col_offset": 8, "nodeName": "f_aug", "type": "Any"}, {"lineNumber": 1155, "col_offset": 8, "nodeName": "fef", "type": "Any"}, {"lineNumber": 1156, "col_offset": 8, "nodeName": "r1", "type": "int"}, {"lineNumber": 1159, "col_offset": 8, "nodeName": "jac12", "type": "Any"}, {"lineNumber": 1160, "col_offset": 8, "nodeName": "jac13", "type": "Any"}, {"lineNumber": 1161, "col_offset": 8, "nodeName": "iota", "type": "Any"}, {"lineNumber": 1162, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1171, "col_offset": 26, "nodeName": "jac12", "type": "Any"}, {"lineNumber": 1172, "col_offset": 24, "nodeName": "jac13", "type": "Any"}, {"lineNumber": 1175, "col_offset": 15, "nodeName": "jac", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "Union", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "obj", "type": "Union[Callable[[numpy.ndarray, bool, numpy.ndarray], float], Callable[[numpy.ndarray, bool, Union[linearmodels.asset_pricing.covariance.HeteroskedasticWeight, linearmodels.asset_pricing.covariance.KernelWeight]], float]]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "d", "type": "Dict[str, int]"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "IVDataLike", "type": "Any"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "IVDataLike", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "IVData", "type": "Type[linearmodels.iv.data.IVData]"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "IVData", "type": "Type[linearmodels.iv.data.IVData]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "factors", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_validate_data", "type": "Callable[[], None]"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "__class__", "type": "Type[_FactorModelBase]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "f", "type": "int"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "p", "type": "int"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 74, "col_offset": 63, "nodeName": "f", "type": "int"}, {"lineNumber": 74, "col_offset": 66, "nodeName": "p", "type": "int"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "cast", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "missing", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "missing_warning", "type": "Callable[[numpy.ndarray], None]"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "missing", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_drop_missing", "type": "Callable[[], numpy.ndarray]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 135, "col_offset": 51, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "NAAction", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "factors", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "formula_components", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "factors", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "factors", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "orig_formula", "type": "str"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "IVDataLike", "type": "Any"}, {"lineNumber": 190, "col_offset": 56, "nodeName": "IVDataLike", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "factors", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "factors", "type": "Any"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "formula", "type": "str"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "_prepare_data_from_formula", "type": "Callable[[str, Any, Any], Tuple[Any, Any, str]]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "formula", "type": "str"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "cls", "type": "Type[TradedFactorModel]"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "factors", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "mod", "type": "TradedFactorModel"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "nfactor", "type": "int"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "c_", "type": "Any"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 33, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 35, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "xpxi", "type": "Any"}, {"lineNumber": 289, "col_offset": 37, "nodeName": "kron", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "tile", "type": "Any"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "fc", "type": "Any"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "tile", "type": "Any"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "eps", "type": "Any"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "f_rep", "type": "Any"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "c_", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "cov_est", "type": "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "rp_cov_est", "type": "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "cov_est", "type": "Union[linearmodels.asset_pricing.covariance.KernelCovariance, linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "rp_cov_est", "type": "Union[linearmodels.asset_pricing.covariance.KernelCovariance, linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 343, "col_offset": 20, "nodeName": "vcv", "type": "Any"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "WaldTestStatistic", "type": "Type[linearmodels.shared.hypotheses.WaldTestStatistic]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "stat", "type": "float"}, {"lineNumber": 346, "col_offset": 38, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 350, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "factor", "type": "Any"}, {"lineNumber": 357, "col_offset": 26, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 359, "col_offset": 22, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 362, "col_offset": 14, "nodeName": "AttrDict", "type": "Type[linearmodels.shared.utility.AttrDict]"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "LinearFactorModelResults", "type": "Type[linearmodels.asset_pricing.results.LinearFactorModelResults]"}, {"lineNumber": 385, "col_offset": 40, "nodeName": "res", "type": "linearmodels.shared.utility.AttrDict"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 401, "col_offset": 31, "nodeName": "risk_free", "type": "bool"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 402, "col_offset": 53, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 402, "col_offset": 65, "nodeName": "factors", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "_validate_additional_data", "type": "Callable[[], None]"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "_sigma", "type": "numpy.ndarray"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "_sigma_m12", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "_sigma_inv", "type": "Any"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "__str__", "type": "Callable[[], str]"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 418, "col_offset": 56, "nodeName": "_risk_free", "type": "bool"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "nrp", "type": "int"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 434, "col_offset": 14, "nodeName": "nf", "type": "int"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 436, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "nport", "type": "int"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "s1", "type": "int"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "s2", "type": "int"}, {"lineNumber": 440, "col_offset": 18, "nodeName": "nport", "type": "int"}, {"lineNumber": 442, "col_offset": 15, "nodeName": "nobs", "type": "int"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "nf", "type": "int"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "nport", "type": "int"}, {"lineNumber": 442, "col_offset": 32, "nodeName": "nrf", "type": "int"}, {"lineNumber": 442, "col_offset": 37, "nodeName": "s1", "type": "int"}, {"lineNumber": 442, "col_offset": 41, "nodeName": "s2", "type": "int"}, {"lineNumber": 442, "col_offset": 45, "nodeName": "s3", "type": "int"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 504, "col_offset": 24, "nodeName": "factors", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "factors", "type": "Any"}, {"lineNumber": 560, "col_offset": 17, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 560, "col_offset": 29, "nodeName": "formula", "type": "str"}, {"lineNumber": 560, "col_offset": 39, "nodeName": "_prepare_data_from_formula", "type": "Callable[[str, Any, Any], Tuple[Any, Any, str]]"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "formula", "type": "str"}, {"lineNumber": 561, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 561, "col_offset": 27, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 563, "col_offset": 14, "nodeName": "cls", "type": "Type[LinearFactorModel]"}, {"lineNumber": 563, "col_offset": 18, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 563, "col_offset": 30, "nodeName": "factors", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "mod", "type": "LinearFactorModel"}, {"lineNumber": 570, "col_offset": 18, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 597, "col_offset": 14, "nodeName": "nf", "type": "int"}, {"lineNumber": 597, "col_offset": 18, "nodeName": "nport", "type": "int"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "nrf", "type": "int"}, {"lineNumber": 597, "col_offset": 30, "nodeName": "s1", "type": "int"}, {"lineNumber": 597, "col_offset": 34, "nodeName": "s2", "type": "int"}, {"lineNumber": 597, "col_offset": 38, "nodeName": "s3", "type": "int"}, {"lineNumber": 597, "col_offset": 43, "nodeName": "_boundaries", "type": "Callable[[], Tuple[int, int, int, int, int, int, int]]"}, {"lineNumber": 598, "col_offset": 29, "nodeName": "_risk_free", "type": "bool"}, {"lineNumber": 599, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 601, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 604, "col_offset": 13, "nodeName": "c_", "type": "Any"}, {"lineNumber": 606, "col_offset": 14, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "betas", "type": "Any"}, {"lineNumber": 608, "col_offset": 20, "nodeName": "T", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "betas", "type": "Any"}, {"lineNumber": 613, "col_offset": 20, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 615, "col_offset": 19, "nodeName": "betas", "type": "Any"}, {"lineNumber": 615, "col_offset": 27, "nodeName": "lam", "type": "Any"}, {"lineNumber": 616, "col_offset": 25, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 616, "col_offset": 29, "nodeName": "T", "type": "Any"}, {"lineNumber": 619, "col_offset": 18, "nodeName": "_moments", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 619, "col_offset": 32, "nodeName": "eps", "type": "Any"}, {"lineNumber": 619, "col_offset": 37, "nodeName": "betas", "type": "Any"}, {"lineNumber": 619, "col_offset": 44, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 619, "col_offset": 52, "nodeName": "pricing_errors", "type": "Any"}, {"lineNumber": 621, "col_offset": 19, "nodeName": "_jacobian", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 621, "col_offset": 34, "nodeName": "betas", "type": "Any"}, {"lineNumber": 621, "col_offset": 41, "nodeName": "lam", "type": "Any"}, {"lineNumber": 621, "col_offset": 46, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 623, "col_offset": 11, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 625, "col_offset": 11, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "cov_est_inst", "type": "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "bandwidth", "type": "Optional[float]"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "kernel", "type": "Optional[str]"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "cov_est_inst", "type": "linearmodels.asset_pricing.covariance.KernelCovariance"}, {"lineNumber": 647, "col_offset": 19, "nodeName": "cov_est_inst", "type": "Union[linearmodels.asset_pricing.covariance.KernelCovariance, linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 648, "col_offset": 20, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 649, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 650, "col_offset": 16, "nodeName": "WaldTestStatistic", "type": "Type[linearmodels.shared.hypotheses.WaldTestStatistic]"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "stat", "type": "float"}, {"lineNumber": 654, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 655, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 658, "col_offset": 17, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 659, "col_offset": 25, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 659, "col_offset": 16, "nodeName": "betas", "type": "Any"}, {"lineNumber": 660, "col_offset": 17, "nodeName": "c_", "type": "Any"}, {"lineNumber": 662, "col_offset": 25, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 664, "col_offset": 16, "nodeName": "factor", "type": "Any"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 666, "col_offset": 15, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 668, "col_offset": 22, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 672, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "order", "type": "Any"}, {"lineNumber": 673, "col_offset": 22, "nodeName": "arange", "type": "Any"}, {"lineNumber": 673, "col_offset": 32, "nodeName": "s2", "type": "int"}, {"lineNumber": 673, "col_offset": 36, "nodeName": "s3", "type": "int"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 675, "col_offset": 16, "nodeName": "r_", "type": "Any"}, {"lineNumber": 677, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 677, "col_offset": 28, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 678, "col_offset": 19, "nodeName": "factor_names", "type": "List[Any]"}, {"lineNumber": 679, "col_offset": 15, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 681, "col_offset": 14, "nodeName": "AttrDict", "type": "Type[linearmodels.shared.utility.AttrDict]"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "LinearFactorModelResults", "type": "Type[linearmodels.asset_pricing.results.LinearFactorModelResults]"}, {"lineNumber": 704, "col_offset": 40, "nodeName": "res", "type": "linearmodels.shared.utility.AttrDict"}, {"lineNumber": 706, "col_offset": 31, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 706, "col_offset": 45, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 706, "col_offset": 62, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 707, "col_offset": 14, "nodeName": "nf", "type": "int"}, {"lineNumber": 707, "col_offset": 18, "nodeName": "nport", "type": "int"}, {"lineNumber": 707, "col_offset": 25, "nodeName": "nrf", "type": "int"}, {"lineNumber": 707, "col_offset": 30, "nodeName": "s1", "type": "int"}, {"lineNumber": 707, "col_offset": 34, "nodeName": "s2", "type": "int"}, {"lineNumber": 707, "col_offset": 38, "nodeName": "s3", "type": "int"}, {"lineNumber": 707, "col_offset": 43, "nodeName": "_boundaries", "type": "Callable[[], Tuple[int, int, int, int, int, int, int]]"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 709, "col_offset": 13, "nodeName": "c_", "type": "Any"}, {"lineNumber": 710, "col_offset": 29, "nodeName": "_risk_free", "type": "bool"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 714, "col_offset": 14, "nodeName": "eye", "type": "Any"}, {"lineNumber": 715, "col_offset": 26, "nodeName": "nobs", "type": "int"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 716, "col_offset": 24, "nodeName": "kron", "type": "Any"}, {"lineNumber": 716, "col_offset": 47, "nodeName": "fpf", "type": "Any"}, {"lineNumber": 718, "col_offset": 18, "nodeName": "sigma_inv", "type": "Any"}, {"lineNumber": 718, "col_offset": 30, "nodeName": "bc", "type": "numpy.ndarray"}, {"lineNumber": 719, "col_offset": 22, "nodeName": "sigma_inv", "type": "Any"}, {"lineNumber": 719, "col_offset": 34, "nodeName": "alphas", "type": "numpy.ndarray"}, {"lineNumber": 720, "col_offset": 22, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 720, "col_offset": 15, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 721, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 721, "col_offset": 23, "nodeName": "nport", "type": "int"}, {"lineNumber": 722, "col_offset": 12, "nodeName": "block", "type": "Any"}, {"lineNumber": 725, "col_offset": 64, "nodeName": "block", "type": "Any"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 726, "col_offset": 47, "nodeName": "bc", "type": "numpy.ndarray"}, {"lineNumber": 727, "col_offset": 19, "nodeName": "r_", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 728, "col_offset": 26, "nodeName": "kron", "type": "Any"}, {"lineNumber": 728, "col_offset": 49, "nodeName": "T", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 734, "col_offset": 19, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 734, "col_offset": 35, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 734, "col_offset": 52, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 734, "col_offset": 77, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 736, "col_offset": 20, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 739, "col_offset": 14, "nodeName": "nf", "type": "int"}, {"lineNumber": 739, "col_offset": 18, "nodeName": "nport", "type": "int"}, {"lineNumber": 739, "col_offset": 25, "nodeName": "_", "type": "int"}, {"lineNumber": 739, "col_offset": 28, "nodeName": "s1", "type": "int"}, {"lineNumber": 739, "col_offset": 32, "nodeName": "s2", "type": "int"}, {"lineNumber": 739, "col_offset": 36, "nodeName": "s3", "type": "int"}, {"lineNumber": 739, "col_offset": 41, "nodeName": "_boundaries", "type": "Callable[[], Tuple[int, int, int, int, int, int, int]]"}, {"lineNumber": 740, "col_offset": 13, "nodeName": "c_", "type": "Any"}, {"lineNumber": 741, "col_offset": 16, "nodeName": "tile", "type": "Any"}, {"lineNumber": 741, "col_offset": 24, "nodeName": "fc", "type": "Any"}, {"lineNumber": 742, "col_offset": 18, "nodeName": "tile", "type": "Any"}, {"lineNumber": 742, "col_offset": 26, "nodeName": "eps", "type": "numpy.ndarray"}, {"lineNumber": 746, "col_offset": 13, "nodeName": "f_rep", "type": "Any"}, {"lineNumber": 746, "col_offset": 21, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 747, "col_offset": 42, "nodeName": "betas", "type": "numpy.ndarray"}, {"lineNumber": 748, "col_offset": 13, "nodeName": "pricing_errors", "type": "numpy.ndarray"}, {"lineNumber": 748, "col_offset": 30, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 750, "col_offset": 15, "nodeName": "c_", "type": "Any"}, {"lineNumber": 798, "col_offset": 23, "nodeName": "IVDataLike", "type": "Any"}, {"lineNumber": 798, "col_offset": 47, "nodeName": "IVDataLike", "type": "Any"}, {"lineNumber": 798, "col_offset": 73, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 801, "col_offset": 12, "nodeName": "factors", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "factors", "type": "Any"}, {"lineNumber": 854, "col_offset": 17, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 854, "col_offset": 29, "nodeName": "formula", "type": "str"}, {"lineNumber": 854, "col_offset": 39, "nodeName": "_prepare_data_from_formula", "type": "Callable[[str, Any, Any], Tuple[Any, Any, str]]"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "formula", "type": "str"}, {"lineNumber": 855, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 855, "col_offset": 27, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 857, "col_offset": 14, "nodeName": "cls", "type": "Type[LinearFactorModelGMM]"}, {"lineNumber": 857, "col_offset": 18, "nodeName": "portfolios", "type": "Any"}, {"lineNumber": 857, "col_offset": 30, "nodeName": "factors", "type": "Any"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "mod", "type": "LinearFactorModelGMM"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 922, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 922, "col_offset": 18, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 924, "col_offset": 29, "nodeName": "_risk_free", "type": "bool"}, {"lineNumber": 925, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 927, "col_offset": 14, "nodeName": "LinearFactorModel", "type": "Type[LinearFactorModel]"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 928, "col_offset": 29, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 930, "col_offset": 14, "nodeName": "fit", "type": "Callable[..., linearmodels.asset_pricing.results.LinearFactorModelResults]"}, {"lineNumber": 931, "col_offset": 16, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 932, "col_offset": 14, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 932, "col_offset": 25, "nodeName": "risk_premia", "type": "Any"}, {"lineNumber": 933, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 935, "col_offset": 11, "nodeName": "starting", "type": "Any"}, {"lineNumber": 936, "col_offset": 12, "nodeName": "starting", "type": "numpy.ndarray"}, {"lineNumber": 941, "col_offset": 12, "nodeName": "sv", "type": "Any"}, {"lineNumber": 941, "col_offset": 17, "nodeName": "starting", "type": "Any"}, {"lineNumber": 943, "col_offset": 12, "nodeName": "_moments", "type": "Callable[[numpy.ndarray, bool], numpy.ndarray]"}, {"lineNumber": 943, "col_offset": 26, "nodeName": "sv", "type": "Any"}, {"lineNumber": 943, "col_offset": 30, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 944, "col_offset": 35, "nodeName": "center", "type": "bool"}, {"lineNumber": 947, "col_offset": 11, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 949, "col_offset": 11, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 950, "col_offset": 12, "nodeName": "weight_est_instance", "type": "linearmodels.asset_pricing.covariance.HeteroskedasticWeight"}, {"lineNumber": 951, "col_offset": 12, "nodeName": "cov_est", "type": "Type[linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 951, "col_offset": 22, "nodeName": "HeteroskedasticCovariance", "type": "Type[linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 953, "col_offset": 12, "nodeName": "kernel", "type": "Optional[str]"}, {"lineNumber": 954, "col_offset": 12, "nodeName": "bandwidth", "type": "Optional[float]"}, {"lineNumber": 955, "col_offset": 12, "nodeName": "weight_est_instance", "type": "linearmodels.asset_pricing.covariance.KernelWeight"}, {"lineNumber": 958, "col_offset": 12, "nodeName": "cov_est", "type": "Type[linearmodels.asset_pricing.covariance.KernelCovariance]"}, {"lineNumber": 958, "col_offset": 22, "nodeName": "KernelCovariance", "type": "Type[linearmodels.asset_pricing.covariance.KernelCovariance]"}, {"lineNumber": 960, "col_offset": 12, "nodeName": "w", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 960, "col_offset": 34, "nodeName": "g", "type": "Any"}, {"lineNumber": 962, "col_offset": 16, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 962, "col_offset": 32, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 965, "col_offset": 19, "nodeName": "callback_factory", "type": "Callable[..., Callable[[numpy.ndarray], None]]"}, {"lineNumber": 965, "col_offset": 36, "nodeName": "_j", "type": "Callable[[numpy.ndarray, bool, numpy.ndarray], float]"}, {"lineNumber": 965, "col_offset": 45, "nodeName": "args", "type": "Tuple[bool, numpy.ndarray]"}, {"lineNumber": 966, "col_offset": 56, "nodeName": "callback", "type": "Callable[[numpy.ndarray], None]"}, {"lineNumber": 967, "col_offset": 50, "nodeName": "max_iter", "type": "int"}, {"lineNumber": 968, "col_offset": 53, "nodeName": "opt_options", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 970, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 970, "col_offset": 32, "nodeName": "opt_options", "type": "Optional[Union[Dict[str, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "_default_options", "type": "Dict[Any, Any]"}, {"lineNumber": 972, "col_offset": 18, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 978, "col_offset": 17, "nodeName": "opt_res", "type": "Any"}, {"lineNumber": 979, "col_offset": 19, "nodeName": "opt_res", "type": "Any"}, {"lineNumber": 982, "col_offset": 15, "nodeName": "use_cue", "type": "bool"}, {"lineNumber": 1005, "col_offset": 12, "nodeName": "cue_args", "type": "Tuple[bool, Union[linearmodels.asset_pricing.covariance.KernelWeight, linearmodels.asset_pricing.covariance.HeteroskedasticWeight]]"}, {"lineNumber": 1006, "col_offset": 12, "nodeName": "callback", "type": "Callable[[numpy.ndarray], None]"}, {"lineNumber": 1007, "col_offset": 12, "nodeName": "opt_res", "type": "Any"}, {"lineNumber": 1014, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 1014, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1017, "col_offset": 12, "nodeName": "_moments", "type": "Callable[[numpy.ndarray, bool], numpy.ndarray]"}, {"lineNumber": 1017, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 1017, "col_offset": 34, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1018, "col_offset": 22, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1019, "col_offset": 14, "nodeName": "_jacobian", "type": "Callable[[numpy.ndarray, bool], numpy.ndarray]"}, {"lineNumber": 1019, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 1019, "col_offset": 37, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1020, "col_offset": 11, "nodeName": "cov_est", "type": "Union[Type[linearmodels.asset_pricing.covariance.KernelCovariance], Type[linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]]"}, {"lineNumber": 1020, "col_offset": 22, "nodeName": "HeteroskedasticCovariance", "type": "Type[linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 1021, "col_offset": 12, "nodeName": "cov_est_inst", "type": "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance"}, {"lineNumber": 1029, "col_offset": 12, "nodeName": "cov_est_inst", "type": "linearmodels.asset_pricing.covariance.KernelCovariance"}, {"lineNumber": 1039, "col_offset": 19, "nodeName": "cov_est_inst", "type": "Union[linearmodels.asset_pricing.covariance.KernelCovariance, linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 1040, "col_offset": 14, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 1041, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 1042, "col_offset": 17, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 1043, "col_offset": 14, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 1045, "col_offset": 34, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1046, "col_offset": 15, "nodeName": "_j", "type": "Callable[[numpy.ndarray, bool, numpy.ndarray], float]"}, {"lineNumber": 1046, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 1046, "col_offset": 31, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1046, "col_offset": 47, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 1047, "col_offset": 16, "nodeName": "WaldTestStatistic", "type": "Type[linearmodels.shared.hypotheses.WaldTestStatistic]"}, {"lineNumber": 1048, "col_offset": 12, "nodeName": "stat", "type": "float"}, {"lineNumber": 1052, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1053, "col_offset": 17, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 1055, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 1056, "col_offset": 16, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1057, "col_offset": 16, "nodeName": "total", "type": "numpy.ndarray"}, {"lineNumber": 1058, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 1061, "col_offset": 25, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1062, "col_offset": 16, "nodeName": "factor", "type": "Any"}, {"lineNumber": 1062, "col_offset": 26, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1064, "col_offset": 15, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1066, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 1069, "col_offset": 15, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1071, "col_offset": 17, "nodeName": "c_", "type": "Any"}, {"lineNumber": 1073, "col_offset": 19, "nodeName": "AttrDict", "type": "Type[linearmodels.shared.utility.AttrDict]"}, {"lineNumber": 1097, "col_offset": 15, "nodeName": "GMMFactorModelResults", "type": "Type[linearmodels.asset_pricing.results.GMMFactorModelResults]"}, {"lineNumber": 1097, "col_offset": 37, "nodeName": "res_dict", "type": "linearmodels.shared.utility.AttrDict"}, {"lineNumber": 1099, "col_offset": 35, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1099, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1101, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1102, "col_offset": 12, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1103, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1103, "col_offset": 14, "nodeName": "n", "type": "int"}, {"lineNumber": 1103, "col_offset": 18, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1105, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "s1", "type": "int"}, {"lineNumber": 1106, "col_offset": 12, "nodeName": "s2", "type": "int"}, {"lineNumber": 1107, "col_offset": 16, "nodeName": "parameters", "type": "numpy.ndarray"}, {"lineNumber": 1108, "col_offset": 14, "nodeName": "parameters", "type": "numpy.ndarray"}, {"lineNumber": 1109, "col_offset": 13, "nodeName": "parameters", "type": "numpy.ndarray"}, {"lineNumber": 1110, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1110, "col_offset": 27, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1111, "col_offset": 53, "nodeName": "lam", "type": "Any"}, {"lineNumber": 1112, "col_offset": 13, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 1112, "col_offset": 17, "nodeName": "T", "type": "Any"}, {"lineNumber": 1114, "col_offset": 12, "nodeName": "c_", "type": "Any"}, {"lineNumber": 1115, "col_offset": 12, "nodeName": "tile", "type": "Any"}, {"lineNumber": 1115, "col_offset": 20, "nodeName": "f", "type": "Any"}, {"lineNumber": 1117, "col_offset": 12, "nodeName": "c_", "type": "Any"}, {"lineNumber": 1120, "col_offset": 29, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1120, "col_offset": 54, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1120, "col_offset": 63, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1122, "col_offset": 12, "nodeName": "_moments", "type": "Callable[[numpy.ndarray, bool], numpy.ndarray]"}, {"lineNumber": 1122, "col_offset": 26, "nodeName": "parameters", "type": "numpy.ndarray"}, {"lineNumber": 1122, "col_offset": 38, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1123, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1125, "col_offset": 15, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1129, "col_offset": 20, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1130, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1134, "col_offset": 12, "nodeName": "_moments", "type": "Callable[[numpy.ndarray, bool], numpy.ndarray]"}, {"lineNumber": 1134, "col_offset": 26, "nodeName": "parameters", "type": "numpy.ndarray"}, {"lineNumber": 1134, "col_offset": 38, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1136, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1137, "col_offset": 12, "nodeName": "w", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 1137, "col_offset": 25, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1138, "col_offset": 15, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1140, "col_offset": 32, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1140, "col_offset": 57, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1142, "col_offset": 8, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1142, "col_offset": 14, "nodeName": "k", "type": "int"}, {"lineNumber": 1142, "col_offset": 18, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1144, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 1145, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1146, "col_offset": 8, "nodeName": "s1", "type": "int"}, {"lineNumber": 1146, "col_offset": 12, "nodeName": "s2", "type": "int"}, {"lineNumber": 1147, "col_offset": 16, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 1148, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1148, "col_offset": 27, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1149, "col_offset": 14, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 1150, "col_offset": 13, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 1151, "col_offset": 27, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1151, "col_offset": 20, "nodeName": "lam", "type": "Any"}, {"lineNumber": 1152, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1153, "col_offset": 24, "nodeName": "T", "type": "Any"}, {"lineNumber": 1154, "col_offset": 16, "nodeName": "c_", "type": "Any"}, {"lineNumber": 1155, "col_offset": 29, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1156, "col_offset": 13, "nodeName": "n", "type": "int"}, {"lineNumber": 1157, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 1157, "col_offset": 24, "nodeName": "kron", "type": "Any"}, {"lineNumber": 1157, "col_offset": 43, "nodeName": "fef", "type": "Any"}, {"lineNumber": 1159, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1160, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1161, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1162, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 1162, "col_offset": 23, "nodeName": "n", "type": "int"}, {"lineNumber": 1163, "col_offset": 15, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1169, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1171, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 1172, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 1173, "col_offset": 8, "nodeName": "jac", "type": "Any"}, {"lineNumber": 1173, "col_offset": 24, "nodeName": "eye", "type": "Any"}, {"lineNumber": 1173, "col_offset": 31, "nodeName": "k", "type": "int"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "args", "type": "Tuple[bool, Any]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "disp", "type": "int"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "NDArray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "self", "type": "_FactorModelBase"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "__str__", "type": "Callable[[], str]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "_FactorModelBase"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "self", "type": "_FactorModelBase"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "any", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "missing", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "drop", "type": "Callable[[Any], None]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "missing", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "drop", "type": "Callable[[Any], None]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "missing", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "has_constant", "type": "Callable[..., Tuple[bool, Optional[int]]]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "has_constant", "type": "Callable[..., Tuple[bool, Optional[int]]]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "matrix_rank", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "dmatrix", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "dmatrix", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "dmatrix", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 195, "col_offset": 59, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "cls", "type": "Type[TradedFactorModel]"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "Union", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "pinv", "type": "Any"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "fc", "type": "Any"}, {"lineNumber": 284, "col_offset": 18, "nodeName": "fc", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "nfactor", "type": "int"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "nloading", "type": "int"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "nfactor", "type": "int"}, {"lineNumber": 289, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "eye", "type": "Any"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "pinv", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "nobs", "type": "int"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "HeteroskedasticCovariance", "type": "Type[linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "xe", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "HeteroskedasticCovariance", "type": "Type[linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "fe", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "kernel", "type": "Optional[str]"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "bandwidth", "type": "Optional[float]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "cov_est", "type": "linearmodels.asset_pricing.covariance.KernelCovariance"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "bw", "type": "float"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "bandwidth", "type": "float"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "_cov_config", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 319, "col_offset": 39, "nodeName": "bw", "type": "float"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "rp_cov_est", "type": "linearmodels.asset_pricing.covariance.KernelCovariance"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 337, "col_offset": 52, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "T", "type": "Any"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "vcv", "type": "Any"}, {"lineNumber": 344, "col_offset": 60, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "residual_ss", "type": "Any"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "total_ss", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 357, "col_offset": 26, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 359, "col_offset": 22, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 365, "col_offset": 18, "nodeName": "betas", "type": "Any"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "rp", "type": "Any"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "rp_cov", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "alpha_vcv", "type": "Any"}, {"lineNumber": 370, "col_offset": 18, "nodeName": "jstat", "type": "linearmodels.shared.hypotheses.WaldTestStatistic"}, {"lineNumber": 371, "col_offset": 21, "nodeName": "r2", "type": "Any"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "total_ss", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "residual_ss", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 375, "col_offset": 28, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "_name", "type": "Any"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 379, "col_offset": 18, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "nobs", "type": "int"}, {"lineNumber": 381, "col_offset": 21, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "cov_est", "type": "Union[linearmodels.asset_pricing.covariance.KernelCovariance, linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 399, "col_offset": 15, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 405, "col_offset": 62, "nodeName": "eye", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 409, "col_offset": 37, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "vals", "type": "Any"}, {"lineNumber": 410, "col_offset": 18, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "eigh", "type": "Any"}, {"lineNumber": 410, "col_offset": 40, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 411, "col_offset": 68, "nodeName": "T", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 412, "col_offset": 30, "nodeName": "inv", "type": "Any"}, {"lineNumber": 412, "col_offset": 44, "nodeName": "_sigma", "type": "numpy.ndarray"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "_sigma", "type": "Any"}, {"lineNumber": 418, "col_offset": 56, "nodeName": "self", "type": "_LinearFactorModelBase"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 425, "col_offset": 14, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 425, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 425, "col_offset": 31, "nodeName": "_risk_free", "type": "bool"}, {"lineNumber": 426, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 436, "col_offset": 18, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "_risk_free", "type": "bool"}, {"lineNumber": 438, "col_offset": 14, "nodeName": "nf", "type": "int"}, {"lineNumber": 439, "col_offset": 19, "nodeName": "nf", "type": "int"}, {"lineNumber": 439, "col_offset": 24, "nodeName": "nrf", "type": "int"}, {"lineNumber": 433, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 433, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 433, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 433, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 433, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 433, "col_offset": 60, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 433, "col_offset": 65, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 504, "col_offset": 43, "nodeName": "risk_free", "type": "bool"}, {"lineNumber": 504, "col_offset": 60, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 515, "col_offset": 15, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 560, "col_offset": 39, "nodeName": "cls", "type": "Type[LinearFactorModel]"}, {"lineNumber": 563, "col_offset": 49, "nodeName": "risk_free", "type": "bool"}, {"lineNumber": 563, "col_offset": 66, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 571, "col_offset": 22, "nodeName": "Union", "type": "Any"}, {"lineNumber": 597, "col_offset": 43, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 598, "col_offset": 29, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 599, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 601, "col_offset": 16, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 604, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "lstsq", "type": "Any"}, {"lineNumber": 605, "col_offset": 18, "nodeName": "fc", "type": "Any"}, {"lineNumber": 605, "col_offset": 22, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 606, "col_offset": 18, "nodeName": "fc", "type": "Any"}, {"lineNumber": 606, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 610, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "betas", "type": "Any"}, {"lineNumber": 614, "col_offset": 14, "nodeName": "lstsq", "type": "Any"}, {"lineNumber": 616, "col_offset": 29, "nodeName": "expected", "type": "Any"}, {"lineNumber": 618, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 619, "col_offset": 18, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 621, "col_offset": 19, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 624, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 626, "col_offset": 27, "nodeName": "HeteroskedasticCovariance", "type": "Type[linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "moments", "type": "numpy.ndarray"}, {"lineNumber": 634, "col_offset": 24, "nodeName": "get_float", "type": "Callable[[Mapping[str, Any], str], Optional[float]]"}, {"lineNumber": 634, "col_offset": 34, "nodeName": "cov_config", "type": "Dict[str, Union[bool, int, str]]"}, {"lineNumber": 635, "col_offset": 21, "nodeName": "get_string", "type": "Callable[[Mapping[str, Any], str], Optional[str]]"}, {"lineNumber": 635, "col_offset": 32, "nodeName": "cov_config", "type": "Dict[str, Union[bool, int, str]]"}, {"lineNumber": 636, "col_offset": 27, "nodeName": "KernelCovariance", "type": "Type[linearmodels.asset_pricing.covariance.KernelCovariance]"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "moments", "type": "numpy.ndarray"}, {"lineNumber": 649, "col_offset": 60, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 651, "col_offset": 51, "nodeName": "nrf", "type": "int"}, {"lineNumber": 656, "col_offset": 17, "nodeName": "residual_ss", "type": "Any"}, {"lineNumber": 656, "col_offset": 31, "nodeName": "total_ss", "type": "Any"}, {"lineNumber": 659, "col_offset": 45, "nodeName": "betas", "type": "Any"}, {"lineNumber": 660, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 662, "col_offset": 25, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 668, "col_offset": 22, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 672, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 672, "col_offset": 27, "nodeName": "arange", "type": "Any"}, {"lineNumber": 672, "col_offset": 37, "nodeName": "s1", "type": "int"}, {"lineNumber": 672, "col_offset": 43, "nodeName": "nport", "type": "int"}, {"lineNumber": 673, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "order", "type": "Any"}, {"lineNumber": 675, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 19, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 677, "col_offset": 28, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 682, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 683, "col_offset": 16, "nodeName": "full_vcv", "type": "Any"}, {"lineNumber": 684, "col_offset": 18, "nodeName": "betas", "type": "Any"}, {"lineNumber": 685, "col_offset": 15, "nodeName": "rp", "type": "Any"}, {"lineNumber": 686, "col_offset": 19, "nodeName": "rp_cov", "type": "Any"}, {"lineNumber": 687, "col_offset": 19, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 688, "col_offset": 22, "nodeName": "alpha_vcv", "type": "Any"}, {"lineNumber": 689, "col_offset": 18, "nodeName": "jstat", "type": "linearmodels.shared.hypotheses.WaldTestStatistic"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "r2", "type": "Any"}, {"lineNumber": 691, "col_offset": 21, "nodeName": "total_ss", "type": "Any"}, {"lineNumber": 692, "col_offset": 24, "nodeName": "residual_ss", "type": "Any"}, {"lineNumber": 693, "col_offset": 24, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 694, "col_offset": 28, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "factor_names", "type": "List[Any]"}, {"lineNumber": 696, "col_offset": 17, "nodeName": "_name", "type": "Any"}, {"lineNumber": 697, "col_offset": 21, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 698, "col_offset": 18, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 699, "col_offset": 17, "nodeName": "nobs", "type": "int"}, {"lineNumber": 700, "col_offset": 21, "nodeName": "rp_names", "type": "List[Any]"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "cov_est_inst", "type": "Union[linearmodels.asset_pricing.covariance.KernelCovariance, linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 707, "col_offset": 43, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 709, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 710, "col_offset": 29, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 714, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 714, "col_offset": 55, "nodeName": "nport", "type": "int"}, {"lineNumber": 715, "col_offset": 14, "nodeName": "T", "type": "Any"}, {"lineNumber": 715, "col_offset": 21, "nodeName": "fc", "type": "Any"}, {"lineNumber": 716, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 716, "col_offset": 32, "nodeName": "eye", "type": "Any"}, {"lineNumber": 716, "col_offset": 39, "nodeName": "nport", "type": "int"}, {"lineNumber": 720, "col_offset": 42, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 722, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 723, "col_offset": 12, "nodeName": "block", "type": "Any"}, {"lineNumber": 723, "col_offset": 27, "nodeName": "T", "type": "Any"}, {"lineNumber": 723, "col_offset": 44, "nodeName": "T", "type": "Any"}, {"lineNumber": 724, "col_offset": 12, "nodeName": "block", "type": "Any"}, {"lineNumber": 725, "col_offset": 12, "nodeName": "jac", "type": "Any"}, {"lineNumber": 726, "col_offset": 28, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 726, "col_offset": 35, "nodeName": "sigma_inv", "type": "Any"}, {"lineNumber": 727, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 728, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 728, "col_offset": 34, "nodeName": "eye", "type": "Any"}, {"lineNumber": 728, "col_offset": 41, "nodeName": "nport", "type": "int"}, {"lineNumber": 728, "col_offset": 49, "nodeName": "zero_lam", "type": "Any"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 739, "col_offset": 41, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 740, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 32, "nodeName": "nport", "type": "int"}, {"lineNumber": 742, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 743, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 743, "col_offset": 29, "nodeName": "T", "type": "Any"}, {"lineNumber": 747, "col_offset": 13, "nodeName": "pricing_errors", "type": "numpy.ndarray"}, {"lineNumber": 747, "col_offset": 30, "nodeName": "sigma_inv", "type": "Any"}, {"lineNumber": 748, "col_offset": 30, "nodeName": "alphas", "type": "numpy.ndarray"}, {"lineNumber": 750, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 801, "col_offset": 43, "nodeName": "risk_free", "type": "bool"}, {"lineNumber": 854, "col_offset": 39, "nodeName": "cls", "type": "Type[LinearFactorModelGMM]"}, {"lineNumber": 857, "col_offset": 49, "nodeName": "risk_free", "type": "bool"}, {"lineNumber": 872, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 873, "col_offset": 22, "nodeName": "Union", "type": "Any"}, {"lineNumber": 922, "col_offset": 18, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 924, "col_offset": 29, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 928, "col_offset": 29, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 928, "col_offset": 53, "nodeName": "_risk_free", "type": "bool"}, {"lineNumber": 930, "col_offset": 14, "nodeName": "mod", "type": "LinearFactorModel"}, {"lineNumber": 932, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 932, "col_offset": 25, "nodeName": "res", "type": "linearmodels.asset_pricing.results.LinearFactorModelResults"}, {"lineNumber": 933, "col_offset": 13, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 934, "col_offset": 13, "nodeName": "r_", "type": "Any"}, {"lineNumber": 936, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 936, "col_offset": 34, "nodeName": "starting", "type": "Any"}, {"lineNumber": 937, "col_offset": 15, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 938, "col_offset": 16, "nodeName": "starting", "type": "Any"}, {"lineNumber": 939, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 939, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 943, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 948, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 950, "col_offset": 34, "nodeName": "HeteroskedasticWeight", "type": "Type[linearmodels.asset_pricing.covariance.HeteroskedasticWeight]"}, {"lineNumber": 950, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 953, "col_offset": 21, "nodeName": "get_string", "type": "Callable[[Mapping[str, Any], str], Optional[str]]"}, {"lineNumber": 953, "col_offset": 32, "nodeName": "cov_config", "type": "Dict[str, Union[bool, int, str]]"}, {"lineNumber": 954, "col_offset": 24, "nodeName": "get_float", "type": "Callable[[Mapping[str, Any], str], Optional[float]]"}, {"lineNumber": 954, "col_offset": 34, "nodeName": "cov_config", "type": "Dict[str, Union[bool, int, str]]"}, {"lineNumber": 955, "col_offset": 34, "nodeName": "KernelWeight", "type": "Type[linearmodels.asset_pricing.covariance.KernelWeight]"}, {"lineNumber": 956, "col_offset": 16, "nodeName": "g", "type": "Any"}, {"lineNumber": 960, "col_offset": 12, "nodeName": "weight_est_instance", "type": "Union[linearmodels.asset_pricing.covariance.KernelWeight, linearmodels.asset_pricing.covariance.HeteroskedasticWeight]"}, {"lineNumber": 965, "col_offset": 36, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 965, "col_offset": 56, "nodeName": "disp", "type": "int"}, {"lineNumber": 967, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 967, "col_offset": 32, "nodeName": "disp", "type": "int"}, {"lineNumber": 968, "col_offset": 28, "nodeName": "opt_options", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "options", "type": "Dict[Union[str, Any], Union[int, bool, Any]]"}, {"lineNumber": 969, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 970, "col_offset": 8, "nodeName": "_default_options", "type": "Dict[Any, Any]"}, {"lineNumber": 973, "col_offset": 16, "nodeName": "_j", "type": "Callable[[numpy.ndarray, bool, numpy.ndarray], float]"}, {"lineNumber": 974, "col_offset": 15, "nodeName": "sv", "type": "Any"}, {"lineNumber": 975, "col_offset": 17, "nodeName": "args", "type": "Tuple[bool, numpy.ndarray]"}, {"lineNumber": 976, "col_offset": 14, "nodeName": "_default_options", "type": "Dict[Any, Any]"}, {"lineNumber": 983, "col_offset": 18, "nodeName": "iters", "type": "int"}, {"lineNumber": 983, "col_offset": 26, "nodeName": "steps", "type": "int"}, {"lineNumber": 984, "col_offset": 16, "nodeName": "iters", "type": "int"}, {"lineNumber": 985, "col_offset": 16, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 986, "col_offset": 16, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 987, "col_offset": 16, "nodeName": "args", "type": "Tuple[bool, numpy.ndarray]"}, {"lineNumber": 990, "col_offset": 16, "nodeName": "callback", "type": "Callable[[numpy.ndarray], None]"}, {"lineNumber": 991, "col_offset": 16, "nodeName": "opt_res", "type": "Any"}, {"lineNumber": 998, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 998, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 999, "col_offset": 16, "nodeName": "obj", "type": "Any"}, {"lineNumber": 999, "col_offset": 22, "nodeName": "fun", "type": "Any"}, {"lineNumber": 1002, "col_offset": 16, "nodeName": "last_obj", "type": "Any"}, {"lineNumber": 1002, "col_offset": 27, "nodeName": "obj", "type": "Any"}, {"lineNumber": 1005, "col_offset": 24, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1005, "col_offset": 40, "nodeName": "weight_est_instance", "type": "Union[linearmodels.asset_pricing.covariance.KernelWeight, linearmodels.asset_pricing.covariance.HeteroskedasticWeight]"}, {"lineNumber": 1006, "col_offset": 23, "nodeName": "callback_factory", "type": "Callable[..., Callable[[numpy.ndarray], None]]"}, {"lineNumber": 1006, "col_offset": 40, "nodeName": "_j_cue", "type": "Callable[[numpy.ndarray, bool, Union[linearmodels.asset_pricing.covariance.HeteroskedasticWeight, linearmodels.asset_pricing.covariance.KernelWeight]], float]"}, {"lineNumber": 1006, "col_offset": 53, "nodeName": "cue_args", "type": "Tuple[bool, Union[linearmodels.asset_pricing.covariance.KernelWeight, linearmodels.asset_pricing.covariance.HeteroskedasticWeight]]"}, {"lineNumber": 1007, "col_offset": 22, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 1008, "col_offset": 16, "nodeName": "_j_cue", "type": "Callable[[numpy.ndarray, bool, Union[linearmodels.asset_pricing.covariance.HeteroskedasticWeight, linearmodels.asset_pricing.covariance.KernelWeight]], float]"}, {"lineNumber": 1009, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 1014, "col_offset": 21, "nodeName": "opt_res", "type": "Any"}, {"lineNumber": 1017, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1018, "col_offset": 12, "nodeName": "T", "type": "numpy.ndarray"}, {"lineNumber": 1018, "col_offset": 18, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1019, "col_offset": 14, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1021, "col_offset": 27, "nodeName": "HeteroskedasticCovariance", "type": "Type[linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 1022, "col_offset": 16, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1029, "col_offset": 27, "nodeName": "KernelCovariance", "type": "Type[linearmodels.asset_pricing.covariance.KernelCovariance]"}, {"lineNumber": 1030, "col_offset": 16, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1040, "col_offset": 21, "nodeName": "n", "type": "int"}, {"lineNumber": 1040, "col_offset": 25, "nodeName": "k", "type": "int"}, {"lineNumber": 1040, "col_offset": 42, "nodeName": "nrf", "type": "int"}, {"lineNumber": 1041, "col_offset": 20, "nodeName": "sel", "type": "slice"}, {"lineNumber": 1043, "col_offset": 24, "nodeName": "n", "type": "int"}, {"lineNumber": 1043, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 1044, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1045, "col_offset": 20, "nodeName": "s", "type": "Any"}, {"lineNumber": 1046, "col_offset": 15, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1048, "col_offset": 46, "nodeName": "nrf", "type": "int"}, {"lineNumber": 1052, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1052, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 1052, "col_offset": 47, "nodeName": "n", "type": "int"}, {"lineNumber": 1052, "col_offset": 50, "nodeName": "k", "type": "int"}, {"lineNumber": 1053, "col_offset": 17, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1053, "col_offset": 43, "nodeName": "ndarray", "type": "numpy.ndarray"}, {"lineNumber": 1053, "col_offset": 66, "nodeName": "T", "type": "Any"}, {"lineNumber": 1054, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1056, "col_offset": 16, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1059, "col_offset": 19, "nodeName": "residual_ss", "type": "Any"}, {"lineNumber": 1059, "col_offset": 33, "nodeName": "total_ss", "type": "Any"}, {"lineNumber": 1061, "col_offset": 25, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1062, "col_offset": 26, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1065, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1066, "col_offset": 8, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 1067, "col_offset": 8, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 1068, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1068, "col_offset": 24, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1070, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 1071, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1074, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 1075, "col_offset": 16, "nodeName": "full_vcv", "type": "numpy.ndarray"}, {"lineNumber": 1076, "col_offset": 18, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1077, "col_offset": 15, "nodeName": "rp", "type": "Any"}, {"lineNumber": 1078, "col_offset": 19, "nodeName": "rp_cov", "type": "Any"}, {"lineNumber": 1079, "col_offset": 19, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 1080, "col_offset": 22, "nodeName": "alpha_vcv", "type": "Any"}, {"lineNumber": 1081, "col_offset": 18, "nodeName": "jstat", "type": "linearmodels.shared.hypotheses.WaldTestStatistic"}, {"lineNumber": 1082, "col_offset": 21, "nodeName": "r2", "type": "Any"}, {"lineNumber": 1083, "col_offset": 21, "nodeName": "total_ss", "type": "Any"}, {"lineNumber": 1084, "col_offset": 24, "nodeName": "residual_ss", "type": "Any"}, {"lineNumber": 1085, "col_offset": 24, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 1086, "col_offset": 28, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1087, "col_offset": 25, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1088, "col_offset": 17, "nodeName": "_name", "type": "Any"}, {"lineNumber": 1089, "col_offset": 21, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 1090, "col_offset": 18, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1091, "col_offset": 17, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1092, "col_offset": 21, "nodeName": "rp_names", "type": "List[Any]"}, {"lineNumber": 1093, "col_offset": 17, "nodeName": "iters", "type": "int"}, {"lineNumber": 1094, "col_offset": 20, "nodeName": "cov_est_inst", "type": "Union[linearmodels.asset_pricing.covariance.KernelCovariance, linearmodels.asset_pricing.covariance.HeteroskedasticCovariance]"}, {"lineNumber": 1101, "col_offset": 22, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1102, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1105, "col_offset": 12, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 1106, "col_offset": 17, "nodeName": "n", "type": "int"}, {"lineNumber": 1106, "col_offset": 21, "nodeName": "k", "type": "int"}, {"lineNumber": 1106, "col_offset": 36, "nodeName": "nrf", "type": "int"}, {"lineNumber": 1107, "col_offset": 28, "nodeName": "s1", "type": "int"}, {"lineNumber": 1108, "col_offset": 25, "nodeName": "s1", "type": "int"}, {"lineNumber": 1108, "col_offset": 28, "nodeName": "s2", "type": "int"}, {"lineNumber": 1109, "col_offset": 24, "nodeName": "s2", "type": "int"}, {"lineNumber": 1110, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1110, "col_offset": 35, "nodeName": "n", "type": "int"}, {"lineNumber": 1110, "col_offset": 38, "nodeName": "k", "type": "int"}, {"lineNumber": 1111, "col_offset": 19, "nodeName": "c_", "type": "Any"}, {"lineNumber": 1112, "col_offset": 17, "nodeName": "mu", "type": "Any"}, {"lineNumber": 1113, "col_offset": 14, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 1113, "col_offset": 18, "nodeName": "T", "type": "Any"}, {"lineNumber": 1113, "col_offset": 31, "nodeName": "fe", "type": "Any"}, {"lineNumber": 1113, "col_offset": 36, "nodeName": "T", "type": "Any"}, {"lineNumber": 1114, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1115, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1115, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 1116, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1116, "col_offset": 25, "nodeName": "T", "type": "Any"}, {"lineNumber": 1117, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1122, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1123, "col_offset": 15, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1124, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1125, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1131, "col_offset": 20, "nodeName": "Union", "type": "Any"}, {"lineNumber": 1134, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1135, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1136, "col_offset": 15, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1137, "col_offset": 12, "nodeName": "weight_est", "type": "Union[linearmodels.asset_pricing.covariance.HeteroskedasticWeight, linearmodels.asset_pricing.covariance.KernelWeight]"}, {"lineNumber": 1138, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 1142, "col_offset": 18, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1144, "col_offset": 18, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1145, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1146, "col_offset": 18, "nodeName": "n", "type": "int"}, {"lineNumber": 1146, "col_offset": 22, "nodeName": "k", "type": "int"}, {"lineNumber": 1146, "col_offset": 40, "nodeName": "nrf", "type": "int"}, {"lineNumber": 1147, "col_offset": 24, "nodeName": "s1", "type": "int"}, {"lineNumber": 1148, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1148, "col_offset": 35, "nodeName": "n", "type": "int"}, {"lineNumber": 1148, "col_offset": 38, "nodeName": "k", "type": "int"}, {"lineNumber": 1149, "col_offset": 21, "nodeName": "s1", "type": "int"}, {"lineNumber": 1149, "col_offset": 24, "nodeName": "s2", "type": "int"}, {"lineNumber": 1151, "col_offset": 47, "nodeName": "lam", "type": "Any"}, {"lineNumber": 1152, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1153, "col_offset": 13, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 1153, "col_offset": 17, "nodeName": "T", "type": "Any"}, {"lineNumber": 1153, "col_offset": 24, "nodeName": "lam_tilde", "type": "Any"}, {"lineNumber": 1154, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1155, "col_offset": 14, "nodeName": "T", "type": "Any"}, {"lineNumber": 1155, "col_offset": 24, "nodeName": "fe", "type": "Any"}, {"lineNumber": 1156, "col_offset": 18, "nodeName": "k", "type": "int"}, {"lineNumber": 1157, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 1157, "col_offset": 32, "nodeName": "eye", "type": "Any"}, {"lineNumber": 1157, "col_offset": 39, "nodeName": "n", "type": "int"}, {"lineNumber": 1159, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1159, "col_offset": 26, "nodeName": "r1", "type": "int"}, {"lineNumber": 1160, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1160, "col_offset": 26, "nodeName": "r1", "type": "int"}, {"lineNumber": 1160, "col_offset": 30, "nodeName": "k", "type": "int"}, {"lineNumber": 1161, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1161, "col_offset": 24, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1164, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 1166, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 1167, "col_offset": 12, "nodeName": "jac12", "type": "Any"}, {"lineNumber": 1167, "col_offset": 78, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1169, "col_offset": 16, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1170, "col_offset": 12, "nodeName": "jac13", "type": "Any"}, {"lineNumber": 1170, "col_offset": 79, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1173, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "disp", "type": "int"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 46, "col_offset": 69, "nodeName": "fval", "type": "float"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "_FactorModelBase"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "hex", "type": "Callable[[int], str]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "c_", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "linalg", "type": "module"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "formula", "type": "str"}, {"lineNumber": 141, "col_offset": 75, "nodeName": "na_action", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "formula", "type": "str"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "na_action", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "na_action", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 195, "col_offset": 68, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 13, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "linalg", "type": "module"}, {"lineNumber": 289, "col_offset": 14, "nodeName": "nloading", "type": "int"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "nloading", "type": "int"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "linalg", "type": "module"}, {"lineNumber": 290, "col_offset": 59, "nodeName": "nobs", "type": "int"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "nfactor", "type": "int"}, {"lineNumber": 295, "col_offset": 61, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "xe", "type": "Any"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "fe", "type": "Any"}, {"lineNumber": 300, "col_offset": 33, "nodeName": "xpxi", "type": "Any"}, {"lineNumber": 300, "col_offset": 62, "nodeName": "debiased", "type": "bool"}, {"lineNumber": 303, "col_offset": 72, "nodeName": "debiased", "type": "bool"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "get_string", "type": "Callable[[Mapping[str, Any], str], Optional[str]]"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "cov_config", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "get_float", "type": "Callable[[Mapping[str, Any], str], Optional[float]]"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "cov_config", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 308, "col_offset": 22, "nodeName": "KernelCovariance", "type": "Type[linearmodels.asset_pricing.covariance.KernelCovariance]"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "xe", "type": "Any"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "cov_est", "type": "linearmodels.asset_pricing.covariance.KernelCovariance"}, {"lineNumber": 318, "col_offset": 27, "nodeName": "k", "type": "str"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "v", "type": "Union[str, float]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "_cov_config", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "KernelCovariance", "type": "Type[linearmodels.asset_pricing.covariance.KernelCovariance]"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "fe", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "nloading", "type": "int"}, {"lineNumber": 333, "col_offset": 35, "nodeName": "nloading", "type": "int"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 38, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 337, "col_offset": 64, "nodeName": "nfactor", "type": "int"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "order", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "order", "type": "Any"}, {"lineNumber": 340, "col_offset": 28, "nodeName": "order", "type": "Any"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "nportfolio", "type": "int"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "T", "type": "Any"}, {"lineNumber": 350, "col_offset": 23, "nodeName": "eps", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "e", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 356, "col_offset": 50, "nodeName": "portfolio", "type": "Any"}, {"lineNumber": 357, "col_offset": 26, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 360, "col_offset": 51, "nodeName": "factor", "type": "Any"}, {"lineNumber": 375, "col_offset": 28, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 381, "col_offset": 21, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "ArrayLike", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 402, "col_offset": 14, "nodeName": "_LinearFactorModelBase", "type": "Type[_LinearFactorModelBase]"}, {"lineNumber": 402, "col_offset": 38, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 405, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "linalg", "type": "module"}, {"lineNumber": 411, "col_offset": 30, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 411, "col_offset": 68, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 412, "col_offset": 30, "nodeName": "linalg", "type": "module"}, {"lineNumber": 412, "col_offset": 44, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "_LinearFactorModelBase", "type": "Type[_LinearFactorModelBase]"}, {"lineNumber": 415, "col_offset": 44, "nodeName": "self", "type": "_LinearFactorModelBase"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "self", "type": "_LinearFactorModelBase"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "eye", "type": "Any"}, {"lineNumber": 425, "col_offset": 14, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 425, "col_offset": 31, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 426, "col_offset": 11, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 501, "col_offset": 24, "nodeName": "ArrayLike", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 503, "col_offset": 14, "nodeName": "LinearFactorModel", "type": "Type[LinearFactorModel]"}, {"lineNumber": 503, "col_offset": 33, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 515, "col_offset": 24, "nodeName": "ArrayLike", "type": "Any"}, {"lineNumber": 604, "col_offset": 39, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 608, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 610, "col_offset": 20, "nodeName": "T", "type": "Any"}, {"lineNumber": 614, "col_offset": 20, "nodeName": "sigma_m12", "type": "Any"}, {"lineNumber": 614, "col_offset": 32, "nodeName": "betas", "type": "Any"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "sigma_m12", "type": "Any"}, {"lineNumber": 618, "col_offset": 17, "nodeName": "pricing_errors", "type": "Any"}, {"lineNumber": 624, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 624, "col_offset": 58, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 628, "col_offset": 25, "nodeName": "jacobian", "type": "numpy.ndarray"}, {"lineNumber": 630, "col_offset": 25, "nodeName": "debiased", "type": "bool"}, {"lineNumber": 638, "col_offset": 25, "nodeName": "jacobian", "type": "numpy.ndarray"}, {"lineNumber": 640, "col_offset": 25, "nodeName": "debiased", "type": "bool"}, {"lineNumber": 642, "col_offset": 23, "nodeName": "kernel", "type": "Optional[str]"}, {"lineNumber": 643, "col_offset": 26, "nodeName": "bandwidth", "type": "Optional[float]"}, {"lineNumber": 648, "col_offset": 29, "nodeName": "s2", "type": "int"}, {"lineNumber": 648, "col_offset": 34, "nodeName": "s2", "type": "int"}, {"lineNumber": 649, "col_offset": 21, "nodeName": "T", "type": "Any"}, {"lineNumber": 651, "col_offset": 38, "nodeName": "nport", "type": "int"}, {"lineNumber": 651, "col_offset": 46, "nodeName": "nf", "type": "int"}, {"lineNumber": 655, "col_offset": 23, "nodeName": "eps", "type": "Any"}, {"lineNumber": 658, "col_offset": 26, "nodeName": "s1", "type": "int"}, {"lineNumber": 658, "col_offset": 29, "nodeName": "s2", "type": "int"}, {"lineNumber": 658, "col_offset": 33, "nodeName": "s1", "type": "int"}, {"lineNumber": 658, "col_offset": 36, "nodeName": "s2", "type": "int"}, {"lineNumber": 660, "col_offset": 23, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 660, "col_offset": 31, "nodeName": "betas", "type": "Any"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 663, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 663, "col_offset": 50, "nodeName": "portfolio", "type": "Any"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 669, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 669, "col_offset": 51, "nodeName": "factor", "type": "Any"}, {"lineNumber": 672, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 672, "col_offset": 50, "nodeName": "nf", "type": "int"}, {"lineNumber": 675, "col_offset": 22, "nodeName": "order", "type": "Any"}, {"lineNumber": 675, "col_offset": 29, "nodeName": "s1", "type": "int"}, {"lineNumber": 675, "col_offset": 32, "nodeName": "s2", "type": "int"}, {"lineNumber": 676, "col_offset": 28, "nodeName": "order", "type": "Any"}, {"lineNumber": 676, "col_offset": 38, "nodeName": "order", "type": "Any"}, {"lineNumber": 677, "col_offset": 28, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "rp_names", "type": "List[Any]"}, {"lineNumber": 694, "col_offset": 28, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 696, "col_offset": 17, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 709, "col_offset": 39, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 715, "col_offset": 14, "nodeName": "fc", "type": "Any"}, {"lineNumber": 716, "col_offset": 13, "nodeName": "s1", "type": "int"}, {"lineNumber": 716, "col_offset": 18, "nodeName": "s1", "type": "int"}, {"lineNumber": 716, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 722, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 723, "col_offset": 44, "nodeName": "_lam", "type": "Any"}, {"lineNumber": 724, "col_offset": 31, "nodeName": "alpha_tilde", "type": "Any"}, {"lineNumber": 724, "col_offset": 48, "nodeName": "eye", "type": "Any"}, {"lineNumber": 724, "col_offset": 55, "nodeName": "nf", "type": "int"}, {"lineNumber": 726, "col_offset": 12, "nodeName": "s1", "type": "int"}, {"lineNumber": 726, "col_offset": 15, "nodeName": "s2", "type": "int"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "s1", "type": "int"}, {"lineNumber": 726, "col_offset": 22, "nodeName": "s2", "type": "int"}, {"lineNumber": 726, "col_offset": 28, "nodeName": "bc", "type": "numpy.ndarray"}, {"lineNumber": 727, "col_offset": 32, "nodeName": "_lam", "type": "Any"}, {"lineNumber": 728, "col_offset": 12, "nodeName": "s2", "type": "int"}, {"lineNumber": 728, "col_offset": 15, "nodeName": "s3", "type": "int"}, {"lineNumber": 728, "col_offset": 20, "nodeName": "s1", "type": "int"}, {"lineNumber": 728, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 729, "col_offset": 12, "nodeName": "s2", "type": "int"}, {"lineNumber": 729, "col_offset": 15, "nodeName": "s3", "type": "int"}, {"lineNumber": 729, "col_offset": 19, "nodeName": "s1", "type": "int"}, {"lineNumber": 729, "col_offset": 22, "nodeName": "s2", "type": "int"}, {"lineNumber": 740, "col_offset": 39, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 742, "col_offset": 32, "nodeName": "nf", "type": "int"}, {"lineNumber": 743, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 743, "col_offset": 29, "nodeName": "eps_rep", "type": "Any"}, {"lineNumber": 743, "col_offset": 59, "nodeName": "nobs", "type": "int"}, {"lineNumber": 750, "col_offset": 21, "nodeName": "g1", "type": "Any"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "g2", "type": "Any"}, {"lineNumber": 750, "col_offset": 29, "nodeName": "g3", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 800, "col_offset": 14, "nodeName": "LinearFactorModelGMM", "type": "Type[LinearFactorModelGMM]"}, {"lineNumber": 800, "col_offset": 36, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 925, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 925, "col_offset": 27, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 928, "col_offset": 53, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 931, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 931, "col_offset": 27, "nodeName": "betas", "type": "Any"}, {"lineNumber": 933, "col_offset": 13, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 934, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 936, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 937, "col_offset": 15, "nodeName": "starting", "type": "numpy.ndarray"}, {"lineNumber": 938, "col_offset": 27, "nodeName": "starting", "type": "numpy.ndarray"}, {"lineNumber": 939, "col_offset": 15, "nodeName": "starting", "type": "Any"}, {"lineNumber": 939, "col_offset": 33, "nodeName": "sv", "type": "Any"}, {"lineNumber": 940, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 944, "col_offset": 13, "nodeName": "mean", "type": "Any"}, {"lineNumber": 948, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 948, "col_offset": 58, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 950, "col_offset": 66, "nodeName": "center", "type": "bool"}, {"lineNumber": 956, "col_offset": 26, "nodeName": "center", "type": "bool"}, {"lineNumber": 956, "col_offset": 41, "nodeName": "kernel", "type": "Optional[str]"}, {"lineNumber": 956, "col_offset": 59, "nodeName": "bandwidth", "type": "Optional[float]"}, {"lineNumber": 969, "col_offset": 23, "nodeName": "opt_options", "type": "Optional[Union[Dict[str, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 973, "col_offset": 16, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 985, "col_offset": 20, "nodeName": "_moments", "type": "Callable[[numpy.ndarray, bool], numpy.ndarray]"}, {"lineNumber": 985, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 985, "col_offset": 42, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 986, "col_offset": 20, "nodeName": "w", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 986, "col_offset": 42, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 987, "col_offset": 24, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 987, "col_offset": 40, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 990, "col_offset": 27, "nodeName": "callback_factory", "type": "Callable[..., Callable[[numpy.ndarray], None]]"}, {"lineNumber": 990, "col_offset": 44, "nodeName": "_j", "type": "Callable[[numpy.ndarray, bool, numpy.ndarray], float]"}, {"lineNumber": 990, "col_offset": 53, "nodeName": "args", "type": "Tuple[bool, numpy.ndarray]"}, {"lineNumber": 991, "col_offset": 26, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 992, "col_offset": 20, "nodeName": "_j", "type": "Callable[[numpy.ndarray, bool, numpy.ndarray], float]"}, {"lineNumber": 993, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 998, "col_offset": 25, "nodeName": "opt_res", "type": "Any"}, {"lineNumber": 999, "col_offset": 22, "nodeName": "opt_res", "type": "Any"}, {"lineNumber": 1006, "col_offset": 40, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1006, "col_offset": 68, "nodeName": "disp", "type": "int"}, {"lineNumber": 1008, "col_offset": 16, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1010, "col_offset": 21, "nodeName": "cue_args", "type": "Tuple[bool, Union[linearmodels.asset_pricing.covariance.KernelWeight, linearmodels.asset_pricing.covariance.HeteroskedasticWeight]]"}, {"lineNumber": 1011, "col_offset": 25, "nodeName": "callback", "type": "Callable[[numpy.ndarray], None]"}, {"lineNumber": 1018, "col_offset": 12, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1023, "col_offset": 25, "nodeName": "jac", "type": "numpy.ndarray"}, {"lineNumber": 1024, "col_offset": 23, "nodeName": "center", "type": "bool"}, {"lineNumber": 1025, "col_offset": 25, "nodeName": "debiased", "type": "bool"}, {"lineNumber": 1031, "col_offset": 25, "nodeName": "jac", "type": "numpy.ndarray"}, {"lineNumber": 1032, "col_offset": 23, "nodeName": "center", "type": "bool"}, {"lineNumber": 1033, "col_offset": 25, "nodeName": "debiased", "type": "bool"}, {"lineNumber": 1035, "col_offset": 23, "nodeName": "kernel", "type": "Optional[str]"}, {"lineNumber": 1036, "col_offset": 26, "nodeName": "bandwidth", "type": "Optional[float]"}, {"lineNumber": 1040, "col_offset": 38, "nodeName": "k", "type": "int"}, {"lineNumber": 1042, "col_offset": 26, "nodeName": "sel", "type": "slice"}, {"lineNumber": 1042, "col_offset": 31, "nodeName": "sel", "type": "slice"}, {"lineNumber": 1043, "col_offset": 29, "nodeName": "k", "type": "int"}, {"lineNumber": 1044, "col_offset": 17, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1044, "col_offset": 27, "nodeName": "sel", "type": "slice"}, {"lineNumber": 1048, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 1048, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 1053, "col_offset": 17, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1053, "col_offset": 43, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1053, "col_offset": 66, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1054, "col_offset": 18, "nodeName": "resids", "type": "Any"}, {"lineNumber": 1055, "col_offset": 23, "nodeName": "resids", "type": "Any"}, {"lineNumber": 1057, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 1058, "col_offset": 20, "nodeName": "total", "type": "Any"}, {"lineNumber": 1062, "col_offset": 26, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1063, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1065, "col_offset": 12, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 1066, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1066, "col_offset": 48, "nodeName": "f", "type": "Any"}, {"lineNumber": 1066, "col_offset": 55, "nodeName": "f", "type": "Any"}, {"lineNumber": 1066, "col_offset": 60, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1067, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1067, "col_offset": 44, "nodeName": "f", "type": "Any"}, {"lineNumber": 1067, "col_offset": 51, "nodeName": "f", "type": "Any"}, {"lineNumber": 1067, "col_offset": 56, "nodeName": "cols", "type": "List[Any]"}, {"lineNumber": 1068, "col_offset": 24, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1070, "col_offset": 12, "nodeName": "rp_names", "type": "List[Any]"}, {"lineNumber": 1071, "col_offset": 23, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 1071, "col_offset": 31, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1086, "col_offset": 28, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1087, "col_offset": 25, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1088, "col_offset": 17, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1106, "col_offset": 32, "nodeName": "k", "type": "int"}, {"lineNumber": 1111, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1113, "col_offset": 18, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1113, "col_offset": 36, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1114, "col_offset": 38, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 1116, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1116, "col_offset": 67, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1117, "col_offset": 27, "nodeName": "fe", "type": "Any"}, {"lineNumber": 1123, "col_offset": 15, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1124, "col_offset": 15, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1125, "col_offset": 41, "nodeName": "gbar", "type": "Any"}, {"lineNumber": 1135, "col_offset": 15, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 1136, "col_offset": 15, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1138, "col_offset": 41, "nodeName": "gbar", "type": "Any"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1144, "col_offset": 27, "nodeName": "excess_returns", "type": "bool"}, {"lineNumber": 1145, "col_offset": 36, "nodeName": "k", "type": "int"}, {"lineNumber": 1145, "col_offset": 39, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1146, "col_offset": 36, "nodeName": "k", "type": "int"}, {"lineNumber": 1150, "col_offset": 21, "nodeName": "k", "type": "int"}, {"lineNumber": 1153, "col_offset": 17, "nodeName": "mu", "type": "Any"}, {"lineNumber": 1154, "col_offset": 42, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 1155, "col_offset": 14, "nodeName": "f_aug", "type": "Any"}, {"lineNumber": 1157, "col_offset": 13, "nodeName": "r1", "type": "int"}, {"lineNumber": 1157, "col_offset": 18, "nodeName": "s1", "type": "int"}, {"lineNumber": 1157, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 1159, "col_offset": 31, "nodeName": "k", "type": "int"}, {"lineNumber": 1159, "col_offset": 35, "nodeName": "nrf", "type": "int"}, {"lineNumber": 1164, "col_offset": 20, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1166, "col_offset": 20, "nodeName": "c_", "type": "Any"}, {"lineNumber": 1167, "col_offset": 55, "nodeName": "T", "type": "Any"}, {"lineNumber": 1171, "col_offset": 13, "nodeName": "r1", "type": "int"}, {"lineNumber": 1171, "col_offset": 17, "nodeName": "s1", "type": "int"}, {"lineNumber": 1171, "col_offset": 20, "nodeName": "s2", "type": "int"}, {"lineNumber": 1172, "col_offset": 13, "nodeName": "r1", "type": "int"}, {"lineNumber": 1172, "col_offset": 17, "nodeName": "s2", "type": "int"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "d", "type": "Dict[str, int]"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "d", "type": "Dict[str, int]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "self", "type": "_FactorModelBase"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "self", "type": "_FactorModelBase"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "self", "type": "_FactorModelBase"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "_FactorModelBase"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "_FactorModelBase"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 47, "nodeName": "T", "type": "Any"}, {"lineNumber": 290, "col_offset": 54, "nodeName": "fc", "type": "Any"}, {"lineNumber": 295, "col_offset": 46, "nodeName": "nfactor", "type": "int"}, {"lineNumber": 300, "col_offset": 75, "nodeName": "shape", "type": "Any"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "eye", "type": "Any"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "xpxi", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "debiased", "type": "bool"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "bandwidth", "type": "Optional[float]"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "kernel", "type": "Optional[str]"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "debiased", "type": "bool"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "bw", "type": "float"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "kernel", "type": "Optional[str]"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 330, "col_offset": 60, "nodeName": "cov_type", "type": "str"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "nfactor", "type": "int"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "pinv", "type": "Any"}, {"lineNumber": 344, "col_offset": 47, "nodeName": "alpha_vcv", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 358, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 358, "col_offset": 57, "nodeName": "portfolio", "type": "Any"}, {"lineNumber": 358, "col_offset": 68, "nodeName": "factor", "type": "Any"}, {"lineNumber": 375, "col_offset": 28, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 381, "col_offset": 21, "nodeName": "self", "type": "TradedFactorModel"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 411, "col_offset": 37, "nodeName": "diag", "type": "Any"}, {"lineNumber": 412, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 416, "col_offset": 40, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 571, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 571, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 571, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 604, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 610, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 641, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 649, "col_offset": 21, "nodeName": "alphas", "type": "Any"}, {"lineNumber": 649, "col_offset": 32, "nodeName": "pinv", "type": "Any"}, {"lineNumber": 649, "col_offset": 47, "nodeName": "alpha_vcv", "type": "Any"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 665, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 665, "col_offset": 57, "nodeName": "portfolio", "type": "Any"}, {"lineNumber": 665, "col_offset": 68, "nodeName": "factor", "type": "Any"}, {"lineNumber": 694, "col_offset": 28, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 709, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 714, "col_offset": 22, "nodeName": "nport", "type": "int"}, {"lineNumber": 714, "col_offset": 43, "nodeName": "nf", "type": "int"}, {"lineNumber": 714, "col_offset": 48, "nodeName": "nrf", "type": "int"}, {"lineNumber": 722, "col_offset": 30, "nodeName": "nf", "type": "int"}, {"lineNumber": 722, "col_offset": 35, "nodeName": "nrf", "type": "int"}, {"lineNumber": 722, "col_offset": 40, "nodeName": "nf", "type": "int"}, {"lineNumber": 723, "col_offset": 27, "nodeName": "b_tilde", "type": "Any"}, {"lineNumber": 724, "col_offset": 18, "nodeName": "nrf", "type": "int"}, {"lineNumber": 724, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 724, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 725, "col_offset": 16, "nodeName": "s1", "type": "int"}, {"lineNumber": 725, "col_offset": 19, "nodeName": "s2", "type": "int"}, {"lineNumber": 740, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 743, "col_offset": 41, "nodeName": "nport", "type": "int"}, {"lineNumber": 872, "col_offset": 30, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 873, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 873, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 873, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 931, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 931, "col_offset": 27, "nodeName": "res", "type": "linearmodels.asset_pricing.results.LinearFactorModelResults"}, {"lineNumber": 933, "col_offset": 13, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 934, "col_offset": 19, "nodeName": "betas", "type": "Any"}, {"lineNumber": 934, "col_offset": 26, "nodeName": "lam", "type": "numpy.ndarray"}, {"lineNumber": 934, "col_offset": 31, "nodeName": "mu", "type": "Any"}, {"lineNumber": 944, "col_offset": 13, "nodeName": "g", "type": "numpy.ndarray"}, {"lineNumber": 985, "col_offset": 20, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 986, "col_offset": 20, "nodeName": "weight_est_instance", "type": "Union[linearmodels.asset_pricing.covariance.KernelWeight, linearmodels.asset_pricing.covariance.HeteroskedasticWeight]"}, {"lineNumber": 990, "col_offset": 44, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 990, "col_offset": 64, "nodeName": "disp", "type": "int"}, {"lineNumber": 992, "col_offset": 20, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 994, "col_offset": 25, "nodeName": "args", "type": "Tuple[bool, numpy.ndarray]"}, {"lineNumber": 995, "col_offset": 29, "nodeName": "callback", "type": "Callable[[numpy.ndarray], None]"}, {"lineNumber": 1000, "col_offset": 19, "nodeName": "abs", "type": "Any"}, {"lineNumber": 1012, "col_offset": 56, "nodeName": "max_iter", "type": "int"}, {"lineNumber": 1026, "col_offset": 19, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1034, "col_offset": 19, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 1040, "col_offset": 30, "nodeName": "n", "type": "int"}, {"lineNumber": 1040, "col_offset": 34, "nodeName": "k", "type": "int"}, {"lineNumber": 1045, "col_offset": 22, "nodeName": "sel", "type": "slice"}, {"lineNumber": 1045, "col_offset": 27, "nodeName": "sel", "type": "slice"}, {"lineNumber": 1052, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 1052, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 1053, "col_offset": 43, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1057, "col_offset": 24, "nodeName": "total", "type": "numpy.ndarray"}, {"lineNumber": 1063, "col_offset": 16, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 1063, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1063, "col_offset": 57, "nodeName": "portfolio", "type": "Any"}, {"lineNumber": 1063, "col_offset": 68, "nodeName": "factor", "type": "Any"}, {"lineNumber": 1066, "col_offset": 60, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1067, "col_offset": 56, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1068, "col_offset": 24, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1086, "col_offset": 28, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1087, "col_offset": 25, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1106, "col_offset": 24, "nodeName": "n", "type": "int"}, {"lineNumber": 1106, "col_offset": 28, "nodeName": "k", "type": "int"}, {"lineNumber": 1111, "col_offset": 44, "nodeName": "betas", "type": "Any"}, {"lineNumber": 1114, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1116, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 1116, "col_offset": 33, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1116, "col_offset": 54, "nodeName": "n", "type": "int"}, {"lineNumber": 1117, "col_offset": 18, "nodeName": "eps", "type": "Any"}, {"lineNumber": 1117, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 1125, "col_offset": 28, "nodeName": "T", "type": "Any"}, {"lineNumber": 1125, "col_offset": 37, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 1131, "col_offset": 26, "nodeName": "HeteroskedasticWeight", "type": "Type[linearmodels.asset_pricing.covariance.HeteroskedasticWeight]"}, {"lineNumber": 1131, "col_offset": 49, "nodeName": "KernelWeight", "type": "Type[linearmodels.asset_pricing.covariance.KernelWeight]"}, {"lineNumber": 1138, "col_offset": 28, "nodeName": "T", "type": "Any"}, {"lineNumber": 1138, "col_offset": 37, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 1145, "col_offset": 32, "nodeName": "n", "type": "int"}, {"lineNumber": 1145, "col_offset": 39, "nodeName": "params", "type": "numpy.ndarray"}, {"lineNumber": 1146, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 1146, "col_offset": 31, "nodeName": "k", "type": "int"}, {"lineNumber": 1154, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1166, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1167, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 1167, "col_offset": 55, "nodeName": "f_aug", "type": "Any"}, {"lineNumber": 1167, "col_offset": 66, "nodeName": "iota", "type": "Any"}, {"lineNumber": 1167, "col_offset": 73, "nodeName": "b", "type": "Any"}, {"lineNumber": 1169, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 1170, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 1170, "col_offset": 56, "nodeName": "T", "type": "Any"}, {"lineNumber": 1170, "col_offset": 67, "nodeName": "iota", "type": "Any"}, {"lineNumber": 1170, "col_offset": 74, "nodeName": "b", "type": "Any"}, {"lineNumber": 1173, "col_offset": 13, "nodeName": "k", "type": "int"}, {"lineNumber": 1173, "col_offset": 18, "nodeName": "k", "type": "int"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "isnull", "type": "Any"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "nobs", "type": "int"}, {"lineNumber": 290, "col_offset": 47, "nodeName": "fc", "type": "Any"}, {"lineNumber": 300, "col_offset": 75, "nodeName": "fc", "type": "Any"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 36, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 318, "col_offset": 36, "nodeName": "k", "type": "str"}, {"lineNumber": 318, "col_offset": 39, "nodeName": "v", "type": "Union[str, float]"}, {"lineNumber": 318, "col_offset": 44, "nodeName": "items", "type": "Callable"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "eye", "type": "Any"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "linalg", "type": "module"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "self", "type": "LinearFactorModel"}, {"lineNumber": 411, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 416, "col_offset": 40, "nodeName": "portfolios", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 604, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 604, "col_offset": 28, "nodeName": "nobs", "type": "int"}, {"lineNumber": 614, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "fc", "type": "Any"}, {"lineNumber": 641, "col_offset": 19, "nodeName": "fc", "type": "Any"}, {"lineNumber": 649, "col_offset": 32, "nodeName": "linalg", "type": "module"}, {"lineNumber": 709, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 709, "col_offset": 28, "nodeName": "nobs", "type": "int"}, {"lineNumber": 714, "col_offset": 31, "nodeName": "nf", "type": "int"}, {"lineNumber": 725, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 740, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 740, "col_offset": 28, "nodeName": "nobs", "type": "int"}, {"lineNumber": 743, "col_offset": 50, "nodeName": "nf", "type": "int"}, {"lineNumber": 996, "col_offset": 60, "nodeName": "max_iter", "type": "int"}, {"lineNumber": 1000, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1000, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 1000, "col_offset": 32, "nodeName": "last_obj", "type": "Any"}, {"lineNumber": 1012, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1012, "col_offset": 38, "nodeName": "disp", "type": "int"}, {"lineNumber": 1026, "col_offset": 19, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1034, "col_offset": 19, "nodeName": "factors", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 1066, "col_offset": 60, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1067, "col_offset": 56, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1111, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1114, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1114, "col_offset": 27, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1116, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 1116, "col_offset": 59, "nodeName": "k", "type": "int"}, {"lineNumber": 1125, "col_offset": 28, "nodeName": "gbar", "type": "Any"}, {"lineNumber": 1138, "col_offset": 28, "nodeName": "gbar", "type": "Any"}, {"lineNumber": 1145, "col_offset": 24, "nodeName": "n", "type": "int"}, {"lineNumber": 1145, "col_offset": 28, "nodeName": "k", "type": "int"}, {"lineNumber": 1154, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1154, "col_offset": 31, "nodeName": "nobs", "type": "int"}, {"lineNumber": 1164, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 1167, "col_offset": 24, "nodeName": "k", "type": "int"}, {"lineNumber": 1167, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 1167, "col_offset": 45, "nodeName": "k", "type": "int"}, {"lineNumber": 1170, "col_offset": 24, "nodeName": "k", "type": "int"}, {"lineNumber": 1170, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 1170, "col_offset": 45, "nodeName": "k", "type": "int"}, {"lineNumber": 1170, "col_offset": 56, "nodeName": "f_aug", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "dh", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "dh", "type": "linearmodels.iv.data.IVData"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "data", "type": "Tuple[linearmodels.iv.data.IVData, linearmodels.iv.data.IVData]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "formula_components", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "formula_components", "type": "List[str]"}, {"lineNumber": 303, "col_offset": 36, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "fc", "type": "Any"}, {"lineNumber": 318, "col_offset": 44, "nodeName": "cov_config", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 32, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 411, "col_offset": 51, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 411, "col_offset": 59, "nodeName": "vals", "type": "Any"}, {"lineNumber": 416, "col_offset": 40, "nodeName": "self", "type": "_LinearFactorModelBase"}, {"lineNumber": 614, "col_offset": 51, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 649, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 654, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 723, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 725, "col_offset": 29, "nodeName": "nf", "type": "int"}, {"lineNumber": 725, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 725, "col_offset": 52, "nodeName": "nf", "type": "int"}, {"lineNumber": 872, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 872, "col_offset": 40, "nodeName": "Any", "type": "Any"}, {"lineNumber": 996, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 996, "col_offset": 42, "nodeName": "disp", "type": "int"}, {"lineNumber": 1026, "col_offset": 19, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1034, "col_offset": 19, "nodeName": "self", "type": "LinearFactorModelGMM"}, {"lineNumber": 1111, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 1111, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 1111, "col_offset": 37, "nodeName": "nrf", "type": "int"}, {"lineNumber": 1116, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 1166, "col_offset": 31, "nodeName": "betas", "type": "Any"}, {"lineNumber": 322, "col_offset": 32, "nodeName": "f", "type": "numpy.ndarray"}, {"lineNumber": 411, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 654, "col_offset": 25, "nodeName": "p", "type": "numpy.ndarray"}, {"lineNumber": 1166, "col_offset": 38, "nodeName": "i", "type": "int"}]