[{"lineNumber": 13, "col_offset": 0, "nodeName": "data", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "key", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "data", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "out", "type": "Any"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "SEP", "type": "str"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "CMD", "type": "str"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "STATA_PATH", "type": "str"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "OUTFILE", "type": "str"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "header", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "all_stats", "type": "str"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "stats", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "all_stats", "type": "str"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "output", "type": "str"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "output", "type": "str"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "methods", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "do_file", "type": "str"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "cmd", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "generate_simultaneous_data", "type": "Callable[..., Dict[Any, Dict[Any, Any]]]"}, {"lineNumber": 14, "col_offset": 10, "nodeName": "List", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "eqn", "type": "Dict[Any, Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 26, "col_offset": 6, "nodeName": "concat", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "out", "type": "Any"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "to_stata", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "join", "type": "Callable"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "all_stats", "type": "str"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "stata_file", "type": "TextIO"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "method", "type": "str"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "methods", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 90, "col_offset": 3, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "OUTFILE", "type": "str"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "join", "type": "Callable"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "STATA_PATH", "type": "str"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "do_file", "type": "str"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "call", "type": "Callable[..., int]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "cmd", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 17, "col_offset": 10, "nodeName": "data", "type": "Dict[Any, Dict[Any, Any]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vals", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "vals", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "pop", "type": "Any"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "out", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "path", "type": "module"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "output", "type": "str"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "OUTFILE", "type": "str"}, {"lineNumber": 83, "col_offset": 5, "nodeName": "open", "type": "Callable"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 90, "col_offset": 3, "nodeName": "path", "type": "module"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "OUTFILE", "type": "str"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "path", "type": "module"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "getcwd", "type": "Callable[[], str]"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "join", "type": "Callable"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "cmd", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "eqn", "type": "Dict[Any, Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "os", "type": "module"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "stata_file", "type": "TextIO"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "header", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 90, "col_offset": 3, "nodeName": "os", "type": "module"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "os", "type": "module"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "col", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "map", "type": "Callable"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "stats", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "stata_file", "type": "TextIO"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "stata_file", "type": "TextIO"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "col", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "SEP", "type": "str"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "method", "type": "str"}, {"lineNumber": 87, "col_offset": 59, "nodeName": "OUTFILE", "type": "str"}, {"lineNumber": 88, "col_offset": 65, "nodeName": "output", "type": "str"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "vals", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "all_cols", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "format", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "col", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "s", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "CMD", "type": "str"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "method", "type": "str"}]