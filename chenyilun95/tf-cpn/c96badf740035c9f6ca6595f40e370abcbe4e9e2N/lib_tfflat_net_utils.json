[{"lineNumber": 4, "col_offset": 0, "nodeName": "average_gradients", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "sum_gradients", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "aggregate_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "get_tower_summary_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "average_grads", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "average_grads", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "sum_grads", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "sum_grads", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "results", "type": "Union[List[Any], Any]"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "ret", "type": "Dict[Any, Any]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "summary", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "ret", "type": "Dict[Any, Any]"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "grads", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "grad_and_var", "type": "Tuple[Any, Any]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "grads", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "grad_and_var", "type": "Tuple[Any, Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "tower_grads", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "g", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "expanded_g", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "grad_and_var", "type": "Tuple[Any, Any]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "tower_grads", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "g", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "grad", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "grad", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "v", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "grad_and_var", "type": "Tuple[Any, Any]"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "data_holder", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "data_holder", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "lr", "type": "Any"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 25, "col_offset": 40, "nodeName": "g", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "expanded_g", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "grads", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "average_grads", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "g", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "expanded_g", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "grads", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "sum_grads", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 84, "col_offset": 76, "nodeName": "data_holder", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "data_holder", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "train", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "MomentumOptimizer", "type": "Any"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "lr", "type": "Any"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "ret", "type": "Dict[Any, Any]"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 18, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "grads", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "g", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "expanded_g", "type": "Any"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "data_holder", "type": "Any"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "concat", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "data_holder", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "train", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "AdamOptimizer", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "lr", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "method", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "grads", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "data_holder", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "concat", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "train", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "ret", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "method", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "v", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 111, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "ret", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "method", "type": "Any"}, {"lineNumber": 18, "col_offset": 49, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "grad_and_vars", "type": "Any"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "j", "type": "int"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "v", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 113, "col_offset": 57, "nodeName": "v", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "ret", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "concat", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "data_holder", "type": "Any"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "v", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 117, "col_offset": 77, "nodeName": "method", "type": "Any"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "j", "type": "int"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 64, "nodeName": "data_holder", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "tf", "type": "Any"}]