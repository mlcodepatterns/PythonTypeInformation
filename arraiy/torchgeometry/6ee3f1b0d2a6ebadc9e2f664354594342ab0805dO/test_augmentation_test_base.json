[{"lineNumber": 19, "col_offset": 8, "nodeName": "base", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "__repr__", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "input_transform", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "expected_transform", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "input_transform", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "other_transform", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "input_transform", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "other_transform", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "input_param", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "_BasicAugmentationBase", "type": "Type[kornia.augmentation.base._BasicAugmentationBase]"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "__repr__", "type": "str"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "_BasicAugmentationBase", "type": "Type[kornia.augmentation.base._BasicAugmentationBase]"}, {"lineNumber": 26, "col_offset": 78, "nodeName": "transform_tensor", "type": "unittest.mock.MagicMock"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "seed", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "_BasicAugmentationBase", "type": "Type[kornia.augmentation.base._BasicAugmentationBase]"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "p_batch", "type": "Any"}, {"lineNumber": 45, "col_offset": 58, "nodeName": "same_on_batch", "type": "Any"}, {"lineNumber": 46, "col_offset": 81, "nodeName": "generate_parameters", "type": "unittest.mock.MagicMock"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "_BasicAugmentationBase", "type": "Type[kornia.augmentation.base._BasicAugmentationBase]"}, {"lineNumber": 59, "col_offset": 77, "nodeName": "apply_transform", "type": "unittest.mock.MagicMock"}, {"lineNumber": 60, "col_offset": 84, "nodeName": "generate_parameters", "type": "unittest.mock.MagicMock"}, {"lineNumber": 61, "col_offset": 81, "nodeName": "transform_tensor", "type": "unittest.mock.MagicMock"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "side_effect", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "rand", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "rand", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "AugmentationBase2D", "type": "Type[kornia.augmentation.base.AugmentationBase2D]"}, {"lineNumber": 83, "col_offset": 77, "nodeName": "apply_transform", "type": "unittest.mock.MagicMock"}, {"lineNumber": 84, "col_offset": 84, "nodeName": "generate_parameters", "type": "unittest.mock.MagicMock"}, {"lineNumber": 85, "col_offset": 87, "nodeName": "compute_transformation", "type": "unittest.mock.MagicMock"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Dict[str, int], Dict[nothing, nothing]]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "params", "type": "Dict[str, Union[Dict[str, int], Dict[nothing, nothing]]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "expected_transform", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Union[Dict[str, int], Dict[nothing, nothing]]]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "expected_final_transformation", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "rand", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "rand", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "tensor_to_gradcheck_var", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "input", "type": "Any"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "tensor_to_gradcheck_var", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 56, "nodeName": "input_transform", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "tensor_to_gradcheck_var", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "output", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "tensor_to_gradcheck_var", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 56, "nodeName": "other_transform", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "AugmentationBase2D", "type": "Type[kornia.augmentation.base.AugmentationBase2D]"}, {"lineNumber": 142, "col_offset": 77, "nodeName": "apply_transform", "type": "unittest.mock.MagicMock"}, {"lineNumber": 143, "col_offset": 84, "nodeName": "generate_parameters", "type": "unittest.mock.MagicMock"}, {"lineNumber": 144, "col_offset": 87, "nodeName": "compute_transformation", "type": "unittest.mock.MagicMock"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 147, "col_offset": 50, "nodeName": "other_transform", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "base", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 24, "col_offset": 48, "nodeName": "device", "type": "Any"}, {"lineNumber": 24, "col_offset": 62, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "object", "type": "Callable"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "transform_tensor", "type": "unittest.mock.MagicMock"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "__infer_input__", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 50, "nodeName": "input", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "object", "type": "Callable"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "generate_parameters", "type": "unittest.mock.MagicMock"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "__forward_parameters__", "type": "Callable[[Any, Union[float, int], Union[float, int], Optional[bool]], Dict[str, Any]]"}, {"lineNumber": 50, "col_offset": 57, "nodeName": "input_shape", "type": "Tuple[int]"}, {"lineNumber": 50, "col_offset": 70, "nodeName": "p", "type": "Any"}, {"lineNumber": 50, "col_offset": 73, "nodeName": "p_batch", "type": "Any"}, {"lineNumber": 50, "col_offset": 82, "nodeName": "same_on_batch", "type": "Any"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 82, "nodeName": "num", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "device", "type": "Any"}, {"lineNumber": 56, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "object", "type": "Callable"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "object", "type": "Callable"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "object", "type": "Callable"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "generate_parameters", "type": "unittest.mock.MagicMock"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "transform_tensor", "type": "unittest.mock.MagicMock"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "apply_transform", "type": "unittest.mock.MagicMock"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "device", "type": "Any"}, {"lineNumber": 77, "col_offset": 62, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "device", "type": "Any"}, {"lineNumber": 78, "col_offset": 69, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 58, "nodeName": "device", "type": "Any"}, {"lineNumber": 79, "col_offset": 72, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 58, "nodeName": "device", "type": "Any"}, {"lineNumber": 80, "col_offset": 72, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "object", "type": "Callable"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "object", "type": "Callable"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "object", "type": "Callable"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "generate_parameters", "type": "unittest.mock.MagicMock"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "apply_transform", "type": "unittest.mock.MagicMock"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "compute_transformation", "type": "unittest.mock.MagicMock"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 101, "col_offset": 50, "nodeName": "input", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "expected_transform", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "generate_parameters", "type": "unittest.mock.MagicMock"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "expected_transform", "type": "Any"}, {"lineNumber": 119, "col_offset": 65, "nodeName": "input_transform", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "expected_final_transformation", "type": "Any"}, {"lineNumber": 122, "col_offset": 65, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "device", "type": "Any"}, {"lineNumber": 128, "col_offset": 62, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "device", "type": "Any"}, {"lineNumber": 129, "col_offset": 63, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "device", "type": "Any"}, {"lineNumber": 130, "col_offset": 69, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 131, "col_offset": 55, "nodeName": "device", "type": "Any"}, {"lineNumber": 131, "col_offset": 69, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "utils", "type": "module"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "utils", "type": "module"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "utils", "type": "module"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 138, "col_offset": 75, "nodeName": "input_transform", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "object", "type": "Callable"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "object", "type": "Callable"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "object", "type": "Callable"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "apply_transform", "type": "unittest.mock.MagicMock"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "compute_transformation", "type": "unittest.mock.MagicMock"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "gradcheck", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "augmentation", "type": "kornia.augmentation.base.AugmentationBase2D"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "Size", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "augmentation", "type": "kornia.augmentation.base._BasicAugmentationBase"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "item", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "input", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "apply_transform", "type": "unittest.mock.MagicMock"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "params", "type": "Dict[str, Union[Dict[str, int], Dict[nothing, nothing]]]"}, {"lineNumber": 120, "col_offset": 51, "nodeName": "input", "type": "Any"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "input_transform", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "input", "type": "Any"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "input_param", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "transformation", "type": "Any"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "input", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "sum", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "output", "type": "Dict[str, Any]"}]