[{"lineNumber": 13, "col_offset": 0, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "FloatUnionType", "type": "Any"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "Int2DBoarderUnionType", "type": "Union[Type[int], Type[Tuple[int, int]], Type[Tuple[int, int, int, int]]]"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "Module", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "AugmentationBase", "type": "Type[AugmentationBase]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "AugmentationBase", "type": "Type[AugmentationBase]"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "AugmentationBase", "type": "Type[AugmentationBase]"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "AugmentationBase", "type": "Type[AugmentationBase]"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "Module", "type": "Any"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "AugmentationBase", "type": "Type[AugmentationBase]"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "AugmentationBase", "type": "Type[AugmentationBase]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "Union", "type": "Any"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "Union", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "Union", "type": "Any"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 24, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 31, "col_offset": 93, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 94, "col_offset": 93, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 139, "col_offset": 93, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 93, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 207, "col_offset": 93, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 241, "col_offset": 47, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 310, "col_offset": 93, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 347, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 383, "col_offset": 93, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_apply_fcn", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "apply_fcn", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "batch_size", "type": "Union[int, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "p", "type": "float"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "p", "type": "float"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "p", "type": "float"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "p", "type": "float"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "brightness", "type": "Any"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "brightness", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "contrast", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "contrast", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "saturation", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "saturation", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "hue", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "hue", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 175, "col_offset": 81, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "p", "type": "float"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "p", "type": "float"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "repr", "type": "str"}, {"lineNumber": 204, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "erase_scale_range", "type": "Tuple[float, float]"}, {"lineNumber": 238, "col_offset": 54, "nodeName": "erase_scale_range", "type": "Tuple[float, float]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "aspect_ratio_range", "type": "Tuple[float, float]"}, {"lineNumber": 239, "col_offset": 55, "nodeName": "aspect_ratio_range", "type": "Tuple[float, float]"}, {"lineNumber": 241, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "padding", "type": "Optional[Union[Tuple[int, int, int, int], Tuple[int, int], int]]"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "padding", "type": "Optional[Union[Tuple[int, int, int, int], Tuple[int, int], int]]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "pad_if_needed", "type": "Optional[bool]"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "pad_if_needed", "type": "Optional[bool]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "fill", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "fill", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "padding_mode", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "padding_mode", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "repr", "type": "str"}, {"lineNumber": 286, "col_offset": 91, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "input", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 342, "col_offset": 21, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "interpolation", "type": "Any"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "interpolation", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "repr", "type": "str"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "target_size", "type": "Tuple[int, int]"}, {"lineNumber": 353, "col_offset": 67, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "attempt", "type": "int"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "in_ratio", "type": "float"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 14, "col_offset": 23, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 14, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 19, "col_offset": 34, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 19, "col_offset": 62, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "AugmentationBase"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "AugmentationBase"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "batch_size", "type": "Union[Any, int]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "batch_size", "type": "Union[Any, int]"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "inp", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "prev_trans", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "_apply_fcn", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 86, "col_offset": 57, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "apply_hflip", "type": "Any"}, {"lineNumber": 87, "col_offset": 66, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "RandomHorizontalFlip"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "_random_prob_gen", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "p", "type": "float"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "forward", "type": "Callable[..., Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "apply_vflip", "type": "Any"}, {"lineNumber": 132, "col_offset": 64, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "RandomVerticalFlip"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "_random_prob_gen", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "p", "type": "float"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "forward", "type": "Callable[..., Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "FloatUnionType", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "FloatUnionType", "type": "Any"}, {"lineNumber": 160, "col_offset": 94, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "apply_color_jitter", "type": "Any"}, {"lineNumber": 161, "col_offset": 64, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "repr", "type": "str"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "FloatUnionType", "type": "Any"}, {"lineNumber": 175, "col_offset": 57, "nodeName": "FloatUnionType", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "_random_color_jitter_gen", "type": "Any"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 176, "col_offset": 55, "nodeName": "brightness", "type": "Any"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "contrast", "type": "Any"}, {"lineNumber": 176, "col_offset": 77, "nodeName": "saturation", "type": "Any"}, {"lineNumber": 176, "col_offset": 89, "nodeName": "hue", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "forward", "type": "Callable[..., Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 195, "col_offset": 57, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "apply_grayscale", "type": "Any"}, {"lineNumber": 196, "col_offset": 65, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "RandomGrayscale"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "repr", "type": "str"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "_random_prob_gen", "type": "Any"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 205, "col_offset": 47, "nodeName": "p", "type": "float"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "forward", "type": "Callable[..., Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "RandomRectangleErasing"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "RandomRectangleErasing"}, {"lineNumber": 241, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "random_rectangle_erase", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "images", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "erase_scale_range", "type": "Tuple[float, float]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "aspect_ratio_range", "type": "Tuple[float, float]"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "apply_crop", "type": "Any"}, {"lineNumber": 274, "col_offset": 55, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 283, "col_offset": 41, "nodeName": "repr", "type": "str"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "_random_crop_gen", "type": "Any"}, {"lineNumber": 287, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 287, "col_offset": 47, "nodeName": "input_size", "type": "Tuple[int, int]"}, {"lineNumber": 287, "col_offset": 59, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 289, "col_offset": 37, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "padding", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "pad_if_needed", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "padding", "type": "List[Union[Any, int]]"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "pad_if_needed", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "padding", "type": "List[Union[int, Any]]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 311, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "input", "type": "Tuple[Any, Any]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "forward", "type": "Callable[..., Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 321, "col_offset": 38, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 338, "col_offset": 55, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 48, "nodeName": "apply_crop", "type": "Any"}, {"lineNumber": 339, "col_offset": 62, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "interpolation", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 349, "col_offset": 41, "nodeName": "repr", "type": "str"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "get_aspected_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 354, "col_offset": 58, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 354, "col_offset": 64, "nodeName": "scale", "type": "Any"}, {"lineNumber": 354, "col_offset": 71, "nodeName": "ratio", "type": "Tuple[float, float]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "_random_crop_gen", "type": "Any"}, {"lineNumber": 356, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 356, "col_offset": 47, "nodeName": "input_size", "type": "Tuple[int, int]"}, {"lineNumber": 356, "col_offset": 59, "nodeName": "target_size", "type": "Tuple[int, int]"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "target_area", "type": "float"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "log_ratio", "type": "Tuple[float, float]"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "aspect_ratio", "type": "float"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "w", "type": "int"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "h", "type": "int"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "in_ratio", "type": "float"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "w", "type": "int"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "h", "type": "int"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "w", "type": "int"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "h", "type": "int"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "UnionType", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "forward", "type": "Callable[..., Union[Any, Tuple[Any, Any]]]"}, {"lineNumber": 392, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 392, "col_offset": 38, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 13, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 14, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 14, "col_offset": 44, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 14, "col_offset": 65, "nodeName": "List", "type": "Any"}, {"lineNumber": 15, "col_offset": 35, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 15, "col_offset": 52, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "input", "type": "Any"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "input", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "self", "type": "AugmentationBase"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "out", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "img", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "trans_mat", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "cast", "type": "Callable"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "img", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "prev_trans", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "self", "type": "AugmentationBase"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "F", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "pg", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "infer_batch_size", "type": "Callable[[Any], int]"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "get_params", "type": "Callable[[int, float], Dict[str, Any]]"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "p", "type": "float"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "F", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "pg", "type": "Any"}, {"lineNumber": 136, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 59, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "infer_batch_size", "type": "Callable[[Any], int]"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "get_params", "type": "Callable[[int, float], Dict[str, Any]]"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "p", "type": "float"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "F", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "hue", "type": "Any"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "__class__", "type": "Type[ColorJitter]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "pg", "type": "Any"}, {"lineNumber": 175, "col_offset": 86, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 91, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "infer_batch_size", "type": "Callable[[Any], int]"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "get_params", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 181, "col_offset": 56, "nodeName": "brightness", "type": "Any"}, {"lineNumber": 181, "col_offset": 73, "nodeName": "contrast", "type": "Any"}, {"lineNumber": 181, "col_offset": 88, "nodeName": "saturation", "type": "Any"}, {"lineNumber": 181, "col_offset": 105, "nodeName": "hue", "type": "Any"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "F", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "p", "type": "float"}, {"lineNumber": 200, "col_offset": 48, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "__class__", "type": "Type[RandomGrayscale]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "pg", "type": "Any"}, {"lineNumber": 204, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 204, "col_offset": 64, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "infer_batch_size", "type": "Callable[[Any], int]"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "get_params", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 210, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 210, "col_offset": 60, "nodeName": "p", "type": "float"}, {"lineNumber": 235, "col_offset": 37, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 235, "col_offset": 78, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 241, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "self", "type": "RandomRectangleErasing"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "self", "type": "RandomRectangleErasing"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "F", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "__class__", "type": "Type[RandomCrop]"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 286, "col_offset": 71, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "pg", "type": "Any"}, {"lineNumber": 286, "col_offset": 96, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 286, "col_offset": 101, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 289, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "padding", "type": "Any"}, {"lineNumber": 292, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "padding", "type": "List[Any]"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "pad", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "padding", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "pad", "type": "Any"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "padding", "type": "List[Union[Any, int]]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "pad", "type": "Any"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "padding", "type": "List[Union[int, Any]]"}, {"lineNumber": 310, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "input", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "precrop_padding", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 41, "nodeName": "input", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "infer_batch_size", "type": "Callable[[Any], int]"}, {"lineNumber": 319, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "get_params", "type": "Callable[[int, Tuple[int, int], Tuple[int, int]], Dict[str, Any]]"}, {"lineNumber": 320, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 320, "col_offset": 73, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 339, "col_offset": 48, "nodeName": "F", "type": "Any"}, {"lineNumber": 345, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 348, "col_offset": 47, "nodeName": "resize_to", "type": "Any"}, {"lineNumber": 348, "col_offset": 82, "nodeName": "return_transform", "type": "bool"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "__class__", "type": "Type[RandomResizedCrop]"}, {"lineNumber": 354, "col_offset": 22, "nodeName": "RandomResizedCrop", "type": "Type[RandomResizedCrop]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "pg", "type": "Any"}, {"lineNumber": 356, "col_offset": 82, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 353, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 353, "col_offset": 77, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 371, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 372, "col_offset": 23, "nodeName": "min", "type": "Callable"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "ratio", "type": "Tuple[float, float]"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "in_ratio", "type": "float"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "h", "type": "int"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "w", "type": "int"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "w", "type": "int"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "h", "type": "int"}, {"lineNumber": 383, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "infer_batch_size", "type": "Callable[[Any], int]"}, {"lineNumber": 385, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 386, "col_offset": 26, "nodeName": "input", "type": "Any"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "get_params", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 391, "col_offset": 46, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 391, "col_offset": 57, "nodeName": "resize_to", "type": "Any"}, {"lineNumber": 14, "col_offset": 70, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "AugmentationBase", "type": "Type[AugmentationBase]"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "self", "type": "AugmentationBase"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "_apply_fcn", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "inp", "type": "Any"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "out", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "img", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "_apply_fcn", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "inp", "type": "Any"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "params", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "self", "type": "AugmentationBase"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "RandomHorizontalFlip", "type": "Type[RandomHorizontalFlip]"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "self", "type": "RandomHorizontalFlip"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "self", "type": "RandomHorizontalFlip"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "self", "type": "RandomHorizontalFlip"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "self", "type": "RandomHorizontalFlip"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "RandomVerticalFlip", "type": "Type[RandomVerticalFlip]"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "self", "type": "RandomVerticalFlip"}, {"lineNumber": 136, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "self", "type": "RandomVerticalFlip"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "self", "type": "RandomVerticalFlip"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "self", "type": "RandomVerticalFlip"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "ColorJitter", "type": "Type[ColorJitter]"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 175, "col_offset": 91, "nodeName": "torch", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "ColorJitter", "type": "Type[ColorJitter]"}, {"lineNumber": 181, "col_offset": 56, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 181, "col_offset": 73, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 181, "col_offset": 88, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 181, "col_offset": 105, "nodeName": "self", "type": "ColorJitter"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "RandomGrayscale", "type": "Type[RandomGrayscale]"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "self", "type": "RandomGrayscale"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "self", "type": "RandomGrayscale"}, {"lineNumber": 200, "col_offset": 48, "nodeName": "self", "type": "RandomGrayscale"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "self", "type": "RandomGrayscale"}, {"lineNumber": 204, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "self", "type": "RandomGrayscale"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "RandomGrayscale", "type": "Type[RandomGrayscale]"}, {"lineNumber": 210, "col_offset": 60, "nodeName": "self", "type": "RandomGrayscale"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "RandomRectangleErasing", "type": "Type[RandomRectangleErasing]"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "self", "type": "RandomRectangleErasing"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "RandomCrop", "type": "Type[RandomCrop]"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 286, "col_offset": 101, "nodeName": "torch", "type": "Any"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "padding", "type": "Any"}, {"lineNumber": 293, "col_offset": 41, "nodeName": "padding", "type": "Any"}, {"lineNumber": 293, "col_offset": 55, "nodeName": "padding", "type": "Any"}, {"lineNumber": 293, "col_offset": 69, "nodeName": "padding", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "padding", "type": "List[Any]"}, {"lineNumber": 298, "col_offset": 46, "nodeName": "fill", "type": "Any"}, {"lineNumber": 298, "col_offset": 62, "nodeName": "padding_mode", "type": "Any"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 300, "col_offset": 52, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 302, "col_offset": 46, "nodeName": "fill", "type": "Any"}, {"lineNumber": 302, "col_offset": 62, "nodeName": "padding_mode", "type": "Any"}, {"lineNumber": 304, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 304, "col_offset": 52, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 306, "col_offset": 46, "nodeName": "fill", "type": "Any"}, {"lineNumber": 306, "col_offset": 62, "nodeName": "padding_mode", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "input", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "precrop_padding", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 53, "nodeName": "precrop_padding", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "RandomCrop", "type": "Type[RandomCrop]"}, {"lineNumber": 320, "col_offset": 55, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 320, "col_offset": 73, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 339, "col_offset": 14, "nodeName": "RandomResizedCrop", "type": "Type[RandomResizedCrop]"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 348, "col_offset": 47, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 348, "col_offset": 82, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 353, "col_offset": 77, "nodeName": "torch", "type": "Any"}, {"lineNumber": 361, "col_offset": 61, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 362, "col_offset": 45, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "math", "type": "module"}, {"lineNumber": 363, "col_offset": 36, "nodeName": "uniform", "type": "Callable[[Union[float, int], Union[float, int]], float]"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "round", "type": "Callable"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "round", "type": "Callable"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "w", "type": "int"}, {"lineNumber": 367, "col_offset": 39, "nodeName": "h", "type": "int"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "w", "type": "int"}, {"lineNumber": 368, "col_offset": 27, "nodeName": "h", "type": "int"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 371, "col_offset": 42, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "round", "type": "Callable"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "ratio", "type": "Tuple[float, float]"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "RandomResizedCrop", "type": "Type[RandomResizedCrop]"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 391, "col_offset": 46, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 391, "col_offset": 57, "nodeName": "self", "type": "RandomResizedCrop"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 13, "col_offset": 38, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 13, "col_offset": 52, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 14, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 14, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 15, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 15, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 15, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 15, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 15, "col_offset": 68, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 15, "col_offset": 73, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 26, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "self", "type": "AugmentationBase"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "prev_trans", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "trans_mat", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "self", "type": "AugmentationBase"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 139, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 178, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 207, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 235, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 235, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 235, "col_offset": 84, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 235, "col_offset": 91, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 286, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 286, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 286, "col_offset": 77, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 286, "col_offset": 82, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 293, "col_offset": 41, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 293, "col_offset": 55, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 293, "col_offset": 69, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 294, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "padding", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "padding", "type": "List[Any]"}, {"lineNumber": 298, "col_offset": 46, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 298, "col_offset": 62, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 300, "col_offset": 52, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 301, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 301, "col_offset": 55, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 301, "col_offset": 70, "nodeName": "shape", "type": "Any"}, {"lineNumber": 302, "col_offset": 46, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 302, "col_offset": 62, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 304, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 304, "col_offset": 52, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 305, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 305, "col_offset": 61, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 305, "col_offset": 76, "nodeName": "shape", "type": "Any"}, {"lineNumber": 306, "col_offset": 46, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 306, "col_offset": 62, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 310, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 313, "col_offset": 42, "nodeName": "input", "type": "Any"}, {"lineNumber": 313, "col_offset": 53, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 313, "col_offset": 74, "nodeName": "input", "type": "Any"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "uniform", "type": "Callable[[Union[float, int], Union[float, int]], float]"}, {"lineNumber": 361, "col_offset": 51, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 362, "col_offset": 34, "nodeName": "ratio", "type": "Tuple[float, float]"}, {"lineNumber": 362, "col_offset": 45, "nodeName": "math", "type": "module"}, {"lineNumber": 362, "col_offset": 54, "nodeName": "ratio", "type": "Tuple[float, float]"}, {"lineNumber": 363, "col_offset": 36, "nodeName": "random", "type": "module"}, {"lineNumber": 363, "col_offset": 52, "nodeName": "log_ratio", "type": "Tuple[float, float]"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 366, "col_offset": 26, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 374, "col_offset": 26, "nodeName": "w", "type": "int"}, {"lineNumber": 377, "col_offset": 20, "nodeName": "round", "type": "Callable"}, {"lineNumber": 383, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 13, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 13, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "input", "type": "Any"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 294, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 294, "col_offset": 57, "nodeName": "padding", "type": "Any"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "padding", "type": "Any"}, {"lineNumber": 295, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 295, "col_offset": 61, "nodeName": "padding", "type": "Any"}, {"lineNumber": 295, "col_offset": 78, "nodeName": "padding", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "padding", "type": "Any"}, {"lineNumber": 296, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 301, "col_offset": 38, "nodeName": "input", "type": "Any"}, {"lineNumber": 301, "col_offset": 55, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 301, "col_offset": 70, "nodeName": "input", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 305, "col_offset": 44, "nodeName": "input", "type": "Any"}, {"lineNumber": 305, "col_offset": 61, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 305, "col_offset": 76, "nodeName": "input", "type": "Any"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "random", "type": "module"}, {"lineNumber": 361, "col_offset": 42, "nodeName": "scale", "type": "Any"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "math", "type": "module"}, {"lineNumber": 365, "col_offset": 36, "nodeName": "target_area", "type": "float"}, {"lineNumber": 365, "col_offset": 50, "nodeName": "aspect_ratio", "type": "float"}, {"lineNumber": 366, "col_offset": 26, "nodeName": "math", "type": "module"}, {"lineNumber": 366, "col_offset": 36, "nodeName": "target_area", "type": "float"}, {"lineNumber": 366, "col_offset": 50, "nodeName": "aspect_ratio", "type": "float"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "min", "type": "Callable"}, {"lineNumber": 374, "col_offset": 34, "nodeName": "ratio", "type": "Tuple[float, float]"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "h", "type": "int"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "input", "type": "Any"}, {"lineNumber": 31, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 139, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 178, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 207, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 207, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 294, "col_offset": 57, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 295, "col_offset": 44, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 295, "col_offset": 61, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 295, "col_offset": 78, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 296, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 296, "col_offset": 57, "nodeName": "padding", "type": "Any"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "padding", "type": "Any"}, {"lineNumber": 297, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 297, "col_offset": 61, "nodeName": "padding", "type": "Any"}, {"lineNumber": 297, "col_offset": 78, "nodeName": "padding", "type": "Any"}, {"lineNumber": 310, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 310, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 377, "col_offset": 30, "nodeName": "max", "type": "Callable"}, {"lineNumber": 377, "col_offset": 34, "nodeName": "ratio", "type": "Tuple[float, float]"}, {"lineNumber": 383, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 383, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 178, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 207, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 296, "col_offset": 57, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 297, "col_offset": 44, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 297, "col_offset": 61, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 297, "col_offset": 78, "nodeName": "self", "type": "RandomCrop"}, {"lineNumber": 310, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 383, "col_offset": 67, "nodeName": "torch", "type": "Any"}]