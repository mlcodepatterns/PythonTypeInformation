[{"lineNumber": 66, "col_offset": 0, "nodeName": "test_get_laplacian_kernel", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_get_laplacian_kernel2d", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "get_gaussian_kernel", "type": "Callable[[int, Union[float, int]], Any]"}, {"lineNumber": 15, "col_offset": 40, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 15, "col_offset": 53, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "get_gaussian_kernel2d", "type": "Callable[[Tuple[int, int], Tuple[Union[float, int], Union[float, int]]], Any]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "sigma", "type": "Tuple[float, float]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "gauss", "type": "kornia.filters.gaussian.GaussianBlur"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "batch_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "sigma", "type": "Tuple[float, float]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "get_laplacian_kernel", "type": "Callable[[int], Any]"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "get_laplacian_kernel2d", "type": "Callable[[int], Any]"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "expected", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "laplace", "type": "kornia.filters.laplacian.Laplacian"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "batch_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "kornia", "type": "module"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "approx", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "kornia", "type": "module"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "ksize_x", "type": "Any"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "ksize_y", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "ksize_x", "type": "Any"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "ksize_y", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "approx", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "to", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "GaussianBlur", "type": "Type[kornia.filters.gaussian.GaussianBlur]"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "sigma", "type": "Tuple[float, float]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "batch_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "tensor_to_gradcheck_var", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "input", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "gradcheck", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "gaussian_blur", "type": "Callable[[Any, Tuple[int, int], Tuple[Union[float, int], Union[float, int]]], Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "channels", "type": "int"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "height", "type": "int"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "width", "type": "int"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "channels", "type": "int"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "height", "type": "int"}, {"lineNumber": 60, "col_offset": 55, "nodeName": "width", "type": "int"}, {"lineNumber": 61, "col_offset": 67, "nodeName": "img", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "op_script", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "img", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "actual", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "kornia", "type": "module"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "approx", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "kornia", "type": "module"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "item", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "approx", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "to", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "Laplacian", "type": "Type[kornia.filters.laplacian.Laplacian]"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "batch_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "tensor_to_gradcheck_var", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "input", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "gradcheck", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "laplacian", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "device", "type": "Any"}, {"lineNumber": 37, "col_offset": 56, "nodeName": "device_type", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "filters", "type": "module"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "kornia", "type": "module"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "input", "type": "Any"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "kernel_size", "type": "Tuple[int, int]"}, {"lineNumber": 50, "col_offset": 68, "nodeName": "sigma", "type": "Tuple[float, float]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "gaussian_blur", "type": "Callable[[Any, Tuple[int, int], Tuple[Union[float, int], Union[float, int]]], Any]"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "img", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "GaussianBlur", "type": "Type[kornia.filters.gaussian.GaussianBlur]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "device", "type": "Any"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "device_type", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "filters", "type": "module"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "kornia", "type": "module"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "input", "type": "Any"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "kornia", "type": "module"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "gauss", "type": "kornia.filters.gaussian.GaussianBlur"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "input", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "kornia", "type": "module"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "filters", "type": "module"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "kornia", "type": "module"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "laplace", "type": "kornia.filters.laplacian.Laplacian"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "kornia", "type": "module"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "torch", "type": "Any"}]