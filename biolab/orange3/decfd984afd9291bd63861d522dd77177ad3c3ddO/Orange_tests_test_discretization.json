[{"lineNumber": 9, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "test_equifreq_with_too_few_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_equifreq_100_to_4", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "test_equifreq_with_k_instances", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "test_equalwidth_on_two_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_equalwidth_100_to_4", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_equalwidth_const_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_entropy_with_two_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_entropy_with_two_values_useless", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "test_entropy_constant", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_entropy", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "disc", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 12, "col_offset": 23, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 14, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "EqualFreq", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "EqualFreq", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "EqualFreq", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "EqualWidth", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "EqualWidth", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "EqualFreq", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "EntropyMDL", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "EntropyMDL", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "EntropyMDL", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "EntropyMDL", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "disc", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "points", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestEqualFreq"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestEqualFreq"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestEqualFreq"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestEqualFreq"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestEqualFreq"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestEqualFreq"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestEqualWidth"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestEqualWidth"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestEqualWidth"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestEqualWidth"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestEqualWidth"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestEqualWidth"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestEntropyMDL"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestEntropyMDL"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestEntropyMDL"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestEntropyMDL"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestEntropyMDL"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestEntropyMDL"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "discretization", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "variables", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestEntropyMDL"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestEntropyMDL"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "compute_value", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "arange", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "s", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "dvar", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "Orange", "type": "module"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "data", "type": "Any"}]