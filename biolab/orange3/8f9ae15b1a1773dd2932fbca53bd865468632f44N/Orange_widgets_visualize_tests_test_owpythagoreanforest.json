[{"lineNumber": 11, "col_offset": 30, "nodeName": "WidgetTest", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "get_tree_widgets", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "set_combo_option", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_sending_rf_draws_trees", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "test_info_label", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_depth_slider", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "titanic_data", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "titanic_data", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "housing_data", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "housing_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "regex", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "setUpClass", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWPythagoreanForest]"}, {"lineNumber": 18, "col_offset": 58, "nodeName": "titanic_data", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "housing_data", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "housing", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "create_widget", "type": "Any"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "OWPythagoreanForest", "type": "Type[Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "findText", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "text", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "setCurrentIndex", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "index", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "emit", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "index", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "housing", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertNotRegex", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "regex", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertRegex", "type": "Any"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "regex", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertNotRegex", "type": "Any"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "regex", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "set_depth_limit", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "setValue", "type": "Any"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "Table", "type": "Any"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "RandomForestLearner", "type": "Type[Orange.classification.random_forest.RandomForestLearner]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWPythagoreanForest]"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "Table", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "RandomForestRegressionLearner", "type": "Type[Orange.regression.random_forest.RandomForestRegressionLearner]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWPythagoreanForest]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "combo_box", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "combo_box", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "activated", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "ui_depth_slider", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "PythagorasTreeViewer", "type": "Type[Orange.widgets.visualize.pythagorastreeviewer.PythagorasTreeViewer]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "combo_box", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "ui_info", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "ui_info", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "ui_info", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "set_depth_limit", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "scene", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "widget", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "widget", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "widget", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "self", "type": "TestOWPythagoreanForest"}]