[{"lineNumber": 19, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_get_flags", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_decorate", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "test_bind_and_send", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "GuiTest", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_init_binds_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_checking_invalid_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_signal_conversion", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "test_get_signals", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "foo", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 190, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "bar", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "bound", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "value", "type": "object"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "id", "type": "int"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "handler", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "inputs", "type": "List[Union[Tuple[str, Type[int], str], Orange.canvas.registry.description.InputSignal]]"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "outputs", "type": "List[Union[Tuple[str, Type[int]], Orange.canvas.registry.description.OutputSignal]]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "signal", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "Input", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "handler", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "handler", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "signal", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "Output", "type": "Any"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "bound_signal", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "widget", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "send", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "value", "type": "object"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "id", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "widget", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "value", "type": "object"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "id", "type": "int"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 111, "col_offset": 58, "nodeName": "widget", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "widget", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "inputs", "type": "List[Tuple[str, Type[int], str]]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "inputs", "type": "List[Union[Tuple[str, Type[int], str], Orange.canvas.registry.description.InputSignal]]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "outputs", "type": "List[Union[Tuple[str, Type[int]], Orange.canvas.registry.description.OutputSignal]]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "input1", "type": "Tuple[str, Type[int], str]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "input2", "type": "Orange.canvas.registry.description.InputSignal"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "input1", "type": "Tuple[str, Type[int], str]"}, {"lineNumber": 145, "col_offset": 38, "nodeName": "InputSignal", "type": "Type[Orange.canvas.registry.description.InputSignal]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "input2", "type": "Orange.canvas.registry.description.InputSignal"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "InputSignal", "type": "Type[Orange.canvas.registry.description.InputSignal]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "output1", "type": "Tuple[str, Type[int]]"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "output2", "type": "Orange.canvas.registry.description.OutputSignal"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "output1", "type": "Tuple[str, Type[int]]"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "OutputSignal", "type": "Type[Orange.canvas.registry.description.OutputSignal]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "output2", "type": "Orange.canvas.registry.description.OutputSignal"}, {"lineNumber": 153, "col_offset": 39, "nodeName": "OutputSignal", "type": "Type[Orange.canvas.registry.description.OutputSignal]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "inputs", "type": "List[Tuple[str, Type[int], str]]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "outputs", "type": "List[Tuple[str, Type[float]]]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 165, "col_offset": 56, "nodeName": "inputs", "type": "List[Tuple[str, Type[int], str]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "outputs", "type": "List[Tuple[str, Type[float]]]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "get_signals", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "InputSignal", "type": "Type[Orange.canvas.registry.description.InputSignal]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "get_signals", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "OutputSignal", "type": "Type[Orange.canvas.registry.description.OutputSignal]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "Single", "type": "int"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "NonDefault", "type": "int"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "Multiple", "type": "int"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "NonDefault", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "Single", "type": "int"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "Default", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "Explicit", "type": "int"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "Dynamic", "type": "int"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "patch", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "Input", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "type", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "id", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "doc", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "replaces", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "flags", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "patch", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "Output", "type": "Any"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "type", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "id", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "doc", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "replaces", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "flags", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "bound", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "send", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "an_output", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "an_output", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "an_output", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "inputs", "type": "List[Tuple[str, Type[int], str]]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "input1", "type": "Tuple[str, Type[int], str]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "input2", "type": "Orange.canvas.registry.description.InputSignal"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "output1", "type": "Tuple[str, Type[int]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "output2", "type": "Orange.canvas.registry.description.OutputSignal"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "get_signals", "type": "Any"}, {"lineNumber": 165, "col_offset": 56, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "get_signals", "type": "Any"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "an_input", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "an_output", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "Single", "type": "int"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "NonDefault", "type": "int"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "Single", "type": "int"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "NonDefault", "type": "int"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "signalManager", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "Output", "type": "Any"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "Outputs", "type": "Type[Any]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "Outputs", "type": "Type[Any]"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "an_input", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "InputSignal", "type": "Type[Orange.canvas.registry.description.InputSignal]"}, {"lineNumber": 138, "col_offset": 68, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "OutputSignal", "type": "Type[Orange.canvas.registry.description.OutputSignal]"}, {"lineNumber": 139, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "Input", "type": "Any"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "Output", "type": "Any"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "Input", "type": "Any"}, {"lineNumber": 120, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}]