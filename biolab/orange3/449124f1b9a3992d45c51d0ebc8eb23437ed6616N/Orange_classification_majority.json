[{"lineNumber": 8, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 11, "col_offset": 22, "nodeName": "Learner", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "fit_storage", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "Model", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "__str__", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "N", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "dist", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "unif_maj", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "unif_maj", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "probs", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "probs", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "has_discrete_class", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "get_distribution", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 45, "nodeName": "dat", "type": "Any"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "N", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "dist", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "N", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "unif_maj", "type": "int"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "unif_maj", "type": "None"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "ConstantModel", "type": "Type[ConstantModel]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ConstantModel"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "dist", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ConstantModel"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "tile", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "dist", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "unif_maj", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "dist", "type": "numpy.ndarray"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "domain", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "distribution", "type": "module"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "domain", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "dist", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "fill", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "dist", "type": "Any"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "unif_maj", "type": "Optional[int]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "self", "type": "ConstantModel"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "self", "type": "ConstantModel"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "tile", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "unif_maj", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "probs", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "self", "type": "ConstantModel"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "dat", "type": "Any"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "dat", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "dist", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "dist", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "dist", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 69, "nodeName": "dist", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "self", "type": "ConstantModel"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "dist", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "hexdigest", "type": "Callable[[], str]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "sha1", "type": "Callable[..., hashlib._hash]"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "bytes", "type": "Type[str]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "Y", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "dat", "type": "Any"}]