[{"lineNumber": 16, "col_offset": 0, "nodeName": "SOMETHING", "type": "int"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 181, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "transform", "type": "Orange.preprocess.impute.ReplaceUnknownsRandom"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "logit", "type": "Orange.classification.logistic_regression.LogisticRegressionLearner"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "csr", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "csc", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "csr", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "csc", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "sparse_x", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "a2", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "a3", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "a2", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "a3", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "a2", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "a2", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "a2", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "a1", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "a2", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "main", "type": "Type[unittest.main.TestProgram]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "cm", "type": "unittest.case._AssertWarnsContext"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "SOMETHING", "type": "int"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "ReplaceUnknownsRandom", "type": "Type[Orange.preprocess.impute.ReplaceUnknownsRandom]"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "var", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "LogisticRegressionLearner", "type": "Type[Orange.classification.logistic_regression.LogisticRegressionLearner]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "l", "type": "List[nothing]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "__call__", "type": "Callable"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertCorrectArrayType", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertCorrectArrayType", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertCorrectArrayType", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertCorrectArrayType", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertCorrectArrayType", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertCorrectArrayType", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertCorrectArrayType", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertCorrectArrayType", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 66, "nodeName": "sparsity", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "array", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "wrap_callback", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "wrap_callback", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "assertWarns", "type": "Callable"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "identity", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "try_", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "try_", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "try_", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "Continuous", "type": "Type[Orange.statistics.distribution.Continuous]"}, {"lineNumber": 50, "col_offset": 61, "nodeName": "var", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "deepgetattr", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "a", "type": "Type[Any]"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "__len__", "type": "Callable[[], int]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "deepgetattr", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "a", "type": "Type[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "sp", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "sp", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "vstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "vstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "vstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "vstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "sp", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "sp", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "hstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "hstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "hstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "hstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "OrangeDeprecationWarning", "type": "Type[Orange.util.OrangeDeprecationWarning]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "OrangeDeprecationWarning", "type": "Type[Orange.util.OrangeDeprecationWarning]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "sp", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "a1", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "a2", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "a1", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "a3", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "a3", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "a1", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "a1", "type": "Any"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "a2", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "a1", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "a3", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "sp", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "sp", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "SparseEfficiencyWarning", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "a2", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "a1", "type": "Any"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "a2", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "sp", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "sp", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "a1", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "a2", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "sp", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "sp", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "a1", "type": "Any"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "a2", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "sp", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "sp", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "array_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "a1", "type": "Any"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "a2", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "round", "type": "Callable"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "export_globals", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 58, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "flatten", "type": "Callable[[Any], Iterator[Any]]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "args", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "SOMETHING", "type": "int"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "logit", "type": "Orange.classification.logistic_regression.LogisticRegressionLearner"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "l", "type": "List[nothing]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "csr", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "csc", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "csc", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "csr", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "csr", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "numpy", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "csc", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "csc", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "csr", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "self", "type": "TestUtil"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "all", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "nan", "type": "Any"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "nan", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "nan", "type": "Any"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "nan", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "nan", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "nan", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "sp", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 47, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "warning", "type": "warnings.WarningMessage"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "warning", "type": "warnings.WarningMessage"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "a", "type": "Type[Any]"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "issparse", "type": "Any"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "array", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "cm", "type": "unittest.case._AssertWarnsContext"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "cm", "type": "unittest.case._AssertWarnsContext"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "sp", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "stats", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "stats", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 53, "nodeName": "sparse_x", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "transform", "type": "Orange.preprocess.impute.ReplaceUnknownsRandom"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "data", "type": "Any"}]