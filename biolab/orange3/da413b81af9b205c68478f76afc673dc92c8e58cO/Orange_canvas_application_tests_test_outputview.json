[{"lineNumber": 13, "col_offset": 21, "nodeName": "QAppTestCase", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test_outputview", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_formated", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_threadsafe", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "test_excepthook", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "line1", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "line2", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "bold", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "blue_formater", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "red_formater", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "correct", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "blue", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "red", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "pool", "type": "multiprocessing.pool.ThreadPool"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "res", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "red_formater", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "red", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "hook", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "pool", "type": "multiprocessing.pool.ThreadPool"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "res", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "OutputView", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "show", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "line1", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 21, "col_offset": 56, "nodeName": "line1", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "line2", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "clear", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "writelines", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "setMaximumLines", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "now", "type": "str"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "text", "type": "unicode"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "advance", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "exec_", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "OutputView", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "show", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "f", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "formated", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "exec_", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "OutputView", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "resize", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "show", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "formated", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "formated", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "TextStream", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "connect", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "write", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "connect", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "check_thread", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "TextStream", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "connect", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "write", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "connect", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "check_thread", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "ThreadPool", "type": "Type[multiprocessing.pool.ThreadPool]"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "map_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "printer", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "exec_", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "wait", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "OutputView", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "resize", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "show", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "formated", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "TextStream", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "connect", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "write", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "ExceptHook", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "ThreadPool", "type": "Type[multiprocessing.pool.ThreadPool]"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "map_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "raise_exception", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "exec_", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "wait", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 24, "col_offset": 56, "nodeName": "line1", "type": "str"}, {"lineNumber": 24, "col_offset": 64, "nodeName": "line2", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "line1", "type": "str"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "line2", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 30, "col_offset": 56, "nodeName": "line1", "type": "str"}, {"lineNumber": 30, "col_offset": 64, "nodeName": "line2", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "now", "type": "str"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "singleShot", "type": "Any"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "advance", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "app", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "formated", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "f", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "bold", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "app", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "blue", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "red", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "stream", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "blue_formater", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "stream", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "stream", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "red_formater", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "stream", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "fizzbuz", "type": "str"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "writer", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "blue", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "writer", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "red", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "pool", "type": "module"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "pool", "type": "multiprocessing.pool.ThreadPool"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "app", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "res", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "correct", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "red", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "stream", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "red_formater", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "red", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "pool", "type": "module"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "pool", "type": "multiprocessing.pool.ThreadPool"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "app", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "res", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "toPlainText", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "toPlainText", "type": "Any"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "toPlainText", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "toPlainText", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "toPlainText", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "output", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "red", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "f", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "formated", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "write", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "Qt", "type": "Any"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "Qt", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "correct", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "blue", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "blue", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "red", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "red", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "i", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "fizzbuz", "type": "str"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "name", "type": "str"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "fizzbuz", "type": "str"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "correct", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "Qt", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "red", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "multiprocessing", "type": "module"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "now", "type": "Callable"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "splitlines", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "Qt", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "f", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "green", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "currentThread", "type": "Any"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "thread", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "i", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "fizzbuz", "type": "str"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "fizzbuz", "type": "str"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "hook", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "text", "type": "unicode"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "Qt", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "QThread", "type": "Any"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "app", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "i", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "current_thread", "type": "Callable[[], threading.Thread]"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "self", "type": "TestOutputView"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "exc_info", "type": "Callable[[], Union[Tuple[Type[BaseException], BaseException, types.TracebackType], Tuple[None, None, None]]]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "sys", "type": "module"}]