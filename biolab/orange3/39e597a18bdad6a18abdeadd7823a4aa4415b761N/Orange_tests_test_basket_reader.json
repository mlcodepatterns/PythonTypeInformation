[{"lineNumber": 14, "col_offset": 0, "nodeName": "with_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "fle_decorator", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_read_variable_is_value_syntax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_read_variable_only_syntax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_handles_spaces_between_variables", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_handles_duplicate_variables", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_handles_duplicate_variables2", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_variables_can_be_listed_in_any_order", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_variables_can_be_listed_in_any_order", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_handles_unicode", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_handles_quote", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "test_data_name", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "fle_decorator", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 97, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "s", "type": "str"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "decorated", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "read", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "s", "type": "str"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "fle", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "fname", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "fname", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "fname", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "fname", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "fname", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "fname", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "fname", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "fname", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "fname", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "fname", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "fle", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "BasketReader", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "filename", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "variables", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "todense", "type": "Any"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "variables", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "todense", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "variables", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "variables", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "todense", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "variables", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "todense", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "variables", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "todense", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "variables", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "__file__", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestBasketReader"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "fle", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "encode", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "fle", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "fname", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "domain", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "map", "type": "Callable"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "variables", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "domain", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "domain", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "domain", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "domain", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "domain", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "X", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "domain", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "read_basket", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "filename", "type": "str"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "table", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "domain", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "table", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "table", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "table", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "table", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "table", "type": "Any"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "table", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "table", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "table", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "table", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "table", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "table", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "table", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "table", "type": "Any"}]