[{"lineNumber": 12, "col_offset": 22, "nodeName": "WidgetTest", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "n_zoo", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "s", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "output_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "set_output_summary", "type": "unittest.mock.Mock"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "input_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "set_input_summary", "type": "unittest.mock.Mock"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "setUpClass", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWRandomize]"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "Table", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "create_widget", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "OWRandomize", "type": "Type[Orange.widgets.data.owrandomize.OWRandomize]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "metas", "type": "Any"}, {"lineNumber": 28, "col_offset": 52, "nodeName": "metas", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "setChecked", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "setChecked", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "setChecked", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 54, "col_offset": 50, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 72, "nodeName": "s", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "setChecked", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "metas", "type": "Any"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "metas", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "apply", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "Y", "type": "Any"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "Y", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "metas", "type": "Any"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "metas", "type": "Any"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "info", "type": "Any"}, {"lineNumber": 79, "col_offset": 59, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "info", "type": "Any"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assert_called_with", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_called_with", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "brief", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "brief", "type": "Any"}, {"lineNumber": 96, "col_offset": 65, "nodeName": "apply", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "auto_apply", "type": "bool"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 28, "col_offset": 52, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "class_check", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "attrs_check", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "metas_check", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 50, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "n_zoo", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 58, "col_offset": 70, "nodeName": "n_zoo", "type": "int"}, {"lineNumber": 58, "col_offset": 78, "nodeName": "s", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "replicable_check", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "output2", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "output2", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "output2", "type": "Any"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "widget", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "widget", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "input_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "output_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "input_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "output_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "input_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "output_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "object", "type": "Callable[..., unittest.mock._patch]"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "widget", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "widget", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "assert_called", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "widget", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 52, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "widget", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "widget", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "scope_prop", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "astype", "type": "Any"}, {"lineNumber": 58, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 59, "col_offset": 65, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "widget", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "widget", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "widget", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "apply", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "apply", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "Y", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "widget", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "Y", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "metas", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "metas", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "widget", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "Y", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "widget", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "Y", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "Y", "type": "Any"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "Y", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "Y", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "metas", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "metas", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "Y", "type": "Any"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "Y", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "Y", "type": "Any"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "Y", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "Y", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "sort", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "Y", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "input_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "output_sum", "type": "unittest.mock.Mock"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "zoo", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "self", "type": "TestOWRandomize"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "self", "type": "TestOWRandomize"}]