[{"lineNumber": 9, "col_offset": 0, "nodeName": "plural", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "plural_w", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "clip_string", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "clipped_list", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "get_html_section", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "get_html_subsection", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "render_items", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "get_html_img", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "describe_domain", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 0, "nodeName": "describe_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 0, "nodeName": "describe_data_brief", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "clip_attrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "number_str", "type": "Union[Any, str]"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "capitalize", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "sep_pos", "type": "Any"}, {"lineNumber": 120, "col_offset": 7, "nodeName": "less_lookups", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "datetime", "type": "str"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "byte_array", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "filename", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "writer", "type": "Orange.widgets.io.PngFormat"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "img_encoded", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "items", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "items", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "domain", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "domain", "type": "Any"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "has_discrete_class", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "items", "type": "collections.OrderedDict[str, Union[str, int, bool]]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "format", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "number_str", "type": "Union[str, Any]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "format", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "limit", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "sep", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "rfind", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "sep", "type": "Any"}, {"lineNumber": 88, "col_offset": 7, "nodeName": "sep_pos", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "clip_string", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "s", "type": "Union[str, Any]"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "limit", "type": "Any"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "total", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "strftime", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 139, "col_offset": 65, "nodeName": "datetime", "type": "str"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 171, "col_offset": 7, "nodeName": "order", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "gen", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "QByteArray", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "QBuffer", "type": "Any"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "byte_array", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "open", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "WriteOnly", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "PngFormat", "type": "Type[Orange.widgets.io.PngFormat]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "filename", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "scene", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "decode", "type": "Any"}, {"lineNumber": 191, "col_offset": 62, "nodeName": "img_encoded", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 232, "col_offset": 7, "nodeName": "data", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "items", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "domain", "type": "Any"}, {"lineNumber": 248, "col_offset": 9, "nodeName": "has_continuous_class", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "number", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "number", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "numbers", "type": "Tuple[str, str, str, str, str, str, str, str, str, str]"}, {"lineNumber": 61, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 67, "nodeName": "number", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "capitalize", "type": "Union[Callable[[], str], Any]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "number_str", "type": "Union[str, Any]"}, {"lineNumber": 82, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "s", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "items", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "total_min", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "time", "type": "module"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "gen", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "items", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "filename", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "QIODevice", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "writer", "type": "Orange.widgets.io.PngFormat"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "clipped_list", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "items", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "describe_domain", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "domain", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "items", "type": "collections.OrderedDict[str, Union[str, int, bool]]"}, {"lineNumber": 247, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 247, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 248, "col_offset": 9, "nodeName": "domain", "type": "Any"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "class_vars", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "suffix", "type": "Any"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "numbers", "type": "Tuple[str, str, str, str, str, str, str, str, str, str]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "number", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "number_str", "type": "Union[str, Any]"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "suffix", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "limit", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "items", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "format", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "key", "type": "Any"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "order", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "items", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 236, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 247, "col_offset": 46, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "domain", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "sep_pos", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "total", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "items", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "items", "type": "Any"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "items", "type": "Any"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 209, "col_offset": 75, "nodeName": "s", "type": "str"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "clip_attrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 247, "col_offset": 46, "nodeName": "domain", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "items", "type": "collections.OrderedDict[str, Union[str, int, bool]]"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "class_vars", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "items", "type": "collections.OrderedDict[str, Union[str, int, bool]]"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "number", "type": "Any"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "number", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "sep", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "limit", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "toBase64", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "domain", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "metas", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "clip_attrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "metas", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "class_vars", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "clip_attrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "class_vars", "type": "Any"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "metas", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "domain", "type": "Any"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "domain", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "key", "type": "Any"}, {"lineNumber": 178, "col_offset": 57, "nodeName": "value", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "byte_array", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "domain", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "domain", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "domain", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "domain", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "domain", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "domain", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "exclude", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "exclude", "type": "Any"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "value", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "value", "type": "Any"}]