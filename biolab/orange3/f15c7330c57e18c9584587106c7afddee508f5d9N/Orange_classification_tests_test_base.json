[{"lineNumber": 11, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 201, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "iris", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "iris", "type": "Any"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "tables", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "lrn", "type": "Union[Type[Orange.classification.tree.TreeLearner], Type[Orange.classification.logistic_regression.LogisticRegressionLearner]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "abc", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "iris_sparse", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "cls", "type": "Type[TestModelMapping]"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "Table", "type": "Any"}, {"lineNumber": 15, "col_offset": 37, "nodeName": "tempdir", "type": "nothing"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "tables", "type": "List[Any]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "iris0", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "iris1", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "iris2", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "TreeLearner", "type": "Type[Orange.classification.tree.TreeLearner]"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "LogisticRegressionLearner", "type": "Type[Orange.classification.logistic_regression.LogisticRegressionLearner]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "vale", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "probe", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "vale", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "no1", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "probe", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "probe", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "vale", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "probe", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "LogisticRegressionLearner", "type": "Type[Orange.classification.logistic_regression.LogisticRegressionLearner]"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "TreeLearner", "type": "Type[Orange.classification.tree.TreeLearner]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "LogisticRegressionLearner", "type": "Type[Orange.classification.logistic_regression.LogisticRegressionLearner]"}, {"lineNumber": 127, "col_offset": 47, "nodeName": "TreeLearner", "type": "Type[Orange.classification.tree.TreeLearner]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "model0", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "valp0", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "model1", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "valp1", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "model2", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "valp2", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "LogisticRegressionLearner", "type": "Type[Orange.classification.logistic_regression.LogisticRegressionLearner]"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "TreeLearner", "type": "Type[Orange.classification.tree.TreeLearner]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "to_sparse", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "LogisticRegressionLearner", "type": "Type[Orange.classification.logistic_regression.LogisticRegressionLearner]"}, {"lineNumber": 191, "col_offset": 47, "nodeName": "TreeLearner", "type": "Type[Orange.classification.tree.TreeLearner]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "cls", "type": "Type[TestModelMapping]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "cls", "type": "Type[TestModelMapping]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "cls", "type": "Type[TestModelMapping]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "a", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "iris", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "prob", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "iris", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "val0", "type": "Any"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "iris0", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "normalized", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "probe", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "val1", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "iris1", "type": "Any"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "vale", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "vale", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "normalized", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "probe", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "val2", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "iris2", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "normalized", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "probe", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "iris0", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "val0", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "iris0", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "prob", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "iris", "type": "Any"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "val0", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "iris1", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "prob", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "iris", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "val1", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "iris1", "type": "Any"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "iris2", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "prob", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "iris", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "val2", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "iris2", "type": "Any"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "val2", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "iris0", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "model0", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "iris0", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "iris1", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "model1", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "iris1", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "iris2", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "model2", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "iris2", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "val1", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "model0", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "iris1", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "test_val_prob", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "val1", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "val2", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "model0", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "iris2", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "test_val_prob", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "val2", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "val0", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "model1", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "iris0", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "test_val_prob", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "val0", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "val2", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "model1", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "iris2", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "test_val_prob", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "val2", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "val0", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "model2", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "iris0", "type": "Any"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "test_val_prob", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "val0", "type": "Any"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "val1", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "model2", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "iris1", "type": "Any"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "test_val_prob", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "val1", "type": "Any"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "Table", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 179, "col_offset": 48, "nodeName": "abc", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "iris", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "iris", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "iris", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "prob", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "iris_abc", "type": "Any"}, {"lineNumber": 184, "col_offset": 40, "nodeName": "ValueProbs", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "prob", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "iris", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "iris_sparse", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 23, "col_offset": 36, "nodeName": "tempdir", "type": "nothing"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "save", "type": "Any"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "lrn", "type": "Union[Type[Orange.classification.tree.TreeLearner], Type[Orange.classification.logistic_regression.LogisticRegressionLearner]]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "prob", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "val0", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "probe", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "val1", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "vale", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "probe", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "prob", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "val2", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "vale", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "probe", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "prob", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "prob", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "prob", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "val1", "type": "Any"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "val", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "val1", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 102, "col_offset": 58, "nodeName": "prob", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "prob", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "prob", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "prob", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "prob", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "prob", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "val", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 114, "col_offset": 50, "nodeName": "prob", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "prob", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "prob", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 122, "col_offset": 50, "nodeName": "prob", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "choose", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "prob", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "model0", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 136, "col_offset": 42, "nodeName": "val1", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "model0", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 142, "col_offset": 42, "nodeName": "val2", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 145, "col_offset": 50, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "model1", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "val0", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 152, "col_offset": 50, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "model1", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "val2", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "prob2", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "model2", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "val0", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "prob0", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "model2", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "val1", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "prob1", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "domain", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "lrn", "type": "Union[Type[Orange.classification.tree.TreeLearner], Type[Orange.classification.logistic_regression.LogisticRegressionLearner]]"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 184, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "lrn", "type": "Union[Type[Orange.classification.logistic_regression.LogisticRegressionLearner], Type[Orange.classification.tree.TreeLearner]]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "tocsc", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "pred", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "tolil", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 196, "col_offset": 53, "nodeName": "pred", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "tocoo", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "pred", "type": "Any"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 17, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "Y", "type": "Any"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "Y", "type": "Any"}, {"lineNumber": 19, "col_offset": 38, "nodeName": "iris", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 20, "col_offset": 55, "nodeName": "domain", "type": "Any"}, {"lineNumber": 20, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 20, "col_offset": 71, "nodeName": "y", "type": "Any"}, {"lineNumber": 21, "col_offset": 38, "nodeName": "iris", "type": "Any"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "tables", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "Table", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "name", "type": "str"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "n", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "n", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "vale", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "probe", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "vale", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "prob", "type": "Any"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "prob", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "no1", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "no1", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "probe", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "probe", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "val", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "val", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "astype", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "iris", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "iris", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "iris", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "iris", "type": "Any"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "iris", "type": "Any"}, {"lineNumber": 17, "col_offset": 40, "nodeName": "iris", "type": "Any"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "iris", "type": "Any"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "iris", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "Table", "type": "Any"}, {"lineNumber": 20, "col_offset": 55, "nodeName": "iris", "type": "Any"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "vale", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "probe", "type": "Any"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "probe", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "vale", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "vale", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "prob", "type": "Any"}, {"lineNumber": 124, "col_offset": 56, "nodeName": "prob", "type": "Any"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "valp0", "type": "Any"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "valp0", "type": "Any"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "valp1", "type": "Any"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "valp1", "type": "Any"}, {"lineNumber": 163, "col_offset": 47, "nodeName": "valp2", "type": "Any"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "valp2", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "iris_sparse", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "iris_sparse", "type": "Any"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "iris_sparse", "type": "Any"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "self", "type": "TestModelMapping"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "vale", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "vale", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "astype", "type": "Any"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "vale", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "val", "type": "Any"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "val", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "no1", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "astype", "type": "Any"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "no1", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "vale", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "astype", "type": "Any"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "vale", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "val", "type": "Any"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "val", "type": "Any"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "val", "type": "Any"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "val", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "val", "type": "Any"}, {"lineNumber": 115, "col_offset": 55, "nodeName": "val", "type": "Any"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "valp0", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "valp0", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "valp0", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "valp0", "type": "Any"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "valp1", "type": "Any"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "valp1", "type": "Any"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "valp1", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "valp1", "type": "Any"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "valp2", "type": "Any"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "valp2", "type": "Any"}, {"lineNumber": 171, "col_offset": 48, "nodeName": "valp2", "type": "Any"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "valp2", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "val0", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "val1", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "val2", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "vale", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "no1", "type": "Any"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "vale", "type": "Any"}]