[{"lineNumber": 27, "col_offset": 18, "nodeName": "FileFormat", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "write_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "WidgetTest", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_writer", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_ordinary_save", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_compression", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_filename_with_fix_extension", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "EXTENSIONS", "type": "Tuple[str]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "DESCRIPTION", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "mock_fix_choice", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "compress", "type": "bool"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "change_filter", "type": "listiterator[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "create_widget", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "OWSave", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "d", "type": "bool"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "product", "type": "Callable"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "types", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "compressions", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "compression", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "c", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "compress", "type": "bool"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "d", "type": "bool"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "filetype", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "t", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "ext", "type": "str"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "suffix", "type": "str"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "items", "type": "Callable"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "filetype", "type": "str"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "ext", "type": "str"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "choose_file", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "type", "type": "str"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "compression", "type": "str"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "product", "type": "Callable"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "filetype", "type": "str"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "type", "type": "str"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "compression", "type": "str"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "compression", "type": "str"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "choose_file", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "itertools", "type": "module"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "widget", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "widget", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "widget", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 52, "col_offset": 50, "nodeName": "Table", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "FILE_TYPES", "type": "Dict[str, str]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "widget", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "get_writer_selected", "type": "Any"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "filename", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 50, "nodeName": "Table", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "itertools", "type": "module"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 69, "col_offset": 70, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "widget", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "widget", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "get_writer_selected", "type": "Any"}, {"lineNumber": 73, "col_offset": 88, "nodeName": "filename", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "ret", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "PickleReader", "type": "Any"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "TabReader", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "EXTENSIONS", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "widget", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "named_file", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "filename", "type": "Any"}, {"lineNumber": 58, "col_offset": 62, "nodeName": "writer", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "FILE_TYPES", "type": "Dict[str, str]"}, {"lineNumber": 69, "col_offset": 70, "nodeName": "COMPRESSIONS", "type": "Dict[str, str]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "widget", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "named_file", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "filename", "type": "Any"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "writer", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "fix_extension", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "mock_fix_choice", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "CHANGE_EXT", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "mock_fix_choice", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "CHANGE_FORMAT", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "mock_fix_choice", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "CANCEL", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "patch", "type": "Any"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "file_choice", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "patch", "type": "Any"}, {"lineNumber": 99, "col_offset": 73, "nodeName": "fix", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "open_filename_dialog_save", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "saved_filename", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "format", "type": "Any"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "TabReader", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "filter", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "count", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "count", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "suffix", "type": "str"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "fn", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "patch", "type": "Any"}, {"lineNumber": 61, "col_offset": 74, "nodeName": "choose_file", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "save_file_as", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "fn", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "patch", "type": "Any"}, {"lineNumber": 77, "col_offset": 74, "nodeName": "choose_file", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "save_file_as", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "fix_extension", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "fix_extension", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "fix_extension", "type": "Any"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "get_writers", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "format_filter", "type": "Any"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "TabReader", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "compression", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "filetype", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "get_writer_selected", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "format_filter", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "widget", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "Table", "type": "Any"}, {"lineNumber": 63, "col_offset": 43, "nodeName": "filename", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "format_filter", "type": "Any"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "widget", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "Table", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "filename", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "format_filter", "type": "Any"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "TabReader", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "format_filter", "type": "Any"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "PickleReader", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "format_filter", "type": "Any"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "OWSave", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "controls", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "controls", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "widget", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "FILE_TYPES", "type": "Dict[str, str]"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "COMPRESSIONS", "type": "Dict[str, str]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "next", "type": "Callable"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "change_filter", "type": "listiterator[Any]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "widget", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "widget", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 73, "col_offset": 50, "nodeName": "type", "type": "str"}, {"lineNumber": 73, "col_offset": 71, "nodeName": "compression", "type": "str"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "self", "type": "TestOWSave"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "self", "type": "TestOWSave"}]