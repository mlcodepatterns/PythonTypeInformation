[{"lineNumber": 14, "col_offset": 0, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "dist", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "m", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "m", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "leaves", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "indices", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "post", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "post", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "pre", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "pre", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "pruned", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "depths", "type": "Dict[Any, int]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "pruned", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "top", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "top", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "top1", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "m", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "Tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "root", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "score_unordered", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "score_ordered", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "T", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "Tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "C", "type": "Type[Orange.clustering.hierarchical.ClusterData]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "ClusterData", "type": "Type[Orange.clustering.hierarchical.ClusterData]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "S", "type": "Type[Orange.clustering.hierarchical.SingletonData]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "SingletonData", "type": "Type[Orange.clustering.hierarchical.SingletonData]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "tree", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "Z", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "Z", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "Tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "Tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "right", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "root", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "root", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "seq", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "squareform", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "dist", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "cls", "type": "Type[TestHierarchical]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "cls", "type": "Type[TestHierarchical]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "DistMatrix", "type": "Type[Orange.misc.distmatrix.DistMatrix]"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "cls", "type": "Type[TestHierarchical]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "cls", "type": "Type[TestHierarchical]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "dist_matrix_clustering", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 58, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "index", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "prune", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "cluster_depths", "type": "Callable[[Any], Dict[Any, int]]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "pruned", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "prune", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "top_clusters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "top_clusters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "top_clusters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "top1", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "top", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "m", "type": "List[List[int]]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "condensedform", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "m", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "dist", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "m", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "condensedform", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "m", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "dist", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "m", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "optimal_leaf_ordering", "type": "Callable[..., Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "range", "type": "Any"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "range", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "score", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "score", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "ordered", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "score_unordered", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "score_ordered", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "score_ordered", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "data_clustering", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "table", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "height", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "feature_clustering", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "table", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "height", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "t", "type": "Callable[[float, Orange.clustering.hierarchical.Tree, Orange.clustering.hierarchical.Tree], Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "linkage_from_tree", "type": "Callable[[Orange.clustering.hierarchical.Tree], numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "tree", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "Z", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "tree", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "t", "type": "Callable[[float, Orange.clustering.hierarchical.Tree, Orange.clustering.hierarchical.Tree], Any]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "linkage_from_tree", "type": "Callable[[Orange.clustering.hierarchical.Tree], numpy.ndarray]"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "tree", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "Z", "type": "numpy.ndarray"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "tree", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "Tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "is_leaf", "type": "bool"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "Tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "right", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "right", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "Tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "is_leaf", "type": "bool"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "left", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 212, "col_offset": 34, "nodeName": "right", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "br", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "val", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "br", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 34, "col_offset": 51, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "misc", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "cls", "type": "Type[TestHierarchical]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 40, "col_offset": 58, "nodeName": "cls", "type": "Type[TestHierarchical]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "leaves", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "n", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "leaves", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "indices", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "items", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "indices", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "postorder", "type": "Callable"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "n", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "preorder", "type": "Callable"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "n", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "top", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 58, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "top", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "squareform", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "dist", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "squareform", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "dist", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "index", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "value", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "i1", "type": "Iterator[Any]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "i2", "type": "Iterator[Any]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "tee", "type": "Callable"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "iterable", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "next", "type": "Callable"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "i1", "type": "Iterator[Any]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "Table", "type": "Any"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "eye", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 134, "col_offset": 61, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "tree_from_linkage", "type": "Callable[[Any], Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "link", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "T", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "T", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "T", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "T", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "linkage_from_tree", "type": "Callable[[Orange.clustering.hierarchical.Tree], numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "empty", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "linkage_from_tree", "type": "Callable[[Orange.clustering.hierarchical.Tree], numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "t", "type": "Callable[[float, Orange.clustering.hierarchical.Tree, Orange.clustering.hierarchical.Tree], Any]"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "tree_from_linkage", "type": "Callable[[Any], Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 178, "col_offset": 62, "nodeName": "Z", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "tree_from_linkage", "type": "Callable[[Any], Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 195, "col_offset": 62, "nodeName": "Z", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "Tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "right", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "root", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "root", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "root", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "right", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "m", "type": "List[Union[List[nothing], List[int]]]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "Orange", "type": "module"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "n", "type": "Any"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "height", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 77, "col_offset": 58, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "is_leaf", "type": "Any"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 59, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "numpy", "type": "module"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "tree", "type": "Type[Orange.clustering.hierarchical.Tree]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "n", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "n", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "n", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "n", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "leaf", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "ordered", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "indices", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "cluster", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "indices", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "ordered", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "i1", "type": "Iterator[Any]"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "i2", "type": "Iterator[Any]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "data", "type": "module"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "numpy", "type": "module"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "tree", "type": "Any"}, {"lineNumber": 134, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "tree", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "C", "type": "Type[Orange.clustering.hierarchical.ClusterData]"}, {"lineNumber": 153, "col_offset": 61, "nodeName": "h", "type": "float"}, {"lineNumber": 153, "col_offset": 66, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 153, "col_offset": 72, "nodeName": "right", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "S", "type": "Type[Orange.clustering.hierarchical.SingletonData]"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "index", "type": "int"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "t", "type": "Callable[[float, Orange.clustering.hierarchical.Tree, Orange.clustering.hierarchical.Tree], Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "t", "type": "Callable[[float, Orange.clustering.hierarchical.Tree, Orange.clustering.hierarchical.Tree], Any]"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "t", "type": "Callable[[float, Orange.clustering.hierarchical.Tree, Orange.clustering.hierarchical.Tree], Any]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "items", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "d", "type": "int"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "d", "type": "int"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "c", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "preorder", "type": "Callable"}, {"lineNumber": 72, "col_offset": 70, "nodeName": "pruned", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "n", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "top", "type": "Any"}, {"lineNumber": 81, "col_offset": 59, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "postorder", "type": "Callable"}, {"lineNumber": 103, "col_offset": 66, "nodeName": "root", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "preorder", "type": "Callable"}, {"lineNumber": 105, "col_offset": 65, "nodeName": "root", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "leaf", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "leaves", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 69, "nodeName": "root", "type": "Any"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "Orange", "type": "module"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "first", "type": "Any"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "last", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "r", "type": "int"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 62, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "leaf", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "ch", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "ch", "type": "Any"}, {"lineNumber": 57, "col_offset": 53, "nodeName": "branches", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "ch", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "ch", "type": "Any"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "branches", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "values", "type": "Callable"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "hierarchical", "type": "module"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "i", "type": "Any"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "j", "type": "Any"}, {"lineNumber": 125, "col_offset": 54, "nodeName": "pairs", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "r", "type": "int"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "self", "type": "TestHierarchical"}, {"lineNumber": 57, "col_offset": 53, "nodeName": "n", "type": "Any"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "n", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "depths", "type": "Dict[Any, int]"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "j", "type": "Any"}, {"lineNumber": 125, "col_offset": 60, "nodeName": "indices", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 68, "nodeName": "root", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "left", "type": "Orange.clustering.hierarchical.Tree"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "right", "type": "Orange.clustering.hierarchical.Tree"}]