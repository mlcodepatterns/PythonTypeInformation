[{"lineNumber": 204, "col_offset": 21, "nodeName": "TestTree", "type": "Type[TestTree]"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "TestTree", "type": "Type[TestTree]"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "no_pruning_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "children", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "learn", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "learn", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pred", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "lim", "type": "int"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "lim", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "MAX_BINARIZATION", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "binarize", "type": "bool"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "binarize", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "binarize", "type": "bool"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "binarize", "type": "bool"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "col_x", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "col_x", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "binarize", "type": "bool"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "xy", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "no_pruning_args", "type": "Dict[str, int]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "data_mixed", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "blind_prediction", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "prediction_on_0_1", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "imports", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "data_mixed", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "blind_prediction", "type": "int"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "prediction_on_0_1", "type": "float"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "node", "type": "Orange.tree.Node"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "node", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "v1", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "v1", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "v2", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "v3", "type": "Any"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "v3", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "domain", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "subset", "type": "numpy.ndarray"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "left", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "children", "type": "List[Orange.tree.Node]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "children", "type": "List[Orange.tree.Node]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "children", "type": "List[Union[Orange.tree.DiscreteNode, Orange.tree.MappedDiscreteNode]]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "T", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "nan", "type": "float"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "v1", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "v3", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "domain", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "left", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "children", "type": "List[Orange.tree.Node]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "children", "type": "List[Orange.tree.Node]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "children", "type": "List[Union[Orange.tree.DiscreteNode, Orange.tree.MappedDiscreteNode]]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "domain", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "root", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "children", "type": "List[Optional[Orange.tree.Node]]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "left", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "subset", "type": "numpy.ndarray"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "subset", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "T", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "nan", "type": "float"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "cls", "type": "Type[TestTree]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "child", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "learn", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "clf", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "TreeModel", "type": "Type[Orange.tree.TreeModel]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "learn", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "table", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "clf", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "table", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "clf", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "clf", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "clf", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "clf", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "root", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "root", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "found", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "col_x", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "NumericNode", "type": "Type[Orange.tree.NumericNode]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "attr_idx", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "clf", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 156, "col_offset": 39, "nodeName": "blind_prediction", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "empty", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "clf", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "clf", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 182, "col_offset": 41, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "prediction_on_0_1", "type": "Any"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "xy", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "clf", "type": "Any"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "tree", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "DiscreteNode", "type": "Type[Orange.tree.DiscreteNode]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "attr_idx", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 44, "nodeName": "Y", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[Any], None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[], Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "cls", "type": "Type[TestClassifier]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "cls", "type": "Type[TestClassifier]"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "Table", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "cls", "type": "Type[TestClassifier]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "Table", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "cls", "type": "Type[TestClassifier]"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "cls", "type": "Type[TestClassifier]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "cls", "type": "Type[TestClassifier]"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[Any], None]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[], Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "cls", "type": "Type[TestRegressor]"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "Table", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "Table", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "cls", "type": "Type[TestRegressor]"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "Table", "type": "Any"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "new_domain", "type": "Any"}, {"lineNumber": 234, "col_offset": 43, "nodeName": "imports", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "cls", "type": "Type[TestRegressor]"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "cls", "type": "Type[TestRegressor]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "cls", "type": "Type[TestRegressor]"}, {"lineNumber": 243, "col_offset": 14, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "var", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "attr", "type": "Any"}, {"lineNumber": 245, "col_offset": 36, "nodeName": "var", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "attr_idx", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "children", "type": "List[nothing]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "subset", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "DiscreteNode", "type": "Type[Orange.tree.DiscreteNode]"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "var", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "attr", "type": "Any"}, {"lineNumber": 256, "col_offset": 36, "nodeName": "var", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "attr_idx", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "children", "type": "List[nothing]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "subset", "type": "numpy.ndarray"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 14, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "MappedDiscreteNode", "type": "Type[Orange.tree.MappedDiscreteNode]"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "attr", "type": "Any"}, {"lineNumber": 268, "col_offset": 36, "nodeName": "var", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "attr_idx", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "children", "type": "List[nothing]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "subset", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "branches_from_mapping", "type": "Callable[[Any, Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "branches", "type": "Any"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "NumericNode", "type": "Type[Orange.tree.NumericNode]"}, {"lineNumber": 288, "col_offset": 27, "nodeName": "var", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "attr", "type": "Any"}, {"lineNumber": 289, "col_offset": 36, "nodeName": "var", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "attr_idx", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "children", "type": "List[nothing]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "subset", "type": "numpy.ndarray"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 310, "col_offset": 23, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "Table", "type": "Any"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "NumericNode", "type": "Type[Orange.tree.NumericNode]"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "v1", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "DiscreteNode", "type": "Type[Orange.tree.DiscreteNode]"}, {"lineNumber": 316, "col_offset": 28, "nodeName": "v2", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "left", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "MappedDiscreteNode", "type": "Type[Orange.tree.MappedDiscreteNode]"}, {"lineNumber": 318, "col_offset": 35, "nodeName": "v3", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "right", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 321, "col_offset": 30, "nodeName": "left", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 321, "col_offset": 36, "nodeName": "right", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "TreeModel", "type": "Type[Orange.tree.TreeModel]"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "_values", "type": "Any"}, {"lineNumber": 328, "col_offset": 47, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 332, "col_offset": 14, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 343, "col_offset": 53, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 344, "col_offset": 63, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 345, "col_offset": 62, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 352, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "NumericNode", "type": "Type[Orange.tree.NumericNode]"}, {"lineNumber": 354, "col_offset": 27, "nodeName": "v1", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "DiscreteNode", "type": "Type[Orange.tree.DiscreteNode]"}, {"lineNumber": 355, "col_offset": 28, "nodeName": "v2", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "left", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "MappedDiscreteNode", "type": "Type[Orange.tree.MappedDiscreteNode]"}, {"lineNumber": 357, "col_offset": 35, "nodeName": "v3", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "right", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 360, "col_offset": 25, "nodeName": "left", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "right", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "TreeModel", "type": "Type[Orange.tree.TreeModel]"}, {"lineNumber": 362, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 362, "col_offset": 32, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 365, "col_offset": 50, "nodeName": "normalized", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 370, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 371, "col_offset": 21, "nodeName": "domain", "type": "Any"}, {"lineNumber": 372, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "DiscreteNode", "type": "Type[Orange.tree.DiscreteNode]"}, {"lineNumber": 373, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "root", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "TreeModel", "type": "Type[Orange.tree.TreeModel]"}, {"lineNumber": 375, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 375, "col_offset": 32, "nodeName": "root", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 377, "col_offset": 53, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 378, "col_offset": 63, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 379, "col_offset": 62, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "TreeModel", "type": "Type[Orange.tree.TreeModel]"}, {"lineNumber": 382, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 382, "col_offset": 37, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 386, "col_offset": 22, "nodeName": "root", "type": "Any"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "children", "type": "List[Union[Orange.tree.DiscreteNode, Orange.tree.MappedDiscreteNode]]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "left", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 390, "col_offset": 17, "nodeName": "get_instances", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "subset", "type": "Any"}, {"lineNumber": 391, "col_offset": 38, "nodeName": "Table", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 393, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 394, "col_offset": 32, "nodeName": "Y", "type": "Any"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "TreeModel", "type": "Type[Orange.tree.TreeModel]"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "TreeModel", "type": "Type[Orange.tree.TreeModel]"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 409, "col_offset": 37, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 411, "col_offset": 32, "nodeName": "_values", "type": "Any"}, {"lineNumber": 411, "col_offset": 47, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 426, "col_offset": 53, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 438, "col_offset": 53, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 450, "col_offset": 53, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "no_pruning_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "no_pruning_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 53, "col_offset": 59, "nodeName": "data_mixed", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "data_mixed", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "Table", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "domain", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "root", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "MappedDiscreteNode", "type": "Type[Orange.tree.MappedDiscreteNode]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "attr_idx", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "mapping", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "found", "type": "Any"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 118, "col_offset": 52, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 119, "col_offset": 52, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "clf", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "children", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "children", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "children", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "tree", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "predict", "type": "Any"}, {"lineNumber": 156, "col_offset": 39, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "clf", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "root", "type": "Any"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "prediction_on_0_1", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "tree", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "predict", "type": "Any"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "children", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "children", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "children", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "tree", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 201, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "TestTree", "type": "Type[TestTree]"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "TestTree", "type": "Type[TestTree]"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "test_filename", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "domain", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.Node"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.Node"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.Node"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.Node"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "node", "type": "Orange.tree.Node"}, {"lineNumber": 249, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "node", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "MappedDiscreteNode", "type": "Type[Orange.tree.MappedDiscreteNode]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 280, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 293, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestNodes"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "v1", "type": "Any"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "v2", "type": "Any"}, {"lineNumber": 312, "col_offset": 38, "nodeName": "v3", "type": "Any"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 313, "col_offset": 39, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 314, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 316, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 317, "col_offset": 65, "nodeName": "x", "type": "int"}, {"lineNumber": 318, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 320, "col_offset": 26, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 320, "col_offset": 66, "nodeName": "x", "type": "int"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "_thresholds", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "_thresholds", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 343, "col_offset": 32, "nodeName": "get_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 49, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "get_values_in_python", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 59, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "get_values_by_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 58, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 46, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 346, "col_offset": 50, "nodeName": "astype", "type": "Any"}, {"lineNumber": 346, "col_offset": 70, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 352, "col_offset": 25, "nodeName": "v1", "type": "Any"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "v2", "type": "Any"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "v3", "type": "Any"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 354, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 355, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 356, "col_offset": 65, "nodeName": "x", "type": "int"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 358, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 359, "col_offset": 26, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 359, "col_offset": 66, "nodeName": "x", "type": "int"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 365, "col_offset": 32, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 365, "col_offset": 46, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 372, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 34, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "Node", "type": "Type[Orange.tree.Node]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "get_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 49, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 378, "col_offset": 32, "nodeName": "get_values_in_python", "type": "Callable[[Any], Any]"}, {"lineNumber": 378, "col_offset": 59, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 379, "col_offset": 32, "nodeName": "get_values_by_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 58, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 382, "col_offset": 26, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 382, "col_offset": 37, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "node_count", "type": "Callable[[], Any]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "leaf_count", "type": "Callable[[], Any]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "depth", "type": "Callable[[], Any]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 386, "col_offset": 22, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 390, "col_offset": 17, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 390, "col_offset": 38, "nodeName": "root", "type": "Orange.tree.NumericNode"}, {"lineNumber": 390, "col_offset": 49, "nodeName": "left", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "subset", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 393, "col_offset": 32, "nodeName": "subset", "type": "Any"}, {"lineNumber": 393, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 394, "col_offset": 32, "nodeName": "subset", "type": "Any"}, {"lineNumber": 394, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "print_tree", "type": "Callable[..., str]"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 409, "col_offset": 37, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 411, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "_thresholds", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "_thresholds", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "sp", "type": "Any"}, {"lineNumber": 416, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "get_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "sp", "type": "Any"}, {"lineNumber": 428, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 438, "col_offset": 32, "nodeName": "get_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "sp", "type": "Any"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 450, "col_offset": 32, "nodeName": "get_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "pred", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "no_pruning_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "lim", "type": "int"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 53, "col_offset": 59, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "TreeLearner", "type": "Any"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "depth", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "clf", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "root", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "root", "type": "Any"}, {"lineNumber": 114, "col_offset": 66, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 115, "col_offset": 58, "nodeName": "mapping", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "children", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "children", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "children", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "root", "type": "Any"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "tree", "type": "Any"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "tree", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "predict", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "tree", "type": "Any"}, {"lineNumber": 183, "col_offset": 52, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "root", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "root", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "attr", "type": "Any"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "imports", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 64, "nodeName": "int32", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 64, "nodeName": "int32", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 64, "nodeName": "int32", "type": "Any"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 56, "nodeName": "int16", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 63, "nodeName": "int16", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 64, "nodeName": "int32", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "descend", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 318, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 334, "col_offset": 14, "nodeName": "nan", "type": "float"}, {"lineNumber": 335, "col_offset": 18, "nodeName": "nan", "type": "float"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "nan", "type": "float"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 364, "col_offset": 37, "nodeName": "expected_values", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 378, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 379, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 390, "col_offset": 38, "nodeName": "self", "type": "TestTreeModel"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 394, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 412, "col_offset": 25, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 416, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 424, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 428, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 436, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 438, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 450, "col_offset": 32, "nodeName": "model", "type": "Orange.tree.TreeModel"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "all_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "child", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 57, "col_offset": 52, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "tree", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 114, "col_offset": 66, "nodeName": "root", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "mapping", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "root", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "root", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "root", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "col_x", "type": "Any"}, {"lineNumber": 155, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "tree", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 183, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "domain", "type": "Any"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "is_continuous", "type": "Any"}, {"lineNumber": 249, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "node", "type": "Orange.tree.Node"}, {"lineNumber": 260, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "node", "type": "Orange.tree.DiscreteNode"}, {"lineNumber": 272, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "node", "type": "Orange.tree.MappedDiscreteNode"}, {"lineNumber": 282, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "node", "type": "Orange.tree.NumericNode"}, {"lineNumber": 313, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 317, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 320, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 53, "nodeName": "x", "type": "int"}, {"lineNumber": 327, "col_offset": 37, "nodeName": "arange", "type": "Any"}, {"lineNumber": 346, "col_offset": 50, "nodeName": "arange", "type": "Any"}, {"lineNumber": 356, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 359, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 53, "nodeName": "x", "type": "int"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 65, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 410, "col_offset": 37, "nodeName": "arange", "type": "Any"}, {"lineNumber": 417, "col_offset": 14, "nodeName": "nan", "type": "float"}, {"lineNumber": 418, "col_offset": 18, "nodeName": "nan", "type": "float"}, {"lineNumber": 422, "col_offset": 21, "nodeName": "nan", "type": "float"}, {"lineNumber": 429, "col_offset": 14, "nodeName": "nan", "type": "float"}, {"lineNumber": 430, "col_offset": 18, "nodeName": "nan", "type": "float"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "nan", "type": "float"}, {"lineNumber": 441, "col_offset": 14, "nodeName": "nan", "type": "float"}, {"lineNumber": 442, "col_offset": 18, "nodeName": "nan", "type": "float"}, {"lineNumber": 446, "col_offset": 21, "nodeName": "nan", "type": "float"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "cls", "type": "Type[TestTree]"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "Y", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "all_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "root", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "node", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "node", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "node", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "node", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "col_x", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "root", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "astype", "type": "Any"}, {"lineNumber": 133, "col_offset": 67, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "col_x", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "imports", "type": "Any"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "attr", "type": "Any"}, {"lineNumber": 263, "col_offset": 53, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 277, "col_offset": 53, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 298, "col_offset": 53, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 313, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 410, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "table", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "clf", "type": "Any"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "all_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "root", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "all_nodes", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "root", "type": "Any"}, {"lineNumber": 72, "col_offset": 61, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 82, "col_offset": 61, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 82, "col_offset": 67, "nodeName": "lim", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 109, "col_offset": 71, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "mapping", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 232, "col_offset": 54, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 232, "col_offset": 58, "nodeName": "values", "type": "Any"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "clf", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "self", "type": "TestTree"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "clf", "type": "Any"}, {"lineNumber": 72, "col_offset": 67, "nodeName": "lim", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "col_x", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "randint", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 58, "nodeName": "attr", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "randint", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "random", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "np", "type": "module"}]