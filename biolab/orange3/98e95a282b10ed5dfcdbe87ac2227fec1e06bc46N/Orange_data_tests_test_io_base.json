[{"lineNumber": 12, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "InitTestData", "type": "Type[InitTestData]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_rename_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_get_header_data_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_get_header_data_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_get_header_data_1_flags", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_get_header_data_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "InitTestData", "type": "Type[InitTestData]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_string_column", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_continuous_column", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_continuous_column_raises", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_time_column", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_discrete_column", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "test_column_parts_discrete_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "test_unknown_type_column", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "InitTestData", "type": "Type[InitTestData]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_data_table_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "test_data_table_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_data_table_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "test_data_table_1_flags", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "test_data_table_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "test_parse_headers_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "test_parse_headers_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_parse_headers_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "test_parse_headers_1_flags", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "test_parse_headers_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "test_adjust_data_width_lengthen", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "test_adjust_data_width_shorten", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_adjust_data_width_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 241, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "th", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "creator", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "column", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "creator", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "column", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "creator", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "creator", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "column", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "creator", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "vals", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "creator", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "column", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "creator", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "column", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "header1", "type": "List[List[str]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "header1_flags", "type": "List[List[str]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "header3", "type": "List[List[str]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "types", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "types", "type": "List[str]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "flags", "type": "List[str]"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "flags", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "types", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "types", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "flags", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "flags", "type": "List[str]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "types", "type": "List[nothing]"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "types", "type": "List[nothing]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "flags", "type": "List[nothing]"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "flags", "type": "List[nothing]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "data", "type": "List[List[str]]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "_TableHeader", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "names", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "names", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "types", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "flags", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "create_header_data", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "names", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "types", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "flags", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "names", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "types", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "flags", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "create_header_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "names", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "types", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "flags", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "create_header_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "names", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "types", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "flags", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "names", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "types", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "flags", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "create_header_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "names", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "types", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "flags", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "_get_column_creator", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "creator", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "valuemap", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "orig_values", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "coltype", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "StringVariable", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "coltype_kwargs", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "_get_column_creator", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "creator", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "valuemap", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "orig_values", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "coltype", "type": "Any"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "coltype_kwargs", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "_get_column_creator", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "creator", "type": "Any"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "_get_column_creator", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "creator", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "valuemap", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "orig_values", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "coltype", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "TimeVariable", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "coltype_kwargs", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "_get_column_creator", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "creator", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "valuemap", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "orig_values", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "coltype", "type": "Any"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "coltype_kwargs", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "_get_column_creator", "type": "Any"}, {"lineNumber": 123, "col_offset": 52, "nodeName": "vals", "type": "str"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "creator", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "vals", "type": "str"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "valuemap", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "orig_values", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "coltype", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "coltype_kwargs", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "_get_column_creator", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "creator", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "data", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "valuemap", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "orig_values", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "coltype", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "coltype_kwargs", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 61, "nodeName": "Table", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 71, "nodeName": "Table", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 71, "nodeName": "Table", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "Table", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 71, "nodeName": "Table", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "headers", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "parse_headers", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "headers", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "headers", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "parse_headers", "type": "Any"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "headers", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "headers", "type": "Any"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "parse_headers", "type": "Any"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "headers", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "headers", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "parse_headers", "type": "Any"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "headers", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "headers", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "parse_headers", "type": "Any"}, {"lineNumber": 188, "col_offset": 53, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "headers", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "types", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "flags", "type": "List[str]"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "adjusted", "type": "Any"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "adjust_data_width", "type": "Any"}, {"lineNumber": 201, "col_offset": 55, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 201, "col_offset": 69, "nodeName": "header", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "_data", "type": "Any"}, {"lineNumber": 204, "col_offset": 45, "nodeName": "adjusted", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "types", "type": "List[str]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "flags", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "types", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "flags", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "adjusted", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "adjust_data_width", "type": "Any"}, {"lineNumber": 217, "col_offset": 55, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 217, "col_offset": 69, "nodeName": "header", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "adjusted", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "types", "type": "List[str]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "flags", "type": "List[str]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "types", "type": "List[nothing]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "flags", "type": "List[nothing]"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "adjusted", "type": "Any"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "adjust_data_width", "type": "Any"}, {"lineNumber": 233, "col_offset": 55, "nodeName": "data", "type": "List[List[str]]"}, {"lineNumber": 233, "col_offset": 61, "nodeName": "header", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 234, "col_offset": 38, "nodeName": "adjusted", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 29, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 29, "nodeName": "types", "type": "List[nothing]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "flags", "type": "List[nothing]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "th", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "_TableHeader", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "_TableHeader", "type": "Any"}, {"lineNumber": 44, "col_offset": 62, "nodeName": "header1", "type": "List[List[str]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "_TableHeader", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "header1_flags", "type": "List[List[str]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "_TableHeader", "type": "Any"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "header3", "type": "List[List[str]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "header1", "type": "List[List[str]]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "_TableBuilder", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "column", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "column", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "column", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "column", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "column", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "_TableBuilder", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "column", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "column", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "column", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "column", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "column", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "_TableBuilder", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "header1", "type": "List[List[str]]"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "_TableBuilder", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "column", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "column", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "column", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "column", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "column", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "header1", "type": "List[List[str]]"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "_TableBuilder", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "columns", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "columns", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "columns", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "columns", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "columns", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "header1", "type": "List[List[str]]"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "_TableBuilder", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "column", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "column", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "column", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "column", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "column", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "_TableBuilder", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "column", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "column", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "column", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "column", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "column", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "data_table", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "data_table", "type": "Any"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "data_table", "type": "Any"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "header1", "type": "List[List[str]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "data_table", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "header1_flags", "type": "List[List[str]]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "data_table", "type": "Any"}, {"lineNumber": 160, "col_offset": 56, "nodeName": "header3", "type": "List[List[str]]"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 193, "col_offset": 41, "nodeName": "hdata", "type": "List[List[str]]"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 201, "col_offset": 55, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "adjusted", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 217, "col_offset": 55, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "adjusted", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 44, "col_offset": 62, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "self", "type": "TestTableHeader"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "self", "type": "TestTableBuilder"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "DataTableMixin", "type": "Any"}, {"lineNumber": 160, "col_offset": 56, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 36, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 46, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 220, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 220, "col_offset": 46, "nodeName": "header0", "type": "List[List[str]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 36, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 202, "col_offset": 56, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 54, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 205, "col_offset": 46, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "self", "type": "TestDataTableMixin"}, {"lineNumber": 219, "col_offset": 51, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 220, "col_offset": 46, "nodeName": "self", "type": "TestDataTableMixin"}]