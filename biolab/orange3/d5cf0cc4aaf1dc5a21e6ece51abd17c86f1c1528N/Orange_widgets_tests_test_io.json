[{"lineNumber": 7, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "test_csv_format_missing_values", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "CSV_FILE", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "CSV_FILE", "type": "str"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "CSVFormat", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "write_file", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "CSV_FILE", "type": "str"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "read_file", "type": "Any"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "CSV_FILE", "type": "str"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "old_instance", "type": "Any"}, {"lineNumber": 20, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 20, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "self", "type": "IOFileFormatTest"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "IOFileFormatTest"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "self", "type": "IOFileFormatTest"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "self", "type": "IOFileFormatTest"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "old_instance", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "self", "type": "IOFileFormatTest"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "metas", "type": "Any"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 49, "nodeName": "instance", "type": "Any"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "data", "type": "Any"}]