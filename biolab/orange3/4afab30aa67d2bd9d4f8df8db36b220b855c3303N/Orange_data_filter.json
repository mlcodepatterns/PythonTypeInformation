[{"lineNumber": 31, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "Filter", "type": "Type[Filter]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "Filter", "type": "Type[Filter]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "Filter", "type": "Type[Filter]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "Filter", "type": "Type[Filter]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "ValueFilter", "type": "Type[ValueFilter]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "ValueFilter", "type": "Type[ValueFilter]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "get_ref", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "set_ref", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "ValueFilter", "type": "Type[ValueFilter]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "get_ref", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "set_ref", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "ValueFilter", "type": "Type[ValueFilter]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "ref", "type": "property"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "ref", "type": "property"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "negate", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "negate", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "columns", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "negate", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "negate", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "retain", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "negate", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "conjunction", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "conjunction", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "conditions", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "Enum", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "position", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "position", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "min", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "min", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "max", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "max", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "oper", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "oper", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "case_sensitive", "type": "bool"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "min", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "property", "type": "Type[property]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "get_ref", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "set_ref", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "min", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "min", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "max", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "max", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "oper", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "oper", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "case_sensitive", "type": "bool"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "min", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 163, "col_offset": 10, "nodeName": "property", "type": "Type[property]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "get_ref", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "set_ref", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "case_sensitive", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "case_sensitive", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Filter"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "negate", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Filter_IsDefined"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "Instance", "type": "Type[Orange.data.instance.Instance]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "Storage", "type": "Type[Orange.data.storage.Storage]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "fromiter", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "self", "type": "Filter_IsDefined"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "Instance", "type": "Type[Orange.data.instance.Instance]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "Storage", "type": "Type[Orange.data.storage.Storage]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "fromiter", "type": "Any"}, {"lineNumber": 67, "col_offset": 63, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "self", "type": "Filter_HasClass"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "negate", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Filter_Random"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "Instance", "type": "Type[Orange.data.instance.Instance]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "Storage", "type": "Type[Orange.data.storage.Storage]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "self", "type": "Filter_Random"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "retain", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Values"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Values"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "ValueFilter"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "position", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "FilterDiscrete"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "position", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "FilterContinuous"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "FilterContinuous"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "FilterContinuous"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "FilterContinuous"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "FilterContinuous"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "FilterContinuous"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "position", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "FilterString"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "FilterString"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "FilterString"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "FilterString"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "self", "type": "FilterString"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "FilterString"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "position", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "FilterStringList"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "FilterStringList"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "negate", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "logical_not", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "r", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "negate", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 73, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "logical_not", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "r", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "negate", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "prob", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "Filter_Random"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "prob", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "retain", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "retain", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "retain", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "min", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "min", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "self", "type": "Filter_IsDefined"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "anynan", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "_values", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "_filter_is_defined", "type": "Any"}, {"lineNumber": 48, "col_offset": 47, "nodeName": "columns", "type": "Any"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "negate", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "anynan", "type": "Any"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "_values", "type": "Any"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "inst", "type": "Any"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "self", "type": "Filter_HasClass"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "anynan", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "_y", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "_filter_has_class", "type": "Any"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "negate", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "anynan", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "_y", "type": "Any"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "inst", "type": "Any"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "self", "type": "Filter_Random"}, {"lineNumber": 80, "col_offset": 53, "nodeName": "prob", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "_filter_random", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "prob", "type": "Any"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "negate", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "self", "type": "Filter_Random"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "self", "type": "Filter_Random"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 59, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "n", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 147, "col_offset": 43, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "bn", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 47, "nodeName": "self", "type": "Filter_IsDefined"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "self", "type": "Filter_IsDefined"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "bn", "type": "Any"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "inst", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "bn", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "self", "type": "Filter_HasClass"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "bn", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "inst", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 80, "col_offset": 53, "nodeName": "self", "type": "Filter_Random"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "self", "type": "Filter_Random"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "self", "type": "Filter_Random"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "random", "type": "module"}]