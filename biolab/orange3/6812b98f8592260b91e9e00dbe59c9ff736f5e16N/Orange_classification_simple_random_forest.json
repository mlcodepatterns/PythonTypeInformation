[{"lineNumber": 7, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 10, "col_offset": 32, "nodeName": "Learner", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "fit_storage", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "Model", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "learn", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "predict_storage", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "skip_prob", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "skip_prob", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "min_instances", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "min_instances", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "max_majority", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "max_majority", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "estimators_", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "SimpleRandomForestLearner"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "SimpleRandomForestLearner"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "SimpleRandomForestLearner"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "SimpleRandomForestLearner"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "SimpleRandomForestLearner"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "SimpleRandomForestLearner"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "SimpleRandomForestModel", "type": "Type[SimpleRandomForestModel]"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "self", "type": "SimpleRandomForestLearner"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "SimpleRandomForestModel"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "type", "type": "str"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "cls_vals", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "learn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "learner", "type": "SimpleRandomForestLearner"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "SimpleTreeLearner", "type": "Type[Orange.classification.simple_tree.SimpleTreeLearner]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "min_instances", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "max_majority", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "skip_prob", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "n_estimators", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "seed", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "type", "type": "str"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "tree", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "estimators_", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "domain", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "SimpleRandomForestModel"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "SimpleRandomForestModel"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "values", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "SimpleRandomForestModel"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "learner", "type": "SimpleRandomForestLearner"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "learner", "type": "SimpleRandomForestLearner"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "learner", "type": "SimpleRandomForestLearner"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "learner", "type": "SimpleRandomForestLearner"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "learner", "type": "SimpleRandomForestLearner"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "tree", "type": "Orange.classification.simple_tree.SimpleTreeLearner"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "seed", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "self", "type": "SimpleRandomForestModel"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "self", "type": "SimpleRandomForestModel"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "estimators_", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "class_var", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "learner", "type": "SimpleRandomForestLearner"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "estimators_", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "tree", "type": "Orange.classification.simple_tree.SimpleTreeLearner"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "cls_vals", "type": "int"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "tree", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "Probs", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "self", "type": "SimpleRandomForestModel"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "domain", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "SimpleRandomForestModel"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "self", "type": "SimpleRandomForestModel"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "tree", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "data", "type": "Any"}]