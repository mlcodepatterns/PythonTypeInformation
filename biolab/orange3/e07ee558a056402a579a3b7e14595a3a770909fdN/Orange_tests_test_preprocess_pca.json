[{"lineNumber": 10, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "test_project_pca_default", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_project_pca", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "ionosphere", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "ionosphere", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "projector", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "data_pc", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "ionosphere", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "projector", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "data_pc", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPCAProjector]"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "Table", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "self", "type": "TestPCAProjector"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "ProjectPCA", "type": "Type[Orange.preprocess.preprocess.ProjectPCA]"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "projector", "type": "Any"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "self", "type": "TestPCAProjector"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "ProjectPCA", "type": "Type[Orange.preprocess.preprocess.ProjectPCA]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "projector", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestPCAProjector"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestPCAProjector"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestPCAProjector"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestPCAProjector"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestPCAProjector"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestPCAProjector"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "data_pc", "type": "Any"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "metas", "type": "Any"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "metas", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "Y", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "data_pc", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "metas", "type": "Any"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "metas", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "Y", "type": "Any"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "data_pc", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "data_pc", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "data_pc", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "data_pc", "type": "Any"}]