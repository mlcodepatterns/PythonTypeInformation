[{"lineNumber": 11, "col_offset": 0, "nodeName": "replace_nan", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "SklFitter", "type": "Type[Orange.classification.SklFitter]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "fit", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "SklModel", "type": "Type[Orange.classification.SklModel]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "predict", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "classification", "type": "module"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "classification", "type": "module"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "sum", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "Orange", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "imputer", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "rf_model", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "Orange", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "clf", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "clf", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "imputer", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "imp", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "RandomForestLearner"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "RandomForestLearner"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "Imputer", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "replace_nan", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "imputer", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "RandomForest", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "RandomForestClassifier", "type": "Type[RandomForestClassifier]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "rf_model", "type": "Any"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "imputer", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "RandomForestClassifier"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "RandomForestClassifier"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "replace_nan", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "predict", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "prob", "type": "Any"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "X", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "imp_model", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "imputer", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "self", "type": "RandomForestLearner"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "self", "type": "RandomForestLearner"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "Integral", "type": "Type[numbers.Integral]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "max_features", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "rf_model", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "self", "type": "RandomForestLearner"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "imputer", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "clf", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "clf", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "RandomForestLearner"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "numbers", "type": "module"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "Y", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "self", "type": "RandomForestClassifier"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "self", "type": "RandomForestClassifier"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "self", "type": "RandomForestClassifier"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "X", "type": "Any"}]