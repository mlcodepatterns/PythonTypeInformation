[{"lineNumber": 14, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_adapter", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "v1", "type": "Any"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "v1", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "v2", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "v3", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "v3", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "domain", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "subset", "type": "numpy.ndarray"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "left", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "subset", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "subset", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "adapter", "type": "Any"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "DiscreteVariable", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "ContinuousVariable", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "Table", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "domain", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "NumericNode", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "v1", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "DiscreteNode", "type": "Any"}, {"lineNumber": 25, "col_offset": 40, "nodeName": "v2", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "MappedDiscreteNode", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "v3", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "right", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "left", "type": "Any"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "right", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "TreeModel", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "root", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "TreeAdapter", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "root", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "v1", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "children", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "max_depth", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "num_nodes", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "root", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "root", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "domain", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "domain", "type": "Any"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "v1", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "v2", "type": "Any"}, {"lineNumber": 21, "col_offset": 38, "nodeName": "v3", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 23, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "arange", "type": "Any"}, {"lineNumber": 24, "col_offset": 57, "nodeName": "int32", "type": "Any"}, {"lineNumber": 25, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "Node", "type": "Any"}, {"lineNumber": 27, "col_offset": 65, "nodeName": "x", "type": "int"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "Node", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "left", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "left", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "parent", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "left", "type": "Any"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "has_children", "type": "Any"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "left", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "has_children", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "is_leaf", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "left", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "is_leaf", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "children", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "root", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "left", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "right", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "children", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "right", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "get_distribution", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "left", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "rules", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "right", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "attribute", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "root", "type": "Any"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "leaves", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "left", "type": "Any"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "left", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "leaves", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "right", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "leaves", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "children", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 23, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "children", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "children", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "children", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "children", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "get_instances_in_nodes", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "root", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "get_instances_in_nodes", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "float", "type": "Any"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "arange", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "left", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "left", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "right", "type": "Any"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "right", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "children", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "adapt", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "left", "type": "Any"}, {"lineNumber": 67, "col_offset": 53, "nodeName": "right", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "right", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 67, "col_offset": 53, "nodeName": "self", "type": "TestTreeAdapter"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "self", "type": "TestTreeAdapter"}]