[{"lineNumber": 13, "col_offset": 20, "nodeName": "QAppTestCase", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test_io", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_safe_evals", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "test_literal_dump", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "reg", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "base", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "file_desc", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "discretize_desc", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "bayes_desc", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "file_node", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "bayes_node", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "global_registry", "type": "Any"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "widget", "type": "Any"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "widget", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "widget", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "Scheme", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "SchemeNode", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "file_desc", "type": "Any"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "SchemeNode", "type": "Any"}, {"lineNumber": 25, "col_offset": 37, "nodeName": "discretize_desc", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "SchemeNode", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "bayes_desc", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "file_node", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "bayes_node", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "add_link", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "add_link", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "add_annotation", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "add_annotation", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "scheme_to_ows_stream", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "parse_scheme", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "n1", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "n2", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "link1", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "link2", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "links", "type": "Any"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "links", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "string_eval", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "s", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "tuple_eval", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "literal_dumps", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "struct", "type": "Dict[Optional[Union[int, bool]], Optional[Union[List[Dict[Tuple[int, int], str]], float]]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "struct", "type": "Dict[Optional[Union[int, bool]], Optional[Union[List[Dict[Tuple[int, int], str]], float]]]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "recur", "type": "List[Union[int, list]]"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "reg", "type": "Any"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "base", "type": "str"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "reg", "type": "Any"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "base", "type": "str"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "reg", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "base", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "SchemeLink", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "file_node", "type": "Any"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "SchemeLink", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "bayes_node", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "SchemeArrowAnnotation", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "SchemeTextAnnotation", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "Scheme", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "position", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "position", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "title", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "title", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "SchemeTextAnnotation", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "string_eval", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "tuple_eval", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "tuple_eval", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "literal_loads", "type": "Any"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "s", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "recur", "type": "List[Union[int, list]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "literal_dumps", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "recur", "type": "List[Union[int, list]]"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "literal_dumps", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "links", "type": "Any"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "links", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "n1", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "n2", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "n1", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "n2", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "source_type", "type": "Any"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "source_type", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "sink_type", "type": "Any"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "sink_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "source_channel", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "source_channel", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "sink_channel", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "sink_channel", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "link2", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 69, "col_offset": 45, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "text", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "text", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "rect", "type": "Any"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "rect", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "start_pos", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "start_pos", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "end_pos", "type": "Any"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "end_pos", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "chr", "type": "Callable[[int], str]"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "chr", "type": "Callable[[int], str]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "recur", "type": "List[Union[int, list]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "link2", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "link2", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "link2", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "link2", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "annot2", "type": "Any"}]