[{"lineNumber": 12, "col_offset": 30, "nodeName": "WidgetTest", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "get_tree_widgets", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "get_grid_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "set_combo_option", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_sending_rf_draws_trees", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_info_label", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_depth_slider", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "test_target_class_for_classification_rf", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_target_class_for_regression_rf", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test_zoom", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "destructure_rectf", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "titanic_data", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "titanic_data", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "housing_data", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "housing_data", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "regex", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "setUpClass", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWPythagoreanForest]"}, {"lineNumber": 19, "col_offset": 58, "nodeName": "titanic_data", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "housing_data", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "housing", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "create_widget", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "OWPythagoreanForest", "type": "Type[Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "findText", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "text", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "setCurrentIndex", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "index", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "emit", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "index", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "housing", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertNotRegex", "type": "Any"}, {"lineNumber": 70, "col_offset": 56, "nodeName": "regex", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertRegex", "type": "Any"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "regex", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertNotRegex", "type": "Any"}, {"lineNumber": 78, "col_offset": 56, "nodeName": "regex", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "set_depth_limit", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "setValue", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "target_class_has_changed", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "set_combo_option", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "ui_target_class_combo", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "set_combo_option", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "ui_target_class_combo", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "housing", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "target_class_has_changed", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "set_combo_option", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "ui_target_class_combo", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "set_combo_option", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "ui_target_class_combo", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "grid_item", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "iw", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "ih", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "destructure_rectf", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "setValue", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "lw", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "lh", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "destructure_rectf", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "setValue", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "lw", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "lh", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "destructure_rectf", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "Table", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "RandomForestLearner", "type": "Type[Orange.classification.random_forest.RandomForestLearner]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWPythagoreanForest]"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "Table", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "RandomForestRegressionLearner", "type": "Type[Orange.regression.random_forest.RandomForestRegressionLearner]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWPythagoreanForest]"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "combo_box", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "combo_box", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "activated", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "ui_depth_slider", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "widget", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "widget", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "widget", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "reset_mock", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "widget", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "widget", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "boundingRect", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "ui_zoom_slider", "type": "Any"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "boundingRect", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "ui_zoom_slider", "type": "Any"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "boundingRect", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "PythagorasTreeViewer", "type": "Type[Orange.widgets.visualize.pythagorastreeviewer.PythagorasTreeViewer]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "GridItem", "type": "Type[Orange.widgets.visualize.owpythagoreanforest.GridItem]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "combo_box", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "ui_info", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "ui_info", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "ui_info", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "set_depth_limit", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "target_class_has_changed", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "target_class_has_changed", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "target_class_has_changed", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "target_class_has_changed", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "target_class_has_changed", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "target_class_has_changed", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "get_grid_items", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "width", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "height", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "grid_item", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "grid_item", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "iw", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "lw", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "ih", "type": "Any"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "lh", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "grid_item", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "iw", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "lw", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "ih", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "lh", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "scene", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "scene", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "widget", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "widget", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "r", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "r", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "widget", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "widget", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "self", "type": "TestOWPythagoreanForest"}]