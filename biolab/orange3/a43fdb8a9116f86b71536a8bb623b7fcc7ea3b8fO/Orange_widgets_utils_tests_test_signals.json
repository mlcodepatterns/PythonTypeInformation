[{"lineNumber": 20, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_get_flags", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_decorate", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "test_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_bind_and_send", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "GuiTest", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_init_binds_outputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "test_checking_invalid_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "test_signal_conversion", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "test_get_signals", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "WidgetTest", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "WidgetOutputsTestMixin", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "test_outputs", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "_select_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "test_inputs_check_sql", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "foo", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 233, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "bar", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "bound", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "value", "type": "object"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "id", "type": "int"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "handler", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "inputs", "type": "List[Union[Tuple[str, Type[int], str], Orange.canvas.registry.description.InputSignal]]"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "outputs", "type": "List[Union[Tuple[str, Type[int]], Orange.canvas.registry.description.OutputSignal]]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "signal_name", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "signal_data", "type": "int"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "signal", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "Input", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "handler", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "handler", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "signal", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "MagicMock", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "Output", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "bound_signal", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "widget", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "send", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "value", "type": "object"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "id", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "widget", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "value", "type": "object"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "id", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 112, "col_offset": 58, "nodeName": "widget", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "widget", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "OWWidget", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "inputs", "type": "List[Tuple[str, Type[int], str]]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "inputs", "type": "List[Union[Tuple[str, Type[int], str], Orange.canvas.registry.description.InputSignal]]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "outputs", "type": "List[Union[Tuple[str, Type[int]], Orange.canvas.registry.description.OutputSignal]]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "input1", "type": "Tuple[str, Type[int], str]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "input2", "type": "Orange.canvas.registry.description.InputSignal"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "input1", "type": "Tuple[str, Type[int], str]"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "InputSignal", "type": "Type[Orange.canvas.registry.description.InputSignal]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "input2", "type": "Orange.canvas.registry.description.InputSignal"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "InputSignal", "type": "Type[Orange.canvas.registry.description.InputSignal]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "output1", "type": "Tuple[str, Type[int]]"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "output2", "type": "Orange.canvas.registry.description.OutputSignal"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "output1", "type": "Tuple[str, Type[int]]"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "OutputSignal", "type": "Type[Orange.canvas.registry.description.OutputSignal]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "output2", "type": "Orange.canvas.registry.description.OutputSignal"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "OutputSignal", "type": "Type[Orange.canvas.registry.description.OutputSignal]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "inputs", "type": "List[Tuple[str, Type[int], str]]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "outputs", "type": "List[Tuple[str, Type[float]]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 166, "col_offset": 56, "nodeName": "inputs", "type": "List[Tuple[str, Type[int], str]]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 167, "col_offset": 57, "nodeName": "outputs", "type": "List[Tuple[str, Type[float]]]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "get_signals", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "InputSignal", "type": "Type[Orange.canvas.registry.description.InputSignal]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "get_signals", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "OutputSignal", "type": "Type[Orange.canvas.registry.description.OutputSignal]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "setUpClass", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "cls", "type": "Type[TestOWMockWidget]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWMockWidget]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWMockWidget]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestOWMockWidget"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "create_widget", "type": "Any"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "called", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "Single", "type": "int"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "NonDefault", "type": "int"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "Multiple", "type": "int"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "NonDefault", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "Single", "type": "int"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "Default", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 29, "col_offset": 47, "nodeName": "Explicit", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "SignalTest"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "get_flags", "type": "Any"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "Dynamic", "type": "int"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "patch", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "Input", "type": "Any"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "type", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "id", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "doc", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "replaces", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "flags", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "Input", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "patch", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "Output", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "type", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "id", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "doc", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "replaces", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "flags", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "bound", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "send", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "an_output", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "an_output", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "an_output", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "inputs", "type": "List[Tuple[str, Type[int], str]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "input1", "type": "Tuple[str, Type[int], str]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "input2", "type": "Orange.canvas.registry.description.InputSignal"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "output1", "type": "Tuple[str, Type[int]]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "output2", "type": "Orange.canvas.registry.description.OutputSignal"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "get_signals", "type": "Any"}, {"lineNumber": 166, "col_offset": 56, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "get_signals", "type": "Any"}, {"lineNumber": 167, "col_offset": 57, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "an_input", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "an_output", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "WidgetOutputsTestMixin", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "self", "type": "TestOWMockWidget"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "self", "type": "TestOWMockWidget"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "Input", "type": "Any"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "input", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "mock", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "Single", "type": "int"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "NonDefault", "type": "int"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "_Signal", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "Single", "type": "int"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "NonDefault", "type": "int"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "self", "type": "InputTest"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "OutputTest"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "signal", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "getflags", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "signalManager", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "Output", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "Outputs", "type": "Type[Any]"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "Outputs", "type": "Type[Any]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "an_input", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "self", "type": "WidgetSignalsMixinTest"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "InputSignal", "type": "Type[Orange.canvas.registry.description.InputSignal]"}, {"lineNumber": 139, "col_offset": 68, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "OutputSignal", "type": "Type[Orange.canvas.registry.description.OutputSignal]"}, {"lineNumber": 140, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 161, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "Input", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "Output", "type": "Any"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "MockWidget", "type": "Type[Any]"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "Input", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "widget", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "self", "type": "Any"}]