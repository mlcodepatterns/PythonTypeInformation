[{"lineNumber": 14, "col_offset": 30, "nodeName": "WidgetTest", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "get_tree_widgets", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "get_grid_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_sending_rf_draws_trees", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_info_label", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_depth_slider", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "_pick_random_tree", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "_get_visible_squares", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "_check_all_same", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_changing_target_class_changes_coloring", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "test_changing_size_adjustment_changes_sizes", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_zoom", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "test_keep_colors_on_sizing_change", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "_destructure_rectf", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "titanic_data", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "titanic_data", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "housing_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "housing_data", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "regex", "type": "str"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "trees", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "iter_items", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "squares", "type": "List[List[Any]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "tree_index", "type": "int"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "squares_same", "type": "List[bool]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "colors", "type": "List[List[Any]]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "tree_index", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "colors_same", "type": "List[bool]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "setUpClass", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWPythagoreanForest]"}, {"lineNumber": 21, "col_offset": 58, "nodeName": "titanic_data", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "housing_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "housing", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "create_widget", "type": "Any"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "OWPythagoreanForest", "type": "Type[Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "housing", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertNotRegex", "type": "Any"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "regex", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertRegex", "type": "Any"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "regex", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertNotRegex", "type": "Any"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "regex", "type": "str"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "set_depth_limit", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "setValue", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "first", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "squares_same", "type": "List[bool]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "housing", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "combobox_run_through_all", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "ui_size_calc_combo", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "grid_item", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 151, "col_offset": 52, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "iw", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "ih", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "_destructure_rectf", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "setValue", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "lw", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "lh", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "_destructure_rectf", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "setValue", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "lw", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "lh", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "_destructure_rectf", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "titanic", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "combobox_run_through_all", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "ui_size_calc_combo", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "Table", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "RandomForestLearner", "type": "Type[Orange.classification.random_forest.RandomForestLearner]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWPythagoreanForest]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "Table", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "RandomForestRegressionLearner", "type": "Type[Orange.regression.random_forest.RandomForestRegressionLearner]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "cls", "type": "Type[TestOWPythagoreanForest]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "Mock", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "ui_depth_slider", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "next", "type": "Callable"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "iter_items", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "colors", "type": "List[List[Any]]"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "tree", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "combobox_run_through_all", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "ui_target_class_combo", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "grid_items", "type": "List[Orange.widgets.visualize.owpythagoreanforest.GridItem]"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "simulate", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "_callback", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "_check_all_same", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 144, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 151, "col_offset": 52, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "boundingRect", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "ui_zoom_slider", "type": "Any"}, {"lineNumber": 159, "col_offset": 44, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "boundingRect", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "ui_zoom_slider", "type": "Any"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "zoom", "type": "Any"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "boundingRect", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "grid_items", "type": "List[Orange.widgets.visualize.owpythagoreanforest.GridItem]"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "simulate", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "_callback", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "_check_all_same", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "x", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "colors_same", "type": "List[bool]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "PythagorasTreeViewer", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "GridItem", "type": "Type[Orange.widgets.visualize.owpythagoreanforest.GridItem]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "ui_info", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "ui_info", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "ui_info", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "set_depth_limit", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 97, "col_offset": 62, "nodeName": "isVisible", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "first", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "curr", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "curr", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "iter_items", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "_pick_random_tree", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "simulate", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "_callback", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "_check_all_same", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 122, "col_offset": 66, "nodeName": "data_type", "type": "str"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "random", "type": "module"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "get_grid_items", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "squares", "type": "List[List[Any]]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 144, "col_offset": 57, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "get_grid_items", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 52, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "width", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "height", "type": "Any"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "grid_item", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "grid_item", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "iw", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "lw", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "ih", "type": "Any"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "lh", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "grid_item", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "iw", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "lw", "type": "Any"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "ih", "type": "Any"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "lh", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "random", "type": "module"}, {"lineNumber": 172, "col_offset": 64, "nodeName": "get_grid_items", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "colors", "type": "List[List[Any]]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "scene", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "scene", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "widget", "type": "Orange.widgets.visualize.owpythagoreanforest.OWPythagoreanForest"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "_square_objects", "type": "Any"}, {"lineNumber": 97, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "colors", "type": "List[List[Any]]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 119, "col_offset": 61, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 144, "col_offset": 62, "nodeName": "squares", "type": "List[List[Any]]"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "x", "type": "bool"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "x", "type": "bool"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "squares_same", "type": "List[bool]"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "r", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "r", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 172, "col_offset": 64, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 182, "col_offset": 61, "nodeName": "colors", "type": "List[List[Any]]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "widget", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "widget", "type": "Any"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "tree", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "color", "type": "Any"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "sq", "type": "Any"}, {"lineNumber": 119, "col_offset": 66, "nodeName": "colors", "type": "List[List[Any]]"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "x", "type": "bool"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "x", "type": "bool"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "squares_same", "type": "List[bool]"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "_get_visible_squares", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 56, "nodeName": "_get_visible_squares", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 113, "col_offset": 60, "nodeName": "_get_visible_squares", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 86, "nodeName": "tree", "type": "Any"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 175, "col_offset": 56, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "brush", "type": "Any"}, {"lineNumber": 113, "col_offset": 60, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "tree_index", "type": "int"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "get_tree_widgets", "type": "Callable[[], Any]"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "tree_index", "type": "int"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "sq", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "TestOWPythagoreanForest"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "self", "type": "TestOWPythagoreanForest"}]