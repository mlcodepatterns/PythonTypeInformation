[{"lineNumber": 224, "col_offset": 0, "nodeName": "foo_registry", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "QAppTestCase", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "test_io", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_io2", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "test_safe_evals", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "test_literal_dump", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "test_1_0_parse", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "test_resolve_replaced", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "reg", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "reg", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "reg", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "base", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "file_desc", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "discretize_desc", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "bayes_desc", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "file_node", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "bayes_node", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "reg", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "base", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "file_desc", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "discretize_desc", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "bayes_desc", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "file_node", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "bayes_node", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "tree", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "qnames", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "reg", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "qnames", "type": "List[Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "projects", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "tree", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "qnames", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "reg", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "qnames", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "projects", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 10, "nodeName": "WidgetRegistry", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "register_widget", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "register_widget", "type": "Any"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "global_registry", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "widget", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "widget", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "widget", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "Scheme", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "SchemeNode", "type": "Any"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "file_desc", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "SchemeNode", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "discretize_desc", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "SchemeNode", "type": "Any"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "bayes_desc", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "file_node", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "bayes_node", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "add_link", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "add_link", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "add_annotation", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "add_annotation", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "scheme_to_ows_stream", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "parse_scheme", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "n1", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "n2", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "link1", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "link2", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "links", "type": "Any"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "links", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "global_registry", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "widget", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "widget", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "widget", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "Scheme", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "SchemeNode", "type": "Any"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "file_desc", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "SchemeNode", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "discretize_desc", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "SchemeNode", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "bayes_desc", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "file_node", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "add_node", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "bayes_node", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "add_link", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "add_link", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "add_annotation", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "add_annotation", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "scheme_to_ows_stream", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "scheme_load", "type": "Any"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "n1", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "n2", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "link1", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "link2", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "links", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "links", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "string_eval", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "s", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "tuple_eval", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "literal_dumps", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "struct", "type": "Dict[Optional[Union[int, bool]], Optional[Union[List[Dict[Tuple[int, int], str]], float]]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 170, "col_offset": 53, "nodeName": "struct", "type": "Dict[Optional[Union[int, bool]], Optional[Union[List[Dict[Tuple[int, int], str]], float]]]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "recur", "type": "List[Union[int, list]]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "parse", "type": "Callable[..., xml.etree.ElementTree.ElementTree]"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "parse_ows_etree_v_1_0", "type": "Any"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "tree", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "_scheme", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "version", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "qualified_name", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "foo_registry", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "resolve_1_0", "type": "Any"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "reg", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "qualified_name", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "project_name", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "parse", "type": "Callable[..., xml.etree.ElementTree.ElementTree]"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "parse_ows_etree_v_2_0", "type": "Any"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "tree", "type": "xml.etree.ElementTree.ElementTree"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "_scheme", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "version", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "qualified_name", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "foo_registry", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "resolve_replaced", "type": "Any"}, {"lineNumber": 215, "col_offset": 44, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 215, "col_offset": 52, "nodeName": "reg", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "qualified_name", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "project_name", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "reg", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "WidgetDescription", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "reg", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "WidgetDescription", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "reg", "type": "Any"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "base", "type": "str"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "reg", "type": "Any"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "base", "type": "str"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "reg", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "base", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "SchemeLink", "type": "Any"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "file_node", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "SchemeLink", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "bayes_node", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "SchemeArrowAnnotation", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "SchemeTextAnnotation", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "Scheme", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "position", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "position", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "title", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "title", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 68, "col_offset": 44, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "SchemeTextAnnotation", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "reg", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "base", "type": "str"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "reg", "type": "Any"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "base", "type": "str"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "reg", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "base", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "SchemeLink", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "file_node", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "SchemeLink", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "discretize_node", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "bayes_node", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "SchemeArrowAnnotation", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "SchemeTextAnnotation", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "stream", "type": "_io.StringIO"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "Scheme", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "links", "type": "Any"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "links", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 114, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 54, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "position", "type": "Any"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "position", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "title", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "title", "type": "Any"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "enabled", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "SchemeTextAnnotation", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "string_eval", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "tuple_eval", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "tuple_eval", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "terminal_eval", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "literal_loads", "type": "Any"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "s", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "recur", "type": "List[Union[int, list]]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "literal_dumps", "type": "Any"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "recur", "type": "List[Union[int, list]]"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "literal_dumps", "type": "Any"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "ET", "type": "module"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "FOOBAR_v10", "type": "str"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "node", "type": "Any"}, {"lineNumber": 188, "col_offset": 50, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "qnames", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "node", "type": "Any"}, {"lineNumber": 195, "col_offset": 50, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "qnames", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "node", "type": "Any"}, {"lineNumber": 198, "col_offset": 50, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "projects", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "ET", "type": "module"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "FOOBAR_v20", "type": "str"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "node", "type": "Any"}, {"lineNumber": 210, "col_offset": 50, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "qnames", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "node", "type": "Any"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "node", "type": "Any"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "qnames", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 220, "col_offset": 42, "nodeName": "node", "type": "Any"}, {"lineNumber": 220, "col_offset": 50, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "projects", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "links", "type": "Any"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "links", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "annotations", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "n1", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "n2", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "n1", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "n2", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "source_type", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "source_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "sink_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "sink_type", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "source_channel", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "source_channel", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "sink_channel", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "sink_channel", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 68, "col_offset": 44, "nodeName": "link2", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "text", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "text", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "rect", "type": "Any"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "rect", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "start_pos", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "start_pos", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "end_pos", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "end_pos", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 114, "col_offset": 54, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "n1", "type": "Any"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "n2", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "n1", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "n2", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "source_type", "type": "Any"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "source_type", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "sink_type", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "sink_type", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "source_channel", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "source_channel", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "sink_channel", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "sink_channel", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "link2", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "text", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "text", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "rect", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "rect", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "start_pos", "type": "Any"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "start_pos", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "end_pos", "type": "Any"}, {"lineNumber": 139, "col_offset": 49, "nodeName": "end_pos", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "chr", "type": "Callable[[int], str]"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "chr", "type": "Callable[[int], str]"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "recur", "type": "List[Union[int, list]]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "readwrite", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "links", "type": "Any"}, {"lineNumber": 188, "col_offset": 50, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 195, "col_offset": 50, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 198, "col_offset": 50, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "links", "type": "Any"}, {"lineNumber": 210, "col_offset": 50, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 220, "col_offset": 50, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "scheme_1", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "link2", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "link2", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "link2", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "link2", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "link2", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "link2", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "link2", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "link1", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "link2", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "self", "type": "TestReadWrite"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "annot1", "type": "Any"}, {"lineNumber": 139, "col_offset": 49, "nodeName": "annot2", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "parsed", "type": "Any"}]