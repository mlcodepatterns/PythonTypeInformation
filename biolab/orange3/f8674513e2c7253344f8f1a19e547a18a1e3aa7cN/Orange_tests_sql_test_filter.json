[{"lineNumber": 7, "col_offset": 27, "nodeName": "PostgresTest", "type": "Type[Orange.tests.sql.base.PostgresTest]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "test_on_all_columns", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "test_selected_columns", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_all_columns_negated", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_selected_columns_negated", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_can_inherit_is_defined_filter", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "PostgresTest", "type": "Type[Orange.tests.sql.base.PostgresTest]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_has_class", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_negated", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "table_uri", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "correct_data", "type": "List[Union[List[None], List[Union[int, str]], List[Optional[Union[int, str]]]]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "correct_data", "type": "List[Union[List[Optional[Union[int, str]]], List[None], List[Union[int, str]]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "correct_data", "type": "List[Union[List[None], List[Union[int, str]], List[Optional[Union[int, str]]]]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "correct_data", "type": "List[Union[List[None], List[Union[int, str]], List[Optional[Union[int, str]]]]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "correct_data", "type": "List[List[Optional[str]]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "table_uri", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "variables", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "variables", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "new_table", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "domain", "type": "Orange.data.domain.Domain"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "table", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "new_table", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "correct_data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "correct_data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "create_sql_table", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 47, "nodeName": "data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "SqlTable", "type": "Type[Orange.data.sql.table.SqlTable]"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "table_uri", "type": "Any"}, {"lineNumber": 19, "col_offset": 43, "nodeName": "table", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "row", "type": "Union[List[Union[int, str]], List[None], List[Optional[Union[int, str]]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 33, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 23, "col_offset": 48, "nodeName": "correct_data", "type": "List[Union[List[None], List[Union[int, str]], List[Optional[Union[int, str]]]]]"}, {"lineNumber": 26, "col_offset": 54, "nodeName": "table", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "row", "type": "Union[List[Union[int, str]], List[None], List[Optional[Union[int, str]]]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "correct_data", "type": "List[Union[List[Optional[Union[int, str]]], List[None], List[Union[int, str]]]]"}, {"lineNumber": 33, "col_offset": 54, "nodeName": "table", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "correct_data", "type": "List[Union[List[None], List[Union[int, str]], List[Optional[Union[int, str]]]]]"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "table", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "row", "type": "Union[List[Union[int, str]], List[None], List[Optional[Union[int, str]]]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "correct_data", "type": "List[Union[List[None], List[Union[int, str]], List[Optional[Union[int, str]]]]]"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "table", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "correct_data", "type": "List[List[Optional[str]]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "create_sql_table", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "SqlTable", "type": "Type[Orange.data.sql.table.SqlTable]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "table_uri", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "domain", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "copy", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "new_table", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "Domain", "type": "Type[Orange.data.domain.Domain]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "table", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "correct_data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "table", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "row", "type": "Union[List[Union[int, str]], List[Optional[Union[int, str]]], List[None]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "correct_data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 15, "col_offset": 47, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "IsDefined", "type": "Type[Orange.data.filter.IsDefined]"}, {"lineNumber": 19, "col_offset": 43, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 22, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 49, "nodeName": "correct_data", "type": "List[Union[List[None], List[Union[int, str]], List[Optional[Union[int, str]]]]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "IsDefined", "type": "Type[Orange.data.filter.IsDefined]"}, {"lineNumber": 26, "col_offset": 54, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 29, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "correct_data", "type": "List[Union[List[Optional[Union[int, str]]], List[None], List[Union[int, str]]]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "IsDefined", "type": "Type[Orange.data.filter.IsDefined]"}, {"lineNumber": 33, "col_offset": 54, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "correct_data", "type": "List[Union[List[None], List[Union[int, str]], List[Optional[Union[int, str]]]]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "IsDefined", "type": "Type[Orange.data.filter.IsDefined]"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "correct_data", "type": "List[Union[List[None], List[Union[int, str]], List[Optional[Union[int, str]]]]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "IsDefined", "type": "Type[Orange.data.filter.IsDefined]"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "correct_data", "type": "List[List[Optional[str]]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "table", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "table", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "domain", "type": "module"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "variables", "type": "Any"}, {"lineNumber": 68, "col_offset": 57, "nodeName": "variables", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "HasClass", "type": "Type[Orange.data.filter.HasClass]"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "correct_data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "HasClass", "type": "Type[Orange.data.filter.HasClass]"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "filtered_data", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "correct_data", "type": "List[Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "filter", "type": "module"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 20, "col_offset": 52, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 20, "col_offset": 56, "nodeName": "row", "type": "Union[List[Union[int, str]], List[None], List[Optional[Union[int, str]]]]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "filter", "type": "module"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "row", "type": "Union[List[Union[int, str]], List[None], List[Optional[Union[int, str]]]]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "filter", "type": "module"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "filter", "type": "module"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "filter", "type": "module"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "row", "type": "Union[List[Union[int, str]], List[None], List[Optional[Union[int, str]]]]"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "self", "type": "IsDefinedFilterTests"}, {"lineNumber": 50, "col_offset": 56, "nodeName": "row", "type": "Union[List[Union[int, str]], List[None], List[Optional[Union[int, str]]]]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "filter", "type": "module"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "filter", "type": "module"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "self", "type": "HasClassFilterTests"}, {"lineNumber": 34, "col_offset": 56, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 34, "col_offset": 60, "nodeName": "row", "type": "Union[List[Optional[Union[int, str]]], List[Union[int, str]], List[None]]"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "row", "type": "Union[List[Union[int, str]], List[None], List[Optional[Union[int, str]]]]"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "row", "type": "Union[List[Union[int, str]], List[Optional[Union[int, str]]], List[None]]"}]