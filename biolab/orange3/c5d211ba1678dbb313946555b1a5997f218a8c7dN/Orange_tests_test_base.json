[{"lineNumber": 13, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test_supports_weights", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_linreg", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "test_logreg", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_assert_liblinear_doesnt_accept_weights", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "SklLearner", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "fit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "SklLearner", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "__wraps__", "type": "Type[Any]"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "DummySklLearner", "type": "Type[Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "supports_weights", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "__wraps__", "type": "Type[Any]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "DummySklLearner", "type": "Type[Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "supports_weights", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "supports_weights", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "supports_weights", "type": "bool"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "skl", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestSklLearner"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestSklLearner"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestSklLearner"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestSklLearner"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "Y", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "W", "type": "Any"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "DummyLearner", "type": "Type[Any]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "DummyLearner", "type": "Type[Any]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "LinearRegressionLearner", "type": "Type[Orange.regression.linear.LinearRegressionLearner]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "LogisticRegressionLearner", "type": "Type[Orange.classification.logistic_regression.LogisticRegressionLearner]"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "self", "type": "TestSklLearner"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "skl", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "data", "type": "Any"}]