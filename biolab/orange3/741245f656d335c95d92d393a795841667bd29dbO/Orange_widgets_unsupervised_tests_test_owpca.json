[{"lineNumber": 11, "col_offset": 16, "nodeName": "WidgetTest", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "test_set_variance100", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_constant_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_empty_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_limit_components", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_migrate_settings_limits_components", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_migrate_settings_changes_variance_covered_to_int", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "test_variance_shown", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_sparse_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_all_components_continuous", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_normalization", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "test_do_not_mask_features", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "iris", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "variance_covered", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "domain", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "ncomponents", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tran", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "ncomponents", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "maxp", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "var2", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "variance_covered", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "ncomponents", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "var3", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "variance_covered", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "decomposition", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "buttons", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "buttons", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "normalize", "type": "bool"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "components", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "ncomponents", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "varnorm", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "variance_covered", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "varnonnorm", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "variance_covered", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "ndata", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "create_widget", "type": "Any"}, {"lineNumber": 13, "col_offset": 41, "nodeName": "OWPCA", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "iris", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "_update_selection_variance_spin", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "Domain", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "variables", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "from_table", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "domain", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "new_data", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "X", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "transformed_data", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "migrate_settings", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "migrate_settings", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "migrate_settings", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "migrate_settings", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_setup_plot", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "widget", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_update_selection_component_spin", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "widget", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "var3", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "var2", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "DECOMPOSITIONS", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "supports_sparse", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "box", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "decomposition", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "DECOMPOSITIONS", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_update_normalize", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "components", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "widget", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "toggle", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "widget", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "varnorm", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "varnonnorm", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "Table", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "Table", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "is_shown", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "transformed_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "get_output", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "components", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "is_shown", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "domain", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "Table", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "is_shown", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "is_shown", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "is_shown", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "send_signal", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "OWPCA", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "OWPCA", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "OWPCA", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "OWPCA", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "settings", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "sp", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "decomposition_idx", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "decomposition", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "isEnabled", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "group", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "supports_sparse", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "isEnabled", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "widget", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "domain", "type": "Any"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "domain", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "trivial_components", "type": "Any"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "Outputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "no_instances", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "no_features", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "no_instances", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "no_features", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "widget", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "domain", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "Inputs", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "widget", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "normalize_box", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "decomposition_box", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "decomposition", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "normalize_box", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "widget", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "controls", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "ndata", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "Warning", "type": "Any"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "widget", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "widget", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "Error", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "Error", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "Error", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "Error", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "tran", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "widget", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "widget", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "isEnabled", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "isEnabled", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "b", "type": "Any"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "buttons", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "widget", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "attributes", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "widget", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "widget", "type": "Any"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "widget", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "widget", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "widget", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "domain", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "domain", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "self", "type": "TestOWPCA"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "buttons", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "components", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "i", "type": "int"}]