[{"lineNumber": 8, "col_offset": 0, "nodeName": "data", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "mixed", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "test_hash_config_fixes_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_order_json_e2e", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "test_order_json_doesnt_sorts_list", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "test_sort_list", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "shuffle_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_sorts_subdict", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "test_remove_first_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "test_remove_multiple_first", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "test_remove_nested_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_remove_multiple_nested", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "test_remove_mixed_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_remove_single_missing", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "test_remove_nested_missing_first", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 0, "nodeName": "test_remove_nested_missing_last", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "test_remove_nested_missing_both", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "test_remove_one_missing_one_good", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "data", "type": "Dict[str, List[int]]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "mixed", "type": "List[int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "data", "type": "Dict[str, List[int]]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "gold", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "gold_dict", "type": "Dict[int, float]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "index", "type": "int"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "gold_dict", "type": "Dict[int, float]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "mixed", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "gold", "type": "Dict[str, int]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "keys", "type": "Set[Union[Tuple[str, str], Tuple[str]]]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "keys", "type": "Set[Union[Tuple[str, str], Tuple[str]]]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 45, "col_offset": 55, "nodeName": "strip_mock", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "order_json", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "mixed", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "order_json", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "data", "type": "Dict[str, List[int]]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "sample", "type": "Callable"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "mixed", "type": "List[int]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "mixed", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "sort_list_keys", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "data", "type": "Dict[str, List[int]]"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "mixed", "type": "List[int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "shuffled", "type": "Dict[Any, Any]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "gold", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "gold", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "mixed", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "shuffle_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "mixed", "type": "Any"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "order_json", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "gold", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "gold", "type": "Dict[str, int]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "keys", "type": "Set[Union[Tuple[str, str], Tuple[str]]]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 147, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 161, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 169, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "keys", "type": "Set[Union[Tuple[str, str], Tuple[str]]]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "strip_mock", "type": "Any"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "order_mock", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "strip_mock", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "order_mock", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "sort_mock", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "random", "type": "module"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "shuffled", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 86, "col_offset": 61, "nodeName": "_", "type": "int"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "index", "type": "int"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "index", "type": "int"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "mixed", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "mock", "type": "module"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "order_mock", "type": "Any"}, {"lineNumber": 49, "col_offset": 59, "nodeName": "sort_mock", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "k", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "random", "type": "module"}, {"lineNumber": 86, "col_offset": 66, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "gold", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "index", "type": "int"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "mock", "type": "module"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "sort_mock", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "hash_config", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "sample", "type": "Callable"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 86, "col_offset": 72, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "mock", "type": "module"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "random", "type": "module"}, {"lineNumber": 81, "col_offset": 54, "nodeName": "keys", "type": "Any"}, {"lineNumber": 81, "col_offset": 67, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 86, "col_offset": 72, "nodeName": "random", "type": "module"}, {"lineNumber": 81, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 71, "nodeName": "keys", "type": "Any"}, {"lineNumber": 81, "col_offset": 71, "nodeName": "data", "type": "Any"}]