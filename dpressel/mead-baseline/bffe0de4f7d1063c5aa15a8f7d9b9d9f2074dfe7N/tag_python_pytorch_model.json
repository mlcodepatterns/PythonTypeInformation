[{"lineNumber": 21, "col_offset": 0, "nodeName": "_conv1d", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "_linear", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "_rnn", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "_append2seq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 5, "col_offset": 24, "nodeName": "Module", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 5, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "c", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "l", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "l", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "ndir", "type": "int"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "lut", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "lut", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "modules", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "crit", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "total_sz", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "Conv1d", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 22, "col_offset": 45, "nodeName": "fsz", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "uniform_", "type": "Any"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "unif", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "in_sz", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "out_sz", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "uniform_", "type": "Any"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "unif", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "insz", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "hsz", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "x2vec", "type": "Any"}, {"lineNumber": 44, "col_offset": 10, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "lut", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "outname", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "char_convs", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "fsz", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "wchsz", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "word_ch_embed", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "char_dsz", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "word_dsz", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "nc", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "cembed", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "char_vecs", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "mots", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "char_convs", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "mots", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "xch", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "seqlen", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "x", "type": "Optional[Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "words_over_time", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "dropped", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 10, "col_offset": 28, "nodeName": "nc", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "SequenceCriterion"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "NLLLoss", "type": "Any"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "nelement", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "crit", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "unif", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "unif", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "uniform_", "type": "Any"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "unif", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "ndir", "type": "int"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "hsz", "type": "Any"}, {"lineNumber": 44, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "vsz", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "weights", "type": "Any"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "finetune", "type": "bool"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "module", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "outname", "type": "str"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "SequenceCriterion", "type": "Type[SequenceCriterion]"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "nc", "type": "int"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "load", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "wchsz", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_append2seq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "word_ch_embed", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "char_vec", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "labels", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_char_word_conv_embeddings", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "maxw", "type": "Any"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 96, "col_offset": 54, "nodeName": "char_dsz", "type": "Any"}, {"lineNumber": 96, "col_offset": 64, "nodeName": "wchsz", "type": "Any"}, {"lineNumber": 96, "col_offset": 71, "nodeName": "pdrop", "type": "Any"}, {"lineNumber": 96, "col_offset": 78, "nodeName": "unif", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "word_vec", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "wembed", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "word_dsz", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "char_vec", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "pdrop", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "hsz", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "_rnn", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "hsz", "type": "Any"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "rnntype", "type": "Any"}, {"lineNumber": 104, "col_offset": 66, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 104, "col_offset": 75, "nodeName": "unif", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "_linear", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "hsz", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "nc", "type": "int"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "unif", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "LogSoftmax", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "cat", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "mots", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "word_ch_embed", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "mots", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "mots", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "size", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "size", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "view", "type": "Any"}, {"lineNumber": 132, "col_offset": 78, "nodeName": "seqlen", "type": "Any"}, {"lineNumber": 132, "col_offset": 86, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "x", "type": "Optional[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "word_vectors", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "words_over_time", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "words_over_time", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "dropped", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "view", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "targets", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "self", "type": "SequenceCriterion"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "view", "type": "Any"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "total_sz", "type": "Any"}, {"lineNumber": 17, "col_offset": 52, "nodeName": "view", "type": "Any"}, {"lineNumber": 17, "col_offset": 65, "nodeName": "total_sz", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "weight", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "rnntype", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "unif", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "x2vec", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "x2vec", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "seq", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "module", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "outdir", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "base", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "base", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "conv", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "conv", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "word_vec", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "word_vec", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "wchsz", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "word_dsz", "type": "Union[int, Any]"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "mot", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "max", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "xch", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "xch", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "wembed", "type": "Any"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "x", "type": "Optional[Any]"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "cat", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "size", "type": "Any"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "size", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "SequenceCriterion", "type": "Type[SequenceCriterion]"}, {"lineNumber": 8, "col_offset": 33, "nodeName": "self", "type": "SequenceCriterion"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 17, "col_offset": 52, "nodeName": "targets", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "c", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "l", "type": "Any"}, {"lineNumber": 36, "col_offset": 66, "nodeName": "ndir", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "_conv1d", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "char_dsz", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "wchsz", "type": "Any"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "fsz", "type": "Any"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "unif", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "char_convs", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "fsz", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "pdrop", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "_linear", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "wchsz", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "wchsz", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "unif", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "TaggerModel", "type": "Type[TaggerModel]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "mots", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 57, "nodeName": "input", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "char2word", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "words_over_time", "type": "Any"}, {"lineNumber": 136, "col_offset": 58, "nodeName": "word_vectors", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 142, "col_offset": 44, "nodeName": "view", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "output", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "conv", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "char_vecs", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "mot", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "view", "type": "Any"}, {"lineNumber": 142, "col_offset": 44, "nodeName": "output", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "cembed", "type": "Any"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "xch_i", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "input", "type": "Any"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "xch", "type": "Any"}, {"lineNumber": 132, "col_offset": 50, "nodeName": "seqlen", "type": "Any"}, {"lineNumber": 132, "col_offset": 59, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 142, "col_offset": 56, "nodeName": "size", "type": "Any"}, {"lineNumber": 142, "col_offset": 71, "nodeName": "size", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "self", "type": "TaggerModel"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 142, "col_offset": 56, "nodeName": "output", "type": "Any"}, {"lineNumber": 142, "col_offset": 71, "nodeName": "output", "type": "Any"}]