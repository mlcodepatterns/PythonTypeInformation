[{"lineNumber": 8, "col_offset": 0, "nodeName": "data", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "mixed", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_hash_config_fixes_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "test_order_json_e2e", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_order_json_doesnt_sorts_list", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "test_remove_first_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_remove_multiple_first", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "test_remove_nested_key", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_remove_multiple_nested", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_remove_mixed_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_remove_single_missing", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "test_remove_nested_missing_first", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "test_remove_nested_missing_last", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "test_remove_nested_missing_both", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "test_remove_one_missing_one_good", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "data", "type": "Dict[str, List[int]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "gold", "type": "Dict[str, int]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "keys", "type": "Set[Union[Tuple[str, str], Tuple[str]]]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "keys", "type": "Set[Union[Tuple[str, str], Tuple[str]]]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "strip_mock", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "order_json", "type": "Any"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "mixed", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "order_json", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "data", "type": "Dict[str, List[int]]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "gold", "type": "List[int]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "gold", "type": "Dict[str, int]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 82, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "keys", "type": "Set[Union[Tuple[str, str], Tuple[str]]]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str]]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 119, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "keys", "type": "Set[Tuple[str, str]]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "remove_extra_keys", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "keys", "type": "Set[Union[Tuple[str, str], Tuple[str]]]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "gold", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "strip_mock", "type": "Any"}, {"lineNumber": 35, "col_offset": 52, "nodeName": "order_mock", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "strip_mock", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "order_mock", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "random", "type": "module"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "mock", "type": "module"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "order_mock", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "hash_config", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "mock", "type": "module"}]