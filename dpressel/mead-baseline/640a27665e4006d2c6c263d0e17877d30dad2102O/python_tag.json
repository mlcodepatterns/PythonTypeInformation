[{"lineNumber": 7, "col_offset": 0, "nodeName": "read_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "pred_labels", "type": "List[nothing]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "pg", "type": "Any"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "txts", "type": "List[List[str]]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "labels", "type": "List[List[str]]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "txt", "type": "List[str]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "label", "type": "List[str]"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 40, "col_offset": 3, "nodeName": "backend", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "tagger", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "tagger", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "input_txts", "type": "List[List[str]]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "gold_labels", "type": "List[List[str]]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "read_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "input", "type": "Any"}, {"lineNumber": 50, "col_offset": 5, "nodeName": "create_progress_bar", "type": "Any"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "done", "type": "Any"}, {"lineNumber": 12, "col_offset": 60, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "txts", "type": "List[List[str]]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "labels", "type": "List[List[str]]"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 99, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 34, "col_offset": 94, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 3, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 42, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "input_txts", "type": "List[List[str]]"}, {"lineNumber": 51, "col_offset": 5, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "sen", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "input_txts", "type": "List[List[str]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "predicted_label_sen", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "gold_label_sen", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "pg", "type": "Any"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "open", "type": "Callable[..., codecs.StreamReaderWriter]"}, {"lineNumber": 12, "col_offset": 21, "nodeName": "tsfile", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "states", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "BASELINE_TAGGER_LOADERS", "type": "Any"}, {"lineNumber": 42, "col_offset": 54, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "BASELINE_TAGGER_LOADERS", "type": "Any"}, {"lineNumber": 45, "col_offset": 54, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 51, "col_offset": 5, "nodeName": "codecs", "type": "module"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "gold_labels", "type": "List[List[str]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "predicted_label", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "gold_label", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "sen", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "predicted_label_sen", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 79, "nodeName": "gold_label_sen", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "write", "type": "Callable[[str], int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "codecs", "type": "module"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "split", "type": "Callable"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "txt", "type": "List[nothing]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "label", "type": "List[nothing]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "write", "type": "Callable[[str], int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "pg", "type": "Any"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "re", "type": "module"}, {"lineNumber": 14, "col_offset": 36, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "states", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "txt", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "label", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "predict_text", "type": "Any"}, {"lineNumber": 53, "col_offset": 65, "nodeName": "sen", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "f", "type": "codecs.StreamReaderWriter"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "word", "type": "Any"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "predicted_label", "type": "Any"}, {"lineNumber": 56, "col_offset": 63, "nodeName": "gold_label", "type": "Any"}, {"lineNumber": 14, "col_offset": 36, "nodeName": "line", "type": "str"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "txt", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "states", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "label", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "states", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "txts", "type": "List[List[str]]"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "labels", "type": "List[List[str]]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "tagger", "type": "Any"}, {"lineNumber": 53, "col_offset": 76, "nodeName": "mxlen", "type": "Any"}, {"lineNumber": 53, "col_offset": 93, "nodeName": "mxwlen", "type": "Any"}, {"lineNumber": 53, "col_offset": 76, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 53, "col_offset": 93, "nodeName": "args", "type": "argparse.Namespace"}]