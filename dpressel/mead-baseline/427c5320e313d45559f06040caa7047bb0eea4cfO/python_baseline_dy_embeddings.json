[{"lineNumber": 8, "col_offset": 0, "nodeName": "__all__", "type": "List[nothing]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "exporter", "type": "Any"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "DynetLayer", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "DyNetEmbeddings", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "DyNetEmbeddings", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "DyNetEmbeddings", "type": "Any"}, {"lineNumber": 9, "col_offset": 11, "nodeName": "export", "type": "Any"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "__all__", "type": "List[nothing]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pc", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "finetune", "type": "Union[Any, bool]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "vsz", "type": "Optional[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "dsz", "type": "Optional[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "batched", "type": "Union[Any, bool]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "embedding_weight", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "lookup", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "embedded", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "vsz", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "pc", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "vsz", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "dsz", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "mxlen", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "max_timescale", "type": "float"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "log_timescale_inc", "type": "float"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "inv_timescale", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "pc", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "pe", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "position", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "pe", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "pe", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "vsz", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "pc", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "vsz", "type": "Optional[Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "dsz", "type": "Optional[Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "batched", "type": "Union[Any, bool]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "finetune", "type": "Union[Any, bool]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "weights", "type": "Optional[Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "weights", "type": "Optional[Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "embedding_weight", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "filtsz", "type": "Union[Any, List[int]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "gate", "type": "Union[Any, str]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "num_gates", "type": "Union[Any, int]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "max_feat", "type": "Union[Any, int]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "nfeat_factor", "type": "Optional[Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "cmotsz", "type": "Union[Any, int]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "lookup", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "lookup_batch", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "parallel_conv", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "gate", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "funcs", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "gating", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "wsz", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "vsz", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "xch", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "xch", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "embedded", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "embed_chars_vec", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "embed_chars_vec", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "pooled_chars", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "pooled_chars", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "pooled_chars", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "pooled_chars", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 16, "col_offset": 46, "nodeName": "pc", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "add_subcollection", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "pc", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "batched", "type": "Union[Any, bool]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "lookup_batch", "type": "Any"}, {"lineNumber": 50, "col_offset": 59, "nodeName": "lookup", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "lookup_parameters_from_numpy", "type": "Any"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "embedding_weight", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "embedded", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "add_subcollection", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "pc", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "dsz", "type": "int"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "exp", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "LookupTableEmbeddings", "type": "Any"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "pe", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "sin", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "pe", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "cos", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "encode", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "_", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "dim", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 105, "col_offset": 57, "nodeName": "train", "type": "Any"}, {"lineNumber": 105, "col_offset": 68, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "add_subcollection", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "pc", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "weights", "type": "Optional[Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "lookup_parameters_from_numpy", "type": "Any"}, {"lineNumber": 123, "col_offset": 63, "nodeName": "embedding_weight", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "wsz", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "_create_char_comp", "type": "Any"}, {"lineNumber": 130, "col_offset": 53, "nodeName": "filtsz", "type": "Union[List[int], Any]"}, {"lineNumber": 130, "col_offset": 61, "nodeName": "cmotsz", "type": "Union[int, Any]"}, {"lineNumber": 130, "col_offset": 69, "nodeName": "dsz", "type": "Optional[Any]"}, {"lineNumber": 130, "col_offset": 79, "nodeName": "gate", "type": "Union[Any, str]"}, {"lineNumber": 130, "col_offset": 85, "nodeName": "num_gates", "type": "Union[int, Any]"}, {"lineNumber": 130, "col_offset": 96, "nodeName": "max_feat", "type": "Union[int, Any]"}, {"lineNumber": 130, "col_offset": 106, "nodeName": "nfeat_factor", "type": "Optional[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "dy", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "nfeat_factor", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "cmotsz", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "cmotsz_total", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "cmotsz_total", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "ParallelConv", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "cmotsz", "type": "Union[List[Any], Any]"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "cdsz", "type": "Any"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "pc", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "HighwayConnection", "type": "Any"}, {"lineNumber": 140, "col_offset": 68, "nodeName": "SkipConnection", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "gate", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "funcs", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "cmotsz_total", "type": "Any"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "pc", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "call", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "cmotsz_total", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "T", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "B", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "W", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "embedded", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "embed_chars_vec", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "pool", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "embed_chars_vec", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "pooled_chars", "type": "Any"}, {"lineNumber": 165, "col_offset": 63, "nodeName": "B", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "pooled_chars", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "vsz", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 36, "col_offset": 63, "nodeName": "weights", "type": "Any"}, {"lineNumber": 36, "col_offset": 80, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "vsz", "type": "Optional[Any]"}, {"lineNumber": 49, "col_offset": 71, "nodeName": "dsz", "type": "Optional[Any]"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "dy", "type": "Any"}, {"lineNumber": 50, "col_offset": 59, "nodeName": "dy", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "pc", "type": "Any"}, {"lineNumber": 51, "col_offset": 86, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "lookup", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "finetune", "type": "Any"}, {"lineNumber": 64, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 64, "col_offset": 76, "nodeName": "x", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "dy", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "get", "type": "Callable"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "max_timescale", "type": "float"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "mxlen", "type": "int"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "dsz", "type": "int"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "mxlen", "type": "int"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "position", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "inv_timescale", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "position", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "inv_timescale", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "inputTensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "vsz", "type": "Optional[Any]"}, {"lineNumber": 122, "col_offset": 61, "nodeName": "dsz", "type": "Optional[Any]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "pc", "type": "Any"}, {"lineNumber": 123, "col_offset": 86, "nodeName": "name", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "cmotsz", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "cmotsz", "type": "Any"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "cmotsz_total", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "cmotsz_total", "type": "Any"}, {"lineNumber": 141, "col_offset": 52, "nodeName": "pc", "type": "Any"}, {"lineNumber": 141, "col_offset": 93, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "parallel_conv", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "input_", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "gating", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "lookup", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 161, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 161, "col_offset": 52, "nodeName": "finetune", "type": "Any"}, {"lineNumber": 161, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 161, "col_offset": 76, "nodeName": "xch", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "dy", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "dy", "type": "Any"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "W", "type": "Any"}, {"lineNumber": 163, "col_offset": 58, "nodeName": "dsz", "type": "Any"}, {"lineNumber": 163, "col_offset": 69, "nodeName": "T", "type": "Any"}, {"lineNumber": 163, "col_offset": 71, "nodeName": "B", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "dy", "type": "Any"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "wsz", "type": "Any"}, {"lineNumber": 165, "col_offset": 59, "nodeName": "T", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "dy", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "DyNetEmbeddings", "type": "Any"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 36, "col_offset": 63, "nodeName": "model", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "get", "type": "Callable"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "LookupTableEmbeddings", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 71, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "get", "type": "Callable"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "PositionalLookupTableEmbeddings", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "math", "type": "module"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "arange", "type": "Any"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "dsz", "type": "int"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "log_timescale_inc", "type": "float"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "math", "type": "module"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "dy", "type": "Any"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "pe", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "dy", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "get", "type": "Callable"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "CharConvEmbeddings", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "min", "type": "Callable"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "max_feat", "type": "Any"}, {"lineNumber": 135, "col_offset": 60, "nodeName": "fsz", "type": "Any"}, {"lineNumber": 135, "col_offset": 67, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "gate", "type": "Any"}, {"lineNumber": 141, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 98, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 141, "col_offset": 104, "nodeName": "num_gates", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 54, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "nfeat_factor", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "fsz", "type": "Any"}, {"lineNumber": 141, "col_offset": 66, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 141, "col_offset": 85, "nodeName": "i", "type": "int"}]