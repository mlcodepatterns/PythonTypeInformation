[{"lineNumber": 20, "col_offset": 0, "nodeName": "data", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "test_filters_one", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "test_filters_both", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "test_no_filters", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_one_filters", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "test_num_lines", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_num_lines_closes_file", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "test_read_cols_single_col_file", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "test_read_cols_multi_col_file", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "test_read_cols_multi_word_col", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "test_vocab_col_calls_counts", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "test_vocab_col_calls_read", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "test_vocab_col_uses_text", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "test_tsv_unstruct_build_vocab", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "test_tsv_parallel_build_vocab", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "test_parallel_multifile_build_vocab", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "test_check_for_neg_one", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "TEST_LOC", "type": "str"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "GOLD_SOURCE", "type": "Dict[str, int]"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "GOLD_TARGET", "type": "Dict[str, int]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "vocab", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "min_f", "type": "Dict[Any, int]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "min_f", "type": "Dict[Any, int]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "min_f", "type": "Dict[Any, int]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "min_f", "type": "Dict[Any, int]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "gold", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "file_name", "type": "str"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "gold", "type": "int"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "file_name", "type": "str"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "gold", "type": "List[List[str]]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "data", "type": "List[List[Any]]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "gold", "type": "List[List[str]]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "data", "type": "List[List[Any]]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "gold", "type": "List[List[str]]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "data", "type": "List[List[Any]]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "dummy", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "file_name", "type": "str"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "col", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "file_name", "type": "str"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "fake_text", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "col", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "gold_vocab", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "gold_labels", "type": "Set[str]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "file_name", "type": "str"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "reader", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "reader", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "files", "type": "str"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "gold", "type": "Set[int]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "vects", "type": "Dict[int, mock.NonCallableMock]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "fails", "type": "Set[Any]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "vocab", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "words", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "_filter_vocab", "type": "Callable"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "min_f", "type": "Dict[Any, int]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "words", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "fromkeys", "type": "Callable"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "_filter_vocab", "type": "Callable"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "min_f", "type": "Dict[Any, int]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "words", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "fromkeys", "type": "Callable"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "filt_mock", "type": "mock.MagicMock"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assert_not_called", "type": "Callable[[], None]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 72, "col_offset": 10, "nodeName": "words", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "filt_mock", "type": "mock.MagicMock"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assert_called_once", "type": "Callable[[], None]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "open_patch", "type": "mock.MagicMock"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "file_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "iter_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "return_value", "type": "mock.NonCallableMock"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "iter_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "return_value", "type": "range"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "file_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "lines", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "open_patch", "type": "mock.MagicMock"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "file_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "iter_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "return_value", "type": "mock.NonCallableMock"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "iter_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "return_value", "type": "range"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "file_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "lines", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "_read_from_col", "type": "Callable[..., List[List[Any]]]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "data", "type": "List[List[Any]]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "gold", "type": "List[List[str]]"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "_read_from_col", "type": "Callable[..., List[List[Any]]]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "data", "type": "List[List[Any]]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "gold", "type": "List[List[str]]"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "_read_from_col", "type": "Callable[..., List[List[Any]]]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "data", "type": "List[List[Any]]"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "gold", "type": "List[List[str]]"}, {"lineNumber": 127, "col_offset": 52, "nodeName": "read_patch", "type": "mock.MagicMock"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "dummy", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "vects", "type": "Dict[str, mock.NonCallableMock]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "vect", "type": "mock.NonCallableMock"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "randint", "type": "Any"}, {"lineNumber": 138, "col_offset": 52, "nodeName": "read_patch", "type": "mock.MagicMock"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "randint", "type": "Any"}, {"lineNumber": 147, "col_offset": 52, "nodeName": "read_patch", "type": "mock.MagicMock"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "labels", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "build_vocab", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "gold_vocab", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "gold_labels", "type": "Set[str]"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "TSVParallelCorpusReader", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "src_vocab", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "tgt_vocab", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "build_vocabs", "type": "Any"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "GOLD_SOURCE", "type": "Dict[str, int]"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "tgt_vocab", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "GOLD_TARGET", "type": "Dict[str, int]"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "MultiFileParallelCorpusReader", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "TEST_LOC", "type": "str"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "src_vocab", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "tgt_vocab", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "build_vocabs", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "GOLD_SOURCE", "type": "Dict[str, int]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "tgt_vocab", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "GOLD_TARGET", "type": "Dict[str, int]"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "vect", "type": "mock.NonCallableMock"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "vect", "type": "mock.NonCallableMock"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "_check_lens", "type": "Callable[[Any], Set[Any]]"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "vects", "type": "Dict[int, mock.NonCallableMock]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "fails", "type": "Set[Any]"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "gold", "type": "Set[int]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "__file__", "type": "str"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "keys", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "gold", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "filt_mock", "type": "mock.MagicMock"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "_filter_vocab", "type": "Callable"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "min_f", "type": "Dict[Any, int]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "filt_mock", "type": "mock.MagicMock"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "keys", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "filt_mock", "type": "mock.MagicMock"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "_filter_vocab", "type": "Callable"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "min_f", "type": "Dict[Any, int]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "filt_mock", "type": "mock.MagicMock"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "__enter__", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "__iter__", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "gold", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "open_patch", "type": "mock.MagicMock"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "num_lines", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "file_name", "type": "str"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "lines", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "gold", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "file_name", "type": "str"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "__enter__", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "__iter__", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "gold", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "open_patch", "type": "mock.MagicMock"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "num_lines", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "file_name", "type": "str"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "read_patch", "type": "mock.MagicMock"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "_build_vocab_for_col", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "vects", "type": "Dict[str, mock.NonCallableMock]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "values", "type": "Callable"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "_build_vocab_for_col", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "col", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "file_name", "type": "str"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assert_called_once_with", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "col", "type": "Any"}, {"lineNumber": 140, "col_offset": 48, "nodeName": "file_name", "type": "str"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "_build_vocab_for_col", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "col", "type": "Any"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "file_name", "type": "str"}, {"lineNumber": 148, "col_offset": 53, "nodeName": "fake_text", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assert_not_called", "type": "Callable[[], None]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 161, "col_offset": 72, "nodeName": "join", "type": "Callable"}, {"lineNumber": 161, "col_offset": 85, "nodeName": "TEST_LOC", "type": "str"}, {"lineNumber": 161, "col_offset": 95, "nodeName": "file_name", "type": "str"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "reader", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "src_vocab", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "reader", "type": "Any"}, {"lineNumber": 180, "col_offset": 48, "nodeName": "files", "type": "str"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "src_vocab", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "randint", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "mxlen", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "mxlen", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "vects", "type": "Dict[int, mock.NonCallableMock]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 57, "col_offset": 52, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "file_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "iter_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "open_patch", "type": "mock.MagicMock"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "file_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "iter_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "__exit__", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "TEST_LOC", "type": "str"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "TEST_LOC", "type": "str"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "TEST_LOC", "type": "str"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "MagicMock", "type": "Type[mock.MagicMock]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "vects", "type": "Dict[str, mock.NonCallableMock]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "read_patch", "type": "mock.MagicMock"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "read_patch", "type": "mock.MagicMock"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "TSVSeqLabelReader", "type": "Any"}, {"lineNumber": 161, "col_offset": 72, "nodeName": "path", "type": "module"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "join", "type": "Callable"}, {"lineNumber": 172, "col_offset": 61, "nodeName": "TEST_LOC", "type": "str"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "vect", "type": "mock.NonCallableMock"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "vect", "type": "mock.NonCallableMock"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "keys", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "keys", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "file_mock", "type": "mock.NonCallableMock"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "count", "type": "Any"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "dummy", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 72, "nodeName": "os", "type": "module"}, {"lineNumber": 171, "col_offset": 57, "nodeName": "VectMock", "type": "Type[VectMock]"}, {"lineNumber": 171, "col_offset": 76, "nodeName": "VectMock", "type": "Type[VectMock]"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "path", "type": "module"}, {"lineNumber": 178, "col_offset": 63, "nodeName": "VectMock", "type": "Type[VectMock]"}, {"lineNumber": 178, "col_offset": 82, "nodeName": "VectMock", "type": "Type[VectMock]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "gold", "type": "Set[int]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "keys", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 58, "col_offset": 58, "nodeName": "keys", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "keys", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "keys", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "vect", "type": "mock.NonCallableMock"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "VectMock", "type": "Type[VectMock]"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "os", "type": "module"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "np", "type": "module"}]