[{"lineNumber": 67, "col_offset": 0, "nodeName": "_mean_pool", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "_max_pool", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "chunks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "logger", "type": "Any"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "DEFAULT_SETTINGS_LOC", "type": "str"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "DEFAULT_DATASETS_LOC", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "DEFAULT_LOGGING_LOC", "type": "str"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "DEFAULT_EMBEDDINGS_LOC", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "DEFAULT_VECTORIZERS_LOC", "type": "str"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "vecs_index", "type": "Any"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "vecs_set", "type": "Any"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "nctx", "type": "Any"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "embeddings_index", "type": "Any"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "embeddings_set", "type": "Any"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "embeddings_params", "type": "Any"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "vocabs", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "embedder", "type": "Any"}, {"lineNumber": 63, "col_offset": 3, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "pool", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "df", "type": "Any"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "num_batches", "type": "Any"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "pg", "type": "Any"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "getLogger", "type": "Any"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "__file__", "type": "str"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 38, "col_offset": 87, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "read_config_stream", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 41, "col_offset": 76, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "read_config_stream", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "index_by_label", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "vecs_index", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "vecs_set", "type": "Any"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "create_vectorizer", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "read_config_stream", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "index_by_label", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "embeddings_index", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "embeddings_set", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "load_embeddings_overlay", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "embeddings_set", "type": "Any"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "embeddings_params", "type": "Any"}, {"lineNumber": 59, "col_offset": 72, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 63, "col_offset": 3, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "embedder", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "seq_lengths", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "_max_pool", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "_mean_pool", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 5, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "file", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "has_header", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "col", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "col", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 93, "col_offset": 5, "nodeName": "create_progress_bar", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "num_batches", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "batch", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "savez", "type": "Any"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "output", "type": "Any"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 21, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 22, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 30, "col_offset": 112, "nodeName": "convert_path", "type": "Any"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 31, "col_offset": 107, "nodeName": "convert_path", "type": "Any"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "str2bool", "type": "Any"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "str2bool", "type": "Any"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "convert_path", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "DEFAULT_EMBEDDINGS_LOC", "type": "str"}, {"lineNumber": 38, "col_offset": 87, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 41, "col_offset": 53, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "convert_path", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "DEFAULT_VECTORIZERS_LOC", "type": "str"}, {"lineNumber": 41, "col_offset": 76, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "vec_id", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 51, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "embed_id", "type": "Any"}, {"lineNumber": 59, "col_offset": 72, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "seq_lengths", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "masked_fill", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "pool", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "n", "type": "Any"}, {"lineNumber": 85, "col_offset": 5, "nodeName": "pd", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 85, "col_offset": 77, "nodeName": "sep", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "df", "type": "Any"}, {"lineNumber": 89, "col_offset": 10, "nodeName": "df", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "col", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "math", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 93, "col_offset": 5, "nodeName": "baseline", "type": "module"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "chunks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "update", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "vecs", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 47, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "baseline", "type": "module"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "baseline", "type": "module"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 41, "col_offset": 53, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "vec_params", "type": "Any"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "embedder", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "lst", "type": "Any"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "has_header", "type": "Any"}, {"lineNumber": 85, "col_offset": 77, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "column", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "pg", "type": "Any"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "embedder", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "lst", "type": "Any"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "column", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "vec", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "l", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "run", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "vec", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "stack", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "vecs", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "mask", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "mask", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "split", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "vocabs", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "vecs", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "n", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "line", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "pool", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "embedding", "type": "Any"}]