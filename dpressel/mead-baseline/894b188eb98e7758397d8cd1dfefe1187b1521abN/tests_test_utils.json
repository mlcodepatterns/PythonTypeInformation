[{"lineNumber": 20, "col_offset": 0, "nodeName": "cuda_visible", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "nv_gpu", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "remove_envs", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "test_visible", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "test_visible_first", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_idempotent_add_missing", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_idempotent_add_there", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "test_idempotent_add_last", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "test_parse_module_as_path_file", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "test_parse_module_as_path_relative", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "test_parse_module_as_path_absolute", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "test_to_numpy_tf2", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "test_to_numpy_pyt_gpu", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 0, "nodeName": "test_to_numpy_pyt_detch", "type": "Callable[[], Any]"}, {"lineNumber": 191, "col_offset": 0, "nodeName": "test_to_numpy_pyt_detch_gpu", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "test_to_numpy_pyt", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "test_remove_ext", "type": "Callable[[], Any]"}, {"lineNumber": 220, "col_offset": 0, "nodeName": "test_remove_ext_not_in_middle", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "test_split_ext", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 0, "nodeName": "test_split_ext_not_in_middle", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "CHARS", "type": "List[nothing]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "gpus", "type": "List[str]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "gpus", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "gpus", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "gpus", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "element", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "data", "type": "Set[int]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "element", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "data", "type": "Set[int]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "element_idx", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "data_len", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "element", "type": "int"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "data", "type": "Set[int]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "element_idx", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "data_len", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "file_base", "type": "str"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "file_ext", "type": "str"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "file_name", "type": "str"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "file_base", "type": "str"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "file_ext", "type": "str"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "file_name", "type": "str"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "gold_path", "type": "str"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "module_name", "type": "str"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "file_base", "type": "str"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "file_ext", "type": "str"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "file_name", "type": "str"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "module_name", "type": "str"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "np_", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "np_", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "np_", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "np_", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "gold", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "np_", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "ext_list", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "gold", "type": "str"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "gold", "type": "str"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "ext_list", "type": "List[str]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "gold_path", "type": "str"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "gold_exts", "type": "str"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "gold", "type": "str"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "gpus", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 10, "nodeName": "gpus", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "gpus", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "gpus", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "get_env_gpus", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "gpus", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "cuda_visible", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "get_env_gpus", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "gpus", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "nv_gpu", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "gpus", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "cuda_visible", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "discard", "type": "Callable[[Any], None]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "element", "type": "int"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "data", "type": "Set[int]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "element", "type": "int"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "idempotent_append", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "element", "type": "int"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "element", "type": "int"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "element", "type": "int"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "add", "type": "Callable"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "element", "type": "int"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "data", "type": "Set[int]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "element", "type": "int"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "element", "type": "int"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "idempotent_append", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "element", "type": "int"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "element", "type": "int"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "element_idx", "type": "int"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "element", "type": "int"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "data_len", "type": "int"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "discard", "type": "Callable[[Any], None]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "element", "type": "int"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "data", "type": "Set[int]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "element", "type": "int"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "element", "type": "int"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "element", "type": "int"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "idempotent_append", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "element", "type": "int"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "element", "type": "int"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "element_idx", "type": "int"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "element", "type": "int"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "data_len", "type": "int"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "ascii_letters", "type": "str"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "digits", "type": "str"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "length", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "file_base", "type": "str"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "file_ext", "type": "str"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "n", "type": "Any"}, {"lineNumber": 123, "col_offset": 7, "nodeName": "d", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "parse_module_as_path", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "file_name", "type": "str"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "n", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "file_base", "type": "str"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "d", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "file_base", "type": "str"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "file_ext", "type": "str"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "path", "type": "str"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "file_name", "type": "str"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "real_patch", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "n", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "file_base", "type": "str"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "d", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "gold_path", "type": "str"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "file_base", "type": "str"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "file_ext", "type": "str"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "path", "type": "str"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "isabs", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "path", "type": "str"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "path", "type": "str"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "file_name", "type": "str"}, {"lineNumber": 154, "col_offset": 55, "nodeName": "real_patch", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "n", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "file_base", "type": "str"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "d", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "path", "type": "str"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "gold", "type": "Any"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "np_", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "gold", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "np_", "type": "Any"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "gold", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "gold", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 188, "col_offset": 10, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "np_", "type": "Any"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "gold", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 198, "col_offset": 10, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "np_", "type": "Any"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "gold", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 204, "col_offset": 30, "nodeName": "gold", "type": "Any"}, {"lineNumber": 205, "col_offset": 10, "nodeName": "to_numpy", "type": "Any"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "np_", "type": "Any"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "gold", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "gold", "type": "str"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 216, "col_offset": 10, "nodeName": "remove_extensions", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "path", "type": "Any"}, {"lineNumber": 216, "col_offset": 34, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "gold", "type": "str"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "gold", "type": "str"}, {"lineNumber": 224, "col_offset": 10, "nodeName": "remove_extensions", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "path", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "gold", "type": "str"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "gold_path", "type": "str"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "gold_exts", "type": "str"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 234, "col_offset": 10, "nodeName": "ext", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "split_extensions", "type": "Any"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "path", "type": "str"}, {"lineNumber": 234, "col_offset": 39, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "gold_path", "type": "str"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "ext", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "gold_exts", "type": "str"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "gold", "type": "str"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "ext", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "split_extensions", "type": "Any"}, {"lineNumber": 243, "col_offset": 32, "nodeName": "path", "type": "Any"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "exts", "type": "Set[str]"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "res", "type": "Any"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "gold", "type": "str"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "ext", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "random", "type": "module"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "data", "type": "Set[int]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "random", "type": "module"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "data", "type": "Set[int]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "random", "type": "module"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "element", "type": "int"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "random", "type": "module"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "data", "type": "Set[int]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "element", "type": "int"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "string", "type": "module"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "string", "type": "module"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "min_", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "max_", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "isabs", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "path", "type": "str"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 137, "col_offset": 61, "nodeName": "user_patch", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "return_value", "type": "str"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "gold_path", "type": "str"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "return_value", "type": "str"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "path", "type": "str"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 155, "col_offset": 61, "nodeName": "user_patch", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "return_value", "type": "str"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "path", "type": "str"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "return_value", "type": "str"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "path", "type": "str"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 166, "col_offset": 7, "nodeName": "get_version", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "skip", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "_", "type": "int"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "randint", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "ext_list", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "_", "type": "int"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "_", "type": "int"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "_", "type": "int"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "data", "type": "List[Optional[int]]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "_", "type": "int"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "CHARS", "type": "List[nothing]"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "_", "type": "int"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "real_patch", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "user_patch", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "parse_module_as_path", "type": "Any"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "module_name", "type": "str"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "path", "type": "str"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "real_patch", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "user_patch", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "parse_module_as_path", "type": "Any"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "module_name", "type": "str"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "assert_called_once_with", "type": "Any"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "path", "type": "str"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "randint", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "randint", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "gold", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "randint", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "randint", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "gold", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "randint", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 38, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "ext_list", "type": "List[str]"}, {"lineNumber": 232, "col_offset": 52, "nodeName": "_", "type": "int"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "random", "type": "module"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "length", "type": "Union[Any, int]"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "_", "type": "int"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "real_patch", "type": "Any"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "rand_str", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "_", "type": "int"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "real_patch", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "randint", "type": "Any"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "randint", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "random", "type": "module"}, {"lineNumber": 232, "col_offset": 57, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 132, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 57, "nodeName": "randint", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 57, "nodeName": "randint", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 57, "nodeName": "randint", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 57, "nodeName": "randint", "type": "Any"}, {"lineNumber": 203, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "randint", "type": "Any"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "random", "type": "Any"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "random", "type": "Any"}, {"lineNumber": 232, "col_offset": 63, "nodeName": "randint", "type": "Any"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "random", "type": "module"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "random", "type": "module"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "random", "type": "module"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 168, "col_offset": 57, "nodeName": "random", "type": "Any"}, {"lineNumber": 178, "col_offset": 57, "nodeName": "random", "type": "Any"}, {"lineNumber": 185, "col_offset": 57, "nodeName": "random", "type": "Any"}, {"lineNumber": 195, "col_offset": 57, "nodeName": "random", "type": "Any"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "random", "type": "Any"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 63, "nodeName": "random", "type": "Any"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "random", "type": "module"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "random", "type": "module"}, {"lineNumber": 168, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 63, "nodeName": "np", "type": "module"}]