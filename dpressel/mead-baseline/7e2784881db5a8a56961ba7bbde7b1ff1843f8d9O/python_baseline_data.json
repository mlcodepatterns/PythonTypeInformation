[{"lineNumber": 356, "col_offset": 0, "nodeName": "reverse_2nd", "type": "Callable[[Any], Any]"}, {"lineNumber": 6, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "DataFeed", "type": "Type[DataFeed]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "ExampleDataFeed", "type": "Type[ExampleDataFeed]"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 271, "col_offset": 31, "nodeName": "ExampleDataFeed", "type": "Type[ExampleDataFeed]"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "ExampleDataFeed", "type": "Type[ExampleDataFeed]"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "DataFeed", "type": "Type[DataFeed]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "SEQ", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "LABEL", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "LENGTH", "type": "int"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "SEQ_WORD", "type": "str"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "SEQ_CHAR", "type": "str"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "SEQ_TAG", "type": "str"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "SEQ_LEN", "type": "str"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "SEQ_CHAR", "type": "str"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "SEQ_ID", "type": "str"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "SCALARS", "type": "List[str]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "SRC", "type": "int"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "TGT", "type": "int"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "SRC_LEN", "type": "int"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "TGT_LEN", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "steps", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "steps", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "examples", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "examples", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "vec_shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "src_vec_trans", "type": "Optional[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "steps", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "trim", "type": "bool"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "do_shuffle", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "ex", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "empty", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "siglen", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "xb", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "yb", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "sz", "type": "int"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "numinst", "type": "int"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "heldout", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "heldout_ex", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "rest_ex", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "SEQ_LEN", "type": "str"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "SEQ_ID", "type": "str"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "do_shuffle", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "do_sort", "type": "Any"}, {"lineNumber": 205, "col_offset": 58, "nodeName": "empty", "type": "Any"}, {"lineNumber": 205, "col_offset": 78, "nodeName": "shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "ex", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "keys", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "sz", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "max_src_len", "type": "int"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "trim", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "numinst", "type": "int"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "heldout", "type": "int"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "heldout_ex", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "rest_ex", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "do_shuffle", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "do_sort", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "ex", "type": "Any"}, {"lineNumber": 314, "col_offset": 58, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "sig_src_len", "type": "int"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "sig_tgt_len", "type": "int"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "srcs", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "tgts", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "src_lens", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "tgt_lens", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "sz", "type": "int"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "max_src_len", "type": "int"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "max_tgt_len", "type": "int"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "trim", "type": "Any"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "vec", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "rest", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "steps", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "stride_ch", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "trunc", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "xch", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "trunc", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "xch", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 410, "col_offset": 21, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "wsz", "type": "Any"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "maxw", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "DataFeed"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "DataFeed"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "i", "type": "Any"}, {"lineNumber": 24, "col_offset": 66, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "steps", "type": "int"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "si", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "self", "type": "DataFeed"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "get", "type": "Callable"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "SeqLabelExamples"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "width", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "start", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "xb", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "yb", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "examples", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "examples", "type": "Any"}, {"lineNumber": 151, "col_offset": 57, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 159, "col_offset": 44, "nodeName": "i", "type": "Any"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 159, "col_offset": 61, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "src_vec_trans", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "SeqWordCharTagExamples"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 205, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "siglen", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "maxw", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "vec_shape", "type": "Any"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "start", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "ex", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "max_src_len", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "examples", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 55, "nodeName": "examples", "type": "Any"}, {"lineNumber": 275, "col_offset": 65, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 278, "col_offset": 38, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 278, "col_offset": 52, "nodeName": "trim", "type": "bool"}, {"lineNumber": 278, "col_offset": 63, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 278, "col_offset": 79, "nodeName": "vec_shape", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 314, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "start", "type": "Any"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 337, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "max_src_len", "type": "Union[int, Any]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "max_tgt_len", "type": "Union[int, Any]"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "srcs", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "tgts", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "srcs", "type": "Any"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "tgts", "type": "Any"}, {"lineNumber": 353, "col_offset": 27, "nodeName": "src_lens", "type": "Any"}, {"lineNumber": 353, "col_offset": 37, "nodeName": "tgt_lens", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 46, "nodeName": "examples", "type": "Any"}, {"lineNumber": 369, "col_offset": 56, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "src", "type": "Any"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "tgt", "type": "Any"}, {"lineNumber": 372, "col_offset": 18, "nodeName": "src_len", "type": "Any"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "tgt_len", "type": "Any"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "batch", "type": "Any"}, {"lineNumber": 372, "col_offset": 57, "nodeName": "i", "type": "Any"}, {"lineNumber": 372, "col_offset": 60, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 372, "col_offset": 74, "nodeName": "trim", "type": "bool"}, {"lineNumber": 372, "col_offset": 85, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "src_vec_trans", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "src", "type": "Any"}, {"lineNumber": 375, "col_offset": 23, "nodeName": "src", "type": "Any"}, {"lineNumber": 375, "col_offset": 35, "nodeName": "tgt", "type": "Any"}, {"lineNumber": 375, "col_offset": 51, "nodeName": "src_len", "type": "Any"}, {"lineNumber": 375, "col_offset": 71, "nodeName": "tgt_len", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[], Any]"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "rest", "type": "Any"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "rest", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 400, "col_offset": 33, "nodeName": "maxw", "type": "Any"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "rest", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 406, "col_offset": 33, "nodeName": "maxw", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "self", "type": "DataFeed"}, {"lineNumber": 24, "col_offset": 66, "nodeName": "self", "type": "DataFeed"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "self", "type": "DataFeed"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "get", "type": "Callable"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "floor", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "self", "type": "SeqLabelExamples"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "i", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "ex", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "ex", "type": "Any"}, {"lineNumber": 91, "col_offset": 69, "nodeName": "ex", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "self", "type": "SeqLabelExamples"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "self", "type": "SeqLabelExamples"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "self", "type": "SeqLabelExamples"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "siglen", "type": "int"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "int", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "int", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "int", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "self", "type": "SeqLabelExamples"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "idx", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "sz", "type": "int"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "idx", "type": "int"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "length", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "xb", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "yb", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "floor", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "heldout", "type": "int"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "heldout", "type": "int"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "SeqLabelExamples", "type": "Type[SeqLabelExamples]"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "heldout_ex", "type": "Any"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "SeqLabelExamples", "type": "Type[SeqLabelExamples]"}, {"lineNumber": 144, "col_offset": 62, "nodeName": "rest_ex", "type": "Any"}, {"lineNumber": 151, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "examples", "type": "Any"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "self", "type": "SeqLabelDataFeed"}, {"lineNumber": 159, "col_offset": 61, "nodeName": "self", "type": "SeqLabelDataFeed"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "self", "type": "SeqLabelDataFeed"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "src_vec_trans", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "self", "type": "SeqWordCharTagExamples"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "example_list", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "self", "type": "SeqWordCharTagExamples"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "i", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "self", "type": "SeqWordCharTagExamples"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "self", "type": "SeqWordCharTagExamples"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "start", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "ex", "type": "Any"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "ex", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "k", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "SEQ_CHAR", "type": "str"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "self", "type": "SeqWordCharTagExamples"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "idx", "type": "Any"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "sz", "type": "int"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "max", "type": "Callable"}, {"lineNumber": 241, "col_offset": 30, "nodeName": "max_src_len", "type": "int"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "floor", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "heldout", "type": "int"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 267, "col_offset": 36, "nodeName": "heldout", "type": "int"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "SeqLabelExamples", "type": "Type[SeqLabelExamples]"}, {"lineNumber": 268, "col_offset": 32, "nodeName": "heldout_ex", "type": "Any"}, {"lineNumber": 268, "col_offset": 45, "nodeName": "SeqLabelExamples", "type": "Type[SeqLabelExamples]"}, {"lineNumber": 268, "col_offset": 62, "nodeName": "rest_ex", "type": "Any"}, {"lineNumber": 275, "col_offset": 76, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "examples", "type": "Any"}, {"lineNumber": 278, "col_offset": 38, "nodeName": "self", "type": "SeqWordCharLabelDataFeed"}, {"lineNumber": 278, "col_offset": 52, "nodeName": "self", "type": "SeqWordCharLabelDataFeed"}, {"lineNumber": 278, "col_offset": 63, "nodeName": "self", "type": "SeqWordCharLabelDataFeed"}, {"lineNumber": 278, "col_offset": 79, "nodeName": "self", "type": "SeqWordCharLabelDataFeed"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "example_list", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 300, "col_offset": 32, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "example_list", "type": "List[Any]"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "i", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "ex", "type": "Any"}, {"lineNumber": 309, "col_offset": 40, "nodeName": "ex", "type": "Any"}, {"lineNumber": 309, "col_offset": 65, "nodeName": "ex", "type": "Any"}, {"lineNumber": 309, "col_offset": 94, "nodeName": "ex", "type": "Any"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "sig_src_len", "type": "int"}, {"lineNumber": 327, "col_offset": 55, "nodeName": "int", "type": "Any"}, {"lineNumber": 328, "col_offset": 26, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 328, "col_offset": 35, "nodeName": "sig_tgt_len", "type": "int"}, {"lineNumber": 328, "col_offset": 55, "nodeName": "int", "type": "Any"}, {"lineNumber": 329, "col_offset": 46, "nodeName": "int", "type": "Any"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "int", "type": "Any"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "idx", "type": "Any"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "sz", "type": "int"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "idx", "type": "int"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "srcs", "type": "Any"}, {"lineNumber": 341, "col_offset": 22, "nodeName": "example", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "tgts", "type": "Any"}, {"lineNumber": 342, "col_offset": 22, "nodeName": "example", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "src_lens", "type": "Any"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "example", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "tgt_lens", "type": "Any"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "example", "type": "Any"}, {"lineNumber": 345, "col_offset": 26, "nodeName": "max", "type": "Callable"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "max_src_len", "type": "int"}, {"lineNumber": 346, "col_offset": 26, "nodeName": "max", "type": "Callable"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "max_tgt_len", "type": "int"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "srcs", "type": "Any"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "tgts", "type": "Any"}, {"lineNumber": 369, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "examples", "type": "Any"}, {"lineNumber": 372, "col_offset": 60, "nodeName": "self", "type": "Seq2SeqDataFeed"}, {"lineNumber": 372, "col_offset": 74, "nodeName": "self", "type": "Seq2SeqDataFeed"}, {"lineNumber": 372, "col_offset": 85, "nodeName": "self", "type": "Seq2SeqDataFeed"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "self", "type": "Seq2SeqDataFeed"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "src_vec_trans", "type": "Any"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "src", "type": "Any"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "rest", "type": "Any"}, {"lineNumber": 397, "col_offset": 18, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "rest", "type": "Any"}, {"lineNumber": 404, "col_offset": 36, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 404, "col_offset": 45, "nodeName": "rest", "type": "Any"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "xch", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 406, "col_offset": 26, "nodeName": "rest", "type": "Any"}, {"lineNumber": 409, "col_offset": 40, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 24, "col_offset": 40, "nodeName": "arange", "type": "Any"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "steps", "type": "int"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "si", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "ExampleDataFeed", "type": "Type[ExampleDataFeed]"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "self", "type": "SeqLabelExamples"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "SEQ", "type": "int"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "LABEL", "type": "int"}, {"lineNumber": 91, "col_offset": 72, "nodeName": "LENGTH", "type": "int"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "self", "type": "SeqLabelExamples"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "idx", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "math", "type": "module"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "numinst", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "SeqLabelDataFeed", "type": "Type[SeqLabelDataFeed]"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "self", "type": "SeqLabelDataFeed"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "self", "type": "SeqLabelDataFeed"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "self", "type": "SeqLabelDataFeed"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "self", "type": "SeqWordCharTagExamples"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "self", "type": "SeqWordCharTagExamples"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "SEQ_CHAR", "type": "str"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "SeqWordCharTagExamples", "type": "Type[SeqWordCharTagExamples]"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "k", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "SCALARS", "type": "List[str]"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "self", "type": "SeqWordCharTagExamples"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "idx", "type": "Any"}, {"lineNumber": 239, "col_offset": 30, "nodeName": "ex", "type": "Any"}, {"lineNumber": 241, "col_offset": 43, "nodeName": "ex", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "SEQ_CHAR", "type": "str"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "math", "type": "module"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "numinst", "type": "int"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "SeqWordCharLabelDataFeed", "type": "Type[SeqWordCharLabelDataFeed]"}, {"lineNumber": 275, "col_offset": 40, "nodeName": "self", "type": "SeqWordCharLabelDataFeed"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "self", "type": "SeqWordCharLabelDataFeed"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "SRC", "type": "int"}, {"lineNumber": 309, "col_offset": 43, "nodeName": "TGT", "type": "int"}, {"lineNumber": 309, "col_offset": 68, "nodeName": "SRC_LEN", "type": "int"}, {"lineNumber": 309, "col_offset": 97, "nodeName": "TGT_LEN", "type": "int"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 324, "col_offset": 47, "nodeName": "SRC", "type": "int"}, {"lineNumber": 325, "col_offset": 26, "nodeName": "example_list", "type": "Union[Any, List[Any]]"}, {"lineNumber": 325, "col_offset": 47, "nodeName": "TGT", "type": "int"}, {"lineNumber": 327, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 329, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "idx", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "SRC", "type": "int"}, {"lineNumber": 342, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "TGT", "type": "int"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "SRC_LEN", "type": "int"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "TGT_LEN", "type": "int"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "src_lens", "type": "Any"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "tgt_lens", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 369, "col_offset": 14, "nodeName": "Seq2SeqDataFeed", "type": "Type[Seq2SeqDataFeed]"}, {"lineNumber": 369, "col_offset": 31, "nodeName": "self", "type": "Seq2SeqDataFeed"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "self", "type": "Seq2SeqDataFeed"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "self", "type": "Seq2SeqDataFeed"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 392, "col_offset": 14, "nodeName": "SeqWordCharDataFeed", "type": "Type[SeqWordCharDataFeed]"}, {"lineNumber": 392, "col_offset": 35, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 403, "col_offset": 44, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 403, "col_offset": 58, "nodeName": "trunc", "type": "Any"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 408, "col_offset": 57, "nodeName": "trunc", "type": "Any"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "xch", "type": "Any"}, {"lineNumber": 409, "col_offset": 49, "nodeName": "rest", "type": "Any"}, {"lineNumber": 409, "col_offset": 56, "nodeName": "maxw", "type": "Any"}, {"lineNumber": 416, "col_offset": 67, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 416, "col_offset": 81, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 417, "col_offset": 79, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 417, "col_offset": 93, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 417, "col_offset": 105, "nodeName": "wsz", "type": "Any"}, {"lineNumber": 418, "col_offset": 71, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 418, "col_offset": 85, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "self", "type": "DataFeed"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "self", "type": "DataFeed"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "examples", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 66, "col_offset": 61, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "SeqLabelExamples", "type": "Type[SeqLabelExamples]"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "SeqLabelExamples", "type": "Type[SeqLabelExamples]"}, {"lineNumber": 91, "col_offset": 72, "nodeName": "SeqLabelExamples", "type": "Type[SeqLabelExamples]"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "splitfrac", "type": "Any"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "SeqWordCharTagExamples", "type": "Type[SeqWordCharTagExamples]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 222, "col_offset": 47, "nodeName": "siglen", "type": "Any"}, {"lineNumber": 222, "col_offset": 55, "nodeName": "maxw", "type": "Any"}, {"lineNumber": 222, "col_offset": 68, "nodeName": "int", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "SeqWordCharTagExamples", "type": "Type[SeqWordCharTagExamples]"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 224, "col_offset": 38, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "vec_alloc", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 241, "col_offset": 46, "nodeName": "SEQ_LEN", "type": "str"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "SeqWordCharTagExamples", "type": "Type[SeqWordCharTagExamples]"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "SCALARS", "type": "List[str]"}, {"lineNumber": 265, "col_offset": 46, "nodeName": "splitfrac", "type": "Any"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 309, "col_offset": 43, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 309, "col_offset": 68, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 309, "col_offset": 97, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 324, "col_offset": 47, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 325, "col_offset": 26, "nodeName": "self", "type": "Seq2SeqExamples"}, {"lineNumber": 325, "col_offset": 47, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 345, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 346, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "max_src_len", "type": "Union[Any, int]"}, {"lineNumber": 351, "col_offset": 29, "nodeName": "max_tgt_len", "type": "Union[Any, int]"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "trunc", "type": "Any"}, {"lineNumber": 408, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "trunc", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 416, "col_offset": 67, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 416, "col_offset": 81, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "xch", "type": "Any"}, {"lineNumber": 417, "col_offset": 79, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 417, "col_offset": 93, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 417, "col_offset": 105, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 418, "col_offset": 71, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 418, "col_offset": 85, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "self", "type": "ExampleDataFeed"}, {"lineNumber": 188, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 222, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 224, "col_offset": 54, "nodeName": "int", "type": "Any"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "batchsz", "type": "Any"}, {"lineNumber": 226, "col_offset": 47, "nodeName": "siglen", "type": "Any"}, {"lineNumber": 226, "col_offset": 62, "nodeName": "int", "type": "Any"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 241, "col_offset": 46, "nodeName": "SeqWordCharTagExamples", "type": "Type[SeqWordCharTagExamples]"}, {"lineNumber": 247, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "SeqWordCharTagExamples", "type": "Type[SeqWordCharTagExamples]"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 300, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 408, "col_offset": 43, "nodeName": "xch", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 188, "col_offset": 74, "nodeName": "SEQ_LEN", "type": "str"}, {"lineNumber": 224, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "max_src_len", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "batch", "type": "Dict[Any, Any]"}, {"lineNumber": 300, "col_offset": 74, "nodeName": "SRC_LEN", "type": "int"}, {"lineNumber": 188, "col_offset": 74, "nodeName": "SeqWordCharTagExamples", "type": "Type[SeqWordCharTagExamples]"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 251, "col_offset": 44, "nodeName": "max_src_len", "type": "Any"}, {"lineNumber": 300, "col_offset": 74, "nodeName": "Seq2SeqExamples", "type": "Type[Seq2SeqExamples]"}, {"lineNumber": 416, "col_offset": 27, "nodeName": "i", "type": "Any"}, {"lineNumber": 416, "col_offset": 29, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "i", "type": "Any"}, {"lineNumber": 417, "col_offset": 33, "nodeName": "stride_ch", "type": "Any"}, {"lineNumber": 417, "col_offset": 54, "nodeName": "stride_ch", "type": "Any"}, {"lineNumber": 416, "col_offset": 29, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 416, "col_offset": 41, "nodeName": "i", "type": "Any"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 417, "col_offset": 33, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 417, "col_offset": 49, "nodeName": "i", "type": "Any"}, {"lineNumber": 417, "col_offset": 54, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 418, "col_offset": 27, "nodeName": "i", "type": "Any"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 418, "col_offset": 48, "nodeName": "nbptt", "type": "Any"}, {"lineNumber": 418, "col_offset": 29, "nodeName": "self", "type": "SeqWordCharDataFeed"}, {"lineNumber": 418, "col_offset": 43, "nodeName": "i", "type": "Any"}, {"lineNumber": 418, "col_offset": 48, "nodeName": "self", "type": "SeqWordCharDataFeed"}]