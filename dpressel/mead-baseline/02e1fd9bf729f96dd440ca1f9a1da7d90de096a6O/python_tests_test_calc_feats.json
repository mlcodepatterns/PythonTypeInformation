[{"lineNumber": 7, "col_offset": 0, "nodeName": "test_use_nfeats", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "test_use_nfeats_filtsz_unchanged", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "test_use_nfeats_none", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "test_extract_tuple", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_feat_factor_manual", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_feat_factor_capped", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "test_feat_factor", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_feat_factor_max_none", "type": "Callable[[], Any]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "filtsz", "type": "List[int]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "gold_nfeat", "type": "int"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "nfeat", "type": "int"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "filtsz", "type": "List[int]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "filt_feat", "type": "List[Tuple[int, int]]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "gold_filtsz", "type": "Tuple[int, ...]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "gold_nfeats", "type": "Tuple[int, ...]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "feat_factor", "type": "int"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "gold_nfeats", "type": "List[int]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "feat_factor", "type": "int"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "gold_nfeats", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "feat_factor", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "max_feat", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "gold_nfeats", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "filtsz", "type": "List[int]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "feat_factor", "type": "int"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 10, "col_offset": 7, "nodeName": "nfeat", "type": "Any"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "calc_nfeats", "type": "Any"}, {"lineNumber": 10, "col_offset": 27, "nodeName": "filtsz", "type": "List[int]"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "nfeat", "type": "Any"}, {"lineNumber": 11, "col_offset": 20, "nodeName": "gold_nfeat", "type": "int"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "calc_nfeats", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "nfeats", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "calc_nfeats", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "filt_feat", "type": "List[Tuple[int, int]]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "gold_filtsz", "type": "Tuple[int, ...]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "nfeats", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "gold_nfeats", "type": "Tuple[int, ...]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "nfeats", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "calc_nfeats", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "feat_factor", "type": "int"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "nfeats", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "gold_nfeats", "type": "List[int]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "nfeats", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "calc_nfeats", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "feat_factor", "type": "int"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "nfeats", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "gold_nfeats", "type": "List[int]"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 58, "col_offset": 66, "nodeName": "max_feat", "type": "int"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "nfeats", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "calc_nfeats", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "feat_factor", "type": "int"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "max_feat", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "filtsz", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "nfeats", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "gold_nfeats", "type": "Any"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 8, "col_offset": 40, "nodeName": "_", "type": "int"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 10, "col_offset": 54, "nodeName": "gold_nfeat", "type": "int"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 15, "col_offset": 45, "nodeName": "_", "type": "int"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 17, "col_offset": 60, "nodeName": "nfeat", "type": "int"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "_", "type": "int"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "calc_nfeats", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "filtsz", "type": "List[int]"}, {"lineNumber": 28, "col_offset": 69, "nodeName": "_", "type": "int"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "_", "type": "int"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "feat_factor", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "_", "type": "int"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "calc_nfeats", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "filtsz", "type": "List[int]"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "random", "type": "module"}, {"lineNumber": 8, "col_offset": 45, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 15, "col_offset": 50, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "random", "type": "module"}, {"lineNumber": 22, "col_offset": 45, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 28, "col_offset": 74, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "filter_and_size", "type": "Tuple[int, int]"}, {"lineNumber": 29, "col_offset": 47, "nodeName": "filter_and_size", "type": "Tuple[int, int]"}, {"lineNumber": 29, "col_offset": 66, "nodeName": "filt_feat", "type": "List[Tuple[int, int]]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "filter_and_size", "type": "Tuple[int, int]"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "filter_and_size", "type": "Tuple[int, int]"}, {"lineNumber": 30, "col_offset": 66, "nodeName": "filt_feat", "type": "List[Tuple[int, int]]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "gold_filtsz", "type": "List[int]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "random", "type": "module"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "feat_factor", "type": "int"}, {"lineNumber": 8, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 15, "col_offset": 56, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "random", "type": "module"}, {"lineNumber": 28, "col_offset": 80, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 8, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 15, "col_offset": 56, "nodeName": "random", "type": "module"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 28, "col_offset": 80, "nodeName": "random", "type": "module"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "random", "type": "module"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "random", "type": "module"}]