[{"lineNumber": 6, "col_offset": 0, "nodeName": "test_get_min_f_loader_backoff", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "test_get_min_f_preproc_backoff", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "test_get_min_f_no_backoff", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "test_get_min_f_for_each_feature", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "test_get_min_f_each_feat_preset", "type": "Callable[[], Any]"}, {"lineNumber": 7, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "gold_val", "type": "Any"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "fake", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "gold", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "gold_val", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "gold", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "default", "type": "int"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "gold", "type": "Dict[str, int]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "gold_vals", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "names", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "names", "type": "Any"}, {"lineNumber": 8, "col_offset": 15, "nodeName": "randint", "type": "Any"}, {"lineNumber": 9, "col_offset": 11, "nodeName": "randint", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "gold_val", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "_get_min_f", "type": "Any"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "c", "type": "Dict[str, Union[Dict[str, Any], List[Dict[str, str]]]]"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "gold", "type": "Dict[str, Any]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "randint", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "gold_val", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "_get_min_f", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "c", "type": "Dict[str, Union[Dict[str, Any], Dict[nothing, nothing], List[Dict[str, str]]]]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "gold", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "default", "type": "int"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "_get_min_f", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "c", "type": "Dict[str, Union[Dict[nothing, nothing], List[Dict[str, str]]]]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "gold", "type": "Dict[str, int]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "randint", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "m", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "_get_min_f", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "c", "type": "Dict[str, Union[Dict[nothing, nothing], List[Dict[str, Any]]]]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "cutoffs", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "choice", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "_get_min_f", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "c", "type": "Dict[str, Union[Dict[nothing, nothing], List[Dict[str, Any]]]]"}, {"lineNumber": 8, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 9, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "gold_val", "type": "Any"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "fake", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "Task", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "gold_val", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "Task", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "Task", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "Task", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "arange", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "Task", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "names", "type": "Any"}, {"lineNumber": 8, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 9, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 11, "col_offset": 30, "nodeName": "name", "type": "str"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "name", "type": "str"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "name", "type": "str"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "mf", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "n", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "m", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "gold_vals", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 66, "nodeName": "randint", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "n", "type": "Any"}, {"lineNumber": 57, "col_offset": 53, "nodeName": "mf", "type": "Any"}, {"lineNumber": 57, "col_offset": 59, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 57, "col_offset": 63, "nodeName": "names", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 70, "nodeName": "gold_vals", "type": "Any"}, {"lineNumber": 66, "col_offset": 66, "nodeName": "random", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "n", "type": "Any"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "names", "type": "Any"}, {"lineNumber": 66, "col_offset": 66, "nodeName": "np", "type": "module"}]