[{"lineNumber": 9, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "last_acc", "type": "None"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "original_lr", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "method", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "lr_decay", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "lr_decay", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_step", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "adagrad_accum", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "adagrad_accum", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "lr_decay_method", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "lr_decay_method", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "warmup_steps", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "warmup_steps", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "model_size", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "model_size", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "params", "type": "None"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "sparse_params", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 101, "col_offset": 52, "nodeName": "lr", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_step", "type": "int"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "last_acc", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "acc", "type": "Any"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "lr", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "set_trace", "type": "Callable[[], None]"}, {"lineNumber": 101, "col_offset": 52, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "lr_decay_method", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "group", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "pdb", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "_set_rate", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 129, "col_offset": 56, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "last_acc", "type": "Any"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "acc", "type": "Any"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "last_acc", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "lr", "type": "Any"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "lr_decay", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 77, "col_offset": 60, "nodeName": "lr", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "Adagrad", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "original_lr", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 129, "col_offset": 56, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "lr", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "method", "type": "Any"}, {"lineNumber": 72, "col_offset": 65, "nodeName": "k", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 77, "col_offset": 60, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 79, "col_offset": 64, "nodeName": "lr", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "group", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "Adadelta", "type": "Any"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "sparse_params", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 64, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "adagrad_accum", "type": "Any"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "lr", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "model_size", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "min", "type": "Callable"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 87, "col_offset": 61, "nodeName": "lr", "type": "Any"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "MultipleOptimizer", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "_step", "type": "int"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "_step", "type": "int"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "method", "type": "Any"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 116, "col_offset": 62, "nodeName": "warmup_steps", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "SparseAdam", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "sparse_params", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 116, "col_offset": 62, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "optim", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "lr", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "optim", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 93, "col_offset": 57, "nodeName": "lr", "type": "Any"}, {"lineNumber": 94, "col_offset": 40, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 58, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 93, "col_offset": 57, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 94, "col_offset": 40, "nodeName": "self", "type": "Optimizer"}]