[{"lineNumber": 9, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 12, "col_offset": 18, "nodeName": "NLLLoss", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "set_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "_set_rate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "update_learning_rate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 9, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 12, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 9, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "confidence", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "last_acc", "type": "None"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "original_lr", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "method", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "lr_decay", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "lr_decay", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_step", "type": "int"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "adagrad_accum", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "adagrad_accum", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "params", "type": "None"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "_step", "type": "int"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "last_acc", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "acc", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "register_buffer", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "KLDivLoss", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "input", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "scatter_", "type": "Any"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "confidence", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "weight", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "lr", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_set_rate", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "lr", "type": "Any"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "weight", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "long", "type": "Any"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "weight", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "lr", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "group", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "params", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 162, "col_offset": 47, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 162, "col_offset": 56, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "last_acc", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "acc", "type": "Any"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "last_acc", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "lr", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "lr_decay", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "SoftNLLLoss", "type": "Type[SoftNLLLoss]"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 119, "col_offset": 60, "nodeName": "lr", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "Adagrad", "type": "Any"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 162, "col_offset": 56, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 169, "col_offset": 81, "nodeName": "lr", "type": "Any"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 60, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 121, "col_offset": 64, "nodeName": "lr", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "group", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "Adadelta", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 169, "col_offset": 81, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "target", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 121, "col_offset": 64, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "adagrad_accum", "type": "Any"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 127, "col_offset": 65, "nodeName": "lr", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 127, "col_offset": 65, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "lr", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 58, "nodeName": "method", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 132, "col_offset": 58, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "p", "type": "Any"}]