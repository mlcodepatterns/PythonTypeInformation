[{"lineNumber": 12, "col_offset": 10, "nodeName": "RNN", "type": "Any"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "WordContextualizer", "type": "Type[deepmatcher.models.core.WordContextualizer]"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "WordContextualizer", "type": "Type[deepmatcher.models.core.WordContextualizer]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "_forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 10, "nodeName": "modules", "type": "module"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "dm", "type": "module"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "dm", "type": "module"}, {"lineNumber": 12, "col_offset": 10, "nodeName": "dm", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "alignment_networks", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "head", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "value_merge", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "input_dropout", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "transform_dropout", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "score_dropout", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "output_dropout", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "bypass_network", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "normalization", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "heads", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "heads", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "values_aligned", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "head", "type": "int"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "values_merged", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "values_merged", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "output_transform_network", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "final_output", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 37, "col_offset": 66, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "heads", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "_transform_module", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "value_transform_network", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "_merge_module", "type": "Any"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "value_merge", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "Softmax", "type": "Any"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "_transform_module", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "output_transform_network", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "input_dropout", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "transform_dropout", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "output_dropout", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "output_dropout", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "_bypass_module", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "bypass_network", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "input_dropout", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "heads", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "scale", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "normalized_scores", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "value_merge", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "output_dropout", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "output", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "bypass_network", "type": "Any"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "input", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "from_old_metadata", "type": "Any"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "final_output", "type": "Any"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "input_with_meta", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "value_transform_network", "type": "Any"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "heads", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "Transform", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "modules", "type": "module"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "heads", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "modules", "type": "module"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "output_transform_network", "type": "Any"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "heads", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "Transform", "type": "Any"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "modules", "type": "module"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "modules", "type": "module"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "input_with_meta", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "score_dropout", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "alignment_scores", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "mask", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "mask", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "alignment_scores", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "value_transform_network", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "values_transformed", "type": "Any"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "input", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "values_aligned", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "output_transform_network", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "output", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "AttrTensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "alignment_networks", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "_alignment_module", "type": "Any"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "alignment_network", "type": "Any"}, {"lineNumber": 42, "col_offset": 64, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "modules", "type": "module"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "dm", "type": "module"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "dm", "type": "module"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "modules", "type": "module"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "dm", "type": "module"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "dm", "type": "module"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 79, "col_offset": 80, "nodeName": "input", "type": "Any"}, {"lineNumber": 80, "col_offset": 80, "nodeName": "input", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "alignment_scores", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "input_with_meta", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "sequence_mask", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "masked_fill_", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "transform_dropout", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "values_aligned", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "bmm", "type": "Any"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "normalized_scores", "type": "Any"}, {"lineNumber": 99, "col_offset": 63, "nodeName": "values_transformed", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "modules", "type": "module"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "dm", "type": "module"}, {"lineNumber": 46, "col_offset": 67, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 46, "col_offset": 82, "nodeName": "heads", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "dm", "type": "module"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "alignment_networks", "type": "Any"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "_utils", "type": "Any"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "input_with_meta", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "mask", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 55, "nodeName": "mask", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "value_transform_network", "type": "Any"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "input", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "dm", "type": "module"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 79, "col_offset": 74, "nodeName": "head", "type": "int"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 65, "nodeName": "size", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "alignment_scores", "type": "Any"}, {"lineNumber": 88, "col_offset": 62, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 83, "col_offset": 65, "nodeName": "input", "type": "Any"}]