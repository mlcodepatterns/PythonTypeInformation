[{"lineNumber": 11, "col_offset": 18, "nodeName": "NLLLoss", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "confidence", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "criterion2", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "loss2", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "loss2", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "last_acc", "type": "None"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "original_lr", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "method", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "lr_decay", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "lr_decay", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_step", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "adagrad_accum", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "adagrad_accum", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "lr_decay_method", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "lr_decay_method", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "warmup_steps", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "warmup_steps", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "model_size", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "model_size", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "params", "type": "None"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "sparse_params", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "lr", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "_step", "type": "int"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "last_acc", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "acc", "type": "Any"}, {"lineNumber": 176, "col_offset": 52, "nodeName": "lr", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "register_buffer", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "NLLLoss", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "input", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "scatter_", "type": "Any"}, {"lineNumber": 31, "col_offset": 56, "nodeName": "confidence", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "weight", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "set_trace", "type": "Callable[[], None]"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "lr_decay_method", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "start_decay", "type": "bool"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "lr", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 176, "col_offset": 52, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 14, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 18, "col_offset": 39, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 18, "col_offset": 48, "nodeName": "weight", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 20, "col_offset": 42, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "weight", "type": "Any"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "long", "type": "Any"}, {"lineNumber": 31, "col_offset": 56, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "weight", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "confidence", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "label_smoothing", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "group", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "pdb", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "_set_rate", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "max_grad_norm", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 167, "col_offset": 56, "nodeName": "start_decay_at", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "last_acc", "type": "Any"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "acc", "type": "Any"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "last_acc", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "lr", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "lr_decay", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "SoftNLLLoss", "type": "Type[SoftNLLLoss]"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "criterion2", "type": "Any"}, {"lineNumber": 38, "col_offset": 51, "nodeName": "input", "type": "Any"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "target", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "criterion2", "type": "Any"}, {"lineNumber": 39, "col_offset": 56, "nodeName": "input", "type": "Any"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 115, "col_offset": 60, "nodeName": "lr", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "Adagrad", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "original_lr", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 167, "col_offset": 56, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "self", "type": "SoftNLLLoss"}, {"lineNumber": 39, "col_offset": 67, "nodeName": "target", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "method", "type": "Any"}, {"lineNumber": 110, "col_offset": 65, "nodeName": "k", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 115, "col_offset": 60, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 117, "col_offset": 64, "nodeName": "lr", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "group", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "Adadelta", "type": "Any"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "target", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "sparse_params", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 64, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "adagrad_accum", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 123, "col_offset": 65, "nodeName": "lr", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "model_size", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "min", "type": "Callable"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 123, "col_offset": 65, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "lr", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "MultipleOptimizer", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "_step", "type": "int"}, {"lineNumber": 154, "col_offset": 49, "nodeName": "_step", "type": "int"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "base_optimizer", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 134, "col_offset": 58, "nodeName": "method", "type": "Any"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 154, "col_offset": 49, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 154, "col_offset": 62, "nodeName": "warmup_steps", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "SparseAdam", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "sparse_params", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 58, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 154, "col_offset": 62, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "p", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "lr", "type": "Any"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "lr", "type": "Any"}, {"lineNumber": 131, "col_offset": 58, "nodeName": "betas", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "self", "type": "Optimizer"}, {"lineNumber": 131, "col_offset": 58, "nodeName": "self", "type": "Optimizer"}]