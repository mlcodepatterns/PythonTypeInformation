[{"lineNumber": 18, "col_offset": 19, "nodeName": "FastText", "type": "Type[deepmatcher.data.field.FastText]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "url_base", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "url_base", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "vectors_cache_dir", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "pathdir", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "url_base", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "mft", "type": "MockFastText"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "mf", "type": "deepmatcher.data.field.MatchingField"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "mf", "type": "deepmatcher.data.field.MatchingField"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "seq", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "tok_seq", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "mf", "type": "deepmatcher.data.field.MatchingField"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "MockFastText"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "name", "type": "str"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "vectors_cache_dir", "type": "str"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 31, "col_offset": 61, "nodeName": "sep", "type": "str"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "MockFastText", "type": "Type[MockFastText]"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "url_base", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "filename", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "MatchingField", "type": "Type[deepmatcher.data.field.MatchingField]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "MatchingField", "type": "Type[deepmatcher.data.field.MatchingField]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "tok_seq", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "MatchingField", "type": "Type[deepmatcher.data.field.MatchingField]"}, {"lineNumber": 21, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, str]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "vectors_cache_dir", "type": "str"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "urljoin", "type": "Any"}, {"lineNumber": 31, "col_offset": 61, "nodeName": "path", "type": "module"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "vectors_cache_dir", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "ClassFastTextTestCases"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "mft", "type": "MockFastText"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "ClassFastTextTestCases"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 34, "col_offset": 45, "nodeName": "Size", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ClassMatchingFieldTestCases"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "mf", "type": "deepmatcher.data.field.MatchingField"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "ClassMatchingFieldTestCases"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "seq", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "MockFastText", "type": "Type[MockFastText]"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "self", "type": "MockFastText"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "pathname2url", "type": "Callable[[str], str]"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "pathdir", "type": "str"}, {"lineNumber": 31, "col_offset": 61, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 34, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "mf", "type": "deepmatcher.data.field.MatchingField"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "mft", "type": "MockFastText"}]