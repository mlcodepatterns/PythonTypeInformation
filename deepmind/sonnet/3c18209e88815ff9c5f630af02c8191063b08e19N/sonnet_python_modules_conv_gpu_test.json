[{"lineNumber": 33, "col_offset": 0, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 123, "col_offset": 58, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 274, "col_offset": 52, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 34, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "test", "type": "Any"}, {"lineNumber": 49, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 50, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 123, "col_offset": 58, "nodeName": "test", "type": "Any"}, {"lineNumber": 124, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 125, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 126, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "test", "type": "Any"}, {"lineNumber": 199, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 200, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 201, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 274, "col_offset": 52, "nodeName": "test", "type": "Any"}, {"lineNumber": 275, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 276, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 277, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 352, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "o1", "type": "nothing"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "conv2", "type": "nothing"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 123, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "o1", "type": "nothing"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "conv2", "type": "nothing"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "o1", "type": "nothing"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "conv2", "type": "nothing"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 274, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "o1", "type": "nothing"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "conv2", "type": "nothing"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 353, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "conv_module", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "field_to_get", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "o1", "type": "nothing"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "o2", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "o1", "type": "Any"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "o2", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "o1", "type": "nothing"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "o2", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 9, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "o1", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "o2", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "o1", "type": "nothing"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "o2", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 263, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 268, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "o1", "type": "Any"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "o2", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 306, "col_offset": 9, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "o1", "type": "nothing"}, {"lineNumber": 317, "col_offset": 27, "nodeName": "o2", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 346, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 347, "col_offset": 9, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "o1", "type": "Any"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "o2", "type": "Any"}, {"lineNumber": 353, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 56, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 77, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 53, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 53, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "conv2", "type": "nothing"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 111, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 62, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "conv2", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 135, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 152, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 53, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 160, "col_offset": 62, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "conv2", "type": "nothing"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 186, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 62, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "conv2", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 206, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 209, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 210, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 211, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 227, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 53, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 53, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 235, "col_offset": 64, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "conv2", "type": "nothing"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 262, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 265, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 267, "col_offset": 64, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "conv2", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 282, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 287, "col_offset": 9, "nodeName": "w1", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "w2", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 305, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 311, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 311, "col_offset": 53, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 312, "col_offset": 53, "nodeName": "conv1", "type": "nothing"}, {"lineNumber": 313, "col_offset": 66, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "conv2", "type": "nothing"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 332, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 340, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 345, "col_offset": 66, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "conv2", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 56, "col_offset": 6, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 56, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 61, "col_offset": 6, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 77, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 111, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 131, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 136, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 152, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 186, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 190, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 206, "col_offset": 6, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 206, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 209, "col_offset": 9, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 211, "col_offset": 6, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 211, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 227, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 262, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 266, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 282, "col_offset": 6, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 282, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 289, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 289, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 305, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 337, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 340, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 344, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 135, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 183, "col_offset": 53, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 190, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 210, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 259, "col_offset": 53, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 265, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 266, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "logging", "type": "Any"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "sum", "type": "Any"}, {"lineNumber": 288, "col_offset": 61, "nodeName": "sum", "type": "Any"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 289, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 337, "col_offset": 53, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 340, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 343, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 344, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "functools", "type": "module"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "functools", "type": "module"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "functools", "type": "module"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 49, "nodeName": "eval", "type": "Any"}, {"lineNumber": 288, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 68, "nodeName": "eval", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "functools", "type": "module"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 340, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 49, "nodeName": "w1", "type": "Any"}, {"lineNumber": 288, "col_offset": 68, "nodeName": "w2", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "np", "type": "module"}]