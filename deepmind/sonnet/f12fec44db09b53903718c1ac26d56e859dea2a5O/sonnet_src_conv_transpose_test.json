[{"lineNumber": 32, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 205, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 252, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 33, "col_offset": 5, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 205, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 252, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 307, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "iterations", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 259, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 288, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 309, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "conv2", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "iterations", "type": "int"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "y1", "type": "Any"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "y2", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 116, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 148, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv2DTranspose]"}, {"lineNumber": 159, "col_offset": 10, "nodeName": "conv_transpose1", "type": "sonnet.src.conv_transpose.Conv2DTranspose"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv2DTranspose]"}, {"lineNumber": 185, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv2DTranspose"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv2DTranspose]"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv2DTranspose"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 212, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv1DTranspose]"}, {"lineNumber": 223, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv1DTranspose"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 225, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 227, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv1DTranspose]"}, {"lineNumber": 245, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv1DTranspose"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 247, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 249, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv3DTranspose]"}, {"lineNumber": 271, "col_offset": 10, "nodeName": "conv_transpose1", "type": "sonnet.src.conv_transpose.Conv3DTranspose"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 273, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 275, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv3DTranspose]"}, {"lineNumber": 300, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv3DTranspose"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 302, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 304, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 309, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "w", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "b", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "w", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 47, "col_offset": 6, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "autograph", "type": "Any"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 161, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 225, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 247, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 273, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 275, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 302, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 304, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 309, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "lib_initializers", "type": "module"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "lib_initializers", "type": "module"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "lib_initializers", "type": "module"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 6, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "y1", "type": "Any"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "y2", "type": "Any"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 210, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 269, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 271, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 298, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 298, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 300, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 279, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 47, "nodeName": "tf", "type": "Any"}]