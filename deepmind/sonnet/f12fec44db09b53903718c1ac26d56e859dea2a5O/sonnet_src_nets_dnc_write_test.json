[{"lineNumber": 26, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 28, "col_offset": 2, "nodeName": "testShape", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "testValues", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 80, "col_offset": 2, "nodeName": "testShape", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 2, "nodeName": "testValues", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 130, "col_offset": 2, "nodeName": "testShape", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "testValues", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 171, "col_offset": 2, "nodeName": "testShape", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 2, "nodeName": "testValues", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 218, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "word_size", "type": "int"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "mem", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "reset_row_weights", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "eraser", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "word_size", "type": "int"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "mem", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "perm", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "indices_np", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "excluded_indices_np", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "reset_row_weights", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "erased_mem", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "not_erased_mem", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "erased_mem_np", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "word_size", "type": "int"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "mem", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "reset_weights", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "word_size", "type": "int"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "mem", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "perm", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "indices", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "excluded_indices", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "reset_weights", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "erased_mem", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "not_erased_mem", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "erased_mem_np", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "not_erased_mem_np", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "word_size", "type": "int"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "mem", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "reset_weights", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "word_size", "type": "int"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "mem", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "indices", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "reset_weights", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "write_values", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "word_size", "type": "int"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "mem", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "word_size", "type": "int"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "mem", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "indices", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "write_values", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "write_values_np", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "written_mem", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "not_written_mem", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "written_mem_np", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "not_written_mem_np", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "written_mem_copy", "type": "Any"}, {"lineNumber": 220, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "erase_rows", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "mem", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "reset_row_weights", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "perm", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "perm", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "constant", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "erase_rows", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "mem", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "reset_row_weights", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "erase_rows", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "mem", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "erase", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "mem", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "reset_weights", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "perm", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "perm", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "constant", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "erase", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "mem", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "reset_weights", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "erase", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "mem", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "not_erased_mem_np", "type": "Any"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "erase_and_write", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "mem", "type": "Any"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 140, "col_offset": 55, "nodeName": "reset_weights", "type": "Any"}, {"lineNumber": 140, "col_offset": 70, "nodeName": "values", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "constant", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "erase_and_write", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "mem", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "reset_weights", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "write_values", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 177, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "additive_write", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "mem", "type": "Any"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 180, "col_offset": 54, "nodeName": "values", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "constant", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "additive_write", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "mem", "type": "Any"}, {"lineNumber": 201, "col_offset": 44, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 201, "col_offset": 59, "nodeName": "write_values", "type": "Any"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "additive_write", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "mem", "type": "Any"}, {"lineNumber": 202, "col_offset": 67, "nodeName": "write_values", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "copy", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "written_mem_copy", "type": "Any"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "write_values_np", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "written_mem_copy", "type": "Any"}, {"lineNumber": 213, "col_offset": 42, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "not_written_mem_np", "type": "Any"}, {"lineNumber": 215, "col_offset": 44, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 220, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 34, "col_offset": 54, "nodeName": "word_size", "type": "int"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 35, "col_offset": 51, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 35, "col_offset": 63, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "write", "type": "module"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "EraseRowsTest"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 39, "col_offset": 50, "nodeName": "word_size", "type": "int"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "word_size", "type": "int"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "mem", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "write", "type": "module"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "write", "type": "module"}, {"lineNumber": 62, "col_offset": 58, "nodeName": "reset_row_weights", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "erased_mem", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "EraseRowsTest"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "erased_mem_np", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "self", "type": "EraseRowsTest"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "erased_mem_np", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "EraseRowsTest"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "word_size", "type": "int"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 87, "col_offset": 63, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 88, "col_offset": 51, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 88, "col_offset": 63, "nodeName": "word_size", "type": "int"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "write", "type": "module"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "EraseTest"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "word_size", "type": "int"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "word_size", "type": "int"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "mem", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "word_size", "type": "int"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "write", "type": "module"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "write", "type": "module"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "reset_weights", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "erased_mem", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "not_erased_mem", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "EraseTest"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "erased_mem_np", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "EraseTest"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "erased_mem_np", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "EraseTest"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 136, "col_offset": 54, "nodeName": "word_size", "type": "int"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 137, "col_offset": 51, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 137, "col_offset": 63, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 138, "col_offset": 63, "nodeName": "word_size", "type": "int"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 139, "col_offset": 56, "nodeName": "word_size", "type": "int"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "write", "type": "module"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "EraseAndWriteTest"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "word_size", "type": "int"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 151, "col_offset": 54, "nodeName": "word_size", "type": "int"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 153, "col_offset": 50, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "tile", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "word_size", "type": "int"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 160, "col_offset": 62, "nodeName": "word_size", "type": "int"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "write", "type": "module"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "self", "type": "EraseAndWriteTest"}, {"lineNumber": 177, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 177, "col_offset": 54, "nodeName": "word_size", "type": "int"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 178, "col_offset": 51, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 178, "col_offset": 63, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 179, "col_offset": 56, "nodeName": "word_size", "type": "int"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "write", "type": "module"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "self", "type": "AdditiveWriteTest"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 182, "col_offset": 50, "nodeName": "word_size", "type": "int"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 190, "col_offset": 45, "nodeName": "word_size", "type": "int"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "mem", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 193, "col_offset": 36, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "word_size", "type": "int"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "write_values", "type": "Any"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "write", "type": "module"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "write", "type": "module"}, {"lineNumber": 202, "col_offset": 48, "nodeName": "write_address", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "written_mem", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "not_written_mem", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "self", "type": "AdditiveWriteTest"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "written_mem_np", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "self", "type": "AdditiveWriteTest"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "self", "type": "AdditiveWriteTest"}, {"lineNumber": 220, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "word_size", "type": "int"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "not_erased_mem", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "num_writes", "type": "int"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "word_size", "type": "int"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 177, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "write_values_np", "type": "Any"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "mem_np", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "indices", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "eraser", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "eye", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "indices_np", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "indices_np", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "excluded_indices_np", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "excluded_indices_np", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "writer", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "eye", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "indices", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "indices", "type": "Any"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "excluded_indices", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "excluded_indices", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "writer", "type": "Any"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "eye", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "indices", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "written_mem", "type": "Any"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "indices", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "write_values", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "writer", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "eye", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "memory_size", "type": "int"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "indices", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "written_mem", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "indices", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 55, "nodeName": "indices", "type": "Any"}]