[{"lineNumber": 29, "col_offset": 17, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 164, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "my_initializer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "my_initializer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "output_size", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "output_size", "type": "int"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "tf_output", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "defun_linear", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "iterations", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "l", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "defun_linear", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "l", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "defun_linear", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "l", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "output_size", "type": "int"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "w_init", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "my_initializer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "b_init", "type": "sonnet.src.initializers.Initializer"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "my_initializer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "b", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "w", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "output_size", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 86, "col_offset": 6, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "i", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "output_size", "type": "int"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "l", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "tf_output", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "linear_2", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "iterations", "type": "int"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "y1", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "y2", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "l", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "defun_linear", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "l", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "defun_linear", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "function", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "l", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "output_size", "type": "int"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "input_size", "type": "int"}, {"lineNumber": 160, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "output_size", "type": "int"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "linear", "type": "module"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "my_initializer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "linear", "type": "module"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "my_initializer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 43, "col_offset": 6, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 46, "col_offset": 10, "nodeName": "linear", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "linear", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "input_size", "type": "int"}, {"lineNumber": 59, "col_offset": 57, "nodeName": "output_size", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "output_size", "type": "int"}, {"lineNumber": 64, "col_offset": 7, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "int32", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 67, "col_offset": 6, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 69, "col_offset": 10, "nodeName": "linear", "type": "module"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "linear", "type": "module"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "fill", "type": "Any"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "fill", "type": "Any"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "ones", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "linear", "type": "module"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "numpy_linear", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "linear", "type": "module"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "linear", "type": "module"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "linear_1", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "defun_linear", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "linear", "type": "module"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "defun_linear", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "ones", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 128, "col_offset": 67, "nodeName": "out", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "ones", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "linear", "type": "module"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "linear", "type": "module"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "l", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "linear", "type": "module"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 160, "col_offset": 10, "nodeName": "linear", "type": "module"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 166, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 43, "col_offset": 6, "nodeName": "linear", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "input_size", "type": "int"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "float16", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "zeros_initializer", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "input_size", "type": "int"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "output_size", "type": "int"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "output_size", "type": "int"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "input_size", "type": "int"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "input_size", "type": "int"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "ones_initializer", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "ones_initializer", "type": "Any"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "y1", "type": "Any"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 115, "col_offset": 59, "nodeName": "y2", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "defun_linear", "type": "Any"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "input_size", "type": "int"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "zeros_initializer", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.linear.Linear"}]