[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 389, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1016, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1016, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1262, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1262, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1762, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1762, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2113, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2113, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2281, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2281, "col_offset": 48, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2337, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2337, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2650, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2650, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3049, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3049, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3439, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3439, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 4000, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 4000, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 199, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 200, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 389, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1016, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1016, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1262, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1262, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1762, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1762, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1765, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1766, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1767, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1768, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1769, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1770, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1771, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1772, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1773, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1774, "col_offset": 2, "nodeName": "use_output_shape", "type": "List[bool]"}, {"lineNumber": 1782, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1783, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1784, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1785, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1786, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 2113, "col_offset": 23, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2113, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 2281, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2281, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 2337, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2337, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2650, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2650, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3049, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3049, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3439, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3439, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 4000, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 4000, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 4256, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 272, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 320, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 343, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 389, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 427, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 439, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 440, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 655, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 945, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 970, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 974, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 984, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 987, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 997, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1007, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1008, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1016, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1023, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1024, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1025, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1030, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 1031, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 1031, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1036, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1038, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1065, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1075, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1081, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1101, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1102, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1125, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1126, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1127, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1131, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1132, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1133, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1140, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1141, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1162, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1173, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1182, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1187, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1188, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1189, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1190, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1215, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1235, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1240, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1241, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1242, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1243, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1257, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1262, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1271, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1272, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1273, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1275, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1289, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1299, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1312, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1322, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1333, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1334, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1335, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1335, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1336, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1351, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1375, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1389, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1411, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1424, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1443, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1454, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1455, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1494, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1495, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1523, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1525, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1542, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1543, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1567, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1568, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1592, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1593, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1594, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1596, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1597, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1617, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1618, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1626, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1627, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1634, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1635, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1643, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1644, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1651, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1652, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1660, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1661, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1669, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1670, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1673, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1682, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1683, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1686, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1695, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1696, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1699, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1708, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1709, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1721, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1722, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1724, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1725, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1726, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1727, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1729, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1754, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1755, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1762, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1771, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1771, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1771, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1771, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1771, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1776, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1776, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1776, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1776, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1782, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1783, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1783, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1784, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1784, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1785, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1786, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1786, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1801, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1814, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1815, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1831, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1848, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1858, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1886, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1917, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1953, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1977, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1978, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1979, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1981, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1982, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2017, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2026, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2043, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2064, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2073, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2090, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2097, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2098, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2113, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2128, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2129, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2130, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2154, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2155, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2156, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2181, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2182, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2183, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2207, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2208, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2209, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2211, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2214, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 2215, "col_offset": 4, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2239, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2242, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2243, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2244, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2245, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2247, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2272, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2273, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2281, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2289, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2290, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2291, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2295, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2309, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2310, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2311, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2312, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2313, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2314, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2328, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2329, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2331, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2337, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2344, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2344, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2345, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2345, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2346, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2346, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2347, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2347, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2348, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2348, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2349, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2349, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2350, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2350, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2351, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2353, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2354, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2365, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2365, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2366, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2366, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2367, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2367, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2368, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2368, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2369, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2369, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2370, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2370, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2372, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2381, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2385, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2403, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2419, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2438, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2461, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2472, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2473, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2495, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2520, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2522, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2528, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2529, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2554, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2582, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2608, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2609, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2629, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2630, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2631, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2633, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2634, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2650, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2657, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2657, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2658, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2658, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2659, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2659, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2660, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2660, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2661, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2663, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2663, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2664, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2664, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2665, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2665, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2666, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2668, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2668, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2669, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2673, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2681, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2681, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2682, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2682, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2683, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2683, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2684, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2684, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2685, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2685, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2686, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2686, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2687, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2689, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2698, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2705, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2723, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2748, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2775, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2800, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2812, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2813, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2814, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2840, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2853, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2854, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2884, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2887, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2906, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2937, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2966, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2967, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2984, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2985, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2986, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2996, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2997, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2998, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3025, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3026, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3027, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3029, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3030, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3049, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3056, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3056, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3057, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3057, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3058, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3058, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3059, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 3061, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3061, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3062, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3062, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3063, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 3065, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3065, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3066, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 3070, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 3078, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3078, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 3079, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3079, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3080, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3080, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3081, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3081, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3082, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3082, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3083, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3083, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3084, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3084, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3086, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3095, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3102, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3120, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3145, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3173, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3198, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3210, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3211, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3212, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 3238, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3251, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3252, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3282, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3285, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3304, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3305, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3331, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3332, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3358, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3359, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3376, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3377, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3378, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3388, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3389, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3390, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3415, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3416, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3417, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3419, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3420, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3439, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3447, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3448, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3449, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3450, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3451, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3452, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3453, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3454, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3455, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3469, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3479, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3490, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3491, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3491, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3491, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3492, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3492, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3493, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3493, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3493, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3508, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3562, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 3575, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3595, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3606, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 3607, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 3638, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3639, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3685, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3687, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3705, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3743, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3744, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3770, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3771, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3772, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3774, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3775, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3795, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3796, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3804, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3805, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3812, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3813, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3821, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3822, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3829, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3830, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3838, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3839, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3846, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3847, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3855, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3856, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3863, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3864, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3872, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3873, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3881, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3882, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3885, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3894, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3895, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3898, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3907, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3908, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3911, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3920, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3921, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3924, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3933, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3934, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3937, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3946, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3947, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3959, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3960, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3962, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3963, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3964, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 3965, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 3967, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 3992, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3993, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 4000, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4007, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 4008, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4009, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4010, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4011, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4012, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 4013, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4014, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4015, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4016, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 4017, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 4018, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 4019, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 4019, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4024, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 4033, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 4056, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4066, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4072, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4081, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4082, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 4092, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4093, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 4108, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4118, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4152, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4153, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4154, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4158, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4159, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4160, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 4179, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4188, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4206, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4225, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4234, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4252, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4257, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 231, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "CONV_1D_MASKED_KWARGS", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 233, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 234, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 236, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 237, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 238, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 239, "col_offset": 7, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "SEPARABLE_CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 240, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 253, "col_offset": 6, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 263, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 272, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 277, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 280, "col_offset": 6, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 284, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 302, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 307, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 312, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 332, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 347, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 360, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 363, "col_offset": 6, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 367, "col_offset": 11, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 370, "col_offset": 11, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 370, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 374, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 375, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 381, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 382, "col_offset": 6, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 383, "col_offset": 6, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 384, "col_offset": 6, "nodeName": "out3", "type": "Any"}, {"lineNumber": 385, "col_offset": 6, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 399, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 400, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 403, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 443, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 489, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 569, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 578, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 578, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 579, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 580, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 592, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 610, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 624, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 624, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 635, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 635, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 641, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 653, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 653, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 654, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 672, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 673, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 678, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 679, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 701, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 702, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 705, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 706, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 729, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 729, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 730, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 730, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 732, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 732, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 733, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 733, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 744, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 756, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 766, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 779, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 789, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 790, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 795, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 796, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 805, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 809, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 810, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 812, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 812, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 813, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 813, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 814, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 814, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 815, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 815, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 817, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 821, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 824, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 828, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 828, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 829, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 830, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 844, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 850, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 851, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 851, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 857, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 858, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 858, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 859, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 859, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 865, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 866, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 874, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 874, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 889, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 890, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 897, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 897, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 898, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 905, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 906, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 907, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 914, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 914, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 925, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 927, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 935, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 935, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 936, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 944, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 945, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 948, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 957, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 958, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 961, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 970, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 974, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 983, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 987, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 996, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 997, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 999, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1001, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1007, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 1009, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1009, "col_offset": 34, "nodeName": "SUPPORTED_2D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1023, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1024, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1025, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1030, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1031, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1031, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1033, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1033, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1033, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1034, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1036, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1036, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1036, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1038, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1038, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1038, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1040, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1040, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1041, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1041, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1065, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1065, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1067, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1075, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1075, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1090, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1091, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1093, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1101, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1101, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1102, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1102, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1104, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1106, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1117, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1125, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1126, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1126, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1131, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1132, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1132, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1133, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1133, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1141, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1141, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1151, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1153, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1153, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1162, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1164, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1173, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1176, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1176, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1177, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1177, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1178, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1178, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1184, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1184, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1191, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1194, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1194, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1195, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1195, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1195, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1198, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1198, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1215, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1217, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1226, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1229, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1229, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1229, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1230, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1230, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1231, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1231, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1231, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1237, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1237, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1244, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1247, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1247, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1248, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1248, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1248, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1251, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1251, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1270, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1271, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1272, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1273, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1275, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1277, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1278, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1281, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1289, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1289, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1295, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1304, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1312, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1312, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1314, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1318, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1338, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1339, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1343, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1351, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1351, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1370, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1385, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1404, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1407, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1434, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1443, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1443, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1444, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1445, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1454, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1455, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1457, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1466, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1476, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1495, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1495, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1497, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1504, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1506, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1506, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1506, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1512, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1513, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1515, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1521, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1523, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1523, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1524, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1524, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1533, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1542, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1543, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1544, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1545, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1558, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1567, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1568, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1569, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1570, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1584, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1592, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1593, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1593, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1594, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1594, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1596, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1596, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1597, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1597, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1608, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1617, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1618, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1619, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1626, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1626, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1627, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1634, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1635, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1636, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1643, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1643, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1644, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1651, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1652, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1653, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1660, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1660, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1661, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1669, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1670, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1673, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1682, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1683, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1686, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1695, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1696, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1699, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1708, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1709, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1711, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1713, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1717, "col_offset": 10, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1721, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1722, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1724, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1724, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1725, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1725, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1726, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1726, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1727, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1727, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1729, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 1730, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1731, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1733, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1734, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1736, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1737, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1740, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1740, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1740, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1741, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1741, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1742, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1742, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1743, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1744, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1745, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1746, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1748, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1754, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1756, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 1756, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1756, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 1771, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1771, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1771, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1771, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1771, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1777, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1777, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1782, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1782, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1782, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1782, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1785, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1785, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1785, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1785, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1802, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1802, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1804, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1805, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1814, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1814, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1815, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1815, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 1816, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1819, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1832, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1832, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1834, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1836, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1837, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1840, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1848, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1848, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1850, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1854, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1869, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1877, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1908, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1944, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1953, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1953, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1956, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1968, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1977, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1977, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1977, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1977, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1978, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1978, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1979, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1979, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1981, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1981, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1982, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1982, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1993, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2008, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2017, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 2020, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2020, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2020, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2021, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2021, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2022, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2022, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2022, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2028, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2031, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2033, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2033, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2034, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2034, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2034, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2037, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2037, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2037, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2055, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2064, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 2067, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2067, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2067, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2068, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2068, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2069, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2069, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2069, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2075, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2078, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2080, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2080, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2081, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2081, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2081, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2084, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2084, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2084, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2098, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2098, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2100, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2108, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2110, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2110, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2110, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2120, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2128, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2129, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2131, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2133, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2135, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2137, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2139, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2139, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2139, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2146, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2154, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2155, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2157, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2159, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2161, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2163, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2165, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2165, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2165, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2172, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2181, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2182, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2184, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2186, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2188, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2190, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2192, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2192, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2192, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2200, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2207, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2208, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2208, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2209, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2209, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2211, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2211, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2212, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2212, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2214, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2215, "col_offset": 23, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2215, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 2217, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2220, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2222, "col_offset": 6, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2223, "col_offset": 6, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2228, "col_offset": 6, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2229, "col_offset": 6, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2231, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2231, "col_offset": 24, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2231, "col_offset": 43, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2232, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2232, "col_offset": 24, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2232, "col_offset": 51, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2235, "col_offset": 10, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2239, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2240, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2242, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2242, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2243, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2243, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2244, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2244, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2245, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2245, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2247, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 2248, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2249, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2251, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2252, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2254, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2255, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2258, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2258, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2258, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2259, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2259, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2260, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2260, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2261, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2262, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2263, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2264, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2266, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2272, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2274, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 2274, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2274, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 2289, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2290, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2290, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2291, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2297, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 2297, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2300, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2300, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2301, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2301, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2301, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2309, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2310, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2311, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2311, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2312, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2312, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2313, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2313, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2314, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2314, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2321, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2329, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2329, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2331, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2333, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2334, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2334, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2334, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2342, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2344, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2344, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2345, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2345, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2346, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2346, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2347, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2347, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2348, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2348, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2349, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2349, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2350, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2350, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2351, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2351, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2353, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2353, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2353, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2353, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2353, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2354, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2354, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2354, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2355, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2355, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2355, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2355, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2356, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2356, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2356, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2357, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2365, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2366, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2367, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2368, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2369, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2370, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2372, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2372, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2374, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2381, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2381, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2383, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2383, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2384, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2384, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2394, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2395, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2397, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2403, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2403, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2408, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2417, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2418, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2431, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2433, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2435, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2453, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2461, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2461, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2462, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2463, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2472, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2473, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2475, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2482, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2492, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2508, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2509, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2511, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2518, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2520, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2520, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2521, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2521, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2529, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2529, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2531, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2537, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2539, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2539, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2539, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2546, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2554, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2555, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2560, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2561, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2574, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2582, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2583, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2586, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2587, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2600, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2608, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2609, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2610, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2611, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2625, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2629, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2630, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2630, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2631, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2631, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2633, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2633, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2634, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2634, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2645, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2655, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2657, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2657, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2658, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2658, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2659, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2659, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2660, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2660, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2661, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2661, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2661, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2661, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2661, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2663, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2663, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2664, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2664, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2665, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2665, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2666, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2666, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2666, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2668, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2668, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2668, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2669, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2669, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2669, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2669, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2669, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2671, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2671, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2671, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2671, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2673, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2673, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2673, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2681, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2682, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2683, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2684, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2685, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2686, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2687, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2689, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2689, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2691, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2698, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2698, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2700, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2701, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2703, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2714, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2715, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2717, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2723, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2723, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2729, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2739, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2745, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2762, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2765, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2768, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2791, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2800, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2800, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2801, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2802, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2812, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2813, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2814, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2815, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2823, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2837, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2854, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2854, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2856, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2863, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2865, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2865, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2865, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2871, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2872, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2874, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2882, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2884, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2884, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2885, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2885, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2886, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2886, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2896, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2906, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2907, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2912, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2913, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2928, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2937, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2938, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2941, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2942, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2957, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2966, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2967, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2968, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2969, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2986, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2986, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2987, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2996, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2997, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2999, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3000, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3002, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3021, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 3025, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3026, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3026, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3027, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3027, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3029, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3029, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3030, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3030, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3042, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3043, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3054, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 3056, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3056, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3057, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3057, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3058, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3058, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3059, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3059, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3059, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3059, "col_offset": 46, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3061, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3061, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3062, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3062, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3063, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3063, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3065, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3065, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3065, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3066, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3066, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3066, "col_offset": 37, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3066, "col_offset": 47, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3068, "col_offset": 11, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3068, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3068, "col_offset": 40, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3070, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3070, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3070, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3078, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3079, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 3080, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3081, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3082, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 3083, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 3084, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 3086, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3086, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3088, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3095, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3095, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3097, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3098, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3100, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3111, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3112, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3114, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3120, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3120, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3122, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3126, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3127, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3127, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3136, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3142, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3160, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3163, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3166, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3189, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3198, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 3198, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 3199, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 3200, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 3210, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3211, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3212, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3213, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3221, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3235, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3252, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 3252, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3254, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3261, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3263, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 3263, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3263, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3269, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 3270, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3272, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3280, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3282, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3282, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 3283, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3283, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3284, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3284, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3294, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3304, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3305, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3306, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3307, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3309, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3313, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 3322, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3331, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3332, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3333, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3334, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3336, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3340, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3349, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3358, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3359, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3360, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3361, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3363, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3367, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3378, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3378, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3379, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3388, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3389, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3391, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3392, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3394, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3396, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3400, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3411, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3415, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3416, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3416, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3417, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3417, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3419, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3419, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3420, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3420, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3432, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3433, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3447, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3448, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3449, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3450, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3451, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3452, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3453, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3454, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3455, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3457, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3458, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3461, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3469, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3469, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3471, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3475, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3495, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3496, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3500, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3508, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3508, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3525, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3526, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3535, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3537, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3539, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3555, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3558, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3585, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3595, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 3595, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 3596, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 3606, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3607, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3608, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3616, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3626, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3639, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 3639, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3641, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3648, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3650, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 3650, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3650, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3655, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3660, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3673, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 3674, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3676, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3683, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3685, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3685, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 3686, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3686, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3696, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3705, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3718, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3719, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3734, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3743, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3744, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3746, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3747, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3762, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3770, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3771, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3771, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3772, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3772, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3774, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3774, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3775, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3775, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3786, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3796, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3797, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3804, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3804, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3812, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3813, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3814, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3821, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3821, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3829, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3830, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3831, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3838, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3838, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3846, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3847, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3848, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3855, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3855, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3863, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3864, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3865, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3872, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3872, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3881, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3882, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3885, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3894, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3895, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3898, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3907, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3908, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3911, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3920, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3921, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3924, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3933, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3934, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3937, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3946, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3947, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3949, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3951, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3955, "col_offset": 10, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3959, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 3960, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 3962, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3962, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3963, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3963, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3964, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3964, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3965, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3965, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3967, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 3968, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3969, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 3971, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3972, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 3974, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3975, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 3978, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3978, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3978, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3979, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3979, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 3980, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3980, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 3981, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3982, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3983, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3984, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3986, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3992, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3994, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 3994, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 3994, "col_offset": 34, "nodeName": "SUPPORTED_3D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 4005, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 4007, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4008, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4009, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4010, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4011, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4012, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4013, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4014, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4015, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4016, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4017, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4018, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4019, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4019, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 4021, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4021, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 4021, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4021, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4022, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4022, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4024, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4024, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4024, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4024, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4026, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4026, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4026, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4027, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4029, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4029, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4029, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4030, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4030, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 4031, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4033, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4033, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 4033, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 4033, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 4056, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4056, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4058, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4066, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4066, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4068, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4071, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4081, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4082, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4084, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4092, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4092, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4093, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4093, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 4095, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4097, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4108, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4110, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4118, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4118, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4120, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4125, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4130, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4144, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4152, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4153, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4153, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4158, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4159, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4159, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4160, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4160, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4161, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4170, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4179, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4182, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4182, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4182, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4183, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4183, "col_offset": 49, "nodeName": "stride", "type": "Any"}, {"lineNumber": 4184, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4184, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4184, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4190, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 4190, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4193, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4199, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4199, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 4200, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4200, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4200, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4216, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4225, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4228, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4228, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4228, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4229, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4229, "col_offset": 44, "nodeName": "stride", "type": "Any"}, {"lineNumber": 4230, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4230, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4230, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4236, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 4236, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4239, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4245, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4245, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 4246, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4246, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4246, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4257, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "float64", "type": "Any"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 231, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 232, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 233, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 234, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 236, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 237, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 238, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 239, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 240, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 249, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 249, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 254, "col_offset": 59, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 256, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 281, "col_offset": 6, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 281, "col_offset": 59, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 283, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 286, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 289, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 299, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 302, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 303, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 305, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 305, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 307, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 307, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 310, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 312, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 321, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 326, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 326, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 327, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 333, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 337, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 337, "col_offset": 33, "nodeName": "UnderspecifiedError", "type": "Type[sonnet.python.modules.base_errors.UnderspecifiedError]"}, {"lineNumber": 337, "col_offset": 58, "nodeName": "err", "type": "str"}, {"lineNumber": 338, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 344, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 344, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 350, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 351, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 358, "col_offset": 13, "nodeName": "stop_gradient", "type": "Any"}, {"lineNumber": 360, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 364, "col_offset": 6, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 364, "col_offset": 59, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 369, "col_offset": 37, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 375, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 377, "col_offset": 35, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 383, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 384, "col_offset": 13, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 385, "col_offset": 28, "nodeName": "out3", "type": "Any"}, {"lineNumber": 386, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 386, "col_offset": 47, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 399, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 400, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 403, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 428, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 443, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 450, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 454, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 458, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 465, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 466, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 487, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 498, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 500, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 503, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 503, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 503, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 504, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 516, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 524, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 524, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 538, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 541, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 557, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 557, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 557, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 560, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 560, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 560, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 561, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 569, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 572, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 574, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 578, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 578, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 579, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 592, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 597, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 600, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 600, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 602, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 606, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 616, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 616, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 616, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 617, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 623, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 633, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 633, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 642, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 648, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 649, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 651, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 651, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 653, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 656, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 656, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 667, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 669, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 672, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 673, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 681, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 685, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 685, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 698, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 701, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 702, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 708, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 712, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 712, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 725, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 729, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 729, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 730, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 730, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 735, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 739, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 744, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 745, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 756, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 761, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 763, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 766, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 768, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 772, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 779, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 784, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 786, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 789, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 790, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 798, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 802, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 802, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 805, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 809, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 810, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 812, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 812, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 817, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 821, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 824, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 828, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 828, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 829, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 829, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 830, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 831, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 831, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 832, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 832, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 832, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 832, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 833, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 833, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 833, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 833, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 834, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 835, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 836, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 837, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 844, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 848, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 850, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 851, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 851, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 854, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 854, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 856, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 856, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 857, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 860, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 861, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 865, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 865, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 866, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 870, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 871, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 875, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 876, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 877, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 878, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 878, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 888, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 889, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 890, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 893, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 894, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 898, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 899, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 900, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 901, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 901, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 905, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 905, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 906, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 907, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 910, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 911, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 915, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 916, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 917, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 918, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 918, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 925, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 925, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 927, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 931, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 932, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 936, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 937, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 938, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 939, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 944, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 945, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 948, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 948, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 949, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 951, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 957, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 958, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 961, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 961, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 962, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 964, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 970, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 974, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 974, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 975, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 977, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 983, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 987, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 987, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 988, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 990, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 996, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 996, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 997, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 999, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 999, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1000, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 1001, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1001, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1007, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1009, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 1011, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1011, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1013, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 1033, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1033, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1034, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1036, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1036, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1038, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1038, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1040, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1041, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1041, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1045, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1045, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1046, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1065, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1065, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1065, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1067, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1068, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1069, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1070, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1071, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1073, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1077, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1080, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1080, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 1082, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1090, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1090, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1091, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1091, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1093, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1097, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1099, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1104, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1104, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1106, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1107, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1108, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1108, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1117, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1118, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1119, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1120, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1121, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1123, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1125, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1126, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1126, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1126, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1128, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1128, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1130, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1130, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1131, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1134, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1135, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1140, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1149, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1151, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1151, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1162, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1164, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1168, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1171, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1172, "col_offset": 20, "nodeName": "DATA_FORMAT_NHWC", "type": "str"}, {"lineNumber": 1173, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1176, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1176, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1177, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1177, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1178, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1178, "col_offset": 46, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1183, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1183, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1183, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1184, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1191, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1191, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1191, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1191, "col_offset": 48, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1191, "col_offset": 59, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1192, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1193, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1195, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1195, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1198, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1205, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1205, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1205, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1206, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1206, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1206, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1215, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1217, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1221, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1224, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1225, "col_offset": 20, "nodeName": "DATA_FORMAT_NCHW", "type": "str"}, {"lineNumber": 1226, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1229, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1229, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1229, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1230, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1230, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1231, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1231, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1231, "col_offset": 46, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1236, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1236, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1236, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1237, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1244, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1244, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1244, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1244, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1244, "col_offset": 61, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1245, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1246, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1248, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1248, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1251, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1258, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1258, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1258, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1259, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1259, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1259, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1270, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1271, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1272, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1273, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1275, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1277, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1278, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1281, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1282, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1283, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1284, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1287, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1292, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1295, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1300, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1304, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1305, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1306, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1307, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1310, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1314, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1315, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1318, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1319, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1323, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1338, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1339, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1343, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1345, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1346, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1347, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1349, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1353, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1357, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1360, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1361, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1370, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1371, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1373, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1376, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1376, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1376, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1377, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1385, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1387, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1390, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1390, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1390, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1391, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1394, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1394, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1394, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1395, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1404, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1406, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1407, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1409, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1425, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1425, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 1425, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1426, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1434, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1437, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1438, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1443, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1443, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1444, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1454, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1455, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1457, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1461, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1462, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1466, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1466, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1468, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1472, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1482, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1482, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1482, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1483, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1494, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1497, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1502, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1504, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1504, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1506, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1513, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1515, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1519, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1521, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1521, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1523, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1523, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1524, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1526, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1526, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1533, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1537, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1538, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1542, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1543, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1547, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1551, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1551, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1558, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1562, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1563, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1567, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1568, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1572, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1576, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1576, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1584, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1588, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1589, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1592, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1593, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1593, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1594, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1594, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1599, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1603, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1608, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1609, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1611, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1617, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1617, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1618, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1619, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1622, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1623, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1627, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1627, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1628, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1629, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1630, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1630, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1634, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1634, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1635, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1636, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1639, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1640, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1644, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1644, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1645, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1646, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1647, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1647, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1651, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1651, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1652, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1653, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1656, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1657, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1661, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1661, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1662, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1663, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1664, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1664, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1669, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1670, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1673, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1673, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1674, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1676, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1682, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1683, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1686, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1686, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1687, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1689, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1695, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1696, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1699, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1699, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1700, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1702, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1708, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1708, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1709, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1711, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1711, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1712, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 1713, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1713, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1717, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1721, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1722, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1724, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1724, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1729, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1730, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1731, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1733, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1734, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1736, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1737, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1740, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1740, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1740, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1741, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1741, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1741, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1742, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1742, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1743, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1743, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1743, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1744, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1744, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1744, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1744, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1744, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 1745, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1745, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1745, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1745, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1745, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 1746, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1746, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1747, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1748, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1748, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1749, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1754, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1756, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1756, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 1758, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1758, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1759, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 1777, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1778, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1779, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1779, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1790, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1790, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1791, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1805, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1805, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1806, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1807, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1808, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1809, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1811, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1814, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1814, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1816, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1816, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1819, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1820, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1821, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1821, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 1836, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1837, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1840, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1840, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1841, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1842, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1843, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1844, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1846, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1850, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1851, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1854, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1855, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1859, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1869, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1870, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1873, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1874, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1876, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1877, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1878, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1881, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1882, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1884, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1887, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1887, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1887, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1888, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1894, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1894, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1894, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1895, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1908, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1909, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1912, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1915, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1919, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1919, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1919, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1920, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1928, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1928, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1928, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1929, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1944, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1945, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1947, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1948, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1949, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1951, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1953, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1953, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1954, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1968, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1969, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1971, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1972, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1973, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1975, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1977, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1978, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1978, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1979, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1979, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1984, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1988, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1993, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1993, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1993, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1993, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1994, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2008, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 2009, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2011, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2012, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2013, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 2015, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2016, "col_offset": 20, "nodeName": "DATA_FORMAT_NWC", "type": "str"}, {"lineNumber": 2017, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2020, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2020, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2020, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2021, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2021, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2022, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2022, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2022, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2027, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2027, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2027, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2028, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2031, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2031, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2031, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2031, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2031, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2032, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2034, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2034, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2037, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2037, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2044, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2044, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2044, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2045, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2045, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2045, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2055, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 2056, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2058, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2059, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2060, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 2062, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2063, "col_offset": 20, "nodeName": "DATA_FORMAT_NCW", "type": "str"}, {"lineNumber": 2064, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2067, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2067, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2067, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2068, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2068, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2069, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2069, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2069, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2074, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2074, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2074, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2075, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2078, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2078, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2078, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2078, "col_offset": 48, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2078, "col_offset": 61, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2079, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2081, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2081, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2084, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2084, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2091, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2091, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2091, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2092, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2092, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2092, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2097, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2100, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2106, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2108, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2108, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2110, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 2120, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2124, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2128, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2129, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2129, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2133, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2134, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2135, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2136, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2136, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2137, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2137, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2139, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2146, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2150, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2154, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2155, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2155, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2159, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2160, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2161, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2162, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2162, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2163, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2163, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2165, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2172, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2177, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2181, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2182, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2182, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2186, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2187, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2188, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2189, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2189, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2190, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2190, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2192, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2200, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2204, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2207, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2208, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2208, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2209, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2209, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2214, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2215, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 2217, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2218, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2220, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2221, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2221, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2222, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 2222, "col_offset": 35, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2223, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 2223, "col_offset": 36, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2226, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2226, "col_offset": 15, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2228, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 2228, "col_offset": 43, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2229, "col_offset": 35, "nodeName": "run", "type": "Any"}, {"lineNumber": 2229, "col_offset": 44, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2231, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2232, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2235, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 2239, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2240, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2242, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2242, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2247, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2248, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2249, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2251, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2252, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2254, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2255, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2258, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2258, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2258, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2259, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2259, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2259, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2260, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2260, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2261, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2261, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2261, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2262, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2262, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2262, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2262, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2262, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 2263, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2263, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2263, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2263, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2263, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 2264, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2264, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2265, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2266, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2266, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2267, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2272, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2274, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2274, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 2276, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2276, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2278, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 2289, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2290, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2290, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2291, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2291, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2296, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2296, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2296, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2297, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2301, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2301, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2309, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2309, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2310, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2311, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2311, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2312, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2312, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2316, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2319, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2321, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2322, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2323, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2328, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2331, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2331, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2333, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2333, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2334, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 2344, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2345, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2346, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2347, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2348, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2349, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2350, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2372, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2372, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2372, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2374, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2376, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2377, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2378, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2380, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2383, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2383, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2384, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2384, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2386, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2386, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2394, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2395, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2397, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2398, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2399, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2400, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2402, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2405, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2408, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2409, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2409, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2417, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2418, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2421, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2421, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2421, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2422, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2431, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2432, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2433, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2434, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2435, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2436, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2441, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2441, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2441, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2442, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2453, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2457, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2458, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2461, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2461, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2462, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2472, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2473, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2475, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2479, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2482, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2482, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2484, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2488, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2496, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2496, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2496, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2497, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2509, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2511, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2515, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2516, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2518, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2518, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2520, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2520, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2521, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2523, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2523, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2528, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2531, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2535, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2537, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2537, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2539, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2546, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2550, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2551, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2554, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2555, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2563, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2567, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2567, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2574, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2578, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2579, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2582, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2583, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2589, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2593, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2593, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2600, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2604, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2605, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2608, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2609, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2613, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2617, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2618, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2625, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2626, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2627, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2629, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2630, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2630, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2631, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2631, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2636, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2639, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2645, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2646, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2647, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2657, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2658, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2659, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2660, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2663, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2664, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2665, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2689, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2689, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2689, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2691, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2692, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2693, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2694, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2695, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2696, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2700, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2700, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2700, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2701, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2701, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2702, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2703, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2703, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2704, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2706, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2714, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2715, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2717, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2718, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2720, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2721, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2722, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2725, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2729, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2730, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2730, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2739, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2744, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2745, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2750, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2750, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2750, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2751, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2762, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2764, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2765, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2767, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2768, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2773, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2778, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2778, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2778, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2779, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2791, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2795, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2796, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2800, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2800, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2801, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2812, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2813, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2814, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2815, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2819, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2823, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2823, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2825, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2830, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2833, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2841, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2841, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2841, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2842, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2853, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2856, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2861, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2863, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2863, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2865, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2872, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2874, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2879, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2880, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2882, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2882, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2884, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2884, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2885, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2886, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2888, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2888, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2896, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2900, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2902, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2906, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2907, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2915, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2920, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2920, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2928, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2932, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2933, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2937, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2938, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2944, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2949, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2949, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2957, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2961, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2962, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2966, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2967, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2971, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2976, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2976, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2987, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2988, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2989, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2991, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2992, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2996, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2996, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2996, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2997, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2997, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2998, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3002, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3002, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3005, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3010, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3011, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3021, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3023, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3025, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3026, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3026, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3027, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3027, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3032, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3036, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3042, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3043, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3044, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3045, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3046, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3056, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 3057, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 3058, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 3061, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 3062, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 3086, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3086, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3086, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3088, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3089, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3090, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3091, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3092, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3093, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3097, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3097, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3097, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3098, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3098, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3099, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3100, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3100, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3101, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3103, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3111, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3112, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3114, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3115, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 3117, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3118, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3119, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3122, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3126, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 3126, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 3127, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3127, "col_offset": 21, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3127, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 3127, "col_offset": 46, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3136, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3141, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3142, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3148, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3148, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3148, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3149, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3160, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3162, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3163, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3165, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3166, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3171, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3176, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3176, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3176, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3177, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3189, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3193, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3194, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3198, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3198, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3199, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3210, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 3211, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 3212, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3213, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3217, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3221, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3221, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3223, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3228, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3231, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3239, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3239, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3239, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3240, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3251, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3254, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3259, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3261, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3261, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3263, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3270, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 3272, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3277, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 3278, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3280, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3280, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3282, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3282, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3283, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3284, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3286, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3286, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 3294, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3298, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3300, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3304, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3305, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3309, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3313, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 3313, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 3314, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3314, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 3314, "col_offset": 34, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3322, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3326, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3327, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3331, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3332, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3336, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3340, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3340, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3341, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3341, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3341, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3349, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3353, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3354, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3358, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3359, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3363, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3367, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3367, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3368, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3368, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3368, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3379, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3380, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3381, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3383, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3384, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3388, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3388, "col_offset": 32, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3388, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3389, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3389, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3390, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3394, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3394, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3396, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3400, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3400, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3401, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3401, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3401, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3411, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3413, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3415, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3416, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3416, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3417, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3417, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3422, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3426, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3432, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3433, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3434, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3435, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3436, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3447, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 3448, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3449, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 3450, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3451, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 3452, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 3453, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3454, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3455, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3457, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3458, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3461, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3462, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3464, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3466, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3471, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3472, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3475, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3476, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3480, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3495, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3496, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3500, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3502, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3504, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3506, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3510, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3514, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3518, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3519, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3525, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3526, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3528, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3528, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3529, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3530, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3535, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3537, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3539, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3543, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3543, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3544, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3546, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3555, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3557, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3558, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3560, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3576, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3576, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3576, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3577, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3579, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3579, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3579, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3580, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3585, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3588, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3595, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3595, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3596, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3597, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3597, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3598, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3598, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 3606, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3607, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3608, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3613, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3616, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3616, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3618, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3622, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3631, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3631, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3632, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3638, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3641, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3646, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3648, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3648, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3650, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3655, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3660, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3660, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3662, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3663, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3665, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3674, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 3676, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3680, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 3681, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3683, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3683, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3685, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3685, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3686, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3688, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3688, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 3696, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3700, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3702, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3705, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3721, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3725, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3726, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3734, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3738, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3740, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3743, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3749, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3753, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3754, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3762, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3766, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3767, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3770, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3771, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3771, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3772, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3772, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3777, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3781, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3786, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3787, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3789, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3795, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3796, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3797, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3800, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3801, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3805, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3806, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3807, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3808, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3808, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3812, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3812, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3813, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3814, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3817, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3818, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3822, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3823, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3824, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3825, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3825, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3829, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3829, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3830, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3831, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3834, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3835, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3839, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3840, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3841, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3842, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3842, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3846, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3846, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3847, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3848, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3851, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3852, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3856, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3857, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3858, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3859, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3859, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3863, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3863, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3864, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3865, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3868, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3869, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3873, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3874, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3875, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3876, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3876, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3881, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3881, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3882, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3882, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3885, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3885, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3886, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3888, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3894, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3894, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3895, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3895, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3898, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3898, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3899, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3901, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3907, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3907, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3908, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3908, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3911, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3911, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3912, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3914, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3920, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3920, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3921, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3921, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3924, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3924, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3925, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3927, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3933, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3933, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3934, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3934, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3937, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3937, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3938, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3940, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3946, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3946, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 3947, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3949, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3949, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3950, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 3951, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3951, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3955, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 3959, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3960, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3962, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3962, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3967, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3968, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3969, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3971, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3972, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3974, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3975, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3978, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3978, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3978, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3979, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3979, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 3979, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3980, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3980, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3981, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3981, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3981, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 3982, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3982, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3982, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 3982, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3982, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 3983, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3983, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3983, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 3983, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3983, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 3984, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3984, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3985, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3986, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3986, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3987, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3992, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3994, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3994, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 3996, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3996, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 3997, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 4021, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4021, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4022, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4022, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4024, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4024, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4024, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4026, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4027, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4029, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4030, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4030, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4031, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4033, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4033, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4033, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4036, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4036, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 4037, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4056, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4056, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4056, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 4058, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4059, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4060, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4061, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4062, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4064, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4068, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4068, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4071, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4071, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4071, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 4073, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4081, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4081, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4082, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4082, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4084, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4088, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4090, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4095, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4095, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4097, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 4098, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4099, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4099, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4108, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4108, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4110, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4114, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4116, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4120, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4120, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4125, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4130, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4130, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4132, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 4133, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4135, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 4144, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 4145, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4146, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4147, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4148, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4150, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4152, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4153, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4153, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4153, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 4155, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4155, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4157, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4157, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4158, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4161, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4161, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4162, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4170, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 4171, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4172, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4173, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4174, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4175, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4177, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4178, "col_offset": 20, "nodeName": "DATA_FORMAT_NDHWC", "type": "str"}, {"lineNumber": 4179, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4182, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4182, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4182, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4183, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4183, "col_offset": 49, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4184, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4184, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4184, "col_offset": 46, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4189, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4189, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4189, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4190, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4193, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4193, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 4193, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4194, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 4195, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 4196, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 4197, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4198, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4200, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4200, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4200, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4207, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4207, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4207, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4208, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4208, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 4208, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 4216, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 4217, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4218, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4219, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4220, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4221, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4223, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4224, "col_offset": 20, "nodeName": "DATA_FORMAT_NCDHW", "type": "str"}, {"lineNumber": 4225, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4228, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4228, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4228, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4229, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4229, "col_offset": 30, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4229, "col_offset": 44, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4230, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4230, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4230, "col_offset": 46, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4235, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4235, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4235, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4236, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4239, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4239, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 4239, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4240, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4241, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 4242, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 4243, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 4244, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4246, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4246, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4246, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4253, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4253, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4253, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4254, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4254, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 4254, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 4257, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 283, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 284, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 284, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 289, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 302, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 310, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 310, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 312, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 323, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 326, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 337, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 346, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 358, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 358, "col_offset": 30, "nodeName": "getter", "type": "Any"}, {"lineNumber": 360, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 377, "col_offset": 51, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 377, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 377, "col_offset": 63, "nodeName": "g", "type": "Any"}, {"lineNumber": 377, "col_offset": 68, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 382, "col_offset": 28, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 383, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 383, "col_offset": 52, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 386, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 32, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 407, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 407, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 407, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 412, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 412, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 421, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 421, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 421, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 425, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 425, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 425, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 428, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 429, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 445, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 451, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 458, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 463, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 465, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 466, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 467, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 467, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 467, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 467, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 503, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 503, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 504, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 524, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 544, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 544, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 557, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 557, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 559, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 560, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 560, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 561, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 562, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 572, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 575, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 576, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 579, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 579, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 579, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 581, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 581, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 581, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 582, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 598, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 598, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 598, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 598, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 600, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 600, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 602, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 606, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 607, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 608, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 608, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 616, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 617, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 623, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 642, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 651, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 651, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 654, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 656, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 667, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 670, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 670, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 672, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 672, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 681, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 699, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 701, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 701, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 708, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 712, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 712, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 724, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 729, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 735, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 739, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 740, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 741, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 744, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 748, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 749, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 761, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 764, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 766, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 766, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 768, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 772, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 772, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 784, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 787, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 787, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 789, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 789, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 798, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 802, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 802, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 820, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 823, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 826, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 829, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 831, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 831, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 854, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 854, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 855, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 855, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 865, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 871, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 873, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 875, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 876, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 878, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 878, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 888, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 894, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 896, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 899, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 901, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 901, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 905, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 911, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 913, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 915, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 916, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 918, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 918, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 925, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 932, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 934, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 937, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 939, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 948, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 949, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 949, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 950, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 951, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 951, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 961, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 962, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 962, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 963, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 964, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 964, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 974, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 975, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 975, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 976, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 977, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 977, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 987, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 988, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 988, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 989, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 990, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 990, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 996, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 999, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1000, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1011, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1012, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1021, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 1021, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1045, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1046, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1065, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1068, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1069, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1070, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1071, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 1080, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 1082, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1082, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1090, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1091, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1095, "col_offset": 45, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 1097, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 1106, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1108, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1109, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1109, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1110, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 1110, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1118, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1119, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1120, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1121, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1126, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1128, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1128, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1129, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1129, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1134, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1135, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1140, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1151, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1151, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1166, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1166, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1168, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1172, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1183, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1183, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1191, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1193, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1205, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1205, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1206, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1206, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1206, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1219, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1219, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1221, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1225, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1236, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1236, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1244, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1246, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1258, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1258, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1259, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1259, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1259, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1279, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1279, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1279, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1284, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1293, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1293, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1293, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1297, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1297, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1297, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1300, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1301, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1307, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1316, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1316, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1320, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1320, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1320, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1323, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1324, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1340, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1347, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1353, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1357, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1358, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1360, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1361, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1362, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1362, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1362, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1376, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1376, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1377, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1390, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1390, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1391, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1394, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1394, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1395, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1412, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1412, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1414, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1425, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1425, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1426, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1427, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1437, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1440, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1441, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1444, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1444, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1444, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1446, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1446, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1446, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1447, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1447, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1461, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1464, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1464, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1464, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1464, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1466, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1466, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1468, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1472, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1473, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1474, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1474, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1477, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1482, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1483, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1486, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1487, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1494, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1504, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1504, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1513, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1521, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1521, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1523, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1524, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1526, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1537, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1540, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1540, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1542, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1542, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1547, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1551, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1551, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1562, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1565, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1565, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1567, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1567, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1572, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1576, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1576, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1588, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1592, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1593, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1594, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1599, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1603, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1604, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1605, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1608, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1611, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1612, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1613, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1617, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 1623, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1625, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1627, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1628, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1630, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1630, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1634, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 1640, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1642, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1644, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1645, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1647, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1647, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1651, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 1657, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1659, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1661, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1662, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1664, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1664, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1673, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1674, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1674, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1675, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1676, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1676, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1686, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1687, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1687, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1688, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1689, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1689, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1699, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1700, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1700, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1701, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1702, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1702, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1708, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1711, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1712, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1731, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1732, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1734, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1735, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1737, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1738, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1741, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1743, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1743, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1758, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1759, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1778, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1779, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1780, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1790, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1791, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1817, "col_offset": 15, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1817, "col_offset": 26, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1819, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1821, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1838, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1838, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1838, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1852, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1852, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1852, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1856, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1856, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1856, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1859, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1860, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1871, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1871, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1879, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1879, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1887, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1887, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1888, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1888, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1892, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1894, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1894, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1895, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1895, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1899, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1910, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1910, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1919, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1919, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1920, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1920, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1923, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1926, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1928, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1928, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1929, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1929, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1932, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1935, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1946, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1946, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1954, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1954, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1955, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1957, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1957, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1957, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1958, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1958, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1970, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1970, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1977, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1978, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1979, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1984, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1988, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1989, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1990, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1993, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1997, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1998, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2010, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 2010, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2016, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 2021, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2027, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2027, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2031, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2032, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2044, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2044, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2045, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2045, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2045, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2057, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 2057, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2063, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 2068, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2074, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2074, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2078, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2079, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2091, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2091, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2092, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2092, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2092, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2097, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2101, "col_offset": 21, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 2108, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2108, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2126, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2126, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2128, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2128, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2129, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2134, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2134, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2134, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2135, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2136, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2137, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2152, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2152, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2154, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2154, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2155, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2160, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2160, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2160, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2161, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2162, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2163, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2179, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2179, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2181, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2181, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2182, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2187, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2187, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2187, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2188, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2189, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2190, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2207, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2208, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2209, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2214, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2215, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2218, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2218, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2218, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2220, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2221, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2222, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2223, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2226, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2228, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2229, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2249, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2250, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2252, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2253, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2255, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2256, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2259, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2261, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2261, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2276, "col_offset": 9, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2277, "col_offset": 6, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2290, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2296, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2296, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2310, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2311, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2312, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2316, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2319, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2319, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2319, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2321, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2323, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2323, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2323, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2328, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2333, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2333, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2342, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2342, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 2342, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2378, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2383, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 2384, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2386, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2386, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2395, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2398, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 2399, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2400, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2405, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2408, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2408, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2409, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2409, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2409, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2409, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2421, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2421, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2422, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2423, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2441, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2441, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2442, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2445, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2457, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2459, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2459, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2462, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2462, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2462, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2464, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2464, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2464, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2465, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2465, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2473, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2480, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2480, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2480, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 2480, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2482, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2482, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2484, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2488, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2489, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2489, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 2490, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 2493, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2493, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2496, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2497, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2501, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2509, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2518, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2518, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2520, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2521, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2523, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2528, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2537, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2537, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2550, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2552, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2552, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2554, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2554, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2563, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2567, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2567, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2578, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2580, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2580, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2582, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2582, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2589, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2593, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2593, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2604, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2606, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2606, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2608, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2608, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2613, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2617, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2618, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2626, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2629, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2630, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2631, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2636, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2639, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2639, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2639, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2645, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2647, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2647, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2647, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2655, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2655, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2655, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2695, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2706, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2706, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2715, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2718, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2720, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2721, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2725, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2729, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2729, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2730, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2730, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2730, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2730, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2750, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2750, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2751, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2754, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2778, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2778, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2779, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2784, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2795, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2797, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2798, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2801, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2801, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2801, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2803, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2803, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2803, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2804, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2804, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2814, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2820, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2821, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2821, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2821, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2821, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2823, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2823, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2825, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2830, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2831, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2831, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2832, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2833, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2834, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2834, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2835, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2838, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2838, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2841, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2842, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2847, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2853, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2863, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2863, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2872, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2882, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2882, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2884, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2885, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2886, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2888, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2900, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2903, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2904, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2906, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2906, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2915, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2920, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2920, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2932, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2934, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2935, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2937, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2937, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2944, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2949, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2949, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2961, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2963, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2964, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2966, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2966, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2971, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2976, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2976, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2991, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2993, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2994, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2996, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2997, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2998, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2998, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3002, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3005, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3010, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3010, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3025, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3026, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3027, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3032, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3036, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3036, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3036, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3042, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3043, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3046, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3046, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3046, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3054, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 3054, "col_offset": 10, "nodeName": "SeparableConv1DTest", "type": "Type[SeparableConv1DTest]"}, {"lineNumber": 3054, "col_offset": 31, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3092, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3103, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3103, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3112, "col_offset": 39, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 3115, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 3117, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3118, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3122, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3126, "col_offset": 20, "nodeName": "session", "type": "Any"}, {"lineNumber": 3126, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3127, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3148, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3148, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3149, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3152, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3176, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3176, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3177, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3182, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3193, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3195, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3196, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3199, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3199, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3199, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3201, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3201, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3201, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 3202, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3202, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 3212, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3218, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3219, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3219, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3219, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 3219, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3221, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3221, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3223, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3228, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3229, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3229, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 3230, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3231, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3232, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3232, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 3233, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3236, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3236, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 3239, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3240, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3245, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3251, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3261, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3261, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3270, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 3280, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3280, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3282, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3283, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3284, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3286, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3298, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3301, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3302, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3304, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3304, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3309, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3313, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 3314, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3326, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3328, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3329, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3331, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3331, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3336, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3340, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3341, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3353, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3355, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3356, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3358, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3358, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3363, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3367, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3368, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3383, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3385, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3386, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3388, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 3389, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3390, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3390, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3394, "col_offset": 62, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3396, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3400, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3401, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3415, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3416, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3417, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3422, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3426, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3426, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3426, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3432, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3433, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3436, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3436, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3436, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3459, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3459, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3459, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3459, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3459, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3463, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3463, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3463, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3464, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3473, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3473, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3473, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3473, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3473, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3477, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3477, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3477, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3477, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3478, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3480, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3481, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3497, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3503, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3503, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3503, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3504, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3510, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3514, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 3515, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3518, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3519, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3520, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3520, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3520, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3520, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3520, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3528, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3528, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3529, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3530, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3543, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3543, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3544, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3546, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3563, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3563, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3565, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3576, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3576, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3577, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3578, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3579, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3579, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3580, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3581, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3588, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 3596, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3596, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3596, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3597, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3614, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3614, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 3614, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 3614, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3616, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3616, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3618, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3622, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3623, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3624, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 3624, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 3627, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3631, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3632, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3638, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3648, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3648, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3660, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3660, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3662, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3665, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3666, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3667, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3674, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 3683, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3683, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3685, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3686, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3688, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3700, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3703, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3703, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3705, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3705, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3706, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3721, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3725, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3726, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3738, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3741, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3741, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3743, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3743, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3744, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3749, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3753, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3754, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3766, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3770, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3771, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3772, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3777, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3781, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3782, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3783, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3786, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 3789, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3790, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3791, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3795, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3795, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3801, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3803, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3805, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3805, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3806, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3808, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3808, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3812, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 3818, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3820, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3822, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3822, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3823, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3825, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3825, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3829, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3835, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3837, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3839, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3839, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3840, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3842, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3842, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3846, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3852, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3854, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3856, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3856, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3857, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3859, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3859, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3863, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3869, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3871, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3873, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3873, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3874, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3876, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3876, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3881, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 3882, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3885, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3886, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3886, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3887, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3888, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3888, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3894, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3895, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3898, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3899, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3899, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3900, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3901, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3901, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3907, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3908, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3911, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3912, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3912, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3913, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3914, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3914, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3920, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3921, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3924, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3925, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3925, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3926, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3927, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3927, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3933, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 3934, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3937, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3938, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3938, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3939, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3940, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3940, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3946, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3949, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3950, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3969, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3970, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 3972, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3973, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 3975, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3976, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 3979, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3981, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3981, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 3996, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3997, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4005, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 4005, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 4005, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4036, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4037, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 4056, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4059, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 4060, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 4061, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 4062, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 4071, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 4073, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4073, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4081, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4082, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4088, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 4097, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4099, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4100, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4100, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 4101, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 4101, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 4108, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4114, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 4130, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4130, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4132, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4135, "col_offset": 6, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4136, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 4137, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4145, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4146, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 4147, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 4148, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 4153, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 4155, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4155, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4156, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 4156, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 4161, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 4162, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4171, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 4172, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4173, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4174, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 4175, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 4178, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 4183, "col_offset": 28, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4189, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4189, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4193, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 4193, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4194, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4195, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4196, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4197, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4198, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 4207, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4207, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4208, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4208, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4208, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4217, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 4218, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4219, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4220, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 4221, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 4224, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 4229, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 4235, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4235, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4239, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 4239, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4240, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4241, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4242, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4243, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4244, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 4253, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4253, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4254, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4254, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4254, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 260, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 315, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 335, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 358, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 358, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 383, "col_offset": 52, "nodeName": "out2", "type": "Any"}, {"lineNumber": 385, "col_offset": 39, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 459, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 463, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 544, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 544, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 548, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 579, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 581, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 607, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 608, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 608, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 613, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 642, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 656, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 672, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 672, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 682, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 685, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 685, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 701, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 701, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 712, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 712, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 736, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 740, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 741, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 744, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 745, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 748, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 749, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 766, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 766, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 769, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 772, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 772, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 789, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 789, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 799, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 802, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 802, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 820, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 823, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 826, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 834, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 835, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 836, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 837, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 855, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 855, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 860, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 861, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 877, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 878, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 900, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 901, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 901, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 917, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 918, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 938, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 939, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 939, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 949, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 949, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 950, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 952, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 952, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 962, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 962, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 963, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 965, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 965, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 975, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 975, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 976, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 978, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 978, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 988, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 988, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 989, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 991, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 991, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1000, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1000, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1001, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1001, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1012, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1013, "col_offset": 29, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1077, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1078, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1078, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1080, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1083, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1095, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1104, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1107, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1109, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1109, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 1110, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1129, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 1129, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1177, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1191, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1230, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1244, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1292, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1302, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1315, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1319, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1325, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1354, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1358, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1412, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1412, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1414, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1416, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1444, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1446, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1469, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1473, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1474, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1474, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1477, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1478, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1479, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1486, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1513, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1526, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1542, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1542, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1548, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1551, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1551, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1567, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1567, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1573, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1576, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1576, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1600, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1604, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1605, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1608, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1609, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1609, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1612, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1613, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1629, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1630, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1646, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1647, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1663, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1664, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1674, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1674, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1675, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1677, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1677, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1687, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1687, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1688, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1690, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1690, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1700, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1700, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1701, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1703, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1703, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1712, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1712, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1713, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1713, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1732, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1735, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1738, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1746, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1747, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1748, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1749, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1759, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1759, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1778, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1778, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1780, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1814, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1816, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1820, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1821, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 1851, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1855, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1861, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1889, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1889, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1896, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1896, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1921, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1921, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1930, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1930, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1954, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1954, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1954, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1955, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1957, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1985, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1989, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1990, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1993, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1994, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1994, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1997, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1998, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2021, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2031, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2068, "col_offset": 28, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2078, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2101, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2128, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2128, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2134, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2134, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2134, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2154, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2154, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2160, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2160, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2160, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2181, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2181, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2187, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2187, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2187, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2218, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2218, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2218, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2250, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2253, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2256, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2264, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2265, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2266, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2267, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2277, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2278, "col_offset": 35, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2317, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2319, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2319, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2321, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2322, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2322, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2323, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2323, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2384, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2386, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 2395, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2406, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2408, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2408, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2409, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2462, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2464, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2485, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2489, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2489, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2490, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2493, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2493, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2509, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2523, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2554, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2554, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2564, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2567, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2567, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2582, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2582, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2590, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2593, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2593, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2608, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2608, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2614, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2618, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2618, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2637, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2639, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2639, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2645, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2646, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2646, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2647, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2647, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2700, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2701, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2703, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2706, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2715, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2726, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2729, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2729, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2730, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2801, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2803, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2826, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2831, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2831, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2832, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2834, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2834, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2835, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2838, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2838, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2872, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2888, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2906, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2906, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2916, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2920, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2920, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2937, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2937, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2945, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2949, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2949, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2966, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2966, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2972, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2976, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2976, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3002, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3006, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3010, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3010, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3010, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3033, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3036, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3036, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3042, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3043, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3044, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3044, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3045, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3045, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3046, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3046, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3097, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3098, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3100, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3103, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3112, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 3123, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3126, "col_offset": 49, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3126, "col_offset": 58, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3199, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 3201, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3224, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3229, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3229, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 3230, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3232, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3232, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 3233, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3236, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3236, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3270, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 3286, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3304, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 3304, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3310, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3331, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3331, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3337, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3358, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3358, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3364, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3394, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3397, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3423, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3426, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3426, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3432, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3433, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3434, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3434, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3435, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3435, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3436, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3436, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3472, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3476, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3482, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3511, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3515, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3563, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3563, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 3565, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3567, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 3591, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3592, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3596, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 3619, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3623, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 3624, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3624, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3627, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3628, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3629, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 3663, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3666, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3667, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3667, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3674, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 3688, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3705, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3705, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3706, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3722, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3726, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3726, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3743, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3743, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3744, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3750, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3754, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3754, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3778, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3782, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3783, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3786, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3787, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3787, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 3790, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3791, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3795, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 3805, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 3807, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3808, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3822, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3824, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3825, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3839, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3841, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3842, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3856, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3858, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3859, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3873, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3875, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3876, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3886, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3886, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3887, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3889, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3889, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3899, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3899, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3900, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3902, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3902, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3912, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3912, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3913, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3915, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3915, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3925, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3925, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3926, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3928, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3928, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3938, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3938, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3939, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3941, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3941, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3950, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3950, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3951, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3951, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3970, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 3973, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 3976, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 3984, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3985, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3986, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3987, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3997, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3997, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 4068, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4069, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4069, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4071, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4074, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4095, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4098, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 4100, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 4100, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 4101, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4120, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4133, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 4136, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 4137, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 4137, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4156, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 4156, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4183, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 4193, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 4239, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 385, "col_offset": 39, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 429, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 459, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 460, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 463, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 463, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 463, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 463, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 463, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 603, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 604, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 607, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 608, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 618, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 642, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 672, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 682, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 683, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 685, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 701, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 710, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 712, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 736, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 737, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 745, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 766, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 769, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 770, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 772, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 789, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 799, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 800, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 802, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 820, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 823, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 826, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 834, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 835, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 836, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 837, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 860, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 861, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 877, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 877, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 900, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 900, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 901, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 917, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 917, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 938, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 938, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 939, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 950, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 950, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 951, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 951, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 952, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 963, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 963, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 964, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 964, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 965, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 976, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 976, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 977, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 977, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 978, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 989, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 989, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 990, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 990, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 991, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1001, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1077, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1078, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 1078, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1080, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 1082, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1083, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1104, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1107, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1109, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1177, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1230, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1292, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1301, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1315, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1316, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1316, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1319, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1324, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1354, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1355, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1358, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1358, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1358, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1358, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1469, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1470, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1473, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1474, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1478, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1489, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1513, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1542, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1548, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1549, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1551, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1567, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1573, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1574, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1576, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1600, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1601, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1609, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1629, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1629, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1646, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1646, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1663, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1663, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1675, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1675, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1676, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1676, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1677, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1688, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1688, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1689, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1689, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1690, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1701, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1701, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1702, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1702, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1703, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1713, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1732, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1735, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1738, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1746, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1747, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1748, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1749, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1778, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1778, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1816, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1820, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1821, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1851, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1855, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1860, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1985, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1986, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1994, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2128, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2154, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2181, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2250, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2253, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2256, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2264, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2265, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2266, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2267, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2317, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2318, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2322, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2386, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2406, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2407, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2408, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2408, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2485, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2486, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2489, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2490, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 2493, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2502, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2509, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2554, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2564, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2565, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2567, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2582, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2590, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2591, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2593, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2608, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2614, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2615, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2618, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2637, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2638, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2646, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2700, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2701, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2703, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2706, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2726, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2727, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2729, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2729, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2826, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2827, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2831, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2832, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2834, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2835, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2838, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2848, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2872, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2906, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2916, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2917, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2920, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2937, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2945, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2946, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2949, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2966, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2972, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2973, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2976, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3002, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 3006, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3007, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3010, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3033, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3034, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3044, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3045, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3097, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 3098, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3100, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3103, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3123, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3124, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3126, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 3126, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 3224, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3225, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3229, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3230, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 3232, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3233, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 3236, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 3246, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3270, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3304, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3310, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3311, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3331, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 3337, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3338, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3358, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 3364, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3365, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3394, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 3397, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3398, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3423, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3424, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3434, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3435, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3472, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 3476, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 3481, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3511, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3512, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3515, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 3515, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3515, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3515, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3515, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3516, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3591, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3592, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3619, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3620, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3623, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3624, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 3628, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 3633, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3663, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3663, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3663, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 3666, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3667, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3674, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3705, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3722, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3723, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3726, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3743, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3750, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3751, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3754, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3778, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3779, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3787, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3807, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3807, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3824, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3824, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3841, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3841, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3858, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3858, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3875, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3875, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3887, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3887, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3888, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3888, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3889, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3900, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3900, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3901, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3901, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3902, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3913, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3913, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3914, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3914, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3915, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3926, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3926, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3927, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3927, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3928, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3939, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3939, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3940, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3940, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3941, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3951, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3970, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3973, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3976, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3984, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3985, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 3986, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3987, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 4068, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4069, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4069, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 4069, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4071, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 4073, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4074, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 4095, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4098, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4100, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4120, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4133, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4133, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 4133, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 4136, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4137, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 107, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 429, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 460, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 604, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 604, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 618, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 683, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 683, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 683, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 710, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 710, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 710, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 737, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 737, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 737, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 745, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 770, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 770, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 770, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 800, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 800, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 800, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 877, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 900, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 917, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 938, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 951, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 964, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 977, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 990, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1080, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1082, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1301, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1319, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1324, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1355, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1355, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1355, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1470, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1470, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1470, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1478, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1489, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1549, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1549, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1549, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1574, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1574, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1574, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1601, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1601, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1601, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1609, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1629, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1646, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1663, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1676, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1689, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1702, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1780, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1821, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1855, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1860, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1986, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1986, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1986, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1994, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2318, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2318, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2318, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2322, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2407, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2407, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2407, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2486, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2486, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2486, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2493, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2502, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2565, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2565, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2565, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2591, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2591, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2591, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2615, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2615, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2615, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2638, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2638, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2638, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2646, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2701, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2703, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2706, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2727, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2727, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2727, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2728, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2728, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2827, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2827, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2827, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2828, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2828, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2838, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2848, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2917, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2917, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2917, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2918, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2918, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2946, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2946, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2946, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2947, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2947, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2973, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2973, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2973, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2974, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2974, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3007, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3007, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3007, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3008, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3008, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3034, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3034, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3034, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3035, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3035, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3044, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3045, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3098, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3100, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3103, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 3124, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3124, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3124, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3125, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3125, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3225, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3225, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3225, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3226, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3226, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3236, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3246, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3311, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3311, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3311, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3312, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3312, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3338, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3338, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3338, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3339, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3339, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3365, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3365, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3365, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3366, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3366, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3398, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3398, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3398, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3399, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3399, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3424, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3424, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3424, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3425, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3425, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3434, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3435, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3476, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3481, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3512, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3512, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3512, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3620, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3620, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3620, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3628, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3633, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3663, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3663, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3723, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3723, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3723, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3751, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3751, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3751, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3779, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3779, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3779, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3787, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3807, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3824, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3841, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3858, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3875, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3888, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3901, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3914, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3927, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3940, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4069, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 4071, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4073, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 4133, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4133, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 429, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 460, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 604, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 604, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 683, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 683, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 683, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 710, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 710, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 710, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 737, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 737, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 737, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 770, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 770, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 770, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 800, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 800, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 800, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1082, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1301, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1324, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1355, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1355, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1355, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1470, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1470, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1470, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1549, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1549, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1549, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1574, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1574, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1574, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1601, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1601, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1601, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1780, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1780, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1780, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1821, "col_offset": 58, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1860, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1986, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1986, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1986, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2318, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2318, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2318, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2407, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2407, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2407, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2486, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2486, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2486, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2565, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2565, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2565, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2591, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2591, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2591, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2615, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2615, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2615, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2638, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2638, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2638, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2706, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2727, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2727, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2727, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2728, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2728, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2827, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2827, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2827, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2828, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2828, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2917, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2917, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2917, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2918, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2918, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2946, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2946, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2946, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2947, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2947, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2973, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2973, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2973, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2974, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2974, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3007, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3007, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3007, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3008, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3008, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3034, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3034, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3034, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3035, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3035, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3103, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3124, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3124, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3124, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3125, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3125, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3225, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3225, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3225, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3226, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3226, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3311, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3311, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3311, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3312, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3312, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3338, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3338, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3338, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3339, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3339, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3365, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3365, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3365, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3366, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3366, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3398, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3398, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3398, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3399, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3399, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3424, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3424, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3424, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3425, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3425, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3481, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3512, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3512, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3512, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3620, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3620, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3620, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3723, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3723, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3723, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3751, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3751, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3751, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3779, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3779, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3779, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4073, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 1780, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1780, "col_offset": 46, "nodeName": "i", "type": "int"}]