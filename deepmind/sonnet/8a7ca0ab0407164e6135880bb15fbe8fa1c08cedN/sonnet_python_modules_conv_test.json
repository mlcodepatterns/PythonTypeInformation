[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 370, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 370, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 997, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 997, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1243, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1243, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1743, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1743, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2094, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2094, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2262, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2262, "col_offset": 48, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2318, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2318, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2631, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2631, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3030, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3030, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3420, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3420, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3981, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3981, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 195, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 370, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 370, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 997, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 997, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1243, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1243, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1743, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1743, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1746, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1747, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1748, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1749, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1750, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1751, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1752, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1753, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1754, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1755, "col_offset": 2, "nodeName": "use_output_shape", "type": "List[bool]"}, {"lineNumber": 1763, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1764, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1765, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1766, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1767, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 2094, "col_offset": 23, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2094, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 2262, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2262, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 2318, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2318, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2631, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2631, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3030, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3030, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3420, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3420, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 3981, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3981, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 4237, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 261, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 305, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 317, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 370, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 408, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 421, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 422, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 636, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 855, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 895, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 929, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 938, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 939, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 942, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 952, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 955, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 964, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 965, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 968, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 978, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 988, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 989, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 997, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1005, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1007, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1008, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1011, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 1012, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 1012, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1017, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1046, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1056, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1062, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1071, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1072, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1083, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1107, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1108, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1112, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1113, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1114, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1121, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1122, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1143, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1154, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1163, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1168, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1169, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1171, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1185, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1196, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1207, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1216, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1221, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1222, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1223, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1238, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1243, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1252, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1253, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1254, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1256, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1280, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1303, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1314, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1315, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1316, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1316, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1317, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1332, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1356, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1370, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1392, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1405, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1424, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1435, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1436, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1462, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1475, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1476, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1504, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1506, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1523, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1524, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1548, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1549, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1573, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1574, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1575, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1577, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1578, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1598, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1599, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1607, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1608, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1615, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1616, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1624, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1625, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1632, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1633, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1641, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1642, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1650, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1651, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1654, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1663, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1664, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1667, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1676, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1677, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1680, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1689, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1690, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1702, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1703, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1705, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1706, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1707, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1708, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1710, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1735, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1736, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1743, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1752, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1752, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1752, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1752, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1752, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1757, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1757, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1757, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1757, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1763, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1764, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1764, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1765, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1765, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1766, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1767, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1767, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1782, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1795, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1796, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1812, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1829, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1839, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1867, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1898, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1934, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1958, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1959, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1960, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1962, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1963, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1998, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2007, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2024, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2045, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2054, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2071, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2078, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2079, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2094, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2109, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2110, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2111, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2135, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2136, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2137, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2162, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2163, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2164, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2188, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2189, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2190, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2192, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2193, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2195, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 2196, "col_offset": 4, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2220, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2221, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2223, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2224, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2225, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2226, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2228, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2253, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2254, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2262, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2270, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2271, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2272, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2276, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2290, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2291, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2292, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2293, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2294, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2295, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2309, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2310, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2312, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2318, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2325, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2325, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2326, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2326, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2327, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2327, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2328, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2328, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2329, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2329, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2330, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2330, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2331, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2331, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2332, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2332, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2334, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2335, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2336, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2346, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2346, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2347, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2347, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2348, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2348, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2349, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2349, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2350, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2350, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2351, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2353, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2362, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2366, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2384, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2400, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2419, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2442, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2453, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2454, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2476, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2501, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2503, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2509, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2510, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2535, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2563, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2589, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2590, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2610, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2611, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2612, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2614, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2615, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2631, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2638, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2638, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2639, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2639, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2640, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2640, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2641, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2641, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2642, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2644, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2644, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2645, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2645, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2646, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2646, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2647, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2649, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2649, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2650, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2654, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2662, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2662, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2663, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2663, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2664, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2664, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2665, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2665, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2666, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2666, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2667, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2667, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2668, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2668, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2670, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2679, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2686, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2704, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2729, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2756, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2781, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2793, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2794, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2795, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2821, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2834, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2835, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2865, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2868, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2887, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2918, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2947, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2948, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2965, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2966, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2967, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2977, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2978, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2979, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3006, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3007, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3008, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3010, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3011, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3030, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3037, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3037, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3038, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3038, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3039, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3039, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3040, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 3042, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3042, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3043, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3043, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3044, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 3046, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3046, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3047, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 3051, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 3059, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3059, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 3060, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3060, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3061, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3061, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3062, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3062, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3063, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3063, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3064, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3064, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3065, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3065, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3067, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3076, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3083, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3101, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3126, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3154, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3179, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3191, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3192, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3193, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 3219, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3232, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3233, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3263, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3266, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3285, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3286, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3312, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3313, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3339, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3340, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3357, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3358, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3359, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3369, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3370, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3371, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3396, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3397, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3398, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3400, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3401, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3420, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3428, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3429, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3430, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3431, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3432, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3433, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3434, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3435, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3436, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3450, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3460, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3471, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3472, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3472, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3472, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3473, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3473, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3474, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3474, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3474, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3489, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3543, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 3556, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3576, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3587, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 3588, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 3619, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3620, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3666, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3668, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3686, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3724, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3725, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3751, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3752, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3753, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3755, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3756, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3776, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3777, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3785, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3786, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3793, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3794, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3802, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3803, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3810, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3811, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3819, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3820, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3827, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3828, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3836, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3837, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3844, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3845, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3853, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3854, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3862, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3863, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3866, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3875, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3876, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3879, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3888, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3889, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3892, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3901, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3902, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3905, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3914, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3915, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3918, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3927, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3928, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3940, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3941, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3943, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3944, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3945, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 3946, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 3948, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 3973, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3974, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 3981, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3988, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3989, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3990, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3991, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3992, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3993, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3994, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3995, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3996, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3997, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 3998, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 3999, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 4000, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 4000, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4005, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 4014, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 4037, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4047, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4053, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4062, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4063, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 4073, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4074, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 4089, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4099, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4133, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4134, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4135, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4139, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4140, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4141, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 4160, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4169, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4187, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4206, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4215, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4233, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4238, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 231, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 232, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 233, "col_offset": 7, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "SEPARABLE_CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 234, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 239, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 252, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 252, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 266, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 269, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 287, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 297, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 299, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 305, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 317, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 331, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 359, "col_offset": 45, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 362, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 363, "col_offset": 6, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 364, "col_offset": 6, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 365, "col_offset": 6, "nodeName": "out3", "type": "Any"}, {"lineNumber": 366, "col_offset": 6, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 381, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 398, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 424, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 437, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 470, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 559, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 560, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 561, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 591, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 605, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 605, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 616, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 616, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 625, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 634, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 634, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 635, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 653, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 654, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 659, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 660, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 682, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 683, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 686, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 687, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 710, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 711, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 711, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 713, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 713, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 714, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 714, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 725, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 737, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 747, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 760, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 770, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 771, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 776, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 777, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 786, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 790, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 791, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 793, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 793, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 794, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 794, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 795, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 795, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 796, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 796, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 798, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 799, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 802, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 805, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 809, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 809, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 810, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 811, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 825, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 831, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 832, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 832, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 838, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 839, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 839, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 840, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 840, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 847, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 855, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 855, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 867, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 870, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 878, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 878, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 879, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 887, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 888, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 895, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 895, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 906, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 908, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 909, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 916, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 916, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 917, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 925, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 929, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 938, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 939, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 942, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 951, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 952, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 955, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 964, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 965, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 968, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 977, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 980, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 990, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 990, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 990, "col_offset": 34, "nodeName": "SUPPORTED_2D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1005, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1007, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1008, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1011, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1012, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1012, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 1014, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1014, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1014, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1014, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1015, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1017, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1017, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1017, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1019, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1019, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1021, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1021, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1022, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1022, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1046, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1046, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1048, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1056, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1056, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1058, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1061, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1071, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1072, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1074, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1082, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1082, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1083, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1083, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1087, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1098, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1106, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1107, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1112, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1113, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1113, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1114, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1114, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1115, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1122, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1122, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1132, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1134, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1134, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1143, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1145, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1154, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1157, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1157, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1157, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1158, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1158, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1159, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1159, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1159, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1165, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1165, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1172, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1175, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1175, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1176, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1176, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1179, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1179, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1179, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1196, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1198, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1207, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1210, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1210, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1210, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1211, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1211, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1212, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1212, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1212, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1218, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1218, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1225, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1228, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1228, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1229, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1229, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1229, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1232, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1232, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1251, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1252, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1253, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1254, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1256, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1258, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1259, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1262, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1270, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1270, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1272, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1276, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1285, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1293, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1293, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1295, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1299, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1319, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1320, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1324, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1332, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1332, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1351, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1353, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1366, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1385, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1388, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1415, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1424, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1424, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1425, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1426, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1435, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1436, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1438, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1447, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1457, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1476, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1476, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1478, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1485, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1487, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1487, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1487, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1493, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1496, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1502, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1504, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1504, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1505, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1505, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1514, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1523, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1524, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1525, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1526, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1539, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1548, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1549, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1550, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1551, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1565, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1573, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1574, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1574, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1575, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1575, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1577, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1577, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1578, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1578, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1589, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1598, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1599, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1600, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1607, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1607, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1608, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1615, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1616, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1617, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1624, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1624, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1625, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1632, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1633, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1634, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1641, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1641, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1642, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1650, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1651, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1654, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1663, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1664, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1667, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1676, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1677, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1680, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1689, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1690, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1692, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1694, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1698, "col_offset": 10, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1702, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1703, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1705, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1705, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1706, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1706, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1707, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1707, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1708, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1708, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1710, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 1711, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1712, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1714, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1715, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1717, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1718, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1721, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1721, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1721, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1722, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1722, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1723, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1723, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1724, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1725, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1726, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1727, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1729, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1735, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1737, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 1737, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1737, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 1752, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1752, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1752, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1752, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1752, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1758, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1758, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1763, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1763, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1763, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1763, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1766, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1766, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1766, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1766, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1783, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1783, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1785, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1786, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1795, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1795, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1796, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1796, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 1797, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1800, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1813, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1813, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1815, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1817, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1818, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1821, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1829, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1829, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1831, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1835, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1850, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1858, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1889, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1925, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1934, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1934, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1937, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1949, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1958, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1958, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1958, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1958, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1959, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1959, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1960, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1960, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1962, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1962, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1963, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1963, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1974, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1989, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1998, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 2001, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2001, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2001, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2002, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2002, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2003, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2003, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2003, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2009, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2012, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2014, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2014, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2015, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2015, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2015, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2018, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2018, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2018, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2036, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2045, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 2048, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2048, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2048, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2049, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2049, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2050, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2050, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2050, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2056, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2059, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2061, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2061, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2062, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2062, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2062, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2065, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2065, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2065, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2079, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2079, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2081, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2089, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2091, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2091, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2091, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2101, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2109, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2110, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2112, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2114, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2116, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2118, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2120, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2120, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2120, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2127, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2135, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2136, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2138, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2140, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2142, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2144, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2146, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2146, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2146, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2153, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2162, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2163, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2165, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2167, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2169, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2171, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2173, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2173, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2173, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2181, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2188, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2189, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2189, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2190, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2190, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2192, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2192, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2193, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2193, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2195, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2196, "col_offset": 23, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2196, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 2198, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2201, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2203, "col_offset": 6, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2204, "col_offset": 6, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2209, "col_offset": 6, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2210, "col_offset": 6, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2212, "col_offset": 24, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2212, "col_offset": 43, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2213, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2213, "col_offset": 24, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2213, "col_offset": 51, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2216, "col_offset": 10, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2220, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2221, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2223, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2223, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2224, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2224, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2225, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2225, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2226, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2226, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2228, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 2229, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2232, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2233, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2235, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2236, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2239, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2239, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2239, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2240, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2241, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2241, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2242, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2243, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2244, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2245, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2247, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2253, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2255, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 2255, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2255, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 2270, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2271, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2271, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2272, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2278, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 2278, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2281, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2281, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2282, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2282, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2282, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2290, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2291, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2292, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2292, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2293, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2293, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2294, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2294, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2295, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2295, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2302, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2310, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2310, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2312, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2314, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2315, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2315, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2315, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2323, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2325, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2325, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2326, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2326, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2327, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2327, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2328, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2328, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2329, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2329, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2330, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2330, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2331, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2331, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2332, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2332, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2332, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2334, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2334, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2334, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2334, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2334, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2335, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2335, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2335, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2336, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2336, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2336, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2336, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2336, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2337, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2337, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2337, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2338, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2346, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2347, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2348, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2349, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2350, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2351, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2353, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2353, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2355, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2362, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2362, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2364, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2364, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2365, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2365, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2375, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2376, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2378, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2384, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2384, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2389, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2398, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2399, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2412, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2414, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2416, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2434, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2442, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2442, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2443, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2444, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2453, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2454, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2456, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2463, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2473, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2489, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2490, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2492, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2499, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2501, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2501, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2502, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2502, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2510, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2510, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2512, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2518, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2520, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2520, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2520, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2527, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2535, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2536, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2541, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2542, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2555, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2563, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2564, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2567, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2568, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2581, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2589, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2590, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2591, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2592, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2606, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2610, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2611, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2611, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2612, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2612, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2614, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2614, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2615, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2615, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2626, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2636, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2638, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2638, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2639, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2639, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2640, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2640, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2641, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2641, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2642, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2642, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2642, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2642, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2642, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2644, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2644, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2645, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2645, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2646, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2646, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2647, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2647, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2647, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2649, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2649, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2649, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2650, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2650, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2650, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2650, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2650, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2652, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2652, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2652, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2652, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2654, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2654, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2654, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2662, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2663, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2664, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2665, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2666, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2667, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2668, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2670, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2670, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2672, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2679, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2679, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2681, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2682, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2684, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2695, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2696, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2698, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2704, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2704, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2710, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2720, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2726, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2743, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2746, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2749, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2772, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2781, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2781, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2782, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2783, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2793, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2794, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2795, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2796, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2804, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2818, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2835, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2835, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2837, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2844, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2846, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2846, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2846, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2852, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2853, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2855, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2863, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2865, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2865, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2866, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2866, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2867, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2867, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2877, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2887, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2888, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2893, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2894, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2909, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2918, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2919, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2922, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2923, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2938, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2947, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2948, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2949, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2950, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2967, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2967, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2968, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2977, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2978, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2980, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2981, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2983, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3002, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 3006, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3007, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3007, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3008, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3008, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3010, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3010, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3011, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3011, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3023, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3024, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3035, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 3037, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3037, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3038, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3038, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3039, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3039, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3040, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3040, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3040, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3040, "col_offset": 46, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3042, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3042, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3043, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3043, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3044, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3044, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3046, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3046, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3046, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3047, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3047, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3047, "col_offset": 37, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3047, "col_offset": 47, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3049, "col_offset": 11, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3049, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3049, "col_offset": 40, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3051, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3051, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3051, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3059, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3060, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 3061, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3062, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3063, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 3064, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 3065, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 3067, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3067, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3069, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3076, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3076, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3078, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3079, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3081, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3092, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3093, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3095, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3101, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3101, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3103, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3107, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3108, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3108, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3117, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3123, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3141, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3144, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3147, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3170, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3179, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 3179, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 3180, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 3181, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 3191, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3192, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3193, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3194, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3202, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3216, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3233, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 3233, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3235, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3242, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3244, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 3244, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3244, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3250, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 3251, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3253, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3261, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3263, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3263, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 3264, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3264, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3265, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3265, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3275, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3285, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3286, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3287, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3288, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3290, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3294, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 3303, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3312, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3313, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3314, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3315, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3317, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3321, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3330, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3339, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3340, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3341, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3342, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3344, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3348, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3359, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3359, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3360, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3369, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3370, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3372, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3373, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3375, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3377, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3381, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3392, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3396, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3397, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3397, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3398, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3398, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3400, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3400, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3401, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3401, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3413, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3414, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3428, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3429, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3430, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3431, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3432, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3433, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3434, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3435, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3436, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3438, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3439, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3442, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3450, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3450, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3452, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3456, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3476, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3477, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3481, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3489, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3489, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3506, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3507, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3516, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3518, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3520, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3536, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3539, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3566, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3576, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 3576, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 3577, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 3587, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3588, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3589, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3597, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3607, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3620, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 3620, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3622, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3629, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3631, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 3631, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3631, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3636, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3641, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3654, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 3655, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3657, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3664, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3666, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3666, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 3667, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3667, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3677, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3686, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3699, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3700, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3715, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3724, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3725, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3727, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3728, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3743, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3751, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3752, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3752, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3753, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3753, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3755, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3755, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3756, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3756, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3767, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3777, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3778, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3785, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3785, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3793, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3794, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3795, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3802, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3802, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3810, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3811, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3812, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3819, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3819, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3827, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3828, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3829, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3836, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3836, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3844, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3845, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3846, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3853, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3853, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3862, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3863, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3866, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3875, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3876, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3879, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3888, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3889, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3892, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3901, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3902, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3905, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3914, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3915, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3918, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3927, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3928, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3930, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3932, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3936, "col_offset": 10, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3940, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 3941, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 3943, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3943, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3944, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3944, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3945, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3945, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3946, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3946, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3948, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 3949, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3950, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 3952, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3953, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 3955, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3956, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 3959, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3959, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3959, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3960, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3960, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 3961, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3961, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 3962, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3963, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3964, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3965, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3967, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3973, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3975, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 3975, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 3975, "col_offset": 34, "nodeName": "SUPPORTED_3D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 3986, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 3988, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3989, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3990, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3991, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3992, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3993, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3994, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3995, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3996, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3997, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3998, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3999, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4000, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4000, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 4002, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4002, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 4002, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4002, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4003, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4003, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4005, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4005, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4005, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4005, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4007, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4007, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4007, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4008, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4010, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4010, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4010, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4011, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4011, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 4012, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4014, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4014, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 4014, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 4014, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 4037, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4037, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4039, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4047, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4047, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4049, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4052, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4062, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4063, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4065, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4073, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4073, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4074, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4074, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 4076, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4078, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4089, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4091, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4099, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4099, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4101, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4106, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4111, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4125, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4133, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4134, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4134, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4139, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4140, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4140, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4141, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4141, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4142, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4151, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4160, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4163, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4163, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4163, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4164, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4164, "col_offset": 49, "nodeName": "stride", "type": "Any"}, {"lineNumber": 4165, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4165, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4165, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4171, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 4171, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4174, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4180, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4180, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 4181, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4181, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4181, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4197, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4206, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4209, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4209, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4209, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4210, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4210, "col_offset": 44, "nodeName": "stride", "type": "Any"}, {"lineNumber": 4211, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4211, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4211, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4217, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 4217, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4220, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4226, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4226, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 4227, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4227, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4227, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4238, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose], Type[sonnet.python.modules.conv.Conv3DTranspose]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 230, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 231, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 232, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 233, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 234, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 239, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 243, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 243, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 245, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 271, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 274, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 287, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 288, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 288, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 290, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 295, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 295, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 297, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 298, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 300, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 311, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 311, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 318, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 322, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 322, "col_offset": 33, "nodeName": "UnderspecifiedError", "type": "Type[sonnet.python.modules.base_errors.UnderspecifiedError]"}, {"lineNumber": 322, "col_offset": 58, "nodeName": "err", "type": "str"}, {"lineNumber": 323, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 331, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 331, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 335, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 335, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 336, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "stop_gradient", "type": "Any"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 350, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 355, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 356, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 35, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 364, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 364, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 365, "col_offset": 33, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "out3", "type": "Any"}, {"lineNumber": 367, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 367, "col_offset": 47, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 381, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 392, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 409, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 424, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 431, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 435, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 439, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 446, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 447, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 465, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 468, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 484, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 484, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 485, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 500, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 505, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 505, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 506, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 538, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 538, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 538, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 539, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 541, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 541, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 541, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 542, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 553, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 555, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 559, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 560, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 578, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 581, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 583, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 597, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 597, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 597, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 598, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 604, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 612, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 623, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 625, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 630, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 632, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 632, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 634, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 634, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 637, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 637, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 650, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 654, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 662, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 666, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 666, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 677, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 679, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 683, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 689, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 693, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 693, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 705, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 706, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 710, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 711, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 711, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 716, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 725, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 726, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 728, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 737, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 742, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 744, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 747, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 749, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 753, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 760, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 765, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 767, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 770, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 771, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 779, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 783, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 783, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 786, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 790, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 791, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 793, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 793, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 798, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 799, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 802, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 805, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 809, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 809, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 810, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 810, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 811, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 812, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 812, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 813, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 813, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 813, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 813, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 814, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 814, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 814, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 814, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 816, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 817, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 818, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 825, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 829, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 831, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 832, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 832, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 835, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 835, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 837, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 837, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 838, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 841, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 842, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 846, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 847, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 851, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 852, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 856, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 857, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 858, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 859, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 859, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 867, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 869, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 870, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 874, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 875, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 879, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 880, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 881, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 882, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 882, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 886, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 887, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 888, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 891, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 892, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 896, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 897, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 898, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 899, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 899, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 906, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 906, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 908, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 909, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 912, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 913, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 917, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 918, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 919, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 920, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 920, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 925, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 929, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 929, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 930, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 932, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 938, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 939, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 942, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 942, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 943, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 945, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 951, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 952, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 955, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 955, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 956, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 958, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 964, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 965, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 968, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 968, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 969, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 971, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 977, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 977, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 980, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 980, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 981, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 982, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 990, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 990, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 992, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 992, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 994, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 1014, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1014, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1015, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1017, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1017, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1019, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1019, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1021, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1022, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1022, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1026, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1026, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1027, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1046, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1046, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1046, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1048, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1049, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1050, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1051, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1052, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1054, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1058, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1058, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1061, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1061, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1061, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 1063, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1071, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1071, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1072, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1072, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1074, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1078, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1080, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1087, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1088, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1089, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1089, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1098, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1099, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1100, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1101, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1102, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1104, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1106, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1107, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1107, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1109, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1109, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1111, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1111, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1112, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1115, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1115, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1116, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1121, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1124, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1130, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1132, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1132, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1143, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1145, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1149, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1152, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1153, "col_offset": 20, "nodeName": "DATA_FORMAT_NHWC", "type": "str"}, {"lineNumber": 1154, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1157, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1157, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1157, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1158, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1158, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1159, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1159, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1159, "col_offset": 46, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1164, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1164, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1164, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1165, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1172, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1172, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1172, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1172, "col_offset": 48, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1172, "col_offset": 59, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1173, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1174, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1176, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1179, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1179, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1186, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1186, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1186, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1187, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1187, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1187, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1196, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1198, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1202, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1205, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1206, "col_offset": 20, "nodeName": "DATA_FORMAT_NCHW", "type": "str"}, {"lineNumber": 1207, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1210, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1210, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1210, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1211, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1211, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1212, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1212, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1212, "col_offset": 46, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1217, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1217, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1217, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1218, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1225, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1225, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1225, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1225, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1225, "col_offset": 61, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1226, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1227, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1229, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1229, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1232, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1239, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1239, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1239, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1240, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1240, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1240, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1251, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1252, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1253, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1254, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1256, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1258, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1259, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1262, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1263, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1264, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1265, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1268, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1272, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1273, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1276, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1277, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1281, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1285, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1286, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1287, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1288, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1291, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1295, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1299, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1300, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1304, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1319, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1320, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1324, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1326, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1327, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1328, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1330, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1334, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1338, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1341, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1342, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1351, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1352, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1353, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1354, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1357, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1357, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1357, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1358, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1366, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1368, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1371, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1371, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1371, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1372, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1375, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1375, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1375, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1376, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1385, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1387, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1388, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1390, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1406, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1406, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 1406, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1407, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1415, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1418, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1419, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1424, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1424, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1425, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1435, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1436, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1438, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1442, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1443, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1447, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1447, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1449, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1453, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1463, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1463, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1463, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1464, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1475, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1478, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1483, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1485, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1485, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1487, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1494, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1496, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1500, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1502, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1502, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1504, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1504, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1505, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1507, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1507, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1514, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1518, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1519, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1523, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1524, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1528, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1532, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1532, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1539, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1543, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1544, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1548, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1549, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1553, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1557, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1557, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1565, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1569, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1570, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1573, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1574, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1574, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1575, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1575, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1580, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1584, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1589, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1590, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1592, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1598, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1598, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1599, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1600, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1603, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1604, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1608, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1608, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1609, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1610, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1611, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1611, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1615, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1615, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1616, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1617, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1620, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1621, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1625, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1625, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1626, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1627, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1628, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1628, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1632, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1632, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1633, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1634, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1637, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1638, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1642, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1642, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1643, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1644, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1645, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1645, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1650, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1651, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1654, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1654, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1655, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1657, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1663, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1664, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1667, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1667, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1668, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1670, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1676, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1677, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1680, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1680, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1681, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1683, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1689, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1689, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1690, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1692, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1692, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1693, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 1694, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1694, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1698, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1702, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1703, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1705, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1705, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1710, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1711, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1712, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1714, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1715, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1717, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1718, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1721, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1721, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1721, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1722, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1722, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1722, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1723, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1723, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1724, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1724, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1724, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1725, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1725, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1725, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1725, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1725, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 1726, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1726, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1726, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1726, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1726, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 1727, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1727, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1728, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1729, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1729, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1730, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1735, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1737, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1737, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 1739, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1739, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1740, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 1758, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1759, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1760, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1760, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1771, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1771, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1772, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1786, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1786, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1787, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1788, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1789, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1790, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1792, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1795, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1795, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1797, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1797, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1800, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1801, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1802, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1802, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 1817, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1818, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1821, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1821, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1822, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1823, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1824, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1825, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1827, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1831, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1832, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1835, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1836, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1840, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1850, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1851, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1854, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1855, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1857, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1858, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1859, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1862, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1863, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1865, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1868, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1868, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1868, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1869, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1875, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1875, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1875, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1876, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1889, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1890, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1893, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1896, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1900, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1900, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1900, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1901, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1909, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1909, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1909, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1910, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1925, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1926, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1928, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1929, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1930, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1932, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1934, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1934, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1935, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1949, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1950, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1952, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1953, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1954, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1956, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1958, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1959, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1959, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1960, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1960, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1965, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1969, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1974, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1974, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1974, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1974, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1975, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1977, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1989, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1990, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1992, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1993, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1994, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1996, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1997, "col_offset": 20, "nodeName": "DATA_FORMAT_NWC", "type": "str"}, {"lineNumber": 1998, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2001, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2001, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2001, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2002, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2002, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2003, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2003, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2003, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2008, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2008, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2008, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2009, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2012, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2012, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2012, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2012, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2012, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2013, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2015, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2015, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2018, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2018, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2025, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2025, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2025, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2026, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2026, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2026, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2036, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 2037, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2039, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2040, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2041, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 2043, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2044, "col_offset": 20, "nodeName": "DATA_FORMAT_NCW", "type": "str"}, {"lineNumber": 2045, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2048, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2048, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2048, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2049, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2049, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2050, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2050, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2050, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2055, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2055, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2055, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2056, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2059, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2059, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2059, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2059, "col_offset": 48, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2059, "col_offset": 61, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2060, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2062, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2062, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2065, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2065, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2072, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2072, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2072, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2073, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2073, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2073, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2078, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2081, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2087, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2089, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2089, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2091, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 2101, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2105, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2109, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2110, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2110, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2114, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2115, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2116, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2117, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2117, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2118, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2118, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2120, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2127, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2131, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2135, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2136, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2136, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2140, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2141, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2142, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2143, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2143, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2144, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2144, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2146, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2153, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2158, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2162, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2163, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2163, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2167, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2168, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2169, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2170, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2170, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2171, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2171, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2173, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2181, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2185, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2188, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2189, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2189, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2190, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2190, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2195, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2196, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 2198, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2199, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2201, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2202, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2202, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2203, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 2203, "col_offset": 35, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2204, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 2204, "col_offset": 36, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2207, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2207, "col_offset": 15, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2209, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 2209, "col_offset": 43, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2210, "col_offset": 35, "nodeName": "run", "type": "Any"}, {"lineNumber": 2210, "col_offset": 44, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2213, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2216, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 2220, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2221, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2223, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2223, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2228, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2229, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2232, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2233, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2235, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2236, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2239, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2239, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2239, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2240, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2240, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2241, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2241, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2242, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2242, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2242, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2243, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2243, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2243, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2243, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2243, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 2244, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2244, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2244, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2244, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2244, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 2245, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2245, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2246, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2247, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2247, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2248, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2253, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2255, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2255, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 2257, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2257, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2259, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 2270, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2271, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2271, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2272, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2272, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2277, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2277, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2277, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2278, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2282, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2282, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2290, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2290, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2291, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2292, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2292, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2293, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2293, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2297, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2300, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2302, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2303, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2304, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2309, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2312, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2312, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2314, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2314, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2315, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 2325, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2326, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2327, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2328, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2329, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2330, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2331, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2353, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2353, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2353, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2355, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2357, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2358, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2359, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2361, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2364, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2364, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2365, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2365, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2367, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2367, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2375, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2376, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2378, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2379, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2380, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2381, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2383, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2386, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2389, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2390, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2390, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2398, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2399, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2402, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2402, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2402, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2403, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2412, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2413, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2414, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2415, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2416, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2417, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2422, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2422, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2422, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2423, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2434, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2438, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2439, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2442, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2442, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2443, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2453, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2454, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2456, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2460, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2463, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2463, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2465, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2469, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2477, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2477, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2477, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2478, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2490, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2492, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2496, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2497, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2499, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2499, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2501, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2501, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2502, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2504, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2504, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2509, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2512, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2516, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2518, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2518, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2520, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2527, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2531, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2532, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2535, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2536, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2544, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2548, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2548, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2555, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2559, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2560, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2563, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2564, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2570, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2574, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2574, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2581, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2585, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2586, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2589, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2590, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2594, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2598, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2599, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2606, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2607, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2608, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2610, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2611, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2611, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2612, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2612, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2617, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2620, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2626, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2627, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2628, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2638, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2639, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2640, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2641, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2644, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2645, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2646, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2670, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2670, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2670, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2672, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2673, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2674, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2675, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2676, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2677, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2681, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2681, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2681, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2682, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2682, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2683, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2684, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2684, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2685, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2687, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2695, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2696, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2698, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2699, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2701, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2702, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2703, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2706, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2710, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2711, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2711, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2720, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2725, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2726, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2731, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2731, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2731, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2732, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2743, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2745, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2746, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2748, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2749, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2754, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2759, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2759, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2759, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2760, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2772, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2776, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2777, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2781, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2781, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2782, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2793, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2794, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2795, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2796, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2800, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2804, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2804, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2806, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2811, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2814, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2822, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2822, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2822, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2823, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2834, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2837, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2842, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2844, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2844, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2846, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2853, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2855, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2860, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2861, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2863, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2863, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2865, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2865, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2866, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2867, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2869, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2869, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2877, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2881, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2883, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2887, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2888, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2896, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2901, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2901, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2909, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2913, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2914, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2918, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2919, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2925, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2930, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2930, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2938, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2942, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2943, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2947, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2948, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2952, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2957, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2957, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2968, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2969, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2970, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2972, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2973, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2977, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2977, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2977, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2978, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2978, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2979, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2983, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2983, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2986, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2991, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2992, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3002, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3004, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3006, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3007, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3007, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3008, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3008, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3013, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3017, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3023, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3024, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3025, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3026, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3027, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3037, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 3038, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 3039, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 3042, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 3043, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 3067, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3067, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3067, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3069, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3070, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3071, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3072, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3073, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3074, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3078, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3078, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3078, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3079, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3079, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3080, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3081, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3081, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3082, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3084, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3092, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3093, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3095, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3096, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 3098, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3099, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3100, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3103, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3107, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 3107, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 3108, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3108, "col_offset": 21, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3108, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 3108, "col_offset": 46, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3117, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3122, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3123, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3129, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3129, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3129, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3130, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3141, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3143, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3144, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3146, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3147, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3152, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3157, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3157, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3157, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3158, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3170, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3174, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3175, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3179, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3179, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3180, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3191, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 3192, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 3193, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3194, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3198, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3202, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3202, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3204, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3209, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3212, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3220, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3220, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3220, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3221, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3232, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3235, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3240, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3242, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3242, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3244, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3251, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 3253, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3258, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 3259, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3261, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3261, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3263, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3263, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3264, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3265, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3267, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3267, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 3275, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3279, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3281, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3285, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3286, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3290, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3294, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 3294, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 3295, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3295, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 3295, "col_offset": 34, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3303, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3307, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3308, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3312, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3313, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3317, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3321, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3321, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3322, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3322, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3322, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3330, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3334, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3335, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3339, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3340, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3344, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3348, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3348, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3349, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3349, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3349, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3360, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3361, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3362, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3364, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3365, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3369, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3369, "col_offset": 32, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3369, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3370, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3370, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3371, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3375, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3375, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3377, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3381, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3381, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3382, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3382, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3382, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3392, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3394, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3396, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3397, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3397, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3398, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3398, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3403, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3407, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3413, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3414, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3415, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3416, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3417, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3428, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 3429, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3430, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 3431, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3432, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 3433, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 3434, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3435, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3436, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3438, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3439, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3442, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3443, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3445, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3447, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3452, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3453, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3456, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3457, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3461, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3476, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3477, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3481, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3483, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3485, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3487, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3491, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3495, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3499, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3500, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3506, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3507, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3509, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3509, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3510, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3511, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3516, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3518, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3520, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3524, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3524, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3525, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3527, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3536, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3538, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3539, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3541, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3557, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3557, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3557, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3558, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3560, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3560, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3560, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3561, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3566, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3569, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3576, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3576, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3577, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3578, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3578, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3579, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3579, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 3587, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3588, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3589, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3594, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3597, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3597, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3599, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3603, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3612, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3612, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3613, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3619, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3622, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3627, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3629, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3629, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3631, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3636, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3641, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3641, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3643, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3644, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3646, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3655, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 3657, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3661, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 3662, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3664, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3664, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3666, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3666, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3667, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3669, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3669, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 3677, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3681, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3683, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3686, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3702, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3706, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3707, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3715, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3719, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3721, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3724, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3730, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3734, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3735, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3743, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3747, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3748, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3751, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3752, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3752, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3753, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3753, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3758, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3762, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3767, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3768, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3770, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3776, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3777, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3778, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3781, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3782, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3786, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3787, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3788, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3789, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3789, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3793, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3793, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3794, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3795, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3798, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3799, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3803, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3804, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3805, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3806, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3806, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3810, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3810, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3811, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3812, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3815, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3816, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3820, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3821, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3822, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3823, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3823, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3827, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3827, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3828, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3829, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3832, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3833, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3837, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3838, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3839, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3840, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3840, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3844, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3844, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3845, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3846, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3849, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3850, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3854, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3855, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3856, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3857, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3857, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3862, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3862, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3863, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3863, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3866, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3866, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3867, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3869, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3875, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3875, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3876, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3876, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3879, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3879, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3880, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3882, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3888, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3888, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3889, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3889, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3892, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3892, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3893, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3895, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3901, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3901, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3902, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3902, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3905, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3905, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3906, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3908, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3914, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3914, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3915, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3915, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3918, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3918, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3919, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3921, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3927, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3927, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 3928, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3930, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3930, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3931, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 3932, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3932, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3936, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 3940, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3941, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3943, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3943, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3948, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3949, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3950, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3952, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3953, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3955, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3956, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3959, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3959, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3959, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3960, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3960, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 3960, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3961, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3961, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3962, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3962, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3962, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 3963, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3963, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3963, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 3963, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3963, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 3964, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3964, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3964, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 3964, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3964, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 3965, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3965, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3966, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3967, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3967, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3968, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 3973, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3975, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3975, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 3977, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3977, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 3978, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 4002, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4002, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4003, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4003, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4005, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4005, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4005, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4007, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4008, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4010, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4011, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4011, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4012, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4014, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4014, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4014, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4017, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4017, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 4018, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4037, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4037, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4037, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 4039, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4040, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4041, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4042, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4043, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4045, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4049, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4049, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4052, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4052, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4052, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 4054, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4062, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4062, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4063, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4063, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4065, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4069, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4071, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4076, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4076, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4078, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 4079, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4080, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4080, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4089, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4089, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4091, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4095, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4097, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4101, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4101, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4106, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4111, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4111, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4113, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 4114, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4116, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 4125, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 4126, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4127, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4128, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4129, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4131, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4133, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4134, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4134, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4134, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 4136, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4136, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4138, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4138, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4139, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4142, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4142, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4143, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4151, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 4152, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4153, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4154, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4155, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4156, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4158, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4159, "col_offset": 20, "nodeName": "DATA_FORMAT_NDHWC", "type": "str"}, {"lineNumber": 4160, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4163, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4163, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4163, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4164, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4164, "col_offset": 49, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4165, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4165, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4165, "col_offset": 46, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4170, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4170, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4170, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4171, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4174, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4174, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 4174, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4175, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 4176, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 4177, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 4178, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4179, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4181, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4181, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4181, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4188, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4188, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4188, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4189, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4189, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 4189, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 4197, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 4198, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4199, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4200, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4201, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4202, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4204, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4205, "col_offset": 20, "nodeName": "DATA_FORMAT_NCDHW", "type": "str"}, {"lineNumber": 4206, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4209, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4209, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4209, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4210, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4210, "col_offset": 30, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4210, "col_offset": 44, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4211, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4211, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4211, "col_offset": 46, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4216, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4216, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4216, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4217, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4220, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4220, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 4220, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4221, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4222, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 4223, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 4224, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 4225, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4227, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4227, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4227, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4234, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4234, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4234, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4235, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4235, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 4235, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 4238, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 269, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 269, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 274, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 287, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 295, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 295, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 295, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 297, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 299, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 300, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 308, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 311, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 322, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 331, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 335, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 343, "col_offset": 30, "nodeName": "getter", "type": "Any"}, {"lineNumber": 345, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 358, "col_offset": 51, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 358, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 358, "col_offset": 63, "nodeName": "g", "type": "Any"}, {"lineNumber": 358, "col_offset": 68, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 364, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 364, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 364, "col_offset": 52, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 366, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 367, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 367, "col_offset": 32, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 388, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 388, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 388, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 393, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 393, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 402, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 402, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 402, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 406, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 406, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 409, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 426, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 432, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 432, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 439, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 444, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 446, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 447, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 448, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 448, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 448, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 465, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 484, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 485, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 505, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 505, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 506, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 525, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 525, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 538, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 538, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 539, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 540, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 541, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 541, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 542, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 543, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 553, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 556, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 557, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 560, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 560, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 560, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 562, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 562, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 563, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 579, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 579, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 579, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 579, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 581, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 583, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 588, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 589, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 589, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 597, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 598, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 604, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 623, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 632, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 632, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 634, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 635, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 637, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 651, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 662, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 666, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 666, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 677, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 680, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 680, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 682, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 689, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 693, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 693, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 705, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 710, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 711, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 716, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 721, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 722, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 725, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 728, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 729, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 730, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 742, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 745, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 747, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 747, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 749, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 753, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 753, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 765, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 768, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 768, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 770, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 770, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 779, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 783, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 783, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 801, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 807, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 810, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 812, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 812, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 835, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 835, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 836, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 836, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 846, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 852, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 854, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 856, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 857, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 859, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 859, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 869, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 875, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 877, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 880, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 882, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 886, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 892, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 894, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 896, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 897, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 899, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 899, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 906, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 913, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 915, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 918, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 920, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 920, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 929, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 930, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 930, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 931, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 932, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 932, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 942, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 943, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 943, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 944, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 945, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 945, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 955, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 956, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 956, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 957, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 958, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 958, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 968, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 969, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 969, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 970, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 971, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 971, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 977, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 980, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 981, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 992, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 993, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1002, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 1002, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1026, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1027, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1046, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1049, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1050, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1051, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1052, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 1061, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 1063, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1063, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1071, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1072, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1076, "col_offset": 45, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 1078, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 1087, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1089, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1090, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1090, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1091, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 1091, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1099, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1100, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1101, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1102, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1107, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1109, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1109, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1110, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1110, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1115, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1116, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1121, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1132, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1132, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1147, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1147, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1149, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1153, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1164, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1164, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1172, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1174, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1186, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1186, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1187, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1187, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1187, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1200, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1200, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1202, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1206, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1217, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1217, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1225, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1227, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1239, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1239, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1240, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1240, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1240, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1260, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1260, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1260, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1265, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1274, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1274, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1274, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1278, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1278, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1278, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1281, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1282, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1288, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1297, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1297, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1301, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1301, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1301, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1304, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1305, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1321, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1328, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1334, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1338, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1339, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1341, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1342, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1343, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1343, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1343, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1357, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1357, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1358, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1371, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1371, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1372, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1375, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1375, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1376, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1393, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1393, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1395, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1406, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1406, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1407, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1408, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1418, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1421, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1422, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1425, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1425, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1425, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1427, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1427, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1427, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1428, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1428, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1442, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1445, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1445, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1445, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1445, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1447, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1447, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1449, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1453, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1454, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1455, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1455, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1458, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1463, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1464, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1467, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1468, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1475, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1485, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1485, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1494, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1502, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1502, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1504, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1505, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1507, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1518, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1521, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1521, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1523, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1523, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1528, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1532, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1532, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1543, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1546, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1546, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1548, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1548, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1553, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1557, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1557, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1569, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1573, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1574, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1575, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1580, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1584, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1585, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1586, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1589, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1592, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1593, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1594, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1598, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 1604, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1606, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1608, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1609, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1611, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1611, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1615, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 1621, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1623, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1625, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1626, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1628, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1628, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1632, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 1638, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1640, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1642, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1643, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1645, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1645, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1654, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1655, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1655, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1656, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1657, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1657, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1667, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1668, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1668, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1669, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1670, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1670, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1680, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1681, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1681, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1682, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1683, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1683, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1689, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1692, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1693, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1712, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1713, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1715, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1716, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1718, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1719, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1722, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1724, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1724, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1739, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1740, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1759, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1760, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1761, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1771, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1772, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1798, "col_offset": 15, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1798, "col_offset": 26, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1800, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1802, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1819, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1819, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1819, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1833, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1833, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1833, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1837, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1837, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1837, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1840, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1841, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1852, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1852, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1860, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1860, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1868, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1868, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1869, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1869, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1873, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1875, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1875, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1876, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1876, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1880, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1891, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1891, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1900, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1900, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1901, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1901, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1904, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1907, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1909, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1909, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1910, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1910, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1913, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1916, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1927, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1927, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1935, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1935, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1936, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1938, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1938, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1938, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1939, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1939, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1951, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1951, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1958, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1959, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1960, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1965, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1969, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1970, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1971, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1974, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1977, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1978, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1979, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1991, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1991, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1997, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 2002, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2008, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2008, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2012, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2013, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2025, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2025, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2026, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2026, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2026, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2038, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 2038, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2044, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 2049, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2055, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2055, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2059, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2060, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2072, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2072, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2073, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2073, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2073, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2078, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2082, "col_offset": 21, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 2089, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2089, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2107, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2107, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2109, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2109, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2110, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2115, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2115, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2115, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2116, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2117, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2118, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2133, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2133, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2135, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2135, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2136, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2141, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2141, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2141, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2142, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2143, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2144, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2160, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2160, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2162, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2162, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2163, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2168, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2168, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2168, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2169, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2170, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2171, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2188, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2189, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2190, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2195, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2196, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2199, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2199, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2199, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2201, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2202, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2203, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2204, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2207, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2209, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2210, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2231, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2233, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2234, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2236, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2237, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2240, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2242, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2242, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2257, "col_offset": 9, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2258, "col_offset": 6, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2271, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2277, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2277, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2291, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2292, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2293, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2297, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2300, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2300, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2300, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2302, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2304, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2304, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2304, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2309, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2314, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2314, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2323, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2323, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 2323, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2359, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2364, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 2365, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2367, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2367, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2376, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2379, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 2380, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2381, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2386, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2389, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2389, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2390, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2390, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2390, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2390, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2402, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2402, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2403, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2404, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2422, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2422, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2423, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2426, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2438, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2440, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2440, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2443, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2443, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2443, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2445, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2445, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2445, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2446, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2446, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2454, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2461, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2461, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2461, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 2461, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2463, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2463, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2465, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2469, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2470, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2470, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 2471, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 2474, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2474, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2477, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2478, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2482, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2490, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2499, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2499, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2501, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2502, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2504, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2509, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2518, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2518, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2531, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2533, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2533, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2535, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2535, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2544, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2548, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2548, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2559, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2561, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2561, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2563, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2563, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2570, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2574, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2574, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2585, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2587, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2587, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2589, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2589, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2594, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2598, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2599, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2607, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2610, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2611, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2612, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2617, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2620, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2620, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2620, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2626, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2628, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2628, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2628, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2636, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2636, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2636, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2676, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2687, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2687, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2696, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2699, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2701, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2702, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2706, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2710, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2710, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2711, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2711, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2711, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2711, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2731, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2731, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2732, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2735, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2759, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2759, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2760, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2765, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2776, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2778, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2779, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2782, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2782, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2782, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2784, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2784, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2784, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2785, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2785, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2795, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2801, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2802, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2802, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2802, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2802, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2804, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2804, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2806, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2811, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2812, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2812, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2813, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2814, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2815, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2815, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2816, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2819, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2819, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2822, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2823, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2828, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2834, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2844, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2844, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2853, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2863, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2863, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2865, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2866, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2867, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2869, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2881, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2884, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2885, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2887, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2887, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2896, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2901, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2901, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2913, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2915, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2916, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2918, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2918, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2925, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2930, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2930, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2942, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2944, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2945, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2947, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2947, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2952, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2957, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2957, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2972, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2974, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2975, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2977, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2978, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2979, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2979, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2983, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2986, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2991, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2991, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3006, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3007, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3008, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3013, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3017, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3017, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3017, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3023, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3024, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3027, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3027, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3027, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3035, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 3035, "col_offset": 10, "nodeName": "SeparableConv1DTest", "type": "Type[SeparableConv1DTest]"}, {"lineNumber": 3035, "col_offset": 31, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3073, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3084, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3084, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3093, "col_offset": 39, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 3096, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 3098, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3099, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3103, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3107, "col_offset": 20, "nodeName": "session", "type": "Any"}, {"lineNumber": 3107, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3108, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3129, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3129, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3130, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3133, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3157, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3157, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3158, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3163, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3174, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3176, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3177, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3180, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3180, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3180, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3182, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3182, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3182, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 3183, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3183, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 3193, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3199, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3200, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3200, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3200, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 3200, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3202, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3202, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3204, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3209, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3210, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3210, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 3211, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3212, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3213, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3213, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 3214, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3217, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3217, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 3220, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3221, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3226, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3232, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3242, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3242, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3251, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 3261, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3261, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3263, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3264, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3265, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3267, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3279, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3282, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3283, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3285, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3285, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3290, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3294, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 3295, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3307, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3309, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3310, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3312, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3312, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3317, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3321, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3322, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3334, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3336, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3337, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3339, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3339, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3344, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3348, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3349, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3364, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3366, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3367, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3369, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 3370, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3371, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3371, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3375, "col_offset": 62, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3377, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3381, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3382, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3396, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3397, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3398, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3403, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3407, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3407, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3407, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3413, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3414, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3417, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3417, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3417, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3440, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3440, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3440, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3440, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3440, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3444, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3444, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3444, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3445, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3454, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3454, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3454, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3454, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3454, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3458, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3458, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3458, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3458, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3459, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3461, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3462, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3478, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3484, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3484, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3484, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3485, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3491, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3495, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 3496, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3499, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3500, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3501, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3501, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3501, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3501, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3501, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3509, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3509, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3510, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3511, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3524, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3524, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3525, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3527, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3544, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3544, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3546, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3557, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3557, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3558, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3559, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3560, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3560, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3561, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3562, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3569, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 3577, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3577, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3577, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3578, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3595, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3595, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 3595, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 3595, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3597, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3597, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3599, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3603, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3604, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3605, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 3605, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 3608, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3612, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3613, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3619, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3629, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3629, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3641, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3641, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3643, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3646, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3647, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3648, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3655, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 3664, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3664, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3666, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3667, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3669, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3681, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3684, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3684, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3686, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3686, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3687, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3702, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3706, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3707, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3719, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3722, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3722, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3724, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3724, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3725, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3730, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3734, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3735, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3747, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3751, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3752, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3753, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3758, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3762, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3763, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3764, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3767, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 3770, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3771, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3772, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3776, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3776, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3782, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3784, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3786, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3786, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3787, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3789, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3789, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3793, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 3799, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3801, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3803, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3803, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3804, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3806, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3806, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3810, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3816, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3818, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3820, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3820, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3821, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3823, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3823, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3827, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3833, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3835, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3837, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3837, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3838, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3840, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3840, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3844, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3850, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3852, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3854, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3854, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3855, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3857, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3857, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3862, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 3863, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3866, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3867, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3867, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3868, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3869, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3869, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3875, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3876, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3879, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3880, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3880, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3881, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3882, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3882, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3888, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3889, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3892, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3893, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3893, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3894, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3895, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3895, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3901, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3902, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3905, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3906, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3906, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3907, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3908, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3908, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3914, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 3915, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3918, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3919, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3919, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3920, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3921, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3921, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3927, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3930, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3931, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3950, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3951, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 3953, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3954, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 3956, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3957, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 3960, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3962, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 3962, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 3977, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3978, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3986, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 3986, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 3986, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4017, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4018, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 4037, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4040, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 4041, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 4042, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 4043, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 4052, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 4054, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4054, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4062, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4063, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4069, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 4078, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4080, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4081, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4081, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 4082, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 4082, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 4089, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4095, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 4111, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4111, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4113, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4116, "col_offset": 6, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4117, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 4118, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4126, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4127, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 4128, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 4129, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 4134, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 4136, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4136, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4137, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 4137, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 4142, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 4143, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4152, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 4153, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4154, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4155, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 4156, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 4159, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 4164, "col_offset": 28, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4170, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4170, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4174, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 4174, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4175, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4176, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4177, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4178, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4179, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 4188, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4188, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4189, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4189, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4189, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4198, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 4199, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4200, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4201, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 4202, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 4205, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 4210, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 4216, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4216, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4220, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 4220, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4221, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4222, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4223, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4224, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4225, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 4234, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4234, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4235, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4235, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4235, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 249, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 298, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 300, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 320, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 343, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 364, "col_offset": 52, "nodeName": "out2", "type": "Any"}, {"lineNumber": 366, "col_offset": 39, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 440, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 444, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 525, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 525, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 529, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 560, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 584, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 588, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 589, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 594, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 623, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 637, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 653, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 653, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 663, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 666, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 666, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 682, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 682, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 690, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 693, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 693, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 717, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 721, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 722, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 725, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 726, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 726, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 729, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 730, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 747, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 747, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 750, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 753, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 753, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 770, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 770, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 780, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 783, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 783, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 801, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 807, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 816, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 817, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 818, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 836, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 836, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 841, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 842, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 858, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 859, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 881, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 882, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 898, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 899, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 919, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 920, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 920, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 930, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 930, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 933, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 933, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 943, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 943, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 946, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 946, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 956, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 956, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 957, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 959, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 959, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 969, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 969, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 970, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 972, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 972, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 981, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 981, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 982, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 982, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 993, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 994, "col_offset": 29, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1058, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1059, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1059, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1061, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1064, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1076, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1088, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1090, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1090, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 1091, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1110, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 1110, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1158, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1172, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1211, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1225, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1273, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1277, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1283, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1300, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1306, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1335, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1339, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1393, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1393, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1395, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1397, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 1425, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1427, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1450, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1454, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1455, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1455, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1458, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1459, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1460, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1467, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1494, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1507, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1523, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1523, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1529, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1532, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1532, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1548, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1548, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1554, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1557, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1557, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1581, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1585, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1586, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1589, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1590, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1590, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1593, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1594, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1610, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1611, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1627, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1628, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1644, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1645, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1655, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1655, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1656, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1658, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1658, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1668, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1668, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1669, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1671, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1671, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1681, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1681, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1682, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1684, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1684, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1693, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1693, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1694, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1694, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1713, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1716, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1719, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1727, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1728, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1729, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1730, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1740, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1740, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1759, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1759, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1761, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1795, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1797, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1801, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1802, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 1832, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1836, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1842, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1870, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1870, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1877, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1877, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1902, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1902, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1911, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1911, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1935, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1935, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1935, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1936, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1938, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1966, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1970, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1971, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1974, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1975, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1975, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1978, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1979, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2002, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2012, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2049, "col_offset": 28, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2059, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2082, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2109, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2109, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2115, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2115, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2115, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2135, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2135, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2141, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2141, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2141, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2162, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2162, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2168, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2168, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2168, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2199, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2199, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2199, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2231, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2234, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2237, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2245, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2246, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2247, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2248, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2258, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2259, "col_offset": 35, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2298, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2300, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2300, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2302, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2303, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2303, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2304, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2304, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2365, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2367, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 2376, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2387, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2389, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2389, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2390, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2443, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2445, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2466, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2470, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2470, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2471, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2474, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2474, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2490, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2504, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2535, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2535, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2545, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2548, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2548, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2563, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2563, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2571, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2574, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2574, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2589, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2589, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2595, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2599, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2599, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2618, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2620, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2620, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2626, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2627, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2627, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2628, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2628, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2681, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2682, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2684, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2687, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2696, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2707, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2710, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2710, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2711, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2782, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2784, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2807, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2812, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2812, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2813, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2815, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2815, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2816, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2819, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2819, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2853, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2869, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2887, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2887, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2897, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2901, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2901, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2918, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2918, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2926, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2930, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2930, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2947, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2947, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2953, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2957, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2957, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2983, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2987, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2991, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2991, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2991, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3014, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3017, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3017, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3023, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3024, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3025, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3025, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3026, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3026, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3027, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3027, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3078, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3079, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3081, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3084, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3093, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 3104, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3107, "col_offset": 49, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3107, "col_offset": 58, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3180, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 3182, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3205, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3210, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3210, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 3211, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3213, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3213, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 3214, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3217, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3217, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3251, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 3267, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3285, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 3285, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3291, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3312, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3312, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3318, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3339, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3339, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3345, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3375, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3378, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3404, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3407, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3407, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3413, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3414, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3415, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3415, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3416, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3416, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3417, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3417, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3453, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3457, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3463, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3492, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3496, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3544, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3544, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 3546, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3548, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 3572, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3573, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3577, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 3600, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3604, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 3605, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3605, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3608, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3609, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3610, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 3644, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3647, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3648, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3648, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3655, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 3669, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3686, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3686, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3687, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3703, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3707, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3707, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3724, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3724, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3725, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3731, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3735, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3735, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3759, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3763, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3764, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3767, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3768, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3768, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 3771, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3772, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3776, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 3786, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 3788, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3789, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3803, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3805, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3806, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3820, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3822, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3823, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3837, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3839, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3840, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3854, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3856, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3857, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3867, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3867, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3868, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3870, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3870, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3880, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3880, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3881, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3883, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3883, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3893, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3893, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3894, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3896, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3896, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3906, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3906, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3907, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3909, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3909, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3919, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3919, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3920, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3922, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3922, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3931, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3931, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3932, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3932, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3951, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 3954, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 3957, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 3965, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3966, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3967, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3968, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3978, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3978, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 4049, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4050, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4050, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4052, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4055, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4076, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4079, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 4081, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 4081, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 4082, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4101, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4114, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 4117, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 4118, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 4118, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4137, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 4137, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4164, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 4174, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 4220, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 298, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 366, "col_offset": 39, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 410, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 440, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 441, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 444, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 444, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 444, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 444, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 584, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 585, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 588, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 589, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 599, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 623, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 663, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 664, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 666, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 682, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 690, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 691, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 693, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 717, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 718, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 726, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 747, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 750, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 751, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 753, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 770, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 780, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 781, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 783, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 801, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 807, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 816, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 817, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 818, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 841, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 842, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 858, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 858, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 881, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 881, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 882, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 898, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 898, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 919, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 919, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 920, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 931, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 932, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 932, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 933, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 944, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 944, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 945, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 945, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 946, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 957, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 957, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 958, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 958, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 959, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 970, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 970, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 971, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 971, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 972, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 982, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1058, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1059, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 1059, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1061, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 1063, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1064, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1088, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1090, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1158, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1211, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1273, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1277, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1282, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1297, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1297, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1300, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1305, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1335, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1336, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1339, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1339, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1339, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1339, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1450, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1451, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1454, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1455, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1459, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1470, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1494, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1523, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1529, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1530, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1532, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1548, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1554, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1555, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1557, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1581, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1582, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1590, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1610, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1610, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1627, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1627, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1644, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1644, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1656, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1656, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1657, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1657, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1658, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1669, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1669, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1670, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1670, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1671, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1682, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1682, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1683, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1683, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1684, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1694, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1713, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1716, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1719, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1727, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1728, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1729, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1730, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1759, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1759, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1797, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1801, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1802, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1832, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1836, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1841, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1966, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1967, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1975, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2109, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2135, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2162, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2231, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2234, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2237, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2245, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2246, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2247, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2248, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2298, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2299, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2303, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2367, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2387, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2388, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2389, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2389, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2466, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2467, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2470, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2471, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 2474, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2483, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2490, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2535, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2545, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2546, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2548, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2563, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2571, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2572, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2574, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2589, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2595, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2596, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2599, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2618, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2619, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2627, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2681, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2682, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2684, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2687, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2707, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2708, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2710, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2710, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2807, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2808, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2812, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2813, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2815, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2816, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2819, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2829, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2853, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2887, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2897, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2898, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2901, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2918, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2926, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2927, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2930, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2947, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2953, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2954, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2957, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2983, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 2987, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2988, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2991, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3014, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3015, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3025, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3026, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3078, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 3079, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3081, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3084, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3104, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3105, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3107, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 3107, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 3205, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3206, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3210, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3211, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 3213, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3214, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 3217, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 3227, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3251, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3285, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3291, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3292, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3312, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 3318, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3319, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3339, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 3345, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3346, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3375, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 3378, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3379, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3404, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3405, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3415, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3416, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3453, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 3457, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 3462, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3492, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3493, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3496, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 3496, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3496, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3496, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3496, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3497, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3572, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3573, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3600, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3601, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3604, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3605, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 3609, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 3614, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3644, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3644, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3644, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 3647, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3648, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3655, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3686, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3703, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3704, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3707, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3724, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3731, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3732, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3735, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3759, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3760, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3768, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3788, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3788, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3805, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3805, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3822, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3822, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3839, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3839, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3856, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3856, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3868, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3868, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3869, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3869, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3870, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3881, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3881, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3882, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3882, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3883, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3894, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3894, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3895, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3895, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3896, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3907, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3907, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3908, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3908, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3909, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3920, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3920, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3921, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3921, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3922, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3932, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3951, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3954, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3957, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3965, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3966, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 3967, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3968, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 4049, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4050, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4050, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 4050, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4052, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 4054, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4055, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 4076, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4079, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4081, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4101, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4114, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4114, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 4114, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 4117, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4118, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 107, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 410, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 441, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 585, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 585, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 599, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 664, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 664, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 691, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 691, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 691, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 718, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 718, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 718, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 726, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 751, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 751, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 751, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 781, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 781, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 781, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 858, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 881, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 898, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 919, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 932, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 945, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 958, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 971, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1059, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1061, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1063, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1277, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1282, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1300, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1305, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1336, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1336, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1336, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1451, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1451, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1451, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1459, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1470, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1530, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1530, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1530, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1555, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1555, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1555, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1582, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1582, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1582, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1590, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1610, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1627, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1644, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1657, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1670, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1683, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1761, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1802, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1836, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1841, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1967, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1967, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1967, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1975, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2299, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2299, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2299, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2303, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2388, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2388, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2388, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2467, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2467, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2467, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2474, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2483, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2546, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2546, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2546, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2572, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2572, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2572, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2596, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2596, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2596, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2619, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2619, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2619, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2627, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2682, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2684, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2687, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2708, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2708, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2708, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2709, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2709, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2808, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2808, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2808, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2809, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2809, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2819, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2829, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2898, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2898, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2898, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2899, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2899, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2927, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2927, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2927, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2928, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2928, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2954, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2954, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2954, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2955, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2955, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2988, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2988, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2988, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2989, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2989, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3015, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3015, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3015, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3016, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3016, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3025, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3026, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3079, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3081, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3084, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 3105, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3105, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3105, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3106, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3106, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3206, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3206, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3206, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3207, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3207, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3217, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3227, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3292, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3292, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3292, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3293, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3293, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3319, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3319, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3319, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3320, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3320, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3346, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3346, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3346, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3347, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3347, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3379, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3379, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3379, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3380, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3380, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3405, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3405, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3405, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3406, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3406, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3415, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3416, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3457, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3462, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3493, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3493, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3493, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3601, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3601, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3601, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3609, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3614, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3644, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3644, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3704, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3704, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3704, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3732, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3732, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3732, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3760, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3760, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3760, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3768, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3788, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3805, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3822, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3839, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3856, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3869, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3882, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3895, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3908, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3921, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4050, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 4052, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4054, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 4114, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4114, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 410, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 441, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 585, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 585, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 664, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 664, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 664, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 691, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 691, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 691, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 718, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 718, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 718, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 751, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 751, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 751, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 781, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 781, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 781, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1063, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1282, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1305, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1336, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1336, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1336, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1451, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1451, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1451, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1530, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1530, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1530, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1555, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1555, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1555, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1582, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1582, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1582, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1761, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1761, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1761, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1802, "col_offset": 58, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1841, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1967, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1967, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1967, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2299, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2299, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2299, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2388, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2388, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2388, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2467, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2467, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2467, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2546, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2546, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2546, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2572, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2572, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2572, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2596, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2596, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2596, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2619, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2619, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2619, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2687, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2708, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2708, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2708, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2709, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2709, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2808, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2808, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2808, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2809, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2809, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2898, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2898, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2898, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2899, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2899, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2927, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2927, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2927, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2928, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2928, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2954, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2954, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2954, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2955, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2955, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2988, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2988, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2988, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2989, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2989, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3015, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3015, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3015, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3016, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3016, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3084, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3105, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3105, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3105, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3106, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3106, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3206, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3206, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3206, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3207, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3207, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3292, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3292, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3292, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3293, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3293, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3319, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3319, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3319, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3320, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3320, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3346, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3346, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3346, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3347, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3347, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3379, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3379, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3379, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3380, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3380, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3405, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3405, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3405, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3406, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3406, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3462, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3493, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3493, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3493, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3601, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3601, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3601, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3704, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3704, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3704, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3732, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3732, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3732, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3760, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3760, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3760, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4054, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 1761, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1761, "col_offset": 46, "nodeName": "i", "type": "int"}]