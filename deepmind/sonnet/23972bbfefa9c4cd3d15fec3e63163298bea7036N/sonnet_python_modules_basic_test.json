[{"lineNumber": 36, "col_offset": 0, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 428, "col_offset": 18, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 428, "col_offset": 36, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 644, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 772, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 873, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 897, "col_offset": 36, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 898, "col_offset": 36, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 952, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 952, "col_offset": 39, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1121, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1229, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1295, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1386, "col_offset": 22, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 428, "col_offset": 18, "nodeName": "test", "type": "Any"}, {"lineNumber": 428, "col_offset": 36, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 430, "col_offset": 2, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 431, "col_offset": 2, "nodeName": "IN_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 432, "col_offset": 2, "nodeName": "OUT_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 432, "col_offset": 14, "nodeName": "IN_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 644, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 772, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 873, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 897, "col_offset": 36, "nodeName": "test", "type": "Any"}, {"lineNumber": 898, "col_offset": 36, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 952, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 952, "col_offset": 39, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1121, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 1229, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 1295, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 1386, "col_offset": 22, "nodeName": "test", "type": "Any"}, {"lineNumber": 1473, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "random_normal_tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "out_size", "type": "int"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "variables_", "type": "Tuple[Any, ...]"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "variables_", "type": "Tuple[Any, ...]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "types", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "tol", "type": "Tuple[float, float, float]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "tolerance_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "types", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "inp_1", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "inp_2", "type": "Any"}, {"lineNumber": 172, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "out_1", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "out_2", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "inp", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "lin1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "lin2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "lin3", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "vars1", "type": "Tuple[Any, ...]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "vars2", "type": "Tuple[Any, ...]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "vars3", "type": "Tuple[Any, ...]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "vars1", "type": "Tuple[Any, ...]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "vars2", "type": "Tuple[Any, ...]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "vars3", "type": "Tuple[Any, ...]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "bad_inputs", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "w_regularizer", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "b_regularizer", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "linear_transpose1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "linear_out", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "linear_transposed_output", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "n_outputs", "type": "int"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "n_inputs", "type": "int"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 428, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "mb_in_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "mb_out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "variables_", "type": "Tuple[Any, ...]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "variables_", "type": "Tuple[Any, ...]"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "types", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "tol", "type": "Tuple[float, float, float]"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "tolerance_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "b_regularizer", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "types", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "inp_1", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "inp_2", "type": "Any"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "out_1", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "out_2", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "inp", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "add1", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "add2", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "add3", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "vars1", "type": "Tuple[Any, ...]"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "vars2", "type": "Tuple[Any, ...]"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "vars3", "type": "Tuple[Any, ...]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 566, "col_offset": 13, "nodeName": "vars1", "type": "Tuple[Any, ...]"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 568, "col_offset": 13, "nodeName": "vars2", "type": "Tuple[Any, ...]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 570, "col_offset": 13, "nodeName": "vars3", "type": "Tuple[Any, ...]"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "input_to_add", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "add_transpose", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "add_transpose", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "add_out", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "add_transpose_out", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "bias", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 644, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "types", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "tol", "type": "Tuple[float, float, float]"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "tolerance_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "lhs_shape", "type": "List[int]"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "rhs_shape", "type": "List[int]"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 675, "col_offset": 17, "nodeName": "types", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 721, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 745, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 752, "col_offset": 4, "nodeName": "w_regularizer", "type": "Any"}, {"lineNumber": 757, "col_offset": 4, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 772, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 801, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "out_shape_lambda", "type": "Callable[[], Any]"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "out_size", "type": "List[int]"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "correct_out_size", "type": "List[int]"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "out_size", "type": "List[int]"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 848, "col_offset": 4, "nodeName": "flattened_shape", "type": "Any"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "out_size", "type": "List[int]"}, {"lineNumber": 855, "col_offset": 4, "nodeName": "correct_out_size", "type": "List[int]"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "mod_t", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "mod_t_t", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "intermediate_output", "type": "Any"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "further_output", "type": "Any"}, {"lineNumber": 873, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchFlatten"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "flattened_size", "type": "Any"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 897, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 913, "col_offset": 4, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 930, "col_offset": 8, "nodeName": "dim_from", "type": "Any"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "mod_trans", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "initial_shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 945, "col_offset": 4, "nodeName": "original", "type": "Any"}, {"lineNumber": 946, "col_offset": 4, "nodeName": "flat", "type": "Any"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "final", "type": "Any"}, {"lineNumber": 952, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 963, "col_offset": 7, "nodeName": "test_with_none", "type": "Any"}, {"lineNumber": 967, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 968, "col_offset": 4, "nodeName": "out_shape1", "type": "Union[List[int], List[Optional[int]]]"}, {"lineNumber": 969, "col_offset": 4, "nodeName": "out_shape2", "type": "Union[List[Optional[int]], List[int]]"}, {"lineNumber": 969, "col_offset": 17, "nodeName": "in_shape", "type": "Union[List[Optional[int]], List[int]]"}, {"lineNumber": 970, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 972, "col_offset": 4, "nodeName": "merge_linear", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 975, "col_offset": 4, "nodeName": "merge_tanh", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "in_shape_flat", "type": "List[int]"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 984, "col_offset": 4, "nodeName": "out_shape1", "type": "List[int]"}, {"lineNumber": 985, "col_offset": 4, "nodeName": "out_shape2", "type": "List[int]"}, {"lineNumber": 985, "col_offset": 17, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "merge_linear", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 992, "col_offset": 4, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "outputs1_flat", "type": "Any"}, {"lineNumber": 994, "col_offset": 4, "nodeName": "merge_tanh", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 995, "col_offset": 4, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "outputs2_flat", "type": "Any"}, {"lineNumber": 1005, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1007, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1008, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "merge_linear", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "merge_tanh", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1020, "col_offset": 4, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "expected_out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1023, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 1024, "col_offset": 4, "nodeName": "merge_linear", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1025, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "in1", "type": "Any"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1035, "col_offset": 4, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "op", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "module", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1053, "col_offset": 4, "nodeName": "ab_tuple", "type": "Type[`namedtuple-ab_tuple-a-b`]"}, {"lineNumber": 1058, "col_offset": 22, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1084, "col_offset": 4, "nodeName": "in1", "type": "Any"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1093, "col_offset": 4, "nodeName": "op", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 1102, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1108, "col_offset": 4, "nodeName": "in1", "type": "Any"}, {"lineNumber": 1109, "col_offset": 4, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1111, "col_offset": 4, "nodeName": "module", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1112, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1115, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 1121, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1124, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1132, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1133, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1135, "col_offset": 4, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1136, "col_offset": 4, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 1137, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1139, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1144, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1145, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1147, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1148, "col_offset": 4, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1149, "col_offset": 4, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1150, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1151, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "begin_tf", "type": "List[int]"}, {"lineNumber": 1154, "col_offset": 4, "nodeName": "size_tf", "type": "List[int]"}, {"lineNumber": 1155, "col_offset": 4, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 1162, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1164, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1165, "col_offset": 4, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1166, "col_offset": 4, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1167, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1168, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1179, "col_offset": 4, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1180, "col_offset": 4, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1181, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1182, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1190, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1191, "col_offset": 4, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1192, "col_offset": 4, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1194, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1200, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1207, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1208, "col_offset": 4, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1209, "col_offset": 4, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1210, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1212, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1213, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1215, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1220, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1221, "col_offset": 4, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1222, "col_offset": 4, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1229, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1239, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1240, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1241, "col_offset": 4, "nodeName": "multiples", "type": "List[int]"}, {"lineNumber": 1242, "col_offset": 4, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 1243, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1244, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.TileByDim"}, {"lineNumber": 1245, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1250, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1253, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1254, "col_offset": 4, "nodeName": "multiples", "type": "List[int]"}, {"lineNumber": 1255, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.TileByDim"}, {"lineNumber": 1256, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1258, "col_offset": 4, "nodeName": "multiple_tf", "type": "List[int]"}, {"lineNumber": 1259, "col_offset": 4, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 1266, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1268, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1269, "col_offset": 4, "nodeName": "multiples", "type": "List[int]"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.TileByDim"}, {"lineNumber": 1271, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1279, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1280, "col_offset": 4, "nodeName": "invalid_multiples_format", "type": "List[int]"}, {"lineNumber": 1282, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1287, "col_offset": 4, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1288, "col_offset": 4, "nodeName": "multiples", "type": "List[int]"}, {"lineNumber": 1290, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1295, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1298, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1305, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1306, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 1307, "col_offset": 4, "nodeName": "size", "type": "int"}, {"lineNumber": 1308, "col_offset": 4, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 1309, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1310, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1311, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1316, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1317, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1319, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 1320, "col_offset": 4, "nodeName": "size", "type": "int"}, {"lineNumber": 1321, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1322, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1324, "col_offset": 4, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 1331, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 1332, "col_offset": 4, "nodeName": "invalid_size", "type": "int"}, {"lineNumber": 1334, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1339, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 1340, "col_offset": 4, "nodeName": "size", "type": "int"}, {"lineNumber": 1341, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1343, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1344, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1346, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1351, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 1352, "col_offset": 4, "nodeName": "size", "type": "int"}, {"lineNumber": 1353, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1355, "col_offset": 4, "nodeName": "namedtuple_type", "type": "Type[`namedtuple-abc-a-b-c`]"}, {"lineNumber": 1370, "col_offset": 4, "nodeName": "merged_tensors", "type": "Any"}, {"lineNumber": 1386, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1389, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1397, "col_offset": 4, "nodeName": "shape0", "type": "List[int]"}, {"lineNumber": 1398, "col_offset": 4, "nodeName": "shape1", "type": "List[int]"}, {"lineNumber": 1399, "col_offset": 4, "nodeName": "input0", "type": "Any"}, {"lineNumber": 1400, "col_offset": 4, "nodeName": "input1", "type": "Any"}, {"lineNumber": 1402, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1403, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1404, "col_offset": 4, "nodeName": "output0", "type": "Any"}, {"lineNumber": 1412, "col_offset": 4, "nodeName": "shape0", "type": "List[int]"}, {"lineNumber": 1413, "col_offset": 4, "nodeName": "shape1", "type": "List[int]"}, {"lineNumber": 1414, "col_offset": 4, "nodeName": "shape2", "type": "List[int]"}, {"lineNumber": 1415, "col_offset": 4, "nodeName": "input0", "type": "Any"}, {"lineNumber": 1416, "col_offset": 4, "nodeName": "input1", "type": "Any"}, {"lineNumber": 1417, "col_offset": 4, "nodeName": "input2", "type": "Any"}, {"lineNumber": 1419, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1420, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1421, "col_offset": 4, "nodeName": "output0", "type": "Any"}, {"lineNumber": 1422, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1431, "col_offset": 4, "nodeName": "shape0", "type": "List[int]"}, {"lineNumber": 1432, "col_offset": 4, "nodeName": "shape1", "type": "List[int]"}, {"lineNumber": 1433, "col_offset": 4, "nodeName": "shape2", "type": "List[int]"}, {"lineNumber": 1434, "col_offset": 4, "nodeName": "input0", "type": "Any"}, {"lineNumber": 1435, "col_offset": 4, "nodeName": "input1", "type": "Any"}, {"lineNumber": 1436, "col_offset": 4, "nodeName": "input2", "type": "Any"}, {"lineNumber": 1438, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1439, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1440, "col_offset": 4, "nodeName": "output0", "type": "Any"}, {"lineNumber": 1441, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1442, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1453, "col_offset": 4, "nodeName": "input1", "type": "Any"}, {"lineNumber": 1454, "col_offset": 4, "nodeName": "input2", "type": "Any"}, {"lineNumber": 1456, "col_offset": 4, "nodeName": "invalid_idx", "type": "int"}, {"lineNumber": 1457, "col_offset": 4, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1459, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1466, "col_offset": 4, "nodeName": "invalid_idx", "type": "float"}, {"lineNumber": 1468, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1474, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "_assert_float_dtype", "type": "Any"}, {"lineNumber": 39, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 41, "col_offset": 73, "nodeName": "mu", "type": "float"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 69, "col_offset": 6, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "seed", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "float16", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "float64", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "seed", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "initializers", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "initializers", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 177, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "inp_1", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "inp_2", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "out_data_1", "type": "Any"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "out_data_2", "type": "Any"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "lin1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "inp", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "lin2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 201, "col_offset": 9, "nodeName": "inp", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "lin3", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "inp", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 229, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "is_connected", "type": "bool"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "is_connected", "type": "bool"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 242, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "is_connected", "type": "bool"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "is_connected", "type": "bool"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "l2_regularizer", "type": "Any"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 311, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 318, "col_offset": 41, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 319, "col_offset": 52, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 337, "col_offset": 6, "nodeName": "linear_transpose1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 338, "col_offset": 6, "nodeName": "linear_transpose2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 339, "col_offset": 6, "nodeName": "linear_transpose3", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 341, "col_offset": 38, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 345, "col_offset": 48, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 347, "col_offset": 50, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 348, "col_offset": 43, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 349, "col_offset": 50, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 350, "col_offset": 43, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 352, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "transpose", "type": "Callable"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "has_bias", "type": "Any"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "has_bias", "type": "Any"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "linear1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "input_to_linear", "type": "Any"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "linear_transpose1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 364, "col_offset": 49, "nodeName": "linear_out", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 393, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 393, "col_offset": 24, "nodeName": "n_outputs", "type": "int"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 397, "col_offset": 6, "nodeName": "labels", "type": "Any"}, {"lineNumber": 404, "col_offset": 6, "nodeName": "loss", "type": "Any"}, {"lineNumber": 406, "col_offset": 6, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 421, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 424, "col_offset": 37, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 425, "col_offset": 37, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "IN_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 436, "col_offset": 33, "nodeName": "IN_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "self", "type": "AddBiasTest"}, {"lineNumber": 446, "col_offset": 44, "nodeName": "IN_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "self", "type": "AddBiasTest"}, {"lineNumber": 447, "col_offset": 45, "nodeName": "OUT_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "self", "type": "AddBiasTest"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 452, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 453, "col_offset": 10, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 454, "col_offset": 13, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 454, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 462, "col_offset": 6, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 464, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 464, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 469, "col_offset": 10, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 471, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 472, "col_offset": 38, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 476, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 477, "col_offset": 38, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 479, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 479, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 488, "col_offset": 6, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "seed", "type": "Any"}, {"lineNumber": 494, "col_offset": 13, "nodeName": "float16", "type": "Any"}, {"lineNumber": 494, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 494, "col_offset": 37, "nodeName": "float64", "type": "Any"}, {"lineNumber": 496, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "l2_regularizer", "type": "Any"}, {"lineNumber": 499, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 526, "col_offset": 19, "nodeName": "seed", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 527, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 528, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 529, "col_offset": 10, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "inp_1", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 532, "col_offset": 16, "nodeName": "inp_2", "type": "Any"}, {"lineNumber": 533, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 535, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 539, "col_offset": 24, "nodeName": "out_data_1", "type": "Any"}, {"lineNumber": 539, "col_offset": 36, "nodeName": "out_data_2", "type": "Any"}, {"lineNumber": 545, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 547, "col_offset": 11, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 548, "col_offset": 11, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "add1", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 552, "col_offset": 9, "nodeName": "inp", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "add2", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 553, "col_offset": 9, "nodeName": "inp", "type": "Any"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "add3", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 554, "col_offset": 9, "nodeName": "inp", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 557, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 557, "col_offset": 39, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 558, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 559, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 615, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 615, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "transpose", "type": "Callable"}, {"lineNumber": 625, "col_offset": 20, "nodeName": "transpose", "type": "Callable"}, {"lineNumber": 626, "col_offset": 14, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 626, "col_offset": 18, "nodeName": "input_to_add", "type": "Any"}, {"lineNumber": 627, "col_offset": 24, "nodeName": "add_transpose", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 627, "col_offset": 38, "nodeName": "add_out", "type": "Any"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 634, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "bias", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 639, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 641, "col_offset": 35, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 649, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 650, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 651, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 657, "col_offset": 10, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 664, "col_offset": 40, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 670, "col_offset": 13, "nodeName": "float16", "type": "Any"}, {"lineNumber": 670, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 670, "col_offset": 37, "nodeName": "float64", "type": "Any"}, {"lineNumber": 672, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 676, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 680, "col_offset": 6, "nodeName": "y", "type": "Any"}, {"lineNumber": 715, "col_offset": 10, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 717, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 717, "col_offset": 59, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 721, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 721, "col_offset": 59, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 723, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 723, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 752, "col_offset": 20, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 753, "col_offset": 10, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 757, "col_offset": 19, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 757, "col_offset": 37, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 758, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 764, "col_offset": 10, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 767, "col_offset": 4, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 769, "col_offset": 34, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 777, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 778, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 779, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 779, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 786, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 786, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 787, "col_offset": 10, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 788, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 788, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 794, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 794, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 798, "col_offset": 6, "nodeName": "output_invalid_shape_format", "type": "List[int]"}, {"lineNumber": 804, "col_offset": 6, "nodeName": "output_invalid_shape_format", "type": "List[int]"}, {"lineNumber": 811, "col_offset": 6, "nodeName": "invalid_shape_type", "type": "List[Union[int, str]]"}, {"lineNumber": 817, "col_offset": 6, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 825, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 825, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 827, "col_offset": 10, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 828, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 828, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 836, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 836, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 837, "col_offset": 10, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 838, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 838, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 845, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 845, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 846, "col_offset": 10, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 847, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 847, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 848, "col_offset": 22, "nodeName": "prod", "type": "Any"}, {"lineNumber": 848, "col_offset": 30, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 849, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 856, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 857, "col_offset": 10, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "transpose", "type": "Callable"}, {"lineNumber": 859, "col_offset": 14, "nodeName": "transpose", "type": "Callable"}, {"lineNumber": 860, "col_offset": 26, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 860, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 863, "col_offset": 13, "nodeName": "mod_t", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "intermediate_output", "type": "Any"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 865, "col_offset": 21, "nodeName": "mod_t_t", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 865, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 868, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 878, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchFlatten"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 879, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 880, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 880, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 885, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 885, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 886, "col_offset": 10, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 887, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchFlatten"}, {"lineNumber": 887, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 888, "col_offset": 21, "nodeName": "prod", "type": "Any"}, {"lineNumber": 888, "col_offset": 29, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 892, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 892, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 893, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 903, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 904, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 904, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 905, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 905, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 912, "col_offset": 10, "nodeName": "FlattenTrailingDimensions", "type": "Type[sonnet.python.modules.basic.FlattenTrailingDimensions]"}, {"lineNumber": 913, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 913, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 918, "col_offset": 10, "nodeName": "FlattenTrailingDimensions", "type": "Type[sonnet.python.modules.basic.FlattenTrailingDimensions]"}, {"lineNumber": 919, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 919, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 928, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 929, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 929, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 929, "col_offset": 40, "nodeName": "shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 930, "col_offset": 20, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 931, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 932, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 933, "col_offset": 6, "nodeName": "trailing", "type": "Any"}, {"lineNumber": 942, "col_offset": 10, "nodeName": "FlattenTrailingDimensions", "type": "Type[sonnet.python.modules.basic.FlattenTrailingDimensions]"}, {"lineNumber": 943, "col_offset": 16, "nodeName": "transpose", "type": "Callable"}, {"lineNumber": 944, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 945, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 945, "col_offset": 42, "nodeName": "initial_shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 946, "col_offset": 11, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 946, "col_offset": 15, "nodeName": "original", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 948, "col_offset": 12, "nodeName": "mod_trans", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 948, "col_offset": 22, "nodeName": "flat", "type": "Any"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 949, "col_offset": 50, "nodeName": "initial_shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 957, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 958, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 959, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 959, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 964, "col_offset": 6, "nodeName": "in_shape", "type": "List[Optional[int]]"}, {"lineNumber": 966, "col_offset": 6, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 970, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 970, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 971, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 971, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 972, "col_offset": 19, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 973, "col_offset": 15, "nodeName": "merge_linear", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 973, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 974, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 974, "col_offset": 53, "nodeName": "out_shape1", "type": "Union[List[Optional[int]], List[int]]"}, {"lineNumber": 975, "col_offset": 17, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 976, "col_offset": 15, "nodeName": "merge_tanh", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 976, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 977, "col_offset": 53, "nodeName": "out_shape2", "type": "Union[List[int], List[Optional[int]]]"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 986, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 987, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 987, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 988, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 988, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 991, "col_offset": 19, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 992, "col_offset": 15, "nodeName": "merge_linear", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 992, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 993, "col_offset": 20, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 993, "col_offset": 27, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 994, "col_offset": 17, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 995, "col_offset": 15, "nodeName": "merge_tanh", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 995, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 996, "col_offset": 20, "nodeName": "merge_tanh", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 996, "col_offset": 31, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 997, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1007, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1007, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1008, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 1008, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1009, "col_offset": 19, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 1010, "col_offset": 17, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 1011, "col_offset": 4, "nodeName": "merge_linear", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1011, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1012, "col_offset": 4, "nodeName": "merge_tanh", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1012, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1016, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1022, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1022, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1023, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 1024, "col_offset": 19, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 1025, "col_offset": 13, "nodeName": "merge_linear", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1025, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1027, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1029, "col_offset": 6, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 1033, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1034, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1038, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1041, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 1042, "col_offset": 9, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 1042, "col_offset": 20, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 1043, "col_offset": 13, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 1043, "col_offset": 28, "nodeName": "op", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 1044, "col_offset": 13, "nodeName": "module", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1044, "col_offset": 20, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 1046, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1047, "col_offset": 6, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 1053, "col_offset": 15, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 1054, "col_offset": 9, "nodeName": "ab_tuple", "type": "Type[`namedtuple-ab_tuple-a-b`]"}, {"lineNumber": 1058, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1076, "col_offset": 70, "nodeName": "ab", "type": "`namedtuple-ab_tuple-a-b`"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 1078, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 1078, "col_offset": 43, "nodeName": "ab", "type": "`namedtuple-ab_tuple-a-b`"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1079, "col_offset": 47, "nodeName": "a", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1084, "col_offset": 10, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 1085, "col_offset": 10, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 1088, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1091, "col_offset": 13, "nodeName": "b", "type": "Any"}, {"lineNumber": 1093, "col_offset": 9, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 1093, "col_offset": 20, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 1103, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1108, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1109, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1111, "col_offset": 13, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 1111, "col_offset": 28, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 1112, "col_offset": 13, "nodeName": "module", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1112, "col_offset": 20, "nodeName": "in1", "type": "Any"}, {"lineNumber": 1112, "col_offset": 25, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1113, "col_offset": 4, "nodeName": "assert_is_compatible_with", "type": "Any"}, {"lineNumber": 1115, "col_offset": 22, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 1115, "col_offset": 32, "nodeName": "in1", "type": "Any"}, {"lineNumber": 1115, "col_offset": 37, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1116, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1128, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1129, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1129, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1129, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1137, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1137, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1138, "col_offset": 10, "nodeName": "SliceByDim", "type": "Type[sonnet.python.modules.basic.SliceByDim]"}, {"lineNumber": 1139, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1139, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1140, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1140, "col_offset": 41, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 1145, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1150, "col_offset": 10, "nodeName": "SliceByDim", "type": "Type[sonnet.python.modules.basic.SliceByDim]"}, {"lineNumber": 1151, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1151, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1155, "col_offset": 17, "nodeName": "slice", "type": "Any"}, {"lineNumber": 1155, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1157, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1162, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1167, "col_offset": 10, "nodeName": "SliceByDim", "type": "Type[sonnet.python.modules.basic.SliceByDim]"}, {"lineNumber": 1168, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1168, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1170, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1171, "col_offset": 6, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1172, "col_offset": 6, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 1176, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1181, "col_offset": 10, "nodeName": "SliceByDim", "type": "Type[sonnet.python.modules.basic.SliceByDim]"}, {"lineNumber": 1182, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1182, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1184, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1185, "col_offset": 6, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1186, "col_offset": 6, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 1194, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1196, "col_offset": 6, "nodeName": "invalid_begin_format", "type": "List[int]"}, {"lineNumber": 1200, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1202, "col_offset": 6, "nodeName": "invalid_size_format", "type": "List[int]"}, {"lineNumber": 1210, "col_offset": 10, "nodeName": "SliceByDim", "type": "Type[sonnet.python.modules.basic.SliceByDim]"}, {"lineNumber": 1213, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1213, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1215, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1217, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1226, "col_offset": 6, "nodeName": "_", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1234, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.TileByDim"}, {"lineNumber": 1235, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1235, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1236, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1236, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1236, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1243, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1243, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1244, "col_offset": 10, "nodeName": "TileByDim", "type": "Type[sonnet.python.modules.basic.TileByDim]"}, {"lineNumber": 1245, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.TileByDim"}, {"lineNumber": 1245, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1246, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1246, "col_offset": 41, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 1251, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1255, "col_offset": 10, "nodeName": "TileByDim", "type": "Type[sonnet.python.modules.basic.TileByDim]"}, {"lineNumber": 1256, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.TileByDim"}, {"lineNumber": 1256, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1259, "col_offset": 17, "nodeName": "tile", "type": "Any"}, {"lineNumber": 1259, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1261, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1266, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1270, "col_offset": 10, "nodeName": "TileByDim", "type": "Type[sonnet.python.modules.basic.TileByDim]"}, {"lineNumber": 1271, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.TileByDim"}, {"lineNumber": 1271, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1273, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1274, "col_offset": 6, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1275, "col_offset": 6, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 1282, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1300, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1301, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1301, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1302, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1302, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1302, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1309, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1309, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1310, "col_offset": 10, "nodeName": "MergeDims", "type": "Type[sonnet.python.modules.basic.MergeDims]"}, {"lineNumber": 1311, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1311, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1312, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1312, "col_offset": 41, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 1317, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1321, "col_offset": 10, "nodeName": "MergeDims", "type": "Type[sonnet.python.modules.basic.MergeDims]"}, {"lineNumber": 1322, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1322, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1324, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1324, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1326, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1327, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 1341, "col_offset": 10, "nodeName": "MergeDims", "type": "Type[sonnet.python.modules.basic.MergeDims]"}, {"lineNumber": 1344, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1344, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1346, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1353, "col_offset": 10, "nodeName": "MergeDims", "type": "Type[sonnet.python.modules.basic.MergeDims]"}, {"lineNumber": 1355, "col_offset": 22, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 1370, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1370, "col_offset": 25, "nodeName": "nested_tensors", "type": "List[Any]"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 1372, "col_offset": 31, "nodeName": "nested_tensors", "type": "List[Any]"}, {"lineNumber": 1372, "col_offset": 47, "nodeName": "merged_tensors", "type": "Any"}, {"lineNumber": 1374, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1376, "col_offset": 6, "nodeName": "original_shape", "type": "Any"}, {"lineNumber": 1377, "col_offset": 6, "nodeName": "merged_shape", "type": "Any"}, {"lineNumber": 1391, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1392, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1393, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1393, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1393, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1399, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1400, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1402, "col_offset": 10, "nodeName": "SelectInput", "type": "Type[sonnet.python.modules.basic.SelectInput]"}, {"lineNumber": 1403, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1403, "col_offset": 17, "nodeName": "input0", "type": "Any"}, {"lineNumber": 1403, "col_offset": 25, "nodeName": "input1", "type": "Any"}, {"lineNumber": 1404, "col_offset": 14, "nodeName": "identity", "type": "Any"}, {"lineNumber": 1404, "col_offset": 26, "nodeName": "input0", "type": "Any"}, {"lineNumber": 1406, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1407, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 1415, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1416, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1417, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1419, "col_offset": 10, "nodeName": "SelectInput", "type": "Type[sonnet.python.modules.basic.SelectInput]"}, {"lineNumber": 1420, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1420, "col_offset": 17, "nodeName": "input0", "type": "Any"}, {"lineNumber": 1420, "col_offset": 25, "nodeName": "input1", "type": "Any"}, {"lineNumber": 1420, "col_offset": 33, "nodeName": "input2", "type": "Any"}, {"lineNumber": 1421, "col_offset": 14, "nodeName": "identity", "type": "Any"}, {"lineNumber": 1421, "col_offset": 26, "nodeName": "input0", "type": "Any"}, {"lineNumber": 1422, "col_offset": 14, "nodeName": "identity", "type": "Any"}, {"lineNumber": 1422, "col_offset": 26, "nodeName": "input2", "type": "Any"}, {"lineNumber": 1424, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1425, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 1434, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1435, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1436, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1438, "col_offset": 10, "nodeName": "SelectInput", "type": "Type[sonnet.python.modules.basic.SelectInput]"}, {"lineNumber": 1439, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1439, "col_offset": 17, "nodeName": "input0", "type": "Any"}, {"lineNumber": 1439, "col_offset": 25, "nodeName": "input1", "type": "Any"}, {"lineNumber": 1439, "col_offset": 33, "nodeName": "input2", "type": "Any"}, {"lineNumber": 1440, "col_offset": 14, "nodeName": "identity", "type": "Any"}, {"lineNumber": 1440, "col_offset": 26, "nodeName": "input0", "type": "Any"}, {"lineNumber": 1441, "col_offset": 14, "nodeName": "identity", "type": "Any"}, {"lineNumber": 1441, "col_offset": 26, "nodeName": "input1", "type": "Any"}, {"lineNumber": 1442, "col_offset": 14, "nodeName": "identity", "type": "Any"}, {"lineNumber": 1442, "col_offset": 26, "nodeName": "input2", "type": "Any"}, {"lineNumber": 1444, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1445, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 1453, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1453, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1454, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1454, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1457, "col_offset": 10, "nodeName": "SelectInput", "type": "Type[sonnet.python.modules.basic.SelectInput]"}, {"lineNumber": 1474, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "init_ops", "type": "Any"}, {"lineNumber": 41, "col_offset": 65, "nodeName": "sigma", "type": "float"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "random_normal_tensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 86, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "types", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "tol", "type": "Tuple[float, float, float]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "initializers", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "initializers", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 158, "col_offset": 10, "nodeName": "result", "type": "Any"}, {"lineNumber": 159, "col_offset": 10, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 177, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "initializers", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 182, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 184, "col_offset": 52, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "run", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 195, "col_offset": 49, "nodeName": "out_size", "type": "int"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "out_size", "type": "int"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "out_size", "type": "int"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "lin1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "lin2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "lin3", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "lin1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "lin2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "lin3", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 211, "col_offset": 39, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "lin1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "lin2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "lin3", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 229, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "out_size", "type": "int"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 235, "col_offset": 10, "nodeName": "bad_inputs", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 242, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "out_size", "type": "int"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 247, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 248, "col_offset": 10, "nodeName": "bad_inputs", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 253, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 259, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 270, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 275, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 276, "col_offset": 6, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 281, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 281, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 282, "col_offset": 6, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 299, "col_offset": 36, "nodeName": "out_size", "type": "int"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 311, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 318, "col_offset": 41, "nodeName": "clone1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 319, "col_offset": 52, "nodeName": "clone1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 322, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "linear_vars", "type": "Any"}, {"lineNumber": 322, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 43, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 323, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "linear_vars", "type": "Any"}, {"lineNumber": 323, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 323, "col_offset": 43, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 337, "col_offset": 26, "nodeName": "transpose", "type": "Callable"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "transpose", "type": "Callable"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "transpose", "type": "Callable"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 38, "nodeName": "linear1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "linear1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "linear2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "linear2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 345, "col_offset": 48, "nodeName": "linear_transpose1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "linear_transpose1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 50, "nodeName": "linear_transpose2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 348, "col_offset": 43, "nodeName": "linear_transpose2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 50, "nodeName": "linear_transpose3", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 43, "nodeName": "linear_transpose3", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 352, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "linear1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 357, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 357, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "linear_transpose1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "input_to_linear", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "linear1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "linear1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "linear_transpose1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 387, "col_offset": 6, "nodeName": "warn", "type": "Any"}, {"lineNumber": 393, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 394, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 396, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 396, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "to_int64", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "deprecated_flipped_sparse_softmax_cross_entropy_with_logits", "type": "Any"}, {"lineNumber": 403, "col_offset": 10, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 404, "col_offset": 28, "nodeName": "cross_entropy", "type": "Any"}, {"lineNumber": 406, "col_offset": 18, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 407, "col_offset": 6, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "loss", "type": "Any"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 410, "col_offset": 48, "nodeName": "sess", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "errors", "type": "Any"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 418, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 419, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 421, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 421, "col_offset": 42, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 424, "col_offset": 37, "nodeName": "variables", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 425, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 425, "col_offset": 37, "nodeName": "variables", "type": "Any"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 446, "col_offset": 44, "nodeName": "self", "type": "AddBiasTest"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 447, "col_offset": 45, "nodeName": "self", "type": "AddBiasTest"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 452, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 452, "col_offset": 46, "nodeName": "mb_in_shape", "type": "Any"}, {"lineNumber": 453, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 453, "col_offset": 32, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 456, "col_offset": 46, "nodeName": "mb_out_shape", "type": "Any"}, {"lineNumber": 461, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 463, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 464, "col_offset": 21, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 468, "col_offset": 46, "nodeName": "mb_in_shape", "type": "Any"}, {"lineNumber": 469, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 469, "col_offset": 32, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 472, "col_offset": 38, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 473, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 473, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 473, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 474, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 477, "col_offset": 38, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 478, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 478, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 478, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 479, "col_offset": 10, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 484, "col_offset": 25, "nodeName": "variables_", "type": "Tuple[Any, ...]"}, {"lineNumber": 487, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 487, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 488, "col_offset": 14, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 488, "col_offset": 25, "nodeName": "bias_shape", "type": "Any"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 489, "col_offset": 35, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 494, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 494, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 494, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "types", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 496, "col_offset": 36, "nodeName": "tol", "type": "Tuple[float, float, float]"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 499, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 499, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 503, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 504, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 513, "col_offset": 13, "nodeName": "bias_shape", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 517, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 518, "col_offset": 10, "nodeName": "result", "type": "Any"}, {"lineNumber": 519, "col_offset": 10, "nodeName": "output_data", "type": "Any"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 526, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 527, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 527, "col_offset": 45, "nodeName": "mb_in_shape", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 528, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 528, "col_offset": 45, "nodeName": "mb_in_shape", "type": "Any"}, {"lineNumber": 529, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 529, "col_offset": 32, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 533, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 536, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 537, "col_offset": 31, "nodeName": "run", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 545, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 545, "col_offset": 43, "nodeName": "mb_in_shape", "type": "Any"}, {"lineNumber": 547, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 547, "col_offset": 33, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 547, "col_offset": 49, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 548, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 548, "col_offset": 33, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 548, "col_offset": 49, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 549, "col_offset": 33, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 549, "col_offset": 49, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 557, "col_offset": 21, "nodeName": "add1", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 558, "col_offset": 21, "nodeName": "add2", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 558, "col_offset": 39, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 559, "col_offset": 21, "nodeName": "add3", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 559, "col_offset": 39, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "add1", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "add2", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "add3", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 567, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 567, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 569, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 569, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 571, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 576, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 576, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 576, "col_offset": 43, "nodeName": "err", "type": "str"}, {"lineNumber": 577, "col_offset": 6, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 582, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 582, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 582, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 583, "col_offset": 6, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 589, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 589, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 590, "col_offset": 6, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 595, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 595, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 595, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 602, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 602, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 603, "col_offset": 6, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 608, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 608, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 608, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 609, "col_offset": 6, "nodeName": "AddBias", "type": "Type[sonnet.python.modules.basic.AddBias]"}, {"lineNumber": 614, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 614, "col_offset": 32, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 615, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 615, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 615, "col_offset": 52, "nodeName": "mb_in_shape", "type": "Any"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 621, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 621, "col_offset": 33, "nodeName": "ParentNotBuiltError", "type": "Type[sonnet.python.modules.base.ParentNotBuiltError]"}, {"lineNumber": 621, "col_offset": 58, "nodeName": "err", "type": "str"}, {"lineNumber": 622, "col_offset": 6, "nodeName": "add_transpose", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 622, "col_offset": 20, "nodeName": "input_to_add", "type": "Any"}, {"lineNumber": 625, "col_offset": 20, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 628, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 634, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 636, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 638, "col_offset": 36, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "self", "type": "AddBiasTest"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 641, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 641, "col_offset": 35, "nodeName": "variables", "type": "Any"}, {"lineNumber": 648, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 649, "col_offset": 12, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 650, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 650, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 657, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 658, "col_offset": 14, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 659, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 664, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 670, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 670, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 670, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 672, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 672, "col_offset": 29, "nodeName": "types", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 672, "col_offset": 36, "nodeName": "tol", "type": "Tuple[float, float, float]"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 676, "col_offset": 25, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 677, "col_offset": 12, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 680, "col_offset": 10, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 680, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 681, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "lhs_matrix", "type": "Any"}, {"lineNumber": 685, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 685, "col_offset": 26, "nodeName": "product", "type": "Any"}, {"lineNumber": 694, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 694, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 695, "col_offset": 6, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 701, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 701, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 702, "col_offset": 6, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 708, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 708, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 708, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 715, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 715, "col_offset": 37, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 718, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 718, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 718, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 719, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 722, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 722, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 722, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 723, "col_offset": 10, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 726, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 726, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 727, "col_offset": 6, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 732, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 732, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 733, "col_offset": 6, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 739, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 739, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 740, "col_offset": 6, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 746, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 746, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 746, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "TrainableVariable", "type": "Type[sonnet.python.modules.basic.TrainableVariable]"}, {"lineNumber": 752, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 753, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 754, "col_offset": 13, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 757, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 757, "col_offset": 37, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 762, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 764, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 766, "col_offset": 21, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 769, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 769, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 769, "col_offset": 34, "nodeName": "variables", "type": "Any"}, {"lineNumber": 776, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 778, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 778, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 779, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 785, "col_offset": 11, "nodeName": "prod", "type": "Any"}, {"lineNumber": 785, "col_offset": 19, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 785, "col_offset": 32, "nodeName": "prod", "type": "Any"}, {"lineNumber": 785, "col_offset": 40, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 786, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 787, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 787, "col_offset": 33, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 789, "col_offset": 56, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 794, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 794, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 797, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 797, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 797, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 799, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 803, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 803, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 803, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 805, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 810, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 810, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 810, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 812, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 816, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 816, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 816, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 818, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 821, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 821, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 821, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 825, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 825, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 827, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 827, "col_offset": 33, "nodeName": "out_shape_lambda", "type": "Callable[[], Any]"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 829, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 836, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 836, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 837, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 837, "col_offset": 33, "nodeName": "out_size", "type": "List[int]"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 839, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 839, "col_offset": 56, "nodeName": "correct_out_size", "type": "List[int]"}, {"lineNumber": 845, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 845, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 846, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 846, "col_offset": 33, "nodeName": "out_size", "type": "List[int]"}, {"lineNumber": 848, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 849, "col_offset": 4, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 849, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 849, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 849, "col_offset": 54, "nodeName": "flattened_shape", "type": "Any"}, {"lineNumber": 856, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 857, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 857, "col_offset": 33, "nodeName": "out_size", "type": "List[int]"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 859, "col_offset": 14, "nodeName": "mod_t", "type": "sonnet.python.modules.basic.BatchReshape"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 861, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 862, "col_offset": 36, "nodeName": "correct_out_size", "type": "List[int]"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 864, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 864, "col_offset": 56, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 866, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 867, "col_offset": 36, "nodeName": "correct_out_size", "type": "List[int]"}, {"lineNumber": 868, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 869, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 869, "col_offset": 18, "nodeName": "out", "type": "Any"}, {"lineNumber": 869, "col_offset": 24, "nodeName": "run", "type": "Any"}, {"lineNumber": 870, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 870, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 870, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 877, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 878, "col_offset": 12, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "self", "type": "BatchFlattenTest"}, {"lineNumber": 879, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchFlatten"}, {"lineNumber": 879, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "self", "type": "BatchFlattenTest"}, {"lineNumber": 880, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchFlatten"}, {"lineNumber": 885, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 885, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 886, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 888, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "self", "type": "BatchFlattenTest"}, {"lineNumber": 889, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 889, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 889, "col_offset": 54, "nodeName": "flattened_size", "type": "Any"}, {"lineNumber": 892, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 892, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 893, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "self", "type": "BatchFlattenTest"}, {"lineNumber": 894, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 902, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "FlattenTrailingDimensions", "type": "Type[sonnet.python.modules.basic.FlattenTrailingDimensions]"}, {"lineNumber": 904, "col_offset": 4, "nodeName": "self", "type": "FlattenTrailingDimensionsTest"}, {"lineNumber": 904, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 904, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "self", "type": "FlattenTrailingDimensionsTest"}, {"lineNumber": 905, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 908, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 908, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 909, "col_offset": 6, "nodeName": "FlattenTrailingDimensions", "type": "Type[sonnet.python.modules.basic.FlattenTrailingDimensions]"}, {"lineNumber": 912, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 913, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 913, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 914, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 914, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 915, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 915, "col_offset": 10, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 918, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 919, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 919, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 920, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 920, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 921, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 921, "col_offset": 10, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 929, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 929, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 930, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 930, "col_offset": 34, "nodeName": "shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 931, "col_offset": 12, "nodeName": "FlattenTrailingDimensions", "type": "Type[sonnet.python.modules.basic.FlattenTrailingDimensions]"}, {"lineNumber": 931, "col_offset": 42, "nodeName": "dim_from", "type": "Any"}, {"lineNumber": 932, "col_offset": 15, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 932, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 933, "col_offset": 17, "nodeName": "prod", "type": "Any"}, {"lineNumber": 934, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 942, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 943, "col_offset": 16, "nodeName": "mod", "type": "sonnet.python.modules.basic.FlattenTrailingDimensions"}, {"lineNumber": 945, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 945, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 947, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 949, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 956, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 957, "col_offset": 12, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 958, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 958, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 959, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 968, "col_offset": 17, "nodeName": "in_shape", "type": "Union[List[Optional[int]], List[int]]"}, {"lineNumber": 968, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 970, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 970, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 970, "col_offset": 46, "nodeName": "in_shape", "type": "Union[List[Optional[int]], List[int]]"}, {"lineNumber": 971, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 972, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 972, "col_offset": 47, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 974, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 974, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 975, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 975, "col_offset": 45, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 977, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 984, "col_offset": 17, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 984, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 986, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 986, "col_offset": 37, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 987, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 987, "col_offset": 43, "nodeName": "in_shape_flat", "type": "List[int]"}, {"lineNumber": 988, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 991, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 991, "col_offset": 47, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 994, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 994, "col_offset": 45, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 997, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 998, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 999, "col_offset": 6, "nodeName": "out1", "type": "Any"}, {"lineNumber": 999, "col_offset": 12, "nodeName": "out_flat1", "type": "Any"}, {"lineNumber": 999, "col_offset": 24, "nodeName": "run", "type": "Any"}, {"lineNumber": 1000, "col_offset": 6, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1000, "col_offset": 12, "nodeName": "out_flat2", "type": "Any"}, {"lineNumber": 1000, "col_offset": 24, "nodeName": "run", "type": "Any"}, {"lineNumber": 1001, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1001, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1002, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1002, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1007, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1007, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1007, "col_offset": 46, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1008, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1009, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 1009, "col_offset": 47, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 1010, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 1010, "col_offset": 45, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1015, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1016, "col_offset": 4, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1016, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1021, "col_offset": 25, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 1021, "col_offset": 42, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1022, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1022, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1022, "col_offset": 46, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 1023, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1023, "col_offset": 36, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1024, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 1024, "col_offset": 47, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 1027, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1028, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1029, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 1029, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 1030, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1030, "col_offset": 23, "nodeName": "expected_out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1030, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1033, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1034, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1035, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1035, "col_offset": 26, "nodeName": "in1", "type": "Any"}, {"lineNumber": 1035, "col_offset": 32, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1035, "col_offset": 44, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1038, "col_offset": 6, "nodeName": "a", "type": "Any"}, {"lineNumber": 1038, "col_offset": 9, "nodeName": "b", "type": "Any"}, {"lineNumber": 1039, "col_offset": 6, "nodeName": "assert_is_compatible_with", "type": "Any"}, {"lineNumber": 1040, "col_offset": 6, "nodeName": "assert_is_compatible_with", "type": "Any"}, {"lineNumber": 1042, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 1043, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1046, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1047, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 1047, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 1048, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1048, "col_offset": 26, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1048, "col_offset": 31, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 1053, "col_offset": 15, "nodeName": "collections", "type": "module"}, {"lineNumber": 1063, "col_offset": 8, "nodeName": "_tester", "type": "BatchApplyTest"}, {"lineNumber": 1063, "col_offset": 23, "nodeName": "tester", "type": "BatchApplyTest"}, {"lineNumber": 1074, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1076, "col_offset": 13, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "nest", "type": "module"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1079, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1079, "col_offset": 47, "nodeName": "output", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1080, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1080, "col_offset": 47, "nodeName": "b", "type": "Any"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1081, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1081, "col_offset": 47, "nodeName": "b", "type": "Any"}, {"lineNumber": 1084, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1085, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1088, "col_offset": 6, "nodeName": "a", "type": "Any"}, {"lineNumber": 1088, "col_offset": 9, "nodeName": "b", "type": "Any"}, {"lineNumber": 1089, "col_offset": 6, "nodeName": "assert_is_compatible_with", "type": "Any"}, {"lineNumber": 1090, "col_offset": 6, "nodeName": "assert_is_compatible_with", "type": "Any"}, {"lineNumber": 1093, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 1097, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1097, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1102, "col_offset": 13, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 1102, "col_offset": 28, "nodeName": "op", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 1102, "col_offset": 66, "nodeName": "in1", "type": "Any"}, {"lineNumber": 1102, "col_offset": 71, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1103, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1104, "col_offset": 6, "nodeName": "in2_np", "type": "Any"}, {"lineNumber": 1104, "col_offset": 14, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 1104, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 1105, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1105, "col_offset": 26, "nodeName": "in2_np", "type": "Any"}, {"lineNumber": 1105, "col_offset": 34, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 1108, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1109, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1111, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1111, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1115, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1116, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1117, "col_offset": 6, "nodeName": "out_expected", "type": "Any"}, {"lineNumber": 1117, "col_offset": 20, "nodeName": "out_result", "type": "Any"}, {"lineNumber": 1117, "col_offset": 33, "nodeName": "run", "type": "Any"}, {"lineNumber": 1118, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1118, "col_offset": 26, "nodeName": "out_expected", "type": "Any"}, {"lineNumber": 1118, "col_offset": 40, "nodeName": "out_result", "type": "Any"}, {"lineNumber": 1125, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1126, "col_offset": 12, "nodeName": "SliceByDim", "type": "Type[sonnet.python.modules.basic.SliceByDim]"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1128, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1128, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1129, "col_offset": 4, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1129, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1137, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1137, "col_offset": 46, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1138, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1138, "col_offset": 30, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1138, "col_offset": 42, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1138, "col_offset": 54, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1140, "col_offset": 4, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1140, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1145, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1145, "col_offset": 37, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1150, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1150, "col_offset": 30, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1150, "col_offset": 42, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1150, "col_offset": 54, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1155, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1155, "col_offset": 40, "nodeName": "begin_tf", "type": "List[int]"}, {"lineNumber": 1155, "col_offset": 55, "nodeName": "size_tf", "type": "List[int]"}, {"lineNumber": 1157, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1158, "col_offset": 6, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1158, "col_offset": 14, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1158, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 1159, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1159, "col_offset": 26, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1159, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1162, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1162, "col_offset": 31, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1167, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1167, "col_offset": 30, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1167, "col_offset": 42, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1167, "col_offset": 54, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1170, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1171, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 1171, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 1173, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1173, "col_offset": 26, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1173, "col_offset": 34, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 1176, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1176, "col_offset": 31, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1181, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1181, "col_offset": 30, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1181, "col_offset": 42, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1181, "col_offset": 54, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1184, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1185, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 1185, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 1187, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1187, "col_offset": 26, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1187, "col_offset": 34, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 1194, "col_offset": 64, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1194, "col_offset": 68, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1195, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1195, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1195, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 1197, "col_offset": 10, "nodeName": "SliceByDim", "type": "Type[sonnet.python.modules.basic.SliceByDim]"}, {"lineNumber": 1200, "col_offset": 63, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1200, "col_offset": 67, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1201, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1201, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1201, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 1203, "col_offset": 10, "nodeName": "SliceByDim", "type": "Type[sonnet.python.modules.basic.SliceByDim]"}, {"lineNumber": 1210, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1210, "col_offset": 30, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1210, "col_offset": 42, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1210, "col_offset": 54, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1213, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1213, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1213, "col_offset": 46, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1216, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1216, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1216, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 1217, "col_offset": 10, "nodeName": "mod", "type": "sonnet.python.modules.basic.SliceByDim"}, {"lineNumber": 1217, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1225, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1225, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1225, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 1226, "col_offset": 10, "nodeName": "SliceByDim", "type": "Type[sonnet.python.modules.basic.SliceByDim]"}, {"lineNumber": 1233, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1234, "col_offset": 12, "nodeName": "TileByDim", "type": "Type[sonnet.python.modules.basic.TileByDim]"}, {"lineNumber": 1235, "col_offset": 4, "nodeName": "self", "type": "TileByDimTest"}, {"lineNumber": 1235, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.TileByDim"}, {"lineNumber": 1235, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1236, "col_offset": 4, "nodeName": "self", "type": "TileByDimTest"}, {"lineNumber": 1236, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.TileByDim"}, {"lineNumber": 1243, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1243, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1243, "col_offset": 46, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1244, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1244, "col_offset": 29, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1244, "col_offset": 45, "nodeName": "multiples", "type": "List[int]"}, {"lineNumber": 1246, "col_offset": 4, "nodeName": "self", "type": "TileByDimTest"}, {"lineNumber": 1246, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1251, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1251, "col_offset": 37, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1255, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1255, "col_offset": 29, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1255, "col_offset": 45, "nodeName": "multiples", "type": "List[int]"}, {"lineNumber": 1259, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1259, "col_offset": 43, "nodeName": "multiple_tf", "type": "List[int]"}, {"lineNumber": 1261, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1262, "col_offset": 6, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1262, "col_offset": 14, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1262, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 1263, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1263, "col_offset": 26, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1263, "col_offset": 34, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1266, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1266, "col_offset": 31, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1270, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1270, "col_offset": 29, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1270, "col_offset": 45, "nodeName": "multiples", "type": "List[int]"}, {"lineNumber": 1273, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1274, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 1274, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 1276, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1276, "col_offset": 26, "nodeName": "actual", "type": "Any"}, {"lineNumber": 1276, "col_offset": 34, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 1282, "col_offset": 68, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1282, "col_offset": 72, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1283, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1283, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1283, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 1284, "col_offset": 6, "nodeName": "TileByDim", "type": "Type[sonnet.python.modules.basic.TileByDim]"}, {"lineNumber": 1291, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1291, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1291, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 1292, "col_offset": 6, "nodeName": "TileByDim", "type": "Type[sonnet.python.modules.basic.TileByDim]"}, {"lineNumber": 1299, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1300, "col_offset": 12, "nodeName": "MergeDims", "type": "Type[sonnet.python.modules.basic.MergeDims]"}, {"lineNumber": 1301, "col_offset": 4, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1301, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1301, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1302, "col_offset": 4, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1302, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1309, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1309, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1309, "col_offset": 46, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1310, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1310, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 1310, "col_offset": 42, "nodeName": "size", "type": "int"}, {"lineNumber": 1312, "col_offset": 4, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1312, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1317, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1317, "col_offset": 37, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1321, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1321, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 1321, "col_offset": 42, "nodeName": "size", "type": "int"}, {"lineNumber": 1324, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1326, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1327, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 1328, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1335, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1335, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1335, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 1336, "col_offset": 6, "nodeName": "MergeDims", "type": "Type[sonnet.python.modules.basic.MergeDims]"}, {"lineNumber": 1341, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1341, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 1341, "col_offset": 42, "nodeName": "size", "type": "int"}, {"lineNumber": 1344, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1344, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1344, "col_offset": 46, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 1346, "col_offset": 55, "nodeName": "start", "type": "int"}, {"lineNumber": 1346, "col_offset": 63, "nodeName": "size", "type": "int"}, {"lineNumber": 1347, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1347, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1347, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 1348, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.MergeDims"}, {"lineNumber": 1348, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1353, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1353, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 1353, "col_offset": 42, "nodeName": "size", "type": "int"}, {"lineNumber": 1355, "col_offset": 22, "nodeName": "collections", "type": "module"}, {"lineNumber": 1357, "col_offset": 8, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1365, "col_offset": 8, "nodeName": "namedtuple_type", "type": "Type[`namedtuple-abc-a-b-c`]"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "nest", "type": "Any"}, {"lineNumber": 1374, "col_offset": 46, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 1374, "col_offset": 59, "nodeName": "nested_tensors", "type": "List[Any]"}, {"lineNumber": 1375, "col_offset": 46, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 1375, "col_offset": 59, "nodeName": "merged_tensors", "type": "Any"}, {"lineNumber": 1376, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1377, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1378, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1379, "col_offset": 23, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 1380, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1382, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1390, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1391, "col_offset": 12, "nodeName": "SelectInput", "type": "Type[sonnet.python.modules.basic.SelectInput]"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1392, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1392, "col_offset": 48, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1393, "col_offset": 4, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1393, "col_offset": 21, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1399, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1399, "col_offset": 37, "nodeName": "shape0", "type": "List[int]"}, {"lineNumber": 1400, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1400, "col_offset": 37, "nodeName": "shape1", "type": "List[int]"}, {"lineNumber": 1402, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1404, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1406, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1407, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 1408, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1415, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1415, "col_offset": 37, "nodeName": "shape0", "type": "List[int]"}, {"lineNumber": 1416, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1416, "col_offset": 37, "nodeName": "shape1", "type": "List[int]"}, {"lineNumber": 1417, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1417, "col_offset": 37, "nodeName": "shape2", "type": "List[int]"}, {"lineNumber": 1419, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1421, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1422, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1424, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1425, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 1426, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1427, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1434, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1434, "col_offset": 37, "nodeName": "shape0", "type": "List[int]"}, {"lineNumber": 1435, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1435, "col_offset": 37, "nodeName": "shape1", "type": "List[int]"}, {"lineNumber": 1436, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1436, "col_offset": 37, "nodeName": "shape2", "type": "List[int]"}, {"lineNumber": 1438, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1440, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1441, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1442, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1444, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1445, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 1446, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1447, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1448, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1449, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1453, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1453, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1454, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1454, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1457, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1461, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1461, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1461, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 1462, "col_offset": 6, "nodeName": "mod", "type": "sonnet.python.modules.basic.SelectInput"}, {"lineNumber": 1462, "col_offset": 10, "nodeName": "input1", "type": "Any"}, {"lineNumber": 1462, "col_offset": 18, "nodeName": "input2", "type": "Any"}, {"lineNumber": 1469, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1469, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1469, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1470, "col_offset": 6, "nodeName": "SelectInput", "type": "Type[sonnet.python.modules.basic.SelectInput]"}, {"lineNumber": 1474, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "LinearTest", "type": "Type[LinearTest]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 64, "col_offset": 64, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "out_size", "type": "int"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 86, "col_offset": 6, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "variables_", "type": "Tuple[Any, ...]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "err", "type": "str"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "variables_", "type": "Tuple[Any, ...]"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 111, "col_offset": 51, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "name", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "initializers", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 142, "col_offset": 58, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "dot", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 169, "col_offset": 63, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 170, "col_offset": 63, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "sess", "type": "Any"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "out_1", "type": "Any"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "out_2", "type": "Any"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "inp_1", "type": "Any"}, {"lineNumber": 187, "col_offset": 60, "nodeName": "inp_2", "type": "Any"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 187, "col_offset": 67, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 193, "col_offset": 61, "nodeName": "in_size", "type": "int"}, {"lineNumber": 195, "col_offset": 49, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 219, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 219, "col_offset": 59, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 221, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 221, "col_offset": 59, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 223, "col_offset": 59, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 226, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 227, "col_offset": 51, "nodeName": "in_size", "type": "int"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "in_size", "type": "int"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 241, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 254, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "out_size", "type": "int"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "out_size", "type": "int"}, {"lineNumber": 264, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "out_size", "type": "int"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "out_size", "type": "int"}, {"lineNumber": 275, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 276, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "out_size", "type": "int"}, {"lineNumber": 281, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 282, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "out_size", "type": "int"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 290, "col_offset": 40, "nodeName": "w_regularizer", "type": "Any"}, {"lineNumber": 290, "col_offset": 60, "nodeName": "b_regularizer", "type": "Any"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 299, "col_offset": 36, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 321, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 321, "col_offset": 42, "nodeName": "linear_vars", "type": "Any"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 330, "col_offset": 39, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 331, "col_offset": 36, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 333, "col_offset": 39, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 337, "col_offset": 26, "nodeName": "linear1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "linear1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "linear2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 352, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 353, "col_offset": 56, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 357, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "linear_transposed_output", "type": "Any"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "input_to_linear", "type": "Any"}, {"lineNumber": 387, "col_offset": 6, "nodeName": "logging", "type": "Any"}, {"lineNumber": 394, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 396, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 396, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 396, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 396, "col_offset": 55, "nodeName": "n_inputs", "type": "int"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 397, "col_offset": 27, "nodeName": "ones", "type": "Any"}, {"lineNumber": 397, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 400, "col_offset": 18, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 400, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 406, "col_offset": 18, "nodeName": "train", "type": "Any"}, {"lineNumber": 407, "col_offset": 6, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "init", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 413, "col_offset": 6, "nodeName": "fail", "type": "Any"}, {"lineNumber": 418, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 419, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 425, "col_offset": 26, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "IN_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 439, "col_offset": 37, "nodeName": "IN_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 440, "col_offset": 30, "nodeName": "IN_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 441, "col_offset": 31, "nodeName": "IN_SHAPE", "type": "Tuple[int, int, int]"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 445, "col_offset": 10, "nodeName": "AddBiasTest", "type": "Type[AddBiasTest]"}, {"lineNumber": 445, "col_offset": 23, "nodeName": "self", "type": "AddBiasTest"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "self", "type": "AddBiasTest"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "self", "type": "AddBiasTest"}, {"lineNumber": 452, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 462, "col_offset": 49, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 468, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 474, "col_offset": 6, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 478, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 487, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 487, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 487, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 487, "col_offset": 58, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 488, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 489, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 499, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 499, "col_offset": 43, "nodeName": "mb_in_shape", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 500, "col_offset": 34, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 509, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 511, "col_offset": 23, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 511, "col_offset": 41, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 512, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 514, "col_offset": 17, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 516, "col_offset": 17, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 517, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 527, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 528, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 533, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 535, "col_offset": 36, "nodeName": "mb_in_shape", "type": "Any"}, {"lineNumber": 536, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 536, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 537, "col_offset": 31, "nodeName": "sess", "type": "Any"}, {"lineNumber": 537, "col_offset": 41, "nodeName": "out_1", "type": "Any"}, {"lineNumber": 537, "col_offset": 48, "nodeName": "out_2", "type": "Any"}, {"lineNumber": 538, "col_offset": 41, "nodeName": "inp_1", "type": "Any"}, {"lineNumber": 538, "col_offset": 60, "nodeName": "inp_2", "type": "Any"}, {"lineNumber": 538, "col_offset": 48, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 538, "col_offset": 67, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 545, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 567, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 567, "col_offset": 58, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 569, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 569, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 569, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 569, "col_offset": 58, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 571, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 571, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 571, "col_offset": 58, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 576, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 577, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 582, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 583, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 589, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 590, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 591, "col_offset": 20, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 595, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 597, "col_offset": 20, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 602, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 608, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 609, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 609, "col_offset": 28, "nodeName": "bias_dims", "type": "Any"}, {"lineNumber": 615, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 621, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 621, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 628, "col_offset": 21, "nodeName": "add_transpose_out", "type": "Any"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "input_to_add", "type": "Any"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 636, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 641, "col_offset": 26, "nodeName": "bias", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 648, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 649, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 649, "col_offset": 39, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 659, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 664, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 676, "col_offset": 38, "nodeName": "lhs_shape", "type": "List[int]"}, {"lineNumber": 677, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 677, "col_offset": 40, "nodeName": "rhs_shape", "type": "List[int]"}, {"lineNumber": 678, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 680, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 680, "col_offset": 23, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 681, "col_offset": 11, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 682, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "product", "type": "Any"}, {"lineNumber": 684, "col_offset": 17, "nodeName": "w", "type": "Any"}, {"lineNumber": 684, "col_offset": 21, "nodeName": "run", "type": "Any"}, {"lineNumber": 685, "col_offset": 6, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 686, "col_offset": 26, "nodeName": "dot", "type": "Any"}, {"lineNumber": 694, "col_offset": 9, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 695, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 696, "col_offset": 15, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 701, "col_offset": 9, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 702, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 703, "col_offset": 15, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 708, "col_offset": 9, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 709, "col_offset": 33, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 718, "col_offset": 9, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 718, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 719, "col_offset": 6, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 722, "col_offset": 9, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 722, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 726, "col_offset": 9, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 727, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 733, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 739, "col_offset": 9, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 740, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 741, "col_offset": 15, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 746, "col_offset": 9, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 747, "col_offset": 33, "nodeName": "variable_name", "type": "str"}, {"lineNumber": 752, "col_offset": 20, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 754, "col_offset": 58, "nodeName": "w_regularizer", "type": "Any"}, {"lineNumber": 757, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 758, "col_offset": 29, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 762, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 769, "col_offset": 26, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 776, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 777, "col_offset": 34, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 785, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 785, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 786, "col_offset": 61, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 789, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 794, "col_offset": 61, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 797, "col_offset": 9, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 799, "col_offset": 6, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 803, "col_offset": 9, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 805, "col_offset": 6, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 810, "col_offset": 9, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 812, "col_offset": 6, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 816, "col_offset": 9, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 818, "col_offset": 6, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 821, "col_offset": 9, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 822, "col_offset": 6, "nodeName": "BatchReshape", "type": "Type[sonnet.python.modules.basic.BatchReshape]"}, {"lineNumber": 822, "col_offset": 46, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 829, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 836, "col_offset": 61, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 839, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 839, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 845, "col_offset": 61, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 849, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 856, "col_offset": 52, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 861, "col_offset": 21, "nodeName": "intermediate_output", "type": "Any"}, {"lineNumber": 862, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 864, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 864, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 866, "col_offset": 21, "nodeName": "further_output", "type": "Any"}, {"lineNumber": 867, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 868, "col_offset": 9, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 869, "col_offset": 24, "nodeName": "sess", "type": "Any"}, {"lineNumber": 869, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 869, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 870, "col_offset": 6, "nodeName": "self", "type": "BatchReshapeTest"}, {"lineNumber": 877, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 878, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 878, "col_offset": 34, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 885, "col_offset": 61, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 889, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 893, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 894, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 902, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 903, "col_offset": 59, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 908, "col_offset": 9, "nodeName": "self", "type": "FlattenTrailingDimensionsTest"}, {"lineNumber": 909, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 914, "col_offset": 9, "nodeName": "self", "type": "FlattenTrailingDimensionsTest"}, {"lineNumber": 920, "col_offset": 9, "nodeName": "self", "type": "FlattenTrailingDimensionsTest"}, {"lineNumber": 931, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 933, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 933, "col_offset": 25, "nodeName": "shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 934, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 934, "col_offset": 23, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 947, "col_offset": 49, "nodeName": "initial_shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 956, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 957, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 957, "col_offset": 32, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 975, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 994, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 997, "col_offset": 9, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 998, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 998, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 999, "col_offset": 24, "nodeName": "sess", "type": "Any"}, {"lineNumber": 999, "col_offset": 34, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 999, "col_offset": 44, "nodeName": "outputs1_flat", "type": "Any"}, {"lineNumber": 1000, "col_offset": 24, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1000, "col_offset": 34, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 1000, "col_offset": 44, "nodeName": "outputs2_flat", "type": "Any"}, {"lineNumber": 1001, "col_offset": 6, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1001, "col_offset": 32, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1001, "col_offset": 50, "nodeName": "out_shape1", "type": "List[int]"}, {"lineNumber": 1002, "col_offset": 6, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1002, "col_offset": 32, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1002, "col_offset": 50, "nodeName": "out_shape2", "type": "List[int]"}, {"lineNumber": 1010, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1015, "col_offset": 21, "nodeName": "merge_linear", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1016, "col_offset": 21, "nodeName": "merge_tanh", "type": "sonnet.python.modules.basic.BatchApply"}, {"lineNumber": 1027, "col_offset": 9, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1028, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1029, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1029, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1030, "col_offset": 6, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1030, "col_offset": 43, "nodeName": "out_np", "type": "Any"}, {"lineNumber": 1033, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1034, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1035, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1035, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1046, "col_offset": 9, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1047, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1048, "col_offset": 6, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1054, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1054, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1062, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 1063, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 1068, "col_offset": 39, "nodeName": "ab", "type": "`namedtuple-ab_tuple-a-b`"}, {"lineNumber": 1068, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 1072, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 1076, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1079, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1080, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1080, "col_offset": 47, "nodeName": "output", "type": "Any"}, {"lineNumber": 1081, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1081, "col_offset": 47, "nodeName": "output", "type": "Any"}, {"lineNumber": 1097, "col_offset": 9, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1098, "col_offset": 6, "nodeName": "BatchApply", "type": "Type[sonnet.python.modules.basic.BatchApply]"}, {"lineNumber": 1098, "col_offset": 21, "nodeName": "op", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 1098, "col_offset": 59, "nodeName": "in1", "type": "Any"}, {"lineNumber": 1098, "col_offset": 64, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1102, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1103, "col_offset": 9, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1104, "col_offset": 23, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1104, "col_offset": 33, "nodeName": "in2", "type": "Any"}, {"lineNumber": 1104, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 1105, "col_offset": 6, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1108, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1109, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1113, "col_offset": 4, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1116, "col_offset": 9, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1117, "col_offset": 33, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1117, "col_offset": 43, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 1117, "col_offset": 60, "nodeName": "output", "type": "Any"}, {"lineNumber": 1118, "col_offset": 6, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1125, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1126, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1126, "col_offset": 32, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1140, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 1157, "col_offset": 9, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1158, "col_offset": 25, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1158, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 1158, "col_offset": 43, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 1159, "col_offset": 6, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1162, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1170, "col_offset": 9, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1171, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1173, "col_offset": 6, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1176, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1184, "col_offset": 9, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1185, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1187, "col_offset": 6, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1195, "col_offset": 9, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1197, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1198, "col_offset": 15, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1198, "col_offset": 27, "nodeName": "invalid_begin_format", "type": "List[int]"}, {"lineNumber": 1198, "col_offset": 54, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1201, "col_offset": 9, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1203, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1204, "col_offset": 15, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1204, "col_offset": 27, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1204, "col_offset": 39, "nodeName": "invalid_size_format", "type": "List[int]"}, {"lineNumber": 1215, "col_offset": 55, "nodeName": "max", "type": "Any"}, {"lineNumber": 1215, "col_offset": 62, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1216, "col_offset": 9, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1225, "col_offset": 9, "nodeName": "self", "type": "SliceByDimTest"}, {"lineNumber": 1226, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1226, "col_offset": 30, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1226, "col_offset": 42, "nodeName": "begin", "type": "List[int]"}, {"lineNumber": 1226, "col_offset": 54, "nodeName": "size", "type": "List[int]"}, {"lineNumber": 1233, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1234, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1234, "col_offset": 31, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1246, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 1261, "col_offset": 9, "nodeName": "self", "type": "TileByDimTest"}, {"lineNumber": 1262, "col_offset": 25, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1262, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 1262, "col_offset": 43, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 1263, "col_offset": 6, "nodeName": "self", "type": "TileByDimTest"}, {"lineNumber": 1266, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1273, "col_offset": 9, "nodeName": "self", "type": "TileByDimTest"}, {"lineNumber": 1274, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1276, "col_offset": 6, "nodeName": "self", "type": "TileByDimTest"}, {"lineNumber": 1283, "col_offset": 9, "nodeName": "self", "type": "TileByDimTest"}, {"lineNumber": 1284, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1284, "col_offset": 25, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1284, "col_offset": 41, "nodeName": "invalid_multiples_format", "type": "List[int]"}, {"lineNumber": 1291, "col_offset": 9, "nodeName": "self", "type": "TileByDimTest"}, {"lineNumber": 1292, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1292, "col_offset": 25, "nodeName": "dims", "type": "List[int]"}, {"lineNumber": 1292, "col_offset": 41, "nodeName": "multiples", "type": "List[int]"}, {"lineNumber": 1299, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1300, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1300, "col_offset": 31, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1312, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 1326, "col_offset": 9, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1327, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1327, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 1327, "col_offset": 30, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 1328, "col_offset": 6, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1328, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1328, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1335, "col_offset": 9, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1336, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1336, "col_offset": 26, "nodeName": "start", "type": "int"}, {"lineNumber": 1336, "col_offset": 38, "nodeName": "invalid_size", "type": "int"}, {"lineNumber": 1347, "col_offset": 9, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1357, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1359, "col_offset": 12, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1360, "col_offset": 12, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1374, "col_offset": 46, "nodeName": "nest", "type": "Any"}, {"lineNumber": 1375, "col_offset": 46, "nodeName": "nest", "type": "Any"}, {"lineNumber": 1376, "col_offset": 23, "nodeName": "original_tensor", "type": "Any"}, {"lineNumber": 1377, "col_offset": 21, "nodeName": "merged_tensor", "type": "Any"}, {"lineNumber": 1378, "col_offset": 6, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1378, "col_offset": 23, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 1379, "col_offset": 23, "nodeName": "merged_shape", "type": "Any"}, {"lineNumber": 1380, "col_offset": 6, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1380, "col_offset": 23, "nodeName": "prod", "type": "Any"}, {"lineNumber": 1381, "col_offset": 23, "nodeName": "merged_shape", "type": "Any"}, {"lineNumber": 1382, "col_offset": 6, "nodeName": "self", "type": "MergeDimsTest"}, {"lineNumber": 1382, "col_offset": 23, "nodeName": "num_elements", "type": "Any"}, {"lineNumber": 1383, "col_offset": 23, "nodeName": "num_elements", "type": "Any"}, {"lineNumber": 1390, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1391, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1391, "col_offset": 33, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1406, "col_offset": 9, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1407, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1407, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 1407, "col_offset": 30, "nodeName": "output0", "type": "Any"}, {"lineNumber": 1408, "col_offset": 6, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1408, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1408, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 1424, "col_offset": 9, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1425, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1425, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 1426, "col_offset": 6, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1427, "col_offset": 6, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1444, "col_offset": 9, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1445, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1445, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 1446, "col_offset": 6, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1447, "col_offset": 6, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1448, "col_offset": 6, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1449, "col_offset": 6, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1457, "col_offset": 31, "nodeName": "invalid_idx", "type": "int"}, {"lineNumber": 1461, "col_offset": 9, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1469, "col_offset": 9, "nodeName": "self", "type": "SelectInputTest"}, {"lineNumber": 1470, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1470, "col_offset": 26, "nodeName": "invalid_idx", "type": "float"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "randn", "type": "Any"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 51, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "v", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "out_size", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 55, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "dot", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tolerance_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "tolerance_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 193, "col_offset": 61, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 219, "col_offset": 59, "nodeName": "lin1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 221, "col_offset": 59, "nodeName": "lin2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 223, "col_offset": 59, "nodeName": "lin3", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 226, "col_offset": 51, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 227, "col_offset": 51, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 241, "col_offset": 51, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 330, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "device_type", "type": "Any"}, {"lineNumber": 386, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 387, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 397, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 406, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 413, "col_offset": 6, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 413, "col_offset": 57, "nodeName": "message", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 487, "col_offset": 58, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 499, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 43, "nodeName": "b_regularizer", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 508, "col_offset": 17, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 509, "col_offset": 25, "nodeName": "sess", "type": "Any"}, {"lineNumber": 509, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 509, "col_offset": 43, "nodeName": "b", "type": "Any"}, {"lineNumber": 510, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 510, "col_offset": 43, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 511, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 511, "col_offset": 41, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 514, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "tolerance_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "tolerance_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 530, "col_offset": 41, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 535, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 535, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 536, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 567, "col_offset": 58, "nodeName": "add1", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 569, "col_offset": 58, "nodeName": "add2", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 571, "col_offset": 58, "nodeName": "add3", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "add_transpose", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 660, "col_offset": 27, "nodeName": "zeros_initializer", "type": "Any"}, {"lineNumber": 664, "col_offset": 21, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 681, "col_offset": 11, "nodeName": "self", "type": "TrainableVariableTest"}, {"lineNumber": 682, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 682, "col_offset": 38, "nodeName": "lhs_shape", "type": "List[int]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 683, "col_offset": 17, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 684, "col_offset": 21, "nodeName": "sess", "type": "Any"}, {"lineNumber": 684, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 684, "col_offset": 34, "nodeName": "w", "type": "Any"}, {"lineNumber": 684, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 684, "col_offset": 46, "nodeName": "lhs_matrix", "type": "Any"}, {"lineNumber": 686, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 687, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 687, "col_offset": 48, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 688, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 688, "col_offset": 39, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 689, "col_offset": 31, "nodeName": "tolerance_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 690, "col_offset": 31, "nodeName": "tolerance_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 752, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 794, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 799, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 799, "col_offset": 29, "nodeName": "output_invalid_shape_format", "type": "List[int]"}, {"lineNumber": 805, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 805, "col_offset": 29, "nodeName": "output_invalid_shape_format", "type": "List[int]"}, {"lineNumber": 812, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 812, "col_offset": 29, "nodeName": "invalid_shape_type", "type": "List[Union[int, str]]"}, {"lineNumber": 818, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 818, "col_offset": 29, "nodeName": "out_shape", "type": "List[int]"}, {"lineNumber": 822, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 822, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 822, "col_offset": 56, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 836, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 845, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 856, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 885, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 933, "col_offset": 31, "nodeName": "dim_from", "type": "Any"}, {"lineNumber": 935, "col_offset": 23, "nodeName": "shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 935, "col_offset": 43, "nodeName": "trailing", "type": "Any"}, {"lineNumber": 947, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 949, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 957, "col_offset": 55, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 974, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 977, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 989, "col_offset": 43, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 990, "col_offset": 43, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 998, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1001, "col_offset": 32, "nodeName": "out_flat1", "type": "Any"}, {"lineNumber": 1002, "col_offset": 32, "nodeName": "out_flat2", "type": "Any"}, {"lineNumber": 1028, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1029, "col_offset": 41, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1039, "col_offset": 6, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1040, "col_offset": 6, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1054, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1054, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1055, "col_offset": 21, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1055, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1056, "col_offset": 21, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1056, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1062, "col_offset": 47, "nodeName": "name", "type": "str"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "nest", "type": "module"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "_tester", "type": "Any"}, {"lineNumber": 1070, "col_offset": 37, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "_tester", "type": "Any"}, {"lineNumber": 1071, "col_offset": 37, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1072, "col_offset": 8, "nodeName": "_tester", "type": "Any"}, {"lineNumber": 1072, "col_offset": 37, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1076, "col_offset": 41, "nodeName": "SizeChecker", "type": "Type[Any]"}, {"lineNumber": 1076, "col_offset": 53, "nodeName": "self", "type": "BatchApplyTest"}, {"lineNumber": 1089, "col_offset": 6, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1090, "col_offset": 6, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1098, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1113, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1215, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 1359, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1360, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1363, "col_offset": 13, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1365, "col_offset": 26, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1366, "col_offset": 26, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1367, "col_offset": 26, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 1378, "col_offset": 23, "nodeName": "original_shape", "type": "Any"}, {"lineNumber": 1378, "col_offset": 47, "nodeName": "size", "type": "int"}, {"lineNumber": 1380, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 1380, "col_offset": 31, "nodeName": "original_shape", "type": "Any"}, {"lineNumber": 1381, "col_offset": 36, "nodeName": "start", "type": "int"}, {"lineNumber": 1382, "col_offset": 23, "nodeName": "original_shape", "type": "Any"}, {"lineNumber": 1383, "col_offset": 23, "nodeName": "merged_shape", "type": "Any"}, {"lineNumber": 1425, "col_offset": 31, "nodeName": "output0", "type": "Any"}, {"lineNumber": 1425, "col_offset": 40, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1426, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1426, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1427, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1427, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1445, "col_offset": 31, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1446, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1446, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "in_size", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "w", "type": "Any"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "b", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "output", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 149, "col_offset": 45, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "astype", "type": "Any"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "w", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 261, "col_offset": 36, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 272, "col_offset": 36, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 283, "col_offset": 36, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 386, "col_offset": 47, "nodeName": "list_local_devices", "type": "Any"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 413, "col_offset": 57, "nodeName": "e", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 501, "col_offset": 43, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 508, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 509, "col_offset": 43, "nodeName": "add", "type": "sonnet.python.modules.basic.AddBias"}, {"lineNumber": 511, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 512, "col_offset": 33, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 514, "col_offset": 51, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 514, "col_offset": 72, "nodeName": "b", "type": "Any"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 520, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 521, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 579, "col_offset": 33, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 585, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 592, "col_offset": 33, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 598, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 605, "col_offset": 33, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 610, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 660, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 679, "col_offset": 53, "nodeName": "_test_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 682, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 684, "col_offset": 34, "nodeName": "var", "type": "sonnet.python.modules.basic.TrainableVariable"}, {"lineNumber": 687, "col_offset": 30, "nodeName": "lhs_matrix", "type": "Any"}, {"lineNumber": 687, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 688, "col_offset": 30, "nodeName": "w", "type": "Any"}, {"lineNumber": 688, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 689, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 690, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 699, "col_offset": 33, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 705, "col_offset": 33, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 711, "col_offset": 47, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 729, "col_offset": 33, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 735, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 743, "col_offset": 33, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 748, "col_offset": 47, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 822, "col_offset": 30, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 934, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 935, "col_offset": 30, "nodeName": "dim_from", "type": "Any"}, {"lineNumber": 947, "col_offset": 21, "nodeName": "flat", "type": "Any"}, {"lineNumber": 949, "col_offset": 21, "nodeName": "final", "type": "Any"}, {"lineNumber": 957, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 974, "col_offset": 21, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 977, "col_offset": 21, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 1029, "col_offset": 41, "nodeName": "random", "type": "Any"}, {"lineNumber": 1029, "col_offset": 58, "nodeName": "in_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 1039, "col_offset": 6, "nodeName": "a", "type": "Any"}, {"lineNumber": 1040, "col_offset": 6, "nodeName": "b", "type": "Any"}, {"lineNumber": 1055, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1055, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1056, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1056, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1062, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1062, "col_offset": 14, "nodeName": "SizeChecker", "type": "Type[Any]"}, {"lineNumber": 1062, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1068, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1072, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1089, "col_offset": 6, "nodeName": "a", "type": "Any"}, {"lineNumber": 1090, "col_offset": 6, "nodeName": "b", "type": "Any"}, {"lineNumber": 1363, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1365, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1366, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1367, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1380, "col_offset": 46, "nodeName": "start", "type": "int"}, {"lineNumber": 1445, "col_offset": 41, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1445, "col_offset": 50, "nodeName": "output0", "type": "Any"}, {"lineNumber": 1445, "col_offset": 59, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1447, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1447, "col_offset": 40, "nodeName": "out", "type": "Any"}, {"lineNumber": 1448, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1448, "col_offset": 40, "nodeName": "out", "type": "Any"}, {"lineNumber": 1449, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1449, "col_offset": 40, "nodeName": "out", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "lin", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "w", "type": "Any"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 261, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 272, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 283, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 386, "col_offset": 47, "nodeName": "device_lib", "type": "Any"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 506, "col_offset": 38, "nodeName": "mb_in_shape", "type": "Any"}, {"lineNumber": 514, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 514, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 579, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 585, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 592, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 598, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 605, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 610, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 699, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 705, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 711, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 729, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 735, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 743, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 748, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 934, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 1029, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1070, "col_offset": 37, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1071, "col_offset": 37, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1072, "col_offset": 37, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1380, "col_offset": 52, "nodeName": "start", "type": "int"}, {"lineNumber": 1380, "col_offset": 60, "nodeName": "size", "type": "int"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 506, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 514, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 514, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 605, "col_offset": 33, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 743, "col_offset": 33, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1070, "col_offset": 37, "nodeName": "a", "type": "Any"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 605, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 743, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1070, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1071, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 1072, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 1071, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1072, "col_offset": 37, "nodeName": "inputs", "type": "Any"}]