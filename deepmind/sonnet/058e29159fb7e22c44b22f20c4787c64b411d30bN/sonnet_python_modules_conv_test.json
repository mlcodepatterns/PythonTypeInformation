[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 391, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 391, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1018, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1018, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1264, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1264, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1764, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1764, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2115, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2115, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2283, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2283, "col_offset": 48, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2339, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2339, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2652, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2652, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3084, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3084, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3507, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3507, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 4068, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 4068, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 200, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 201, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 391, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 391, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1018, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1018, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1264, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1264, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1764, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1764, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1767, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1768, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1769, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1770, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1771, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1772, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1773, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1774, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1775, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1776, "col_offset": 2, "nodeName": "use_output_shape", "type": "List[bool]"}, {"lineNumber": 1784, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1785, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1786, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1787, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1788, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 2115, "col_offset": 23, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2115, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 2283, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2283, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 2339, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2339, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2652, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2652, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3084, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3084, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3507, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3507, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 4068, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 4068, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 4324, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 274, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 322, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 334, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 345, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 391, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 429, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 441, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 442, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 443, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 657, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 816, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 855, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 899, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 937, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 938, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 946, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 950, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 960, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 963, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 972, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 976, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 985, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 989, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 998, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1018, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1025, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1030, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1031, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 1033, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1038, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1067, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1083, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1092, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1093, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1103, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1104, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1127, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1129, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1133, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1135, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1142, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1143, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1164, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1175, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1184, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1189, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1190, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1191, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1192, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1206, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1217, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1228, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1237, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1242, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1243, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1244, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1245, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1259, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1264, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1272, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1273, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1274, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1275, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1277, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1301, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1314, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1324, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1335, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1336, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1337, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1337, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1338, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1353, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1377, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1391, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1413, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1426, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1445, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1456, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1457, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1483, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1496, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1497, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1525, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1527, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1544, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1545, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1569, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1570, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1594, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1595, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1596, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1598, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1599, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1619, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1620, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1628, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1629, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1636, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1637, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1645, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1646, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1653, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1654, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1662, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1663, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1671, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1672, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1675, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1684, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1685, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1688, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1697, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1698, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1701, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1710, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1711, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1723, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1724, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1726, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1727, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1728, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1729, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1756, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1757, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1764, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1773, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1773, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1773, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1773, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1773, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1778, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1778, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1778, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1778, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1784, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1785, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1785, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1786, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1786, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1787, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1788, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1788, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1803, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1816, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1817, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1833, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1850, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1860, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1888, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1919, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1955, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1979, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1980, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1981, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1983, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1984, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2019, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2028, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2045, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2066, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2075, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2092, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2099, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2100, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2115, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2130, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2131, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2132, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2156, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2157, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2158, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2183, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2184, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2185, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2209, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2210, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2211, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2213, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2214, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2216, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 2217, "col_offset": 4, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2241, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2242, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2244, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2245, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2246, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2247, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2249, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2274, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2275, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2283, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2291, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2292, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2293, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2297, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2311, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2312, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2313, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2314, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2315, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2316, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2330, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2331, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2333, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2339, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2346, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2346, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2347, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2347, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2348, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2348, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2349, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2349, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2350, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2350, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2351, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2352, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2352, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2353, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2353, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2356, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2357, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2367, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2367, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2368, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2368, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2369, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2369, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2370, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2370, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2371, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2371, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2372, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2372, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2374, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2383, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2387, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2405, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2421, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2440, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2463, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2474, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2475, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2497, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2522, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2524, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2530, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2531, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2556, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2584, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2610, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2611, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2631, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2632, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2633, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2635, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2636, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2652, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2659, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2659, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2660, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2660, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2661, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2661, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2662, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2662, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2663, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2665, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2665, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2666, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2666, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2667, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2667, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2668, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2670, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2670, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2671, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2675, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2683, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2683, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2684, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2684, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2685, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2685, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2686, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2686, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2687, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2688, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2688, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2689, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2689, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2691, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2700, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2707, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2725, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2750, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2777, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2802, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2814, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2815, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2816, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2842, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2855, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2856, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2886, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2889, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2908, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2941, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2972, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3001, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3002, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3019, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3020, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3021, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3031, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3032, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3033, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3060, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3061, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3062, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3064, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3065, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3084, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3091, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3091, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3092, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3092, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3093, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3093, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3094, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 3096, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3096, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3097, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3097, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3098, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 3100, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3100, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3101, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 3105, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 3113, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3113, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 3114, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3114, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3115, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3115, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3116, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3116, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3117, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3117, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3118, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3118, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3119, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3119, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3121, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3130, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3137, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3155, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3180, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3208, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3233, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3245, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3246, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3247, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 3273, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3286, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3287, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3317, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3320, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3339, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3340, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3370, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3399, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3400, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3426, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3427, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3444, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3445, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3446, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3456, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3457, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3458, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3483, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3484, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3485, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3487, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3488, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3507, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3515, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3516, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3517, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3518, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3519, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3520, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3521, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3522, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3523, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3537, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3547, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3558, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3559, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3559, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3559, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3560, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3560, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3561, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3561, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3561, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3576, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3630, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 3643, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3663, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3674, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 3675, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 3706, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3707, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3753, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3755, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3773, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3811, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3812, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3838, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3839, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3840, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3842, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3843, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3863, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3864, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3872, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3873, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3880, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3881, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3889, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3890, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3897, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3898, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3906, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3907, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3914, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3915, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3923, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3924, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3931, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3932, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3940, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3941, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3949, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3950, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3953, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3962, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3963, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3966, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3975, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3976, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3979, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3988, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3989, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3992, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4001, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4002, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 4005, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4014, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4015, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 4027, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4028, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4030, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4031, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4032, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 4033, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 4035, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 4060, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 4061, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 4068, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4075, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 4076, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4077, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4078, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4079, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4080, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 4081, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4082, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4083, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4084, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 4085, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 4086, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 4087, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 4087, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4092, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 4101, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 4124, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4134, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4140, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4149, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4150, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 4160, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4161, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 4176, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4186, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4220, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4221, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4222, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4226, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4227, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4228, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 4247, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4256, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4274, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4293, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4302, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4320, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4325, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv1DTranspose], Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 232, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 233, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "CONV_1D_MASKED_KWARGS", "type": "Dict[str, Any]"}, {"lineNumber": 234, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 236, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 237, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 238, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 239, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 240, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 241, "col_offset": 7, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "SEPARABLE_CONV_1D_KWARGS", "type": "Dict[str, Union[Tuple[int], int]]"}, {"lineNumber": 242, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, Union[Tuple[int, int], int]]"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 258, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 265, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 279, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 282, "col_offset": 6, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 289, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 304, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 316, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 334, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 349, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 365, "col_offset": 6, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 376, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 380, "col_offset": 45, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 383, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 384, "col_offset": 6, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 385, "col_offset": 6, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 386, "col_offset": 6, "nodeName": "out3", "type": "Any"}, {"lineNumber": 387, "col_offset": 6, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 399, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 404, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 419, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 445, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 458, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 477, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 491, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 580, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 580, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 582, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 594, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 612, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 626, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 626, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 637, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 637, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 643, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 655, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 655, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 656, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 665, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 674, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 675, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 680, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 681, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 694, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 703, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 704, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 707, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 708, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 722, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 731, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 731, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 732, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 734, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 734, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 735, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 735, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 746, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 768, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 781, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 791, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 792, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 797, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 798, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 807, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 811, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 812, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 814, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 814, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 815, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 815, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 816, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 816, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 817, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 817, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 819, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 820, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 823, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 826, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 830, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 830, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 831, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 832, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 846, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 852, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 853, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 853, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 859, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 860, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 860, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 861, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 861, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 867, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 868, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 876, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 876, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 888, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 891, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 899, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 899, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 900, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 907, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 908, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 909, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 916, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 916, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 927, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 929, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 930, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 937, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 937, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 938, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 946, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 950, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 959, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 960, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 963, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 972, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 976, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 985, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 986, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 989, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 998, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1001, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1003, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1011, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 1011, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1011, "col_offset": 34, "nodeName": "SUPPORTED_2D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 1023, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1025, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1030, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1031, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1033, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 1035, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1035, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1035, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1035, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1036, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1038, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1038, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1038, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1040, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1040, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1042, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1042, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1043, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1043, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1067, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1067, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1069, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1077, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1077, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1092, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1093, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1095, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1103, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1103, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1104, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1104, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1108, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1119, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1127, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1128, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1128, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1133, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1134, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1134, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1135, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1135, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1136, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1143, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1143, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1145, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1155, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1155, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1155, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1164, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1166, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1175, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1178, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1178, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1179, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1179, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1180, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1180, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1180, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1186, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1186, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1193, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1196, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1196, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1197, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1197, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1197, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1200, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1200, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1200, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1217, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1219, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1228, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1231, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1231, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1231, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1232, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1233, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1233, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1233, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1239, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1239, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1246, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1249, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1249, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1250, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1250, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1250, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1253, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1253, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1253, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1272, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1273, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1274, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1275, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1277, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1279, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1280, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1283, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1291, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1291, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1297, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1306, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1314, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1314, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1316, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1320, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1340, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1341, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1345, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1353, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1353, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1374, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1387, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1406, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1409, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1436, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1445, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1445, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1446, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1447, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1456, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1457, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1459, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1468, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1478, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1497, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1497, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1499, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1506, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1508, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1508, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1514, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1515, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1517, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1523, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1525, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1525, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1526, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1526, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1535, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1544, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1545, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1546, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1547, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1560, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1569, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1570, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1571, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1572, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1586, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1594, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1595, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1595, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1596, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1596, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1598, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1598, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1599, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1599, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1610, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1619, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1620, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1621, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1628, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1628, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1629, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1636, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1637, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1638, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1645, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1645, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1646, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1653, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1654, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1655, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1662, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1662, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1663, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1671, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1672, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1675, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1684, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1685, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1688, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1697, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1698, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1701, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1710, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1711, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1713, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1715, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1719, "col_offset": 10, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1723, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1724, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1726, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1726, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1727, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1727, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1728, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1728, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1729, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1729, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1731, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 1732, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1733, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1735, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1736, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1738, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1739, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1742, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1742, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1742, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1743, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1743, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1744, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1744, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1745, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1746, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1747, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1748, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1750, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1756, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1758, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 1758, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1758, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 1773, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1773, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1773, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1773, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1773, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1779, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1779, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1784, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1784, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1784, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1784, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1787, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1787, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1787, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1787, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1804, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1804, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1806, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1807, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1816, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1816, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1817, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1817, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 1818, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1821, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1834, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1834, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1836, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1838, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1839, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1842, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1850, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1850, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1852, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1856, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1871, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1879, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1910, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1946, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1955, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1955, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1958, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1970, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1979, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1979, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1979, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1979, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1980, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1980, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1981, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1981, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1983, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1983, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1984, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1984, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1995, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2010, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2019, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 2022, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2022, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2022, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2023, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2023, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2024, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2024, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2024, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2030, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2033, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2035, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2035, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2036, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2036, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2039, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2039, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2039, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2057, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2066, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 2069, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2069, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2069, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2070, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2070, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2071, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2071, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2071, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2077, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2080, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2082, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2082, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2083, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2083, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2083, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2086, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2086, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2086, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2100, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2100, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2102, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2110, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2112, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2112, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2112, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2122, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2130, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2131, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2133, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2135, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2137, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2139, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2141, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2141, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2141, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2148, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2156, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2157, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2159, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2161, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2163, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2165, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2167, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2167, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2167, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2174, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2183, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2184, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2186, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2188, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2190, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2192, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2194, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2194, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2194, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2202, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2209, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2210, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2210, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2211, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2211, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2213, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2213, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2214, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2214, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2216, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2217, "col_offset": 23, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2217, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 2219, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2222, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2224, "col_offset": 6, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2225, "col_offset": 6, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2230, "col_offset": 6, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2231, "col_offset": 6, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2233, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2233, "col_offset": 24, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2233, "col_offset": 43, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2234, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2234, "col_offset": 24, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2234, "col_offset": 51, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2237, "col_offset": 10, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2241, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2242, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2244, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2244, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2245, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2245, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2246, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2246, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2247, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2247, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2249, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 2250, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2251, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2253, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2254, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2256, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2257, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2260, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2260, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2260, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2261, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2261, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2262, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2262, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2263, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2264, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2265, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2266, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2268, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2274, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2276, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 2276, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2276, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 2291, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2292, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2292, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2293, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2299, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 2299, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2302, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2302, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2303, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2303, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2303, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2311, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2312, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2313, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2313, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2314, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2314, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2315, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2315, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2316, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2316, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2323, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2331, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2331, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2333, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2335, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2336, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2336, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2336, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2344, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2346, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2346, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2347, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2347, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2348, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2348, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2349, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2349, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2350, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2350, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2351, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2352, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2352, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2353, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2353, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2353, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2355, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2355, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2355, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2355, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2356, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2356, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2356, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2357, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2357, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2357, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2357, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2357, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2358, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2358, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2358, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2359, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2367, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2368, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2369, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2370, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2371, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2372, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2374, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2374, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2376, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2383, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2383, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2385, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2385, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2386, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2386, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2396, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2397, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2399, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2405, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2405, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2410, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2419, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2420, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2433, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2435, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2437, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2455, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2463, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2463, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2464, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2465, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2474, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2475, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2477, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2484, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2494, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2510, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2511, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2513, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2520, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2522, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2522, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2523, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2523, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2531, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2531, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2533, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2539, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2541, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2541, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2541, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2548, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2556, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2557, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2562, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2563, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2576, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2584, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2585, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2588, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2589, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2602, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2610, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2611, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2612, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2613, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2627, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2631, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2632, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2632, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2633, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2633, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2635, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2635, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2636, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2636, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2647, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2657, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2659, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2659, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2660, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2660, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2661, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2661, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2662, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2662, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2663, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2663, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2663, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2663, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2663, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2665, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2665, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2666, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2666, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2667, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2667, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2668, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2668, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2668, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2670, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2670, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2670, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2671, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2671, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2671, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2671, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2671, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2673, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2673, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2673, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2673, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2675, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2675, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2675, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2683, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2684, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2685, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2686, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2687, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2688, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2689, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2691, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2691, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2693, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2700, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2700, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2702, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2703, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2705, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2716, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2717, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2719, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2725, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2725, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2731, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2741, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2747, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2764, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2767, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2770, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2793, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2802, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2802, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2803, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2804, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2814, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2815, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2816, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2817, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2825, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2839, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2856, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2856, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2858, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2865, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2867, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2867, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2867, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2873, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2874, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2876, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2884, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2886, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2886, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2887, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2887, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2888, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2888, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2898, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2908, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2909, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2914, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2915, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2930, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2941, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2942, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2947, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2948, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2963, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2972, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2973, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2976, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2977, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2992, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 3001, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3002, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3003, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3004, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3021, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3021, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3022, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 3031, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3032, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3034, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3035, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3037, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3056, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 3060, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3061, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3061, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3062, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3062, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3064, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3064, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3065, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3065, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3077, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3078, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3089, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 3091, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3091, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3092, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3092, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3093, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3093, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3094, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3094, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3094, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3094, "col_offset": 46, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3096, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3096, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3097, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3097, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3098, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3098, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3100, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3100, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3100, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3101, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3101, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3101, "col_offset": 37, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3101, "col_offset": 47, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3103, "col_offset": 11, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3103, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3103, "col_offset": 40, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3105, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3105, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3105, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3113, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3114, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 3115, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3116, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3117, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 3118, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 3119, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 3121, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3121, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3123, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3130, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3130, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3132, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3133, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3135, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3146, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3147, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3149, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3155, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3155, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3157, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3161, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3162, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3162, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3171, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3177, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3195, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3198, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3201, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3224, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3233, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 3233, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 3234, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 3235, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 3245, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3246, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3247, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3248, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3256, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3270, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3287, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 3287, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3289, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3296, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3298, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 3298, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3298, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3304, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 3305, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3307, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3315, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3317, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3317, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 3318, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3318, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3319, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3319, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3329, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3339, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3340, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3341, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3342, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3344, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3348, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 3359, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3370, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3371, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3374, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3375, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3377, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3381, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 3390, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3399, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3400, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3401, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3402, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3404, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3408, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3417, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3426, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3427, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3428, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3429, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3431, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3435, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3446, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3446, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3447, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3456, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3457, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3459, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3460, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3462, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3464, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3468, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3479, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3483, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3484, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3484, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3485, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3485, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3487, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3487, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3488, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3488, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3500, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3501, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3515, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3516, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3517, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3518, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3519, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3520, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3521, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3522, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3523, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3525, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3526, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3529, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3537, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3537, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3539, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3543, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3563, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3564, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3568, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3576, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3576, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3593, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3594, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3603, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3605, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3607, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3623, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3626, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3653, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3663, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 3663, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 3664, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 3674, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3675, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3676, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3684, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3694, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3707, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 3707, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3709, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3716, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3718, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 3718, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3718, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3723, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3728, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3741, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 3742, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3744, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3751, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3753, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3753, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 3754, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3754, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3764, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3773, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3786, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3787, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3802, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3811, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3812, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3814, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3815, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3830, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3838, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3839, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3839, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3840, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3840, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3842, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3842, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3843, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3843, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3854, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3864, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3865, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3872, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3872, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3880, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3881, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3882, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3889, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3889, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3897, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3898, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3899, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3906, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3906, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3914, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3915, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3916, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3923, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3923, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3931, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3932, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3933, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3940, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3940, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3949, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3950, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3953, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3962, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3963, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3966, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3975, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3976, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3979, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3988, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3989, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3992, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4001, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 4002, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4005, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4014, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4015, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4017, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4019, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4023, "col_offset": 10, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4027, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 4028, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 4030, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4030, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4031, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4031, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4032, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4032, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4033, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4033, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4035, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 4036, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 4037, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 4039, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 4040, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 4042, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 4043, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 4046, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4046, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4046, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4047, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4047, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 4048, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4048, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 4049, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4050, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4051, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4052, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4054, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4060, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4062, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 4062, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 4062, "col_offset": 34, "nodeName": "SUPPORTED_3D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 4073, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 4075, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4076, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4077, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4078, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4079, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4080, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4081, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4082, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4083, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4084, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4085, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4086, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4087, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4087, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 4089, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4089, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 4089, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4089, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4090, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4090, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4092, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4092, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4092, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4092, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4094, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4094, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4094, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4095, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4097, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4097, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4097, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4098, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4098, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 4099, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4101, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4101, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 4101, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 4101, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 4124, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4124, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4126, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4134, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4134, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4136, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4139, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4149, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4150, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4152, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4160, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4160, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4161, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4161, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 4163, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4165, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4176, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4178, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4186, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4186, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4188, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4193, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4198, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4212, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4220, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4221, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4221, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4226, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4227, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4227, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4228, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4228, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4229, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4238, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4247, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4250, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4250, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4250, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4251, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4251, "col_offset": 49, "nodeName": "stride", "type": "Any"}, {"lineNumber": 4252, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4252, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4252, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4258, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 4258, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4261, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4267, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4267, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 4268, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4268, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4268, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4284, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4293, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4296, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4296, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4296, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4297, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4297, "col_offset": 44, "nodeName": "stride", "type": "Any"}, {"lineNumber": 4298, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4298, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4298, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4304, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 4304, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4307, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4313, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4313, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 4314, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4314, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4314, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4325, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "float64", "type": "Any"}, {"lineNumber": 232, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 233, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 234, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 236, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 237, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 238, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 239, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 240, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 241, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 242, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 251, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 251, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 256, "col_offset": 6, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 256, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 256, "col_offset": 59, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 258, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 262, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 283, "col_offset": 6, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 283, "col_offset": 59, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 288, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 301, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 304, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 305, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 305, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 307, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 307, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 309, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 309, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 312, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 317, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 323, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 328, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 328, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 328, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 329, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 335, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "UnderspecifiedError", "type": "Type[sonnet.python.modules.base_errors.UnderspecifiedError]"}, {"lineNumber": 339, "col_offset": 58, "nodeName": "err", "type": "str"}, {"lineNumber": 340, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 346, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 352, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 352, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 353, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 360, "col_offset": 13, "nodeName": "stop_gradient", "type": "Any"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 366, "col_offset": 6, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 366, "col_offset": 59, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 371, "col_offset": 37, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 371, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 376, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 379, "col_offset": 35, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 384, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 385, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "out3", "type": "Any"}, {"lineNumber": 388, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 388, "col_offset": 47, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 399, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 404, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 417, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 430, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 445, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 452, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 456, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 460, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 464, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 467, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 468, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 477, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 500, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 502, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 505, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 505, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 505, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 506, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 518, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 526, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 526, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 527, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 540, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 543, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 559, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 559, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 559, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 560, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 562, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 562, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 562, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 574, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 576, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 580, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 580, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 581, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 594, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 602, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 602, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 604, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 608, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 618, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 618, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 619, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 625, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 633, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 635, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 635, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 644, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 650, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 651, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 653, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 653, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 655, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 655, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 658, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 658, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 665, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 669, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 671, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 675, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 683, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 687, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 687, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 694, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 700, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 703, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 704, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 714, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 714, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 722, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 727, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 731, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 731, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 732, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 737, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 741, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 746, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 749, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 763, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 765, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 768, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 770, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 774, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 781, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 786, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 788, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 791, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 792, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 800, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 804, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 804, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 807, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 811, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 812, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 814, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 814, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 819, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 820, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 823, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 826, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 830, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 830, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 831, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 831, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 832, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 833, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 833, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 834, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 834, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 834, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 834, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 835, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 835, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 835, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 835, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 836, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 837, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 838, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 839, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 846, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 850, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 852, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 853, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 853, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 856, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 856, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 858, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 858, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 859, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 862, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 863, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 867, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 867, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 868, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 872, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 877, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 878, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 879, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 880, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 880, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 888, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 890, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 891, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 895, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 896, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 900, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 901, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 902, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 903, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 903, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 907, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 907, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 908, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 909, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 912, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 913, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 917, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 918, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 919, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 920, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 920, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 927, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 927, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 929, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 930, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 933, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 934, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 938, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 939, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 940, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 941, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 941, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 946, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 950, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 950, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 951, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 953, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 959, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 960, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 963, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 963, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 964, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 966, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 972, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 976, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 976, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 977, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 979, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 985, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 986, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 989, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 989, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 990, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 992, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 998, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 998, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1001, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1001, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1002, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 1003, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1003, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1011, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1011, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 1013, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1013, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1015, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 1035, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1035, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1036, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1038, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1038, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1040, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1040, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1042, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1043, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1043, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1047, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1047, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1048, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1067, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1067, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1067, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1069, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1070, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1071, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1072, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1073, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1075, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1079, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1082, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1082, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 1084, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1092, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1092, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1093, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1093, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1095, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1099, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1101, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1106, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1108, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1109, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1110, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1110, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1119, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1120, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1121, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1122, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1123, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1125, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1127, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1128, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1128, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1128, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1130, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1130, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1132, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1132, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1133, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1136, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1136, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1137, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1142, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1145, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1151, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1153, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1153, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1155, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1164, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1166, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1170, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1173, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1174, "col_offset": 20, "nodeName": "DATA_FORMAT_NHWC", "type": "str"}, {"lineNumber": 1175, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1178, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1178, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1179, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1179, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1180, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1180, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1180, "col_offset": 46, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1185, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1185, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1185, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1186, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1193, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1193, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1193, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1193, "col_offset": 48, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1193, "col_offset": 59, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1194, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1195, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1197, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1197, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1200, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1200, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1207, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1207, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1207, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1208, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1208, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1208, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1217, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1219, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1223, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1226, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1227, "col_offset": 20, "nodeName": "DATA_FORMAT_NCHW", "type": "str"}, {"lineNumber": 1228, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1231, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1231, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1231, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1232, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1233, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1233, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1233, "col_offset": 46, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1238, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1238, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1238, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1239, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1246, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1246, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1246, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1246, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1246, "col_offset": 61, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1247, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1248, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1250, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1250, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1253, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1253, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1260, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1260, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1260, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1261, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1261, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1261, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1272, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1273, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1274, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1275, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1277, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1279, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1280, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1283, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1284, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1285, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1286, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1289, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1294, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1297, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1298, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1302, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1306, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1307, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1308, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1309, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1312, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1316, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1317, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1320, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1321, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1325, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1340, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1341, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1345, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1347, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1348, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1349, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1351, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1355, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1359, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1362, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1363, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1373, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1374, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1375, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1378, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1378, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1378, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1379, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1387, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1389, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1392, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1392, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1392, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1393, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1396, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1396, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1396, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1397, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1406, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1408, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1409, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1411, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1427, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1427, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 1427, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1428, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1436, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1439, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1440, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1445, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1445, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1446, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1456, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1457, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1459, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1463, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1464, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1468, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1468, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1470, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1474, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1484, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1484, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1484, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1485, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1496, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1499, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1504, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1506, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1506, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1515, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1517, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1521, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1523, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1523, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1525, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1525, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1526, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1528, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1528, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1535, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1539, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1540, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1544, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1545, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1549, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1553, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1553, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1560, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1564, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1565, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1569, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1570, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1574, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1578, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1578, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1586, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1590, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1591, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1594, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1595, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1595, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1596, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1596, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1601, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1605, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1610, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1611, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1613, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1619, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1619, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1620, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1621, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1624, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1625, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1629, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1629, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1630, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1632, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1632, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1636, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1636, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1637, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1638, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1641, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1642, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1646, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1646, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1647, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1648, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1649, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1649, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1653, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1653, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1654, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1655, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1658, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1659, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1663, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1663, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1664, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1665, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1666, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1666, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1671, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1672, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1675, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1675, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1676, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1678, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1684, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1685, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1688, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1688, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1689, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1691, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1697, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1698, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1701, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1701, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1702, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1704, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1710, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1710, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1711, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1713, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1713, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1714, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 1715, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1715, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1719, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1723, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1724, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1726, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1726, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1731, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1732, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1733, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1735, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1736, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1738, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1739, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1742, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1742, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1742, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1743, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1743, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1743, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1744, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1744, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1745, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1745, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1745, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1746, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1746, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1746, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1746, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1746, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 1747, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1747, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1747, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1747, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1747, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 1748, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1748, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1749, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1750, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1750, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1751, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1756, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1758, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1758, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 1760, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1760, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1761, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 1779, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1780, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1781, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1781, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1792, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1792, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1793, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1807, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1807, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1808, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1809, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1810, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1811, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1813, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1816, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1816, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1818, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1818, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1821, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1822, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1823, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1823, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 1838, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1839, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1842, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1842, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1843, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1844, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1845, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1846, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1848, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1852, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1853, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1856, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1857, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1861, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1871, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1872, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1875, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1876, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1878, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1879, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1880, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1883, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1884, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1886, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1889, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1889, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1889, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1890, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1896, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1896, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1896, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1897, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1910, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1911, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1914, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1917, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1921, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1921, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1921, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1922, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1930, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1930, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1930, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1931, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1946, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1947, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1949, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1950, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1951, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1953, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1955, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1955, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1956, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1970, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1971, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1973, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1974, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1975, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1977, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1979, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1980, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1980, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1981, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1981, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1986, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1990, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1995, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1995, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1995, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1995, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1998, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2010, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 2011, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2013, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2014, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2015, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 2017, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2018, "col_offset": 20, "nodeName": "DATA_FORMAT_NWC", "type": "str"}, {"lineNumber": 2019, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2022, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2022, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2022, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2023, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2023, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2024, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2024, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2024, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2029, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2029, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2029, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2030, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2033, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2033, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2033, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2033, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2033, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2034, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2036, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2039, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2039, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2046, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2046, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2046, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2047, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2047, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2047, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2057, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 2058, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2060, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2061, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2062, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 2064, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2065, "col_offset": 20, "nodeName": "DATA_FORMAT_NCW", "type": "str"}, {"lineNumber": 2066, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2069, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2069, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2069, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2070, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2070, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2071, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2071, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2071, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2076, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2076, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2076, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2077, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2080, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2080, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2080, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2080, "col_offset": 48, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2080, "col_offset": 61, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2081, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2083, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2083, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2086, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2086, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2093, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2093, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2093, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2094, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2094, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2094, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2099, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2102, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2108, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2110, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2110, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2112, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 2122, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2126, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2130, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2131, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2131, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2135, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2136, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2137, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2138, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2138, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2139, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2139, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2148, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2152, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2156, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2157, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2157, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2161, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2162, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2163, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2164, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2164, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2165, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2165, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2167, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2174, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2179, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2183, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2184, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2184, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2188, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2189, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2190, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2191, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2191, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2192, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2192, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2194, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2202, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2206, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2209, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2210, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2210, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2211, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2211, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2216, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2217, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 2219, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2220, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2222, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2223, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2223, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2224, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 2224, "col_offset": 35, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2225, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 2225, "col_offset": 36, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2228, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2228, "col_offset": 15, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2230, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 2230, "col_offset": 43, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2231, "col_offset": 35, "nodeName": "run", "type": "Any"}, {"lineNumber": 2231, "col_offset": 44, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2233, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2234, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2237, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 2241, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2242, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2244, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2244, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2249, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2250, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2251, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2253, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2254, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2256, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2257, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2260, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2260, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2260, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2261, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2261, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2261, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2262, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2262, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2263, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2263, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2263, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2264, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2264, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2264, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2264, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2264, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 2265, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2265, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2265, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2265, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2265, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 2266, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2266, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2267, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2268, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2268, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2269, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2274, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2276, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2276, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 2278, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2278, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2280, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 2291, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2292, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2292, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2293, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2293, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2298, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2298, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2298, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2299, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2303, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2303, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2311, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2311, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2312, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2313, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2313, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2314, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2314, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2318, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2321, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2323, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2324, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2325, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2330, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2333, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2333, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2335, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2335, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2336, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 2346, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2347, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2348, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2349, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2350, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2351, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2352, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2374, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2374, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2374, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2376, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2378, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2379, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2380, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2382, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2385, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2385, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2386, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2386, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2388, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2388, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2396, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2397, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2399, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2400, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2401, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2402, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2404, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2407, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2410, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2411, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2411, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2419, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2420, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2423, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2423, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2423, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2424, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2433, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2434, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2435, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2436, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2437, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2438, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2443, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2443, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2443, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2444, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2455, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2459, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2460, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2463, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2463, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2464, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2474, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2475, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2477, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2481, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2484, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2484, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2486, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2490, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2498, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2498, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2498, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2499, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2511, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2513, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2517, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2518, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2520, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2520, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2522, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2522, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2523, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2525, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2525, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2530, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2533, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2537, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2539, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2539, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2541, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2548, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2552, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2553, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2556, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2557, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2565, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2569, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2569, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2576, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2580, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2581, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2584, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2585, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2591, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2595, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2595, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2602, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2606, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2607, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2610, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2611, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2615, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2619, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2620, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2627, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2628, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2629, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2631, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2632, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2632, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2633, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2633, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2638, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2641, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2647, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2648, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2649, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2659, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2660, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2661, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2662, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2665, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2666, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2667, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2691, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2691, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2691, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2693, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2694, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2695, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2696, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2697, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2698, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2702, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2702, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2702, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2703, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2703, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2704, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2705, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2705, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2706, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2708, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2716, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2717, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2719, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2720, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2722, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2723, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2724, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2727, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2731, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2732, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2732, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2741, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2746, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2747, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2752, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2752, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2752, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2753, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2764, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2766, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2767, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2769, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2770, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2775, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2780, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2780, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2780, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2781, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2793, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2797, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2798, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2802, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2802, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2803, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2814, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2815, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2816, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2817, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2821, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2825, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2825, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2827, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2832, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2835, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2843, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2843, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2843, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2844, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2855, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2858, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2863, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2865, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2865, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2867, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2874, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2876, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2881, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2882, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2884, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2884, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2886, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2886, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2887, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2888, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2890, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2890, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2898, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2902, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2904, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2908, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2909, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2917, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2922, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2922, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2930, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2934, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2937, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2941, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2942, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2950, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2955, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2955, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2963, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2967, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2968, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2972, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2973, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2979, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2984, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2984, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2992, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2996, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2997, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3001, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3002, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3006, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3011, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3011, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3022, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3023, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3024, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3026, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3027, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3031, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3031, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3031, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3032, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3032, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3033, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3037, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3037, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3040, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3045, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3046, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3056, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3058, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3060, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3061, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3061, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3062, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3062, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3067, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3071, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3077, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3078, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3079, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3080, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3081, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3091, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 3092, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 3093, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 3096, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 3097, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 3121, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3121, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3121, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3123, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3124, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3125, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3126, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3127, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3128, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3132, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3132, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3132, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3133, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3133, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3134, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3135, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3135, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3136, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3138, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3146, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3147, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3149, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3150, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 3152, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3153, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3154, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3157, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3161, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 3161, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 3162, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3162, "col_offset": 21, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3162, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 3162, "col_offset": 46, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3171, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3176, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3177, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3183, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3183, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3183, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3184, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3195, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3197, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3198, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3200, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3201, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3206, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3211, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3211, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3211, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3212, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3224, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3228, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3229, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3233, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3233, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3234, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3245, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 3246, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 3247, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3248, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3252, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3256, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3256, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3258, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3263, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3266, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3274, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3274, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3274, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3275, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3286, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3289, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3294, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3296, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3296, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3298, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3305, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 3307, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3312, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 3313, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3315, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3315, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3317, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3317, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3318, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3319, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3321, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3321, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 3329, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3333, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3335, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3339, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3340, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3344, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3348, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 3348, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 3349, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3349, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 3349, "col_offset": 34, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3359, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3363, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3365, "col_offset": 13, "nodeName": "rate", "type": "Any"}, {"lineNumber": 3366, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3370, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3371, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3377, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3381, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 3381, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 3382, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3382, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 3382, "col_offset": 34, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3390, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3394, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3395, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3399, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3400, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3404, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3408, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3408, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3409, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3409, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3409, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3417, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3421, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3422, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3426, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3427, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3431, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3435, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3435, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3436, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3436, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3436, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3447, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3448, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3449, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3451, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3452, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3456, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3456, "col_offset": 32, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3456, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3457, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3457, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3458, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3462, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3462, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3464, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3468, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3468, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3469, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3469, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3469, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3479, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3481, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3483, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3484, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3484, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3485, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3485, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3490, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3494, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3500, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3501, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3502, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3503, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3504, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3515, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 3516, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3517, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 3518, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3519, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 3520, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 3521, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3522, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3523, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3525, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3526, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3529, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3530, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3532, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3534, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3539, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3540, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3543, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3544, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3548, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3563, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3564, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3568, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3570, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3572, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3574, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3578, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3582, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3586, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3587, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3593, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3594, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3596, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3596, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3597, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3598, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3603, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3605, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3607, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3611, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3611, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3612, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3614, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3623, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3625, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3626, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3628, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3644, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3644, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3644, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3645, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3647, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3647, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3647, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3648, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3653, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3656, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3663, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3663, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3664, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3665, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3665, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3666, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3666, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 3674, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3675, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3676, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3681, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3684, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3684, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3686, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3690, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3699, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3699, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3700, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3706, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3709, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3714, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3716, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3716, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3718, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3723, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3728, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3728, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3730, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3731, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3733, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3742, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 3744, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3748, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 3749, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3751, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3751, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3753, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3753, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3754, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3756, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3756, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 3764, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3768, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3770, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3773, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3789, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3793, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3794, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3802, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3806, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3808, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3811, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3817, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3821, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3822, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3830, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3834, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3835, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3838, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3839, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3839, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3840, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3840, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3845, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3849, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3854, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3855, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3857, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3863, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3864, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3865, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3868, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3869, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3873, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3874, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3875, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3876, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3876, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3880, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3880, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3881, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3882, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3885, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3886, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3890, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3891, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3892, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3893, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3893, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3897, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3897, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3898, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3899, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3902, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3903, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3907, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3908, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3909, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3910, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3910, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3914, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3914, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3915, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3916, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3919, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3920, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3924, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3925, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3926, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3927, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3927, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3931, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3931, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3932, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3933, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3936, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3937, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3941, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3942, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3943, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3944, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3944, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3949, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3949, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3950, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3950, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3953, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3953, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3954, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3956, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3962, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3962, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3963, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3963, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3966, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3966, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3967, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3969, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3975, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3975, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3976, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3976, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3979, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3979, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3980, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3982, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3988, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3988, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3989, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3989, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3992, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3992, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3993, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3995, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4001, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 4001, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4002, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4002, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4005, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 4005, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4006, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4008, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4014, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4014, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 4015, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4017, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4017, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 4018, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 4019, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4019, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 4023, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 4027, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4028, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4030, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4030, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4035, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4036, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4037, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 4039, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4040, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 4042, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4043, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 4046, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4046, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4046, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4047, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4047, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 4047, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4048, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4048, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4049, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4049, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4049, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 4050, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4050, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4050, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 4050, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4050, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 4051, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4051, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4051, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 4051, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4051, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 4052, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4052, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 4053, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 4054, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4054, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 4055, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 4060, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4062, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4062, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 4064, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4064, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 4065, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 4089, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4089, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4090, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4090, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4092, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4092, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4092, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4094, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4095, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4097, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4098, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4098, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4099, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4101, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4101, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4101, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4104, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4104, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 4105, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4124, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4124, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4124, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 4126, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4127, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4128, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4129, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4130, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4132, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4136, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4136, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4139, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4139, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4139, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 4141, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4149, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4149, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4150, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4150, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4152, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4156, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4158, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4163, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4163, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4165, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 4166, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4167, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4167, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4176, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4176, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4178, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4182, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4184, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4188, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4188, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4193, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4198, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4198, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4200, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 4201, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4203, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 4212, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 4213, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4214, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4215, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4216, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4218, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4220, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4221, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4221, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4221, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 4223, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4223, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4225, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4225, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4226, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4229, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4229, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4230, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4238, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 4239, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4240, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4241, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4242, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4243, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4245, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4246, "col_offset": 20, "nodeName": "DATA_FORMAT_NDHWC", "type": "str"}, {"lineNumber": 4247, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4250, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4250, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4250, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4251, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4251, "col_offset": 49, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4252, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4252, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4252, "col_offset": 46, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4257, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4257, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4257, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4258, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4261, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4261, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 4261, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4262, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 4263, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 4264, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 4265, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4266, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4268, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4268, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4268, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4275, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4275, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4275, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4276, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4276, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 4276, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 4284, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 4285, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4286, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4287, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4288, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4289, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4291, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4292, "col_offset": 20, "nodeName": "DATA_FORMAT_NCDHW", "type": "str"}, {"lineNumber": 4293, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4296, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4296, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4296, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4297, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4297, "col_offset": 30, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4297, "col_offset": 44, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4298, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4298, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4298, "col_offset": 46, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4303, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4303, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4303, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4304, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4307, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4307, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 4307, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4308, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4309, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 4310, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 4311, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 4312, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4314, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4314, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4314, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4321, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4321, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4321, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4322, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4322, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 4322, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 4325, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 262, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 286, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 304, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 312, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 316, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 317, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 325, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 328, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 339, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 348, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 352, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 360, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "getter", "type": "Any"}, {"lineNumber": 362, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 379, "col_offset": 51, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 379, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 379, "col_offset": 63, "nodeName": "g", "type": "Any"}, {"lineNumber": 379, "col_offset": 68, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 384, "col_offset": 28, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 385, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 385, "col_offset": 52, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 387, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 388, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 32, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 409, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 409, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 414, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 414, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 423, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 423, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 423, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 423, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 427, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 427, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 427, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 427, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 430, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 431, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 447, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 453, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 453, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 460, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 464, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 465, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 467, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 468, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 469, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 469, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 469, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 505, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 505, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 506, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 526, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 526, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 527, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 546, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 546, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 559, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 559, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 560, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 561, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 562, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 564, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 574, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 577, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 578, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 581, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 581, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 583, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 583, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 583, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 584, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 600, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 600, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 600, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 602, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 602, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 604, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 608, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 609, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 610, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 610, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 618, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 619, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 625, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 635, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 635, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 644, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 653, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 655, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 656, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 658, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 669, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 672, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 672, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 674, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 683, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 687, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 687, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 701, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 701, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 703, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 703, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 714, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 714, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 731, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 732, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 737, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 741, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 742, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 743, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 746, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 749, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 750, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 751, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 763, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 766, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 766, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 768, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 768, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 770, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 774, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 774, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 786, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 789, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 791, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 791, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 800, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 804, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 804, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 822, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 825, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 828, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 831, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 833, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 833, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 856, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 856, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 857, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 857, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 867, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 875, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 877, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 878, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 880, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 880, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 890, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 896, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 898, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 901, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 903, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 907, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 913, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 915, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 917, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 918, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 920, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 920, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 927, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 934, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 936, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 939, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 941, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 941, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 950, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 951, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 951, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 952, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 953, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 953, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 963, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 964, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 964, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 965, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 966, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 966, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 976, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 977, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 977, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 978, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 979, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 979, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 989, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 990, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 990, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 991, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 992, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 992, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 998, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1001, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1002, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1013, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1014, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1023, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1023, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 1023, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1047, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1048, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1067, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1070, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1071, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1072, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1073, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 1082, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 1084, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1084, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1092, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1093, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1097, "col_offset": 45, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 1099, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 1108, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1110, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1111, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1111, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 1112, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1120, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1121, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1122, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1123, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1128, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1130, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1130, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1131, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1131, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1136, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1137, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1142, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1153, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1153, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1168, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1168, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1170, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1174, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1185, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1185, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1193, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1195, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1207, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1207, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1208, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1208, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1208, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1221, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1221, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1223, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1227, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1238, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1238, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1246, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1248, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1260, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1260, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1261, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1261, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1261, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1281, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1281, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1281, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1286, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1295, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1295, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1295, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1299, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1299, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1299, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1302, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1303, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1309, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1318, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1318, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1322, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1322, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1322, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1325, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1326, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1342, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1349, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1355, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1359, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1360, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1362, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1363, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1364, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1364, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1364, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1378, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1378, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1379, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1392, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1392, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1393, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1396, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1396, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1397, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1414, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1414, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1416, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1427, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1427, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1428, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1429, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1439, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1442, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1443, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1446, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1446, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1446, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1448, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1448, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1448, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1449, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1449, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1463, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1466, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1466, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1466, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1466, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1468, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1468, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1470, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1474, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1475, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1476, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1476, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1479, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1484, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1485, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1488, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1489, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1496, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1506, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1506, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1515, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1523, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1523, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1525, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1526, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1528, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1539, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1542, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1542, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1544, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1544, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1549, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1553, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1553, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1564, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1567, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1567, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1569, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1569, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1574, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1578, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1578, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1590, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1594, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1595, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1596, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1601, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1605, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1606, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1607, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1610, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1613, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1614, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1615, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1619, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 1625, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1627, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1629, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1630, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1632, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1632, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1636, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 1642, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1644, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1646, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1647, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1649, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1649, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1653, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 1659, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1661, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1663, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1664, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1666, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1666, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1675, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1676, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1676, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1677, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1678, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1678, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1688, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1689, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1689, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1690, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1691, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1691, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1701, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1702, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1702, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1703, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1704, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1704, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1710, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1713, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1714, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1733, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1734, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1736, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1737, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1739, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1740, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1743, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1745, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1745, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1760, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1761, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1780, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1781, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1782, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1792, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1793, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1819, "col_offset": 15, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1819, "col_offset": 26, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1821, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1823, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1840, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1840, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1840, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1854, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1854, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1854, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1858, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1858, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1858, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1861, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1862, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1873, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1873, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1881, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1881, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1889, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1889, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1890, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1890, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1894, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1896, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1896, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1897, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1897, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1901, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1912, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1912, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1921, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1921, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1922, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1922, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1925, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1928, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1930, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1930, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1931, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1931, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1934, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1937, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1948, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1948, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1956, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1956, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1957, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1959, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1959, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1959, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1960, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1960, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1972, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1972, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1979, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1980, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1981, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1986, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1990, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1991, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1992, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1995, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1998, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1999, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2000, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2012, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 2012, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2018, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 2023, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2029, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2029, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2033, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2034, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2046, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2046, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2047, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2047, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2047, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2059, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 2059, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2065, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 2070, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2076, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2076, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2080, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2081, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2093, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2093, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2094, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2094, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2094, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2099, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2103, "col_offset": 21, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 2110, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2110, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2128, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2128, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2130, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2130, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2131, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2136, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2136, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2136, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2137, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2138, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2139, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2154, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2154, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2156, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2156, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2157, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2162, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2162, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2162, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2163, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2164, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2165, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2181, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2181, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2183, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2183, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2184, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2189, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2189, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2189, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2190, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2191, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2192, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2209, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2210, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2211, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2216, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2217, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2220, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2220, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2220, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2222, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2223, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2224, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2225, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2228, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2230, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2231, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2251, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2252, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2254, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2255, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2257, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2258, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2261, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2263, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2263, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2278, "col_offset": 9, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2279, "col_offset": 6, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2292, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2298, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2298, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2312, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2313, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2314, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2318, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2321, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2321, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2321, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2323, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2325, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2325, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2325, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2330, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2335, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2335, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2344, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2344, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 2344, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2380, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2385, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 2386, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2388, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2388, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2397, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2400, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 2401, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2402, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2407, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2410, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2410, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2411, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2411, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2411, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2411, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2423, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2423, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2424, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2425, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2443, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2443, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2444, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2447, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2459, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2461, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2461, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2464, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2464, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2464, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2466, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2466, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2466, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2467, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2467, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2475, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2482, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2482, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2482, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 2482, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2484, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2484, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2486, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2490, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2491, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2491, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 2492, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 2495, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2495, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2498, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2499, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2503, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2511, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2520, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2520, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2522, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2523, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2525, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2530, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2539, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2539, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2552, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2554, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2554, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2556, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2556, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2565, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2569, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2569, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2580, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2582, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2582, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2584, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2584, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2591, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2595, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2595, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2606, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2608, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2608, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2610, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2610, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2615, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2619, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2620, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2628, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2631, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2632, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2633, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2638, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2641, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2641, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2641, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2647, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2649, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2649, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2649, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2657, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2657, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2657, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2697, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2708, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2708, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2717, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2720, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2722, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2723, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2727, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2731, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2731, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2732, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2732, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2732, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2732, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2752, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2752, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2753, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2756, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2780, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2780, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2781, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2786, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2797, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2799, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2800, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2803, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2803, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2803, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2805, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2805, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2805, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2806, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2806, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2816, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2822, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2823, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2823, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2823, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2823, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2825, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2825, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2827, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2832, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2833, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2833, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2834, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2835, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2836, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2836, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2837, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2840, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2840, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2843, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2844, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2849, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2855, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2865, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2865, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2874, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2884, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2884, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2886, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2887, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2888, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2890, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2902, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2905, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2906, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2908, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2908, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2917, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2922, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2922, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2934, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2938, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2939, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2941, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2941, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2950, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2955, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2955, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2967, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2969, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2970, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2972, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2972, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2979, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2984, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2984, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2996, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2998, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2999, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3001, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3001, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3006, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3011, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3011, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3026, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3028, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3029, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3031, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 3032, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3033, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3033, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3037, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3040, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3045, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3045, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3060, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3061, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3062, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3067, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3071, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3071, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3071, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3077, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3078, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3081, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3081, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3081, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3089, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 3089, "col_offset": 10, "nodeName": "SeparableConv1DTest", "type": "Type[SeparableConv1DTest]"}, {"lineNumber": 3089, "col_offset": 31, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3127, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3138, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3138, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3147, "col_offset": 39, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 3150, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 3152, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3153, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3157, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3161, "col_offset": 20, "nodeName": "session", "type": "Any"}, {"lineNumber": 3161, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3162, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3183, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3183, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3184, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3187, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3211, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3211, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3212, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3217, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3228, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3230, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3231, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3234, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3234, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3234, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3236, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3236, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3236, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 3237, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3237, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 3247, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3253, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3254, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3254, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3254, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 3254, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3256, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3256, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3258, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3263, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3264, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3264, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 3265, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3266, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3267, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3267, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 3268, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3271, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3271, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 3274, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3275, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3280, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3286, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3296, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3296, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3305, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 3315, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3315, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3317, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3318, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3319, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3321, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3333, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3336, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3337, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3339, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3339, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3344, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3348, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 3349, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3363, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3367, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3368, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3370, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3370, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3377, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3381, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 3382, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3394, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3396, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3397, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3399, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3399, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3404, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3408, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3409, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3421, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3423, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3424, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3426, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3426, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3431, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3435, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3436, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3451, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3453, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3454, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3456, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 3457, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3458, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3458, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3462, "col_offset": 62, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3464, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3468, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3469, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3483, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3484, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3485, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3490, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3494, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3494, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3494, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3500, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3501, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3504, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3504, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3504, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3527, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3527, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3527, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3527, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3527, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3531, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3531, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3531, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3532, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3541, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3541, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3541, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3541, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3541, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3545, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3545, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3545, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3545, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3546, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3548, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3549, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3565, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3571, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3571, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3571, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3572, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3578, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3582, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 3583, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3586, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3587, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3588, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3588, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3588, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3588, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3588, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3596, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3596, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3597, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3598, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3611, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3611, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3612, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3614, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3631, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3631, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3633, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3644, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3644, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3645, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3646, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3647, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3647, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3648, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3649, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3656, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 3664, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3664, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3664, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3665, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3682, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3682, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 3682, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 3682, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3684, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3684, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3686, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3690, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3691, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3692, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 3692, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 3695, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3699, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3700, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3706, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3716, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3716, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3728, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3728, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3730, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3733, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3734, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3735, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3742, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 3751, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3751, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3753, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3754, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3756, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3768, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3771, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3771, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3773, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3773, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3774, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3789, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3793, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3794, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3806, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3809, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3809, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3811, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3811, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3812, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3817, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3821, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3822, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3834, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3838, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3839, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3840, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3845, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3849, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3850, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3851, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3854, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 3857, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3858, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3859, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3863, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3863, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3869, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3871, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3873, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3873, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3874, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3876, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3876, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3880, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 3886, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3888, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3890, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3890, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3891, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3893, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3893, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3897, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3903, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3905, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3907, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3907, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3908, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3910, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3910, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3914, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3920, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3922, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3924, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3924, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3925, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3927, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3927, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3931, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3937, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3939, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3941, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3941, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3942, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3944, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3944, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3949, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 3950, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3953, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3954, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3954, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3955, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3956, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3956, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3962, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3963, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3966, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3967, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3967, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3968, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3969, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3969, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3975, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3976, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3979, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3980, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3980, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3981, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3982, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3982, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3988, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3989, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3992, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3993, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3993, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3994, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3995, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3995, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 4001, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 4002, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 4005, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4006, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4006, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 4007, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 4008, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4008, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 4014, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4017, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4018, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4037, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4038, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 4040, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4041, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 4043, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4044, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 4047, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4049, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4049, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 4064, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4065, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4073, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 4073, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 4073, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4104, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4105, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 4124, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4127, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 4128, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 4129, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 4130, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 4139, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 4141, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4141, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4149, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4150, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4156, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 4165, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4167, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4168, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4168, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 4169, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 4169, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 4176, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4182, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 4198, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4198, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4200, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4203, "col_offset": 6, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4204, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 4205, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4213, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4214, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 4215, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 4216, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 4221, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 4223, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4223, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4224, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 4224, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 4229, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 4230, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4239, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 4240, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4241, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4242, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 4243, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 4246, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 4251, "col_offset": 28, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4257, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4257, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4261, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 4261, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4262, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4263, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4264, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4265, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4266, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 4275, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4275, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4276, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4276, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4276, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4285, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 4286, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4287, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4288, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 4289, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 4292, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 4297, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 4303, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4303, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4307, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 4307, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4308, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4309, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4310, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4311, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4312, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 4321, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4321, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4322, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4322, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4322, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 256, "col_offset": 30, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 262, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 317, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 337, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 360, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 360, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 385, "col_offset": 52, "nodeName": "out2", "type": "Any"}, {"lineNumber": 387, "col_offset": 39, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 461, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 546, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 546, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 550, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 583, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 605, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 609, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 610, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 610, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 615, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 644, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 658, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 674, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 674, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 684, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 687, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 687, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 703, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 703, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 711, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 714, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 714, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 738, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 742, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 743, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 746, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 747, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 750, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 751, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 768, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 768, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 771, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 774, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 774, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 791, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 791, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 801, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 804, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 804, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 822, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 825, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 828, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 836, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 837, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 838, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 839, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 857, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 857, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 862, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 863, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 879, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 880, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 902, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 903, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 919, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 920, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 940, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 941, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 941, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 951, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 951, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 952, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 954, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 954, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 964, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 964, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 965, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 967, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 967, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 977, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 977, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 980, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 980, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 990, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 990, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 991, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 993, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 993, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1002, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1002, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1003, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1003, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1014, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1015, "col_offset": 29, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1079, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1080, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1080, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1082, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1085, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1097, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1106, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1109, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1111, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1111, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 1112, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1131, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 1131, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1179, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1193, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1232, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1246, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1294, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1298, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1304, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1317, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1321, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1327, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1356, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1360, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1414, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1414, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1416, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1418, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1446, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1448, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1471, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1475, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1476, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1476, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1479, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1480, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1481, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1488, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1515, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1528, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1544, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1544, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1550, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1553, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1553, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1569, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1569, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1575, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1578, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1578, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1602, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1606, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1607, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1610, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1611, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1611, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1614, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1615, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1632, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1648, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1649, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1665, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1666, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1676, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1676, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1677, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1679, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1679, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1689, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1689, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1690, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1692, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1692, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1702, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1702, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1703, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1705, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1705, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1714, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1714, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1715, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1715, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1734, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1737, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1740, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1748, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1749, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1750, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1751, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1761, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1761, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1780, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1780, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1782, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1816, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1818, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1822, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1823, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 1853, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1857, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1863, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1891, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1891, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1898, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1898, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1923, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1923, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1932, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1932, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1956, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1956, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1956, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1957, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1959, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1987, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1991, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1992, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1995, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1996, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1999, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2000, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2023, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2033, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2070, "col_offset": 28, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2080, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2103, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2130, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2130, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2136, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2136, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2136, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2156, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2156, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2162, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2162, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2162, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2183, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2183, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2189, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2189, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2189, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2220, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2220, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2220, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2252, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2255, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2258, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2266, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2267, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2268, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2269, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2279, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2280, "col_offset": 35, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2319, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2321, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2321, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2323, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2324, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2324, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2325, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2325, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2386, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2388, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 2397, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2408, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2410, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2410, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2411, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2464, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2466, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2487, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2491, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2491, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2492, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2495, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2495, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2511, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2525, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2556, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2556, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2566, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2569, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2569, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2584, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2584, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2592, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2595, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2595, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2610, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2610, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2616, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2620, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2620, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2639, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2641, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2641, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2647, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2648, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2648, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2649, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2649, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2702, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2703, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2705, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2708, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2717, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2728, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2731, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2731, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2732, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2803, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2805, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2828, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2833, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2833, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2834, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2836, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2836, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2837, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2840, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2840, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2874, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2890, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2908, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2908, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2918, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2922, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2922, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2941, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2941, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2951, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2955, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2955, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2972, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2972, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2980, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2984, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2984, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3001, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3001, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3007, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3011, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3011, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3037, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3041, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3045, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3045, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3045, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3068, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3071, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3071, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3077, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3078, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3079, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3079, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3080, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3080, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3081, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3081, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3132, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3133, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3135, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3138, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3147, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 3158, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3161, "col_offset": 49, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3161, "col_offset": 58, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3234, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 3236, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3259, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3264, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3264, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 3265, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3267, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3267, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 3268, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3271, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3271, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3305, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 3321, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3339, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 3339, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3345, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3370, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 3370, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3378, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3399, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3399, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3405, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3426, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3426, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3432, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3462, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3465, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3491, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3494, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3494, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3500, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3501, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3502, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3502, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3503, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3503, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3504, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3504, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3540, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3544, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3550, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3579, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3583, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3631, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3631, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 3633, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3635, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 3659, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3660, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3664, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 3687, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3691, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 3692, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3692, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3695, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3696, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3697, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 3731, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3734, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3735, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3735, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3742, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 3756, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3773, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3773, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3774, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3790, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3794, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3794, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3811, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3811, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3812, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3818, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3822, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3822, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3846, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3850, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3851, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3854, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3855, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3855, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 3858, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3859, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3863, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 3873, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 3875, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3876, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3890, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3892, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3893, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3907, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3909, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3910, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3924, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3926, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3927, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3941, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3943, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3944, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3954, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3954, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3955, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3957, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3957, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3967, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3967, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3968, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3970, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3970, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3980, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3980, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3981, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3983, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3983, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3993, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3993, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3994, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3996, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3996, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 4006, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4006, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 4007, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4009, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 4009, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 4018, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 4018, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4019, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 4019, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 4038, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 4041, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 4044, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 4052, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4053, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4054, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4055, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4065, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 4065, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 4136, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4137, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4137, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4139, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4142, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4163, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4166, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 4168, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 4168, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 4169, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4188, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4201, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 4204, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 4205, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 4205, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4224, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 4224, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4251, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 4261, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 4307, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 387, "col_offset": 39, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 431, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 461, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 462, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 465, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 465, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 465, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 605, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 606, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 609, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 610, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 620, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 644, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 674, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 684, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 685, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 687, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 703, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 711, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 712, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 714, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 738, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 739, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 768, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 771, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 772, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 774, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 791, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 801, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 802, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 804, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 822, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 825, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 828, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 836, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 837, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 838, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 839, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 862, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 863, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 879, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 879, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 902, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 902, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 903, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 919, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 919, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 940, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 940, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 941, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 952, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 952, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 953, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 953, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 954, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 965, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 965, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 966, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 966, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 967, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 978, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 979, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 979, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 980, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 991, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 991, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 992, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 992, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 993, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1003, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1079, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1080, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1080, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 1080, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1082, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 1084, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1085, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1106, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1109, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1111, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1179, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1232, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1294, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1298, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1303, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1317, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1318, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1318, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1321, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1326, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1356, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1357, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1360, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1360, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1360, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1360, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1471, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1472, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1475, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1476, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1480, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1491, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1515, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1544, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1550, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1551, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1553, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1569, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1575, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1576, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1578, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1602, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1603, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1611, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1631, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1648, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1648, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1665, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1665, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1677, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1677, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1678, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1678, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1679, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1690, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1690, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1691, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1691, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1692, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1703, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1703, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1704, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1704, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1705, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1715, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1734, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1737, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1740, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1748, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1749, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1750, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1751, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1780, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1780, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1818, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1822, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1823, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1853, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1857, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1862, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1987, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1988, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2130, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2156, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2183, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2252, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2255, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2258, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2266, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2267, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2268, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2269, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2319, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2320, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2324, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2388, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2408, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2409, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2410, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2410, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2487, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2488, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2491, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2492, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 2495, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2504, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2511, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2556, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2566, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2567, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2569, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2584, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2592, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2593, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2595, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2610, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2616, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2617, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2620, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2639, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2640, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2648, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2702, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2703, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2705, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2708, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2728, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2729, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2731, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2731, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2828, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2829, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2833, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2834, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2836, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2837, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2840, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2850, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2874, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2908, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2918, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2919, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2922, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2941, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2951, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2952, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2955, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2972, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2980, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2981, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2984, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3001, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3007, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3008, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3011, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3037, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 3041, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3042, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3045, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3068, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3069, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3079, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3080, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3132, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 3133, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3135, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3138, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3158, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3159, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3161, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 3161, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 3259, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3260, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3264, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3265, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 3267, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3268, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 3271, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 3281, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3305, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3339, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3345, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3346, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3370, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3378, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3379, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3399, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 3405, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3406, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3426, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 3432, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3433, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3462, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 3465, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3466, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3491, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3492, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3502, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3503, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3540, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 3544, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 3549, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3579, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3580, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3583, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 3583, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3583, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3583, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3583, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3584, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3659, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3660, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3687, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3688, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3691, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3692, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 3696, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 3701, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3731, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3731, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3731, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 3734, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3735, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3742, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3773, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3790, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3791, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3794, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3811, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3818, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3819, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3822, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3846, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3847, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3855, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3875, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3875, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3892, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3892, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3909, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3909, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3926, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3926, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3943, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3943, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3955, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3955, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3956, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3956, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3957, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3968, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3968, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3969, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3969, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3970, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3981, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3981, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3982, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3982, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3983, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3994, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3994, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3995, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3995, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3996, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4007, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 4007, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4008, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 4008, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 4009, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4019, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4038, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4041, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4044, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4052, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4053, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 4054, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4055, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 4136, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4137, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4137, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 4137, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4139, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 4141, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4142, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 4163, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4166, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4168, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4188, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4201, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4201, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 4201, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 4204, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4205, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 107, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 431, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 462, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 462, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 606, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 606, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 620, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 685, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 685, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 712, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 739, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 739, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 772, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 772, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 772, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 802, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 802, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 802, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 879, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 902, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 919, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 940, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 953, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 966, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 979, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 992, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1080, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1082, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1084, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1298, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1303, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1321, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1326, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1357, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1357, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1357, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1472, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1472, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1472, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1480, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1491, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1551, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1551, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1551, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1576, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1576, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1576, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1603, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1603, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1603, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1611, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1631, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1648, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1665, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1678, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1691, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1704, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1782, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1823, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1857, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1862, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1988, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1988, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1988, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2320, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2320, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2320, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2324, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2409, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2409, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2409, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2488, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2488, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2488, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2495, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2504, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2567, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2567, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2567, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2593, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2593, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2593, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2617, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2617, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2617, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2640, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2640, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2640, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2648, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2703, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2705, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2708, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2729, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2729, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2729, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2730, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2730, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2829, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2829, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2829, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2830, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2830, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2840, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2850, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2919, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2919, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2919, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2920, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2920, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2952, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2952, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2952, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2953, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2953, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2981, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2981, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2981, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2982, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2982, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3008, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3008, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3008, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3009, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3009, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3042, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3042, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3042, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3043, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3043, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3069, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3069, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3069, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3070, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3070, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3079, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3080, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3133, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3135, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3138, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 3159, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3159, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3159, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3160, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3160, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3260, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3260, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3260, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3261, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3261, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3271, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3281, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3346, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3346, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3346, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3347, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3347, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3379, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3379, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3379, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3380, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3380, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3406, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3406, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3406, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3407, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3407, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3433, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3433, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3433, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3434, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3434, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3466, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3466, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3466, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3467, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3467, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3492, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3492, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3492, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3493, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3493, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3502, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3503, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3544, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3549, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3580, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3580, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3580, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3688, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3688, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3688, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3696, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3701, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3731, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3731, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3791, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3791, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3791, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3819, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3819, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3819, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3847, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3847, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3847, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3855, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3875, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3892, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3909, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3926, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3943, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3956, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3969, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3982, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3995, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4008, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 4139, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4141, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 4201, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4201, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 431, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 462, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 462, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 606, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 606, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 685, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 685, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 685, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 712, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 712, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 739, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 739, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 772, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 772, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 772, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 802, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 802, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 802, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1084, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1303, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1326, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1357, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1357, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1357, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1472, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1472, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1472, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1551, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1551, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1551, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1576, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1576, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1576, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1603, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1603, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1603, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1782, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1782, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1782, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1823, "col_offset": 58, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1862, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1988, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1988, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1988, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2320, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2320, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2320, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2409, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2409, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2409, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2488, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2488, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2488, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2567, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2567, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2567, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2593, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2593, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2593, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2617, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2617, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2617, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2640, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2640, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2640, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2708, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2729, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2729, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2729, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2730, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2730, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2829, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2829, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2829, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2830, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2830, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2919, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2919, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2919, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2920, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2920, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2952, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2952, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2952, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2953, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2953, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2981, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2981, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2981, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2982, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2982, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3008, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3008, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3008, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3009, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3009, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3042, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3042, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3042, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3043, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3043, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3069, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3069, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3069, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3070, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3070, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3138, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3159, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3159, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3159, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3160, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3160, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3260, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3260, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3260, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3261, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3261, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3346, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3346, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3346, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3347, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3347, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3379, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3379, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3379, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3380, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3380, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3406, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3406, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3406, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3407, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3407, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3433, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3433, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3433, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3434, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3434, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3466, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3466, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3466, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3467, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3467, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3492, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3492, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3492, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3493, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3493, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3549, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3580, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3580, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3580, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3688, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3688, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3688, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3791, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3791, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3791, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3819, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3819, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3819, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3847, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3847, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3847, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4141, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 1782, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1782, "col_offset": 46, "nodeName": "i", "type": "int"}]