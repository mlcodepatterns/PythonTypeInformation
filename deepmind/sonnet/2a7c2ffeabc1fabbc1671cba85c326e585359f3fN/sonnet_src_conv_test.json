[{"lineNumber": 31, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 32, "col_offset": 5, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 352, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "i", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "i", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "reached", "type": "bool"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "err", "type": "float"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "iterations", "type": "int"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv2D"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv2D"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv1D"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv1D"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv3D"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv3D"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 354, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "conv_padding", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "padding_func", "type": "Any"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "called", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "assertNear", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "conv2", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "iterations", "type": "int"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 6, "nodeName": "y1", "type": "Any"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "y2", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 162, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 188, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 10, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.src.conv.Conv2D]"}, {"lineNumber": 218, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv2D"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 220, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 224, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.src.conv.Conv2D]"}, {"lineNumber": 241, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv2D"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 243, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 247, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 249, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.src.conv.Conv1D]"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv1D"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 267, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 278, "col_offset": 30, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 280, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.src.conv.Conv1D]"}, {"lineNumber": 290, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv1D"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 294, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.src.conv.Conv3D]"}, {"lineNumber": 323, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv3D"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 325, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 327, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 336, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.src.conv.Conv3D]"}, {"lineNumber": 346, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv3D"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 348, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 354, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "w", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "w", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "ones", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 69, "col_offset": 6, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "device_types", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "float64", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "normal", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "std", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "err", "type": "float"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "autograph", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 193, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 198, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 220, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 243, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 267, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 294, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 325, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 343, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 348, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 350, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 354, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "initializers", "type": "module"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "initializers", "type": "module"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "initializers", "type": "module"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 130, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "y1", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 140, "col_offset": 59, "nodeName": "y2", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 216, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 263, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 269, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 288, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 321, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 321, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 323, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 344, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 344, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 346, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 350, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "zeros_initializer", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 323, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "out", "type": "Any"}]