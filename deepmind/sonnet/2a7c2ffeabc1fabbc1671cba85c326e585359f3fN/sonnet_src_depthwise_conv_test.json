[{"lineNumber": 31, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 32, "col_offset": 5, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 248, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "err", "type": "float"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "iterations", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 250, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assertNear", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "conv2", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "iterations", "type": "int"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "y1", "type": "Any"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "y2", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 106, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 7, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 121, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 10, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 171, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 181, "col_offset": 57, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 200, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 217, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 220, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 222, "col_offset": 60, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "assign", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 250, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "w", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "w", "type": "Any"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 43, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.src.depthwise_conv.DepthwiseConv2D]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "device_types", "type": "Any"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "float64", "type": "Any"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "normal", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "std", "type": "Any"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "err", "type": "float"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 115, "col_offset": 7, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 139, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "autograph", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "x1", "type": "Any"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "x2", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "x1", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "x2", "type": "Any"}, {"lineNumber": 250, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "initializers", "type": "module"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "initializers", "type": "module"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "initializers", "type": "module"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 43, "col_offset": 6, "nodeName": "depthwise_conv", "type": "module"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 89, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "y1", "type": "Any"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 99, "col_offset": 59, "nodeName": "y2", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "self", "type": "DepthwiseConvTest"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 6, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 169, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 193, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 215, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 215, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.depthwise_conv.DepthwiseConv2D"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "zeros_initializer", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "out", "type": "Any"}]