[{"lineNumber": 302, "col_offset": 0, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "logging", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "logging", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "base", "type": "module"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "base", "type": "module"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "base", "type": "module"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "base", "type": "module"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "base", "type": "module"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "base", "type": "module"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "base", "type": "module"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 303, "col_offset": 2, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 2, "nodeName": "weight", "type": "Any"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 388, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "_w", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "_b", "type": "SimpleModule"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "connected_subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "module", "type": "NoInitIdentityModule"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "module", "type": "NoSuperInitIdentityModule"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "module", "type": "IdentityModule"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 303, "col_offset": 52, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "weight", "type": "Any"}, {"lineNumber": 308, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "build", "type": "functools.partial[nothing]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 389, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "custom_key", "type": "bool"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "_b", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "_b", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "_a", "type": "SimpleModule"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "_b", "type": "SimpleModule"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 117, "col_offset": 55, "nodeName": "PY3", "type": "bool"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "msg", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 170, "col_offset": 6, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 203, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "NoSuperInitIdentityModule", "type": "Type[NoSuperInitIdentityModule]"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 232, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 240, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 244, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 270, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 281, "col_offset": 6, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 288, "col_offset": 6, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 297, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 38, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 320, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 322, "col_offset": 30, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "build", "type": "functools.partial[nothing]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 327, "col_offset": 44, "nodeName": "in_size", "type": "int"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 339, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 340, "col_offset": 6, "nodeName": "b", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 349, "col_offset": 38, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 351, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 354, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 362, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 366, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 370, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 374, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 381, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 389, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "name", "type": "str"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "_enter_variable_scope", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "_w", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 98, "col_offset": 54, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "name", "type": "str"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "_enter_variable_scope", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "_a", "type": "SimpleModule"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "ModuleWithClassKeys", "type": "Type[ModuleWithClassKeys]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "ModuleWithNoInitializerKeys", "type": "Type[ModuleWithNoInitializerKeys]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 117, "col_offset": 55, "nodeName": "six", "type": "module"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "graph", "type": "Any"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 178, "col_offset": 50, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 192, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 203, "col_offset": 21, "nodeName": "module", "type": "NoInitIdentityModule"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "NotInitializedError", "type": "Type[sonnet.python.modules.base_errors.NotInitializedError]"}, {"lineNumber": 209, "col_offset": 6, "nodeName": "module", "type": "NoSuperInitIdentityModule"}, {"lineNumber": 213, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "dumps", "type": "Callable[..., bytes]"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "module", "type": "IdentityModule"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 233, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 237, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 238, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 245, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 246, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 271, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 272, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 276, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 280, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 282, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 283, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 283, "col_offset": 45, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 284, "col_offset": 45, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 287, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 287, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 290, "col_offset": 45, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 295, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 298, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 299, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 304, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 311, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 311, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "exception", "type": "Any"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 320, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "functools", "type": "module"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "base", "type": "module"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 330, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 335, "col_offset": 36, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 339, "col_offset": 10, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 340, "col_offset": 10, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 349, "col_offset": 38, "nodeName": "base", "type": "module"}, {"lineNumber": 349, "col_offset": 57, "nodeName": "simple_module_build", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 353, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 355, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 356, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 359, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 360, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 363, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 364, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 367, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 367, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 371, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 371, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 372, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "module", "type": "nothing"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "module", "type": "nothing"}, {"lineNumber": 389, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "DifferentGraphError", "type": "Type[sonnet.python.modules.base_errors.DifferentGraphError]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 192, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 213, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "pickle", "type": "module"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 238, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 246, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 249, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 256, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 258, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 272, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 272, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 274, "col_offset": 43, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 281, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 282, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 30, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 284, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 288, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 289, "col_offset": 30, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 295, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 311, "col_offset": 9, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "base", "type": "module"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "cm", "type": "Any"}, {"lineNumber": 319, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 319, "col_offset": 60, "nodeName": "in_size", "type": "int"}, {"lineNumber": 320, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 320, "col_offset": 60, "nodeName": "in_size", "type": "int"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 330, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 339, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 340, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 341, "col_offset": 13, "nodeName": "w", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 353, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 356, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 358, "col_offset": 43, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 364, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 364, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 368, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 372, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 372, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 375, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 375, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 376, "col_offset": 17, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "module", "type": "nothing"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 382, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 382, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 384, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "base", "type": "module"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 50, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 49, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 278, "col_offset": 52, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 281, "col_offset": 44, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 286, "col_offset": 52, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 288, "col_offset": 44, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 293, "col_offset": 50, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 297, "col_offset": 49, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 333, "col_offset": 21, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 333, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 362, "col_offset": 49, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 366, "col_offset": 51, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 50, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 55, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 288, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 55, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "tf", "type": "Any"}]