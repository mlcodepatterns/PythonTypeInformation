[{"lineNumber": 41, "col_offset": 0, "nodeName": "_yield_flat_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "assert_shallow_structure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "flatten_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "map_up_to", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 0, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 0, "nodeName": "_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 0, "nodeName": "_iterable_like", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 0, "nodeName": "_yield_value_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 0, "nodeName": "_yield_flat_nest_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 0, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 0, "nodeName": "flatten_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 389, "col_offset": 0, "nodeName": "_packed_iterable_nest_with_indices", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 420, "col_offset": 0, "nodeName": "pack_iterable_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "nest", "type": "Any"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "nest", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "nest", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "nest", "type": "Any"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 234, "col_offset": 2, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 283, "col_offset": 2, "nodeName": "all_flattened", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 2, "nodeName": "applied_results", "type": "List[Any]"}, {"lineNumber": 338, "col_offset": 6, "nodeName": "n", "type": "Any"}, {"lineNumber": 408, "col_offset": 2, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 409, "col_offset": 6, "nodeName": "s", "type": "Any"}, {"lineNumber": 450, "col_offset": 2, "nodeName": "flat_structure", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 5, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 69, "col_offset": 5, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 160, "col_offset": 2, "nodeName": "assert_shallow_structure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 276, "col_offset": 9, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 308, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "instance", "type": "Any"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 324, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "_yield_value_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 383, "col_offset": 5, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "structure", "type": "Any"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "_yield_value_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 38, "nodeName": "structure", "type": "Any"}, {"lineNumber": 417, "col_offset": 9, "nodeName": "index", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "flatten_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 36, "nodeName": "structure", "type": "Any"}, {"lineNumber": 457, "col_offset": 2, "nodeName": "_", "type": "Any"}, {"lineNumber": 457, "col_offset": 5, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 457, "col_offset": 14, "nodeName": "_packed_iterable_nest_with_indices", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 457, "col_offset": 49, "nodeName": "structure", "type": "Any"}, {"lineNumber": 457, "col_offset": 60, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 458, "col_offset": 9, "nodeName": "_iterable_like", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "structure", "type": "Any"}, {"lineNumber": 458, "col_offset": 35, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 44, "col_offset": 58, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "input_leaf", "type": "Any"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 87, "col_offset": 58, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "_yield_flat_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 226, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "assert_shallow_structure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 228, "col_offset": 43, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "fn_or_op", "type": "Any"}, {"lineNumber": 234, "col_offset": 36, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 235, "col_offset": 9, "nodeName": "nest", "type": "Any"}, {"lineNumber": 235, "col_offset": 41, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 235, "col_offset": 69, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 283, "col_offset": 43, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 283, "col_offset": 57, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "fn_or_op", "type": "Any"}, {"lineNumber": 284, "col_offset": 44, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "nest", "type": "Any"}, {"lineNumber": 286, "col_offset": 45, "nodeName": "applied_results", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "collections", "type": "module"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 310, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 310, "col_offset": 18, "nodeName": "instance", "type": "Any"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 325, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 325, "col_offset": 18, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 326, "col_offset": 10, "nodeName": "key", "type": "Any"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 330, "col_offset": 10, "nodeName": "key", "type": "Any"}, {"lineNumber": 339, "col_offset": 7, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 19, "nodeName": "n", "type": "Any"}, {"lineNumber": 340, "col_offset": 10, "nodeName": "ni", "type": "Any"}, {"lineNumber": 355, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "seq", "type": "Any"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 355, "col_offset": 42, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 355, "col_offset": 53, "nodeName": "seq", "type": "Any"}, {"lineNumber": 355, "col_offset": 58, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 358, "col_offset": 9, "nodeName": "seq", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "structure", "type": "Any"}, {"lineNumber": 410, "col_offset": 7, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 413, "col_offset": 6, "nodeName": "index", "type": "Any"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "new_index", "type": "Any"}, {"lineNumber": 416, "col_offset": 6, "nodeName": "index", "type": "Any"}, {"lineNumber": 441, "col_offset": 9, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 442, "col_offset": 10, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 444, "col_offset": 9, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 21, "nodeName": "structure", "type": "Any"}, {"lineNumber": 448, "col_offset": 11, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 451, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 451, "col_offset": 9, "nodeName": "flat_structure", "type": "List[Any]"}, {"lineNumber": 451, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 451, "col_offset": 32, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 452, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "_yield_flat_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 45, "col_offset": 58, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "assert_shallow_structure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 234, "col_offset": 47, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 284, "col_offset": 55, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "iterkeys", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "collections", "type": "module"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 309, "col_offset": 60, "nodeName": "args", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "collections", "type": "module"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "_yield_flat_nest_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 47, "nodeName": "n", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "six", "type": "module"}, {"lineNumber": 355, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "_yield_flat_nest_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 47, "nodeName": "structure", "type": "Any"}, {"lineNumber": 411, "col_offset": 6, "nodeName": "new_index", "type": "Any"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "child", "type": "Any"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "_packed_iterable_nest_with_indices", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 411, "col_offset": 60, "nodeName": "s", "type": "Any"}, {"lineNumber": 411, "col_offset": 63, "nodeName": "flat", "type": "Any"}, {"lineNumber": 411, "col_offset": 69, "nodeName": "index", "type": "Any"}, {"lineNumber": 412, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 415, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 445, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "input_leaf", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 234, "col_offset": 52, "nodeName": "all_flattened_up_to", "type": "List[List[Any]]"}, {"lineNumber": 284, "col_offset": 60, "nodeName": "all_flattened", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "dict_", "type": "Any"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "iterkeys", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 311, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "instance", "type": "Any"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "instance", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "_fields", "type": "Any"}, {"lineNumber": 314, "col_offset": 37, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 320, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 341, "col_offset": 14, "nodeName": "ni", "type": "Any"}, {"lineNumber": 412, "col_offset": 6, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "_iterable_like", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 412, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 412, "col_offset": 38, "nodeName": "child", "type": "Any"}, {"lineNumber": 415, "col_offset": 6, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "flat", "type": "Any"}, {"lineNumber": 455, "col_offset": 52, "nodeName": "structure", "type": "Any"}, {"lineNumber": 455, "col_offset": 63, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "instance", "type": "Any"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "instance", "type": "Any"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "instance", "type": "Any"}, {"lineNumber": 314, "col_offset": 37, "nodeName": "collections", "type": "module"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "instance", "type": "Any"}, {"lineNumber": 317, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "instance", "type": "Any"}, {"lineNumber": 327, "col_offset": 14, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 331, "col_offset": 14, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "index", "type": "Any"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 447, "col_offset": 29, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "flat_structure", "type": "List[Any]"}, {"lineNumber": 455, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 455, "col_offset": 36, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 315, "col_offset": 48, "nodeName": "f", "type": "Any"}, {"lineNumber": 315, "col_offset": 53, "nodeName": "_fields", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "six", "type": "module"}, {"lineNumber": 315, "col_offset": 53, "nodeName": "instance", "type": "Any"}]