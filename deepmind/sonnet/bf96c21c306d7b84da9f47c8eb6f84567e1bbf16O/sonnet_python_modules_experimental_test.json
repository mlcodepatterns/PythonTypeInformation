[{"lineNumber": 27, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 311, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "module1", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "module2", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "a1", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "inputs_plus_b1", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "inputs_plus_b2", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "a2", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "inputs_plus_ab1_again", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "inputs_plus_ab2_again", "type": "Any"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "m1", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "m2", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "a1", "type": "Any"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "a2", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "g1", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "g2", "type": "Any"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "ones", "type": "Any"}, {"lineNumber": 312, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "InheritedVariableContainer", "type": "Type[Any]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "InheritedVariableContainer", "type": "Type[Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "module1", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "module2", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "module1", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "module2", "type": "Any"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 146, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "m1", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "m2", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 199, "col_offset": 6, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 212, "col_offset": 6, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 213, "col_offset": 6, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "tensor_names", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "op", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "tensor_names", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "VariableContainerWithOps", "type": "Type[Any]"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "VariableContainerWithOps", "type": "Type[Any]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 257, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 258, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 261, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 269, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 270, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "tensor_names", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "vs", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "vs", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "module1", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "module1", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "module2", "type": "Any"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "module2", "type": "Any"}, {"lineNumber": 144, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "a1", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "a2", "type": "Any"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 206, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 208, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 215, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 220, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "get_tensor_names_from_default_graph", "type": "Callable[[], Any]"}, {"lineNumber": 312, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 128, "col_offset": 59, "nodeName": "in_size", "type": "int"}, {"lineNumber": 144, "col_offset": 9, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "a1", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "inputs_plus_b1", "type": "Any"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 147, "col_offset": 59, "nodeName": "a2", "type": "Any"}, {"lineNumber": 147, "col_offset": 63, "nodeName": "inputs_plus_b2", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "out", "type": "Any"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 156, "col_offset": 43, "nodeName": "out", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "inputs_plus_ab1_again", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "inputs_plus_ab2_again", "type": "Any"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "_template", "type": "Any"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "g1", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 206, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 208, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "g2", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 215, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 220, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 257, "col_offset": 43, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 257, "col_offset": 54, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 258, "col_offset": 45, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 258, "col_offset": 56, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 260, "col_offset": 54, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 261, "col_offset": 45, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 261, "col_offset": 56, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "nested_add", "type": "Any"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "nested_add", "type": "Any"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 269, "col_offset": 43, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 269, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 270, "col_offset": 45, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 270, "col_offset": 56, "nodeName": "ones", "type": "Any"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 272, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 273, "col_offset": 56, "nodeName": "ones", "type": "Any"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "nested_add", "type": "Any"}, {"lineNumber": 276, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "nested_add", "type": "Any"}, {"lineNumber": 278, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "name", "type": "str"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 149, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "name", "type": "str"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 240, "col_offset": 47, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "get_operations", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "tensor_names", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 257, "col_offset": 43, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 258, "col_offset": 45, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 261, "col_offset": 45, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 269, "col_offset": 43, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 270, "col_offset": 45, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 120, "col_offset": 51, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 152, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 245, "col_offset": 62, "nodeName": "name", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 250, "col_offset": 54, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "op", "type": "Any"}, {"lineNumber": 245, "col_offset": 62, "nodeName": "op", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 250, "col_offset": 54, "nodeName": "op", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "tf", "type": "Any"}]