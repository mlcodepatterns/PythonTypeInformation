[{"lineNumber": 33, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 231, "col_offset": 36, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 587, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "test", "type": "Any"}, {"lineNumber": 231, "col_offset": 36, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 587, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 636, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "rnn_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "in_to_hid", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "in_to_hidden_variables", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "hid_to_hid", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "hidden_to_hidden_variables", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "real_in_to_hid", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "real_hid_to_hid", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "real_output", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "batch_size_shape", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "prev_state0", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "prev_state1", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "prev_state2", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "prev_state", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "output_size", "type": "int"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "initial_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "cells", "type": "List[Any]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "insize", "type": "int"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "cores1", "type": "List[Any]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "core1", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "core1_h0", "type": "Tuple[Any, ...]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "cores2", "type": "List[Any]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "core2", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "core2_h0", "type": "Tuple[Any, ...]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "xseq", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "prev_state1", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "prev_state2", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "prev_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 360, "col_offset": 13, "nodeName": "deep_rnn_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 377, "col_offset": 7, "nodeName": "create_initial_state", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "manual_output_value", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "manual_next_state1_value", "type": "Any"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "manual_next_state2_value", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "output1_size", "type": "int"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "output2_size", "type": "int"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "input2", "type": "Any"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "output1", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "manual_output", "type": "Any"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "output2", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "output1_size", "type": "int"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "output2_size", "type": "int"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "initializer", "type": "None"}, {"lineNumber": 462, "col_offset": 7, "nodeName": "use_custom_initial_value", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "dummy_deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "expected_initial_state", "type": "List[Any]"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "initial_state_module", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "hidden_size_a", "type": "int"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "hidden_size_b", "type": "int"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "deep_rnn_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "x_seq_shape", "type": "List[int]"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "num_hidden", "type": "int"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "final_hidden_size", "type": "int"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "x_seq", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "cores", "type": "List[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "final_core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "cores", "type": "List[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "initial_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "initial_output", "type": "Any"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "expected_shape", "type": "Tuple[int, int]"}, {"lineNumber": 587, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "model_rnn", "type": "sonnet.python.modules.basic_rnn.ModelRNN"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "batch_size_shape", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "model_rnn", "type": "sonnet.python.modules.basic_rnn.ModelRNN"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 637, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "next", "type": "Callable"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "next", "type": "Callable"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 94, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "output_v", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "new_state_v", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "in_to_hid_w", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "in_to_hid_b", "type": "Any"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "hid_to_hid_w", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "hid_to_hid_b", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "in_to_hid_b", "type": "Any"}, {"lineNumber": 106, "col_offset": 62, "nodeName": "hid_to_hid_b", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "real_output", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "output_v", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "real_output", "type": "Any"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "new_state_v", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 235, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 241, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "prev_state0", "type": "Any"}, {"lineNumber": 244, "col_offset": 31, "nodeName": "prev_state1", "type": "Any"}, {"lineNumber": 244, "col_offset": 44, "nodeName": "prev_state2", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 252, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 252, "col_offset": 42, "nodeName": "prev_state", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 255, "col_offset": 43, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "next_state_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 273, "col_offset": 43, "nodeName": "state_size", "type": "Tuple[Any, ...]"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 278, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 278, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "cores1", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 319, "col_offset": 64, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 320, "col_offset": 24, "nodeName": "cores2", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "core1", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "xseq", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "core2", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "xseq", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 340, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 341, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 342, "col_offset": 18, "nodeName": "prev_state1", "type": "Any"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "prev_state2", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 346, "col_offset": 27, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 347, "col_offset": 42, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "prev_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 374, "col_offset": 27, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 378, "col_offset": 6, "nodeName": "prev_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 384, "col_offset": 6, "nodeName": "prev_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 386, "col_offset": 25, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 386, "col_offset": 42, "nodeName": "prev_state", "type": "Union[Tuple[Any, Any], Tuple[Any, ...]]"}, {"lineNumber": 387, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 390, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 391, "col_offset": 6, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 400, "col_offset": 59, "nodeName": "outputs_value", "type": "Any"}, {"lineNumber": 404, "col_offset": 9, "nodeName": "skip_connections", "type": "Any"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "skip_connections", "type": "Any"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "manual_outputs_value", "type": "Any"}, {"lineNumber": 416, "col_offset": 31, "nodeName": "manual_outputs_value", "type": "Any"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "manual_outputs_value", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "output_value", "type": "Any"}, {"lineNumber": 419, "col_offset": 38, "nodeName": "manual_output_value", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "next_state1_value", "type": "Any"}, {"lineNumber": 420, "col_offset": 43, "nodeName": "manual_next_state1_value", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "next_state2_value", "type": "Any"}, {"lineNumber": 421, "col_offset": 43, "nodeName": "manual_next_state2_value", "type": "Any"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 433, "col_offset": 27, "nodeName": "cores", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 434, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "input_", "type": "Any"}, {"lineNumber": 438, "col_offset": 23, "nodeName": "input_", "type": "Any"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "input2", "type": "Any"}, {"lineNumber": 443, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 444, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 445, "col_offset": 6, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 447, "col_offset": 6, "nodeName": "output_value", "type": "Any"}, {"lineNumber": 448, "col_offset": 6, "nodeName": "manual_out_value", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 450, "col_offset": 24, "nodeName": "output_value", "type": "Any"}, {"lineNumber": 450, "col_offset": 38, "nodeName": "manual_out_value", "type": "Any"}, {"lineNumber": 468, "col_offset": 21, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 468, "col_offset": 33, "nodeName": "non_recurrent_cores", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 469, "col_offset": 26, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 471, "col_offset": 21, "nodeName": "dummy_initial_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 477, "col_offset": 27, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 479, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 482, "col_offset": 11, "nodeName": "core", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 482, "col_offset": 29, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 491, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 493, "col_offset": 6, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 494, "col_offset": 6, "nodeName": "expected_initial_state_value", "type": "Any"}, {"lineNumber": 496, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 496, "col_offset": 44, "nodeName": "expected_initial_state_value", "type": "Any"}, {"lineNumber": 497, "col_offset": 44, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 505, "col_offset": 6, "nodeName": "core", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 513, "col_offset": 27, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 513, "col_offset": 38, "nodeName": "module_build", "type": "Callable[[], Any]"}, {"lineNumber": 514, "col_offset": 20, "nodeName": "initial_state_module", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 516, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 518, "col_offset": 6, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 534, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 548, "col_offset": 24, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 556, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 567, "col_offset": 17, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 567, "col_offset": 26, "nodeName": "final_hidden_size", "type": "int"}, {"lineNumber": 568, "col_offset": 14, "nodeName": "final_core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 569, "col_offset": 20, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 569, "col_offset": 32, "nodeName": "cores", "type": "List[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 573, "col_offset": 20, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 573, "col_offset": 38, "nodeName": "deep_rnn_core", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 574, "col_offset": 38, "nodeName": "x_seq", "type": "Any"}, {"lineNumber": 578, "col_offset": 21, "nodeName": "output_seq", "type": "Any"}, {"lineNumber": 579, "col_offset": 17, "nodeName": "x_seq", "type": "Any"}, {"lineNumber": 580, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 582, "col_offset": 6, "nodeName": "initial_output_res", "type": "Any"}, {"lineNumber": 583, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 583, "col_offset": 34, "nodeName": "final_hidden_size", "type": "int"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "assertSequenceEqual", "type": "Any"}, {"lineNumber": 584, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 584, "col_offset": 55, "nodeName": "expected_shape", "type": "Tuple[int, int]"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 592, "col_offset": 17, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 593, "col_offset": 29, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 593, "col_offset": 44, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "ModelRNN", "type": "Type[sonnet.python.modules.basic_rnn.ModelRNN]"}, {"lineNumber": 596, "col_offset": 29, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 597, "col_offset": 13, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 598, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 598, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 601, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 601, "col_offset": 26, "nodeName": "model_rnn", "type": "sonnet.python.modules.basic_rnn.ModelRNN"}, {"lineNumber": 601, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 601, "col_offset": 44, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 602, "col_offset": 23, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 602, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 603, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 603, "col_offset": 50, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 605, "col_offset": 24, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 606, "col_offset": 21, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 607, "col_offset": 21, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "ModelRNN", "type": "Type[sonnet.python.modules.basic_rnn.ModelRNN]"}, {"lineNumber": 611, "col_offset": 29, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 612, "col_offset": 13, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 613, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 613, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 616, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 616, "col_offset": 26, "nodeName": "model_rnn", "type": "sonnet.python.modules.basic_rnn.ModelRNN"}, {"lineNumber": 616, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 616, "col_offset": 44, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 618, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 619, "col_offset": 6, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 620, "col_offset": 6, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 623, "col_offset": 6, "nodeName": "outputs_value", "type": "Any"}, {"lineNumber": 624, "col_offset": 40, "nodeName": "outputs_value", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 626, "col_offset": 24, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 626, "col_offset": 41, "nodeName": "outputs_value", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 627, "col_offset": 24, "nodeName": "outputs_value", "type": "Any"}, {"lineNumber": 627, "col_offset": 39, "nodeName": "next_state_value", "type": "Any"}, {"lineNumber": 637, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 45, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "rnn_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "in_to_hidden_w", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "in_to_hidden_b", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "hidden_to_hidden_w", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "hidden_to_hidden_b", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "in_size", "type": "int"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "randn", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 95, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "dot", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "in_to_hid_w", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "dot", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "hid_to_hid_w", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "real_in_to_hid", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "real_hid_to_hid", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 140, "col_offset": 46, "nodeName": "valid_initializers", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 146, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "run", "type": "Any"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "w_v", "type": "Any"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "b_v", "type": "Any"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "valid_partitioners", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "variables", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "variables", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "variables", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "variables", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 209, "col_offset": 6, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 224, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 225, "col_offset": 46, "nodeName": "valid_regularizers", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 241, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "in_size", "type": "int"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 262, "col_offset": 51, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 273, "col_offset": 43, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 278, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "initial_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 44, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "initial_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "initial_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 284, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 285, "col_offset": 26, "nodeName": "initial_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 294, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 297, "col_offset": 6, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "cores", "type": "List[Union[sonnet.python.modules.basic.Linear, sonnet.python.modules.basic_rnn.VanillaRNN]]"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 299, "col_offset": 46, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "cells", "type": "List[Any]"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 47, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 315, "col_offset": 58, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "core1", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 317, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 319, "col_offset": 38, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 319, "col_offset": 49, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 319, "col_offset": 64, "nodeName": "tf", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "core2", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "core1_h0", "type": "Tuple[Any, ...]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "core2_h0", "type": "Tuple[Any, ...]"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 330, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 331, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 341, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 346, "col_offset": 39, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 348, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "from_iterable", "type": "Callable"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "deep_rnn_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 361, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 362, "col_offset": 10, "nodeName": "name", "type": "Any"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 374, "col_offset": 39, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 375, "col_offset": 44, "nodeName": "skip_connections", "type": "Any"}, {"lineNumber": 376, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 378, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 378, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 381, "col_offset": 10, "nodeName": "float32", "type": "Any"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 383, "col_offset": 10, "nodeName": "float32", "type": "Any"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "prev_state1", "type": "Any"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "prev_state2", "type": "Any"}, {"lineNumber": 387, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 390, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 390, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 390, "col_offset": 47, "nodeName": "in_size", "type": "int"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "create_initial_state", "type": "Any"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "run", "type": "Any"}, {"lineNumber": 400, "col_offset": 6, "nodeName": "output_value", "type": "Any"}, {"lineNumber": 400, "col_offset": 20, "nodeName": "next_state1_value", "type": "Any"}, {"lineNumber": 400, "col_offset": 39, "nodeName": "next_state2_value", "type": "Any"}, {"lineNumber": 403, "col_offset": 6, "nodeName": "output1", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "next_state1", "type": "Any"}, {"lineNumber": 403, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "input2", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "input2", "type": "Any"}, {"lineNumber": 407, "col_offset": 17, "nodeName": "output1", "type": "Any"}, {"lineNumber": 408, "col_offset": 6, "nodeName": "output2", "type": "Any"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "next_state2", "type": "Any"}, {"lineNumber": 408, "col_offset": 38, "nodeName": "input2", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "manual_output", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "manual_output", "type": "Any"}, {"lineNumber": 412, "col_offset": 24, "nodeName": "output2", "type": "Any"}, {"lineNumber": 413, "col_offset": 29, "nodeName": "run", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 429, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 434, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 438, "col_offset": 14, "nodeName": "cores", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 440, "col_offset": 14, "nodeName": "cores", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 443, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 444, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 444, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 444, "col_offset": 47, "nodeName": "in_size", "type": "int"}, {"lineNumber": 445, "col_offset": 19, "nodeName": "input_", "type": "Any"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 446, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "run", "type": "Any"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 466, "col_offset": 27, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 467, "col_offset": 27, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 468, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 469, "col_offset": 26, "nodeName": "dummy_deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 470, "col_offset": 30, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 476, "col_offset": 13, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 479, "col_offset": 65, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 480, "col_offset": 66, "nodeName": "initializer", "type": "Optional[List[Any]]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "expected_initializer", "type": "None"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "initializer", "type": "Optional[List[Any]]"}, {"lineNumber": 491, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 492, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "run", "type": "Any"}, {"lineNumber": 493, "col_offset": 37, "nodeName": "initial_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 494, "col_offset": 37, "nodeName": "run", "type": "Any"}, {"lineNumber": 494, "col_offset": 46, "nodeName": "expected_initial_state", "type": "List[Any]"}, {"lineNumber": 498, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 498, "col_offset": 26, "nodeName": "actual_value", "type": "Any"}, {"lineNumber": 498, "col_offset": 40, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 505, "col_offset": 13, "nodeName": "DeepRNN", "type": "Type[sonnet.python.modules.basic_rnn.DeepRNN]"}, {"lineNumber": 506, "col_offset": 23, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 507, "col_offset": 10, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 508, "col_offset": 23, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 511, "col_offset": 13, "nodeName": "initial_state1", "type": "Tuple[Any, ...]"}, {"lineNumber": 511, "col_offset": 29, "nodeName": "initial_state2", "type": "Tuple[Any, ...]"}, {"lineNumber": 513, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 516, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 517, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "run", "type": "Any"}, {"lineNumber": 518, "col_offset": 37, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 519, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 519, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 520, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 521, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 521, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 522, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 523, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 523, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 524, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 525, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 526, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 526, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 548, "col_offset": 24, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "x_seq_shape", "type": "List[int]"}, {"lineNumber": 565, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 566, "col_offset": 13, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 566, "col_offset": 22, "nodeName": "num_hidden", "type": "int"}, {"lineNumber": 566, "col_offset": 38, "nodeName": "_", "type": "int"}, {"lineNumber": 567, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 569, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "deep_rnn_core", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 572, "col_offset": 59, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 573, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 576, "col_offset": 52, "nodeName": "initial_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 577, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 579, "col_offset": 24, "nodeName": "normal", "type": "Any"}, {"lineNumber": 580, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 582, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 582, "col_offset": 36, "nodeName": "initial_output", "type": "Any"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 584, "col_offset": 29, "nodeName": "initial_output_res", "type": "Any"}, {"lineNumber": 592, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 592, "col_offset": 48, "nodeName": "identity", "type": "Any"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 593, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 593, "col_offset": 44, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 596, "col_offset": 29, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 597, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 597, "col_offset": 31, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 598, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 598, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 602, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 602, "col_offset": 38, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 603, "col_offset": 21, "nodeName": "batch_size_shape", "type": "Any"}, {"lineNumber": 603, "col_offset": 50, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 605, "col_offset": 40, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 606, "col_offset": 37, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 607, "col_offset": 37, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 608, "col_offset": 37, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 611, "col_offset": 29, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 612, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 612, "col_offset": 31, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 613, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 613, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 618, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 619, "col_offset": 24, "nodeName": "randn", "type": "Any"}, {"lineNumber": 619, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 619, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 620, "col_offset": 19, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 620, "col_offset": 31, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 621, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 623, "col_offset": 22, "nodeName": "run", "type": "Any"}, {"lineNumber": 624, "col_offset": 6, "nodeName": "outputs_value", "type": "Any"}, {"lineNumber": 624, "col_offset": 21, "nodeName": "next_state_value", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 630, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 630, "col_offset": 27, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 631, "col_offset": 6, "nodeName": "ModelRNN", "type": "Type[sonnet.python.modules.basic_rnn.ModelRNN]"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 632, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 632, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 633, "col_offset": 6, "nodeName": "ModelRNN", "type": "Type[sonnet.python.modules.basic_rnn.ModelRNN]"}, {"lineNumber": 637, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "VanillaRNNTest", "type": "Type[VanillaRNNTest]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 42, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 45, "col_offset": 57, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 53, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 58, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "v", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "rnn_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "v", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "rnn_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "v", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "rnn_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "v", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "rnn_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "in_size", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 95, "col_offset": 57, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "in_to_hid", "type": "Any"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "in_to_hid", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "hid_to_hid", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "hid_to_hid", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "ones_initializer", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "ones_initializer", "type": "Any"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 145, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 146, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "sess", "type": "Any"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 155, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "in_to_hidden_linear", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "in_to_hidden_linear", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "hidden_to_hidden_linear", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "hidden_to_hidden_linear", "type": "Any"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 198, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 200, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 202, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 209, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 224, "col_offset": 45, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 240, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 240, "col_offset": 59, "nodeName": "in_size", "type": "int"}, {"lineNumber": 241, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 241, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 242, "col_offset": 64, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 243, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 243, "col_offset": 64, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 247, "col_offset": 53, "nodeName": "in_size", "type": "int"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 248, "col_offset": 53, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 249, "col_offset": 53, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 258, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 258, "col_offset": 53, "nodeName": "output_size", "type": "int"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 260, "col_offset": 37, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 266, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 266, "col_offset": 60, "nodeName": "in_size", "type": "int"}, {"lineNumber": 268, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 268, "col_offset": 60, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 270, "col_offset": 60, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "is_compatible_with", "type": "nothing"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 280, "col_offset": 50, "nodeName": "in_size", "type": "int"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 282, "col_offset": 50, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 284, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 284, "col_offset": 50, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 291, "col_offset": 51, "nodeName": "in_size", "type": "int"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 292, "col_offset": 53, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 293, "col_offset": 53, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 294, "col_offset": 9, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 297, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 299, "col_offset": 46, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 315, "col_offset": 47, "nodeName": "snt", "type": "module"}, {"lineNumber": 319, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 319, "col_offset": 38, "nodeName": "snt", "type": "module"}, {"lineNumber": 323, "col_offset": 35, "nodeName": "seq_length", "type": "int"}, {"lineNumber": 323, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 323, "col_offset": 59, "nodeName": "insize", "type": "int"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 330, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 331, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "y1", "type": "Any"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "y2", "type": "Any"}, {"lineNumber": 339, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 339, "col_offset": 59, "nodeName": "in_size", "type": "int"}, {"lineNumber": 340, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 340, "col_offset": 64, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 341, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 341, "col_offset": 64, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 344, "col_offset": 53, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 345, "col_offset": 53, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 348, "col_offset": 9, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 358, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 358, "col_offset": 54, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 361, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 362, "col_offset": 10, "nodeName": "v", "type": "Any"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 372, "col_offset": 53, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 373, "col_offset": 53, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 376, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 376, "col_offset": 59, "nodeName": "in_size", "type": "int"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 378, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 381, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 383, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 387, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "randn", "type": "Any"}, {"lineNumber": 393, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 393, "col_offset": 61, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 394, "col_offset": 33, "nodeName": "randn", "type": "Any"}, {"lineNumber": 394, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 394, "col_offset": 61, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "sess", "type": "Any"}, {"lineNumber": 398, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 399, "col_offset": 41, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 403, "col_offset": 29, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 403, "col_offset": 46, "nodeName": "prev_state", "type": "Union[Tuple[Any, Any], Tuple[Any, ...]]"}, {"lineNumber": 405, "col_offset": 17, "nodeName": "concat", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 408, "col_offset": 46, "nodeName": "prev_state", "type": "Union[Tuple[Any, Any], Tuple[Any, ...]]"}, {"lineNumber": 410, "col_offset": 24, "nodeName": "concat", "type": "Any"}, {"lineNumber": 413, "col_offset": 29, "nodeName": "sess", "type": "Any"}, {"lineNumber": 413, "col_offset": 39, "nodeName": "manual_output", "type": "Any"}, {"lineNumber": 413, "col_offset": 54, "nodeName": "next_state1", "type": "Any"}, {"lineNumber": 413, "col_offset": 67, "nodeName": "next_state2", "type": "Any"}, {"lineNumber": 414, "col_offset": 48, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 429, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 429, "col_offset": 52, "nodeName": "output1_size", "type": "int"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 430, "col_offset": 52, "nodeName": "output2_size", "type": "int"}, {"lineNumber": 434, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 434, "col_offset": 59, "nodeName": "in_size", "type": "int"}, {"lineNumber": 443, "col_offset": 9, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 444, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "sess", "type": "Any"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 447, "col_offset": 50, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "sess", "type": "Any"}, {"lineNumber": 448, "col_offset": 35, "nodeName": "manual_output", "type": "Any"}, {"lineNumber": 448, "col_offset": 61, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 464, "col_offset": 21, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 466, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 466, "col_offset": 50, "nodeName": "output1_size", "type": "int"}, {"lineNumber": 467, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 467, "col_offset": 50, "nodeName": "output2_size", "type": "int"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 475, "col_offset": 40, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 476, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 476, "col_offset": 40, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 483, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 486, "col_offset": 10, "nodeName": "expected_initializer", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 491, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 492, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "sess", "type": "Any"}, {"lineNumber": 494, "col_offset": 37, "nodeName": "sess", "type": "Any"}, {"lineNumber": 498, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 505, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 506, "col_offset": 23, "nodeName": "core", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 507, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 508, "col_offset": 23, "nodeName": "core", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 509, "col_offset": 10, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 509, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 516, "col_offset": 9, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 517, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "sess", "type": "Any"}, {"lineNumber": 519, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 519, "col_offset": 60, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 520, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 521, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 521, "col_offset": 60, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 523, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 523, "col_offset": 60, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 525, "col_offset": 60, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 526, "col_offset": 6, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 533, "col_offset": 9, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 533, "col_offset": 18, "nodeName": "hidden_size_a", "type": "int"}, {"lineNumber": 533, "col_offset": 44, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 533, "col_offset": 53, "nodeName": "hidden_size_b", "type": "int"}, {"lineNumber": 565, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 566, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 566, "col_offset": 43, "nodeName": "xrange", "type": "Type[range]"}, {"lineNumber": 573, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 577, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 579, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 579, "col_offset": 46, "nodeName": "x_seq_shape", "type": "List[int]"}, {"lineNumber": 580, "col_offset": 9, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 582, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 582, "col_offset": 62, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 592, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 597, "col_offset": 31, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 599, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 599, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 603, "col_offset": 50, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 605, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 606, "col_offset": 37, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 607, "col_offset": 37, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 608, "col_offset": 37, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 612, "col_offset": 31, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 614, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 618, "col_offset": 9, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 619, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 619, "col_offset": 40, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 619, "col_offset": 57, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 621, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 623, "col_offset": 22, "nodeName": "sess", "type": "Any"}, {"lineNumber": 623, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 623, "col_offset": 41, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 623, "col_offset": 64, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 630, "col_offset": 9, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 631, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 632, "col_offset": 9, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 633, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 633, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 42, "col_offset": 64, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 53, "col_offset": 64, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "in_to_hidden_linear", "type": "Any"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "hidden_to_hidden_linear", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "in_size", "type": "int"}, {"lineNumber": 151, "col_offset": 54, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 155, "col_offset": 64, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 198, "col_offset": 64, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 200, "col_offset": 56, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "batch_size_shape", "type": "Any"}, {"lineNumber": 260, "col_offset": 37, "nodeName": "deep_rnn", "type": "sonnet.python.modules.basic_rnn.DeepRNN"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 262, "col_offset": 51, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "next_state_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "next_state_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "next_state_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "state_shape", "type": "nothing"}, {"lineNumber": 275, "col_offset": 10, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "expected_shape", "type": "nothing"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 299, "col_offset": 46, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "itertools", "type": "module"}, {"lineNumber": 357, "col_offset": 9, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 357, "col_offset": 31, "nodeName": "c", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 357, "col_offset": 36, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 359, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 359, "col_offset": 65, "nodeName": "cores", "type": "List[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 381, "col_offset": 41, "nodeName": "hidden1_size", "type": "int"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 383, "col_offset": 41, "nodeName": "hidden2_size", "type": "int"}, {"lineNumber": 390, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 18, "nodeName": "prev_state1", "type": "Any"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "random", "type": "Any"}, {"lineNumber": 394, "col_offset": 18, "nodeName": "prev_state2", "type": "Any"}, {"lineNumber": 394, "col_offset": 33, "nodeName": "random", "type": "Any"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 398, "col_offset": 40, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 398, "col_offset": 55, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 405, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 405, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 405, "col_offset": 36, "nodeName": "output1", "type": "Any"}, {"lineNumber": 410, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 410, "col_offset": 35, "nodeName": "output1", "type": "Any"}, {"lineNumber": 410, "col_offset": 44, "nodeName": "output2", "type": "Any"}, {"lineNumber": 444, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 446, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 464, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 483, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 483, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 486, "col_offset": 33, "nodeName": "initializer", "type": "Optional[List[Any]]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "expected_initial_state", "type": "List[Any]"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 488, "col_offset": 31, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 505, "col_offset": 26, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 505, "col_offset": 39, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 507, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 509, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 520, "col_offset": 60, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 522, "col_offset": 60, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 524, "col_offset": 60, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 526, "col_offset": 60, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 533, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 533, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "deep_rnn_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "deep_rnn_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "deep_rnn_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "deep_rnn_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "other_start_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "other_start_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "other_start_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 556, "col_offset": 21, "nodeName": "other_start_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 566, "col_offset": 50, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 579, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 599, "col_offset": 39, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 599, "col_offset": 56, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 614, "col_offset": 56, "nodeName": "self", "type": "ModelRNNTest"}, {"lineNumber": 619, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 621, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 66, "col_offset": 70, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 68, "col_offset": 70, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 151, "col_offset": 54, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 275, "col_offset": 10, "nodeName": "batch_size_shape", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 299, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 357, "col_offset": 9, "nodeName": "c", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 394, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 446, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 486, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "core", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 488, "col_offset": 53, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 489, "col_offset": 54, "nodeName": "expected_initializer", "type": "Any"}, {"lineNumber": 505, "col_offset": 26, "nodeName": "snt", "type": "module"}, {"lineNumber": 505, "col_offset": 39, "nodeName": "snt", "type": "module"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 168, "col_offset": 57, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 211, "col_offset": 57, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 519, "col_offset": 23, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 521, "col_offset": 23, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 522, "col_offset": 23, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 523, "col_offset": 23, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 524, "col_offset": 23, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 525, "col_offset": 23, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 526, "col_offset": 23, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 57, "nodeName": "tf", "type": "Any"}]