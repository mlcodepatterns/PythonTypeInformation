[{"lineNumber": 459, "col_offset": 0, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "logging", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "logging", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 465, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "base", "type": "module"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "base", "type": "module"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "base", "type": "module"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "base", "type": "module"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "base", "type": "module"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "base", "type": "module"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "base", "type": "module"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 460, "col_offset": 2, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 461, "col_offset": 2, "nodeName": "weight", "type": "Any"}, {"lineNumber": 465, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 568, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "_w", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "_b", "type": "SimpleModule"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "_submodule_a", "type": "SimpleModule"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "_submodule_b", "type": "ComplexModule"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "c", "type": "SimpleModule"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "d", "type": "ComplexModule"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "connected_subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "module", "type": "NoInitIdentityModule"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "module", "type": "NoSuperInitIdentityModule"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "module", "type": "IdentityModule"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "submodule_a_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "submodule_a_all_variables", "type": "Tuple[()]"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "submodule_b_variables", "type": "Tuple[()]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "all_variables", "type": "Tuple[()]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "all_variables", "type": "Tuple[()]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "cond", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "module_a", "type": "SimpleModule"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "module_b", "type": "SimpleModule"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "all_variables", "type": "Tuple[()]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "all_variables", "type": "Tuple[()]"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 460, "col_offset": 52, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 461, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 462, "col_offset": 9, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 462, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 462, "col_offset": 27, "nodeName": "weight", "type": "Any"}, {"lineNumber": 465, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "build", "type": "functools.partial[nothing]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 569, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "custom_key", "type": "bool"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "_b", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "_b", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "_a", "type": "SimpleModule"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "_b", "type": "SimpleModule"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "PY3", "type": "bool"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "msg", "type": "str"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 190, "col_offset": 6, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 202, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 40, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "NoSuperInitIdentityModule", "type": "Type[NoSuperInitIdentityModule]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 247, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 251, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 259, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 300, "col_offset": 6, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 305, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 307, "col_offset": 6, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 316, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 322, "col_offset": 18, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "ModuleWithSubmodules", "type": "Type[ModuleWithSubmodules]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 332, "col_offset": 28, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 333, "col_offset": 33, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 335, "col_offset": 32, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "submodule_a_variable_names", "type": "List[str]"}, {"lineNumber": 338, "col_offset": 49, "nodeName": "submodule_a_all_variable_names", "type": "List[str]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 342, "col_offset": 7, "nodeName": "submodule_a_variable_names", "type": "List[str]"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 346, "col_offset": 33, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 353, "col_offset": 7, "nodeName": "submodule_b_variable_names", "type": "List[str]"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 370, "col_offset": 7, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "ModuleWithSubmodules", "type": "Type[ModuleWithSubmodules]"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 396, "col_offset": 7, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 410, "col_offset": 6, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 411, "col_offset": 6, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "local_module", "type": "ModuleWithSubmodules"}, {"lineNumber": 414, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 438, "col_offset": 7, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 441, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 441, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "cond", "type": "Any"}, {"lineNumber": 449, "col_offset": 20, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 451, "col_offset": 55, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 454, "col_offset": 20, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 455, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 456, "col_offset": 55, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 461, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 461, "col_offset": 38, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 461, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 462, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 468, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 477, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 477, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 479, "col_offset": 30, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "build", "type": "functools.partial[nothing]"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 481, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 484, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 484, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 484, "col_offset": 44, "nodeName": "in_size", "type": "int"}, {"lineNumber": 486, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 496, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 497, "col_offset": 6, "nodeName": "b", "type": "Any"}, {"lineNumber": 506, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 506, "col_offset": 38, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 508, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 508, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 511, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 515, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 519, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 523, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 527, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 531, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 538, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 546, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 547, "col_offset": 6, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 554, "col_offset": 36, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 555, "col_offset": 6, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 557, "col_offset": 6, "nodeName": "id_b", "type": "IdentityModule"}, {"lineNumber": 559, "col_offset": 36, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 560, "col_offset": 6, "nodeName": "id_c", "type": "IdentityModule"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 562, "col_offset": 21, "nodeName": "graph", "type": "Any"}, {"lineNumber": 562, "col_offset": 33, "nodeName": "graph", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 563, "col_offset": 21, "nodeName": "graph", "type": "Any"}, {"lineNumber": 563, "col_offset": 33, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 564, "col_offset": 24, "nodeName": "graph", "type": "Any"}, {"lineNumber": 564, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "graph", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 569, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "name", "type": "str"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "_enter_variable_scope", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "_w", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 98, "col_offset": 54, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "name", "type": "str"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "_enter_variable_scope", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "_a", "type": "SimpleModule"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "name", "type": "str"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "d", "type": "ComplexModule"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "_submodule_b", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "ModuleWithClassKeys", "type": "Type[ModuleWithClassKeys]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "ModuleWithNoInitializerKeys", "type": "Type[ModuleWithNoInitializerKeys]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "six", "type": "module"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "graph", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 167, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 168, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 172, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 181, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 212, "col_offset": 6, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "module", "type": "NoInitIdentityModule"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "NotInitializedError", "type": "Type[sonnet.python.modules.base_errors.NotInitializedError]"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "module", "type": "NoSuperInitIdentityModule"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "dumps", "type": "Callable[..., bytes]"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "module", "type": "IdentityModule"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 253, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 256, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 264, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 283, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 295, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 299, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 301, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 302, "col_offset": 45, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 303, "col_offset": 45, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 306, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 308, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 310, "col_offset": 45, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 317, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 317, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 318, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 321, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 325, "col_offset": 45, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 326, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 328, "col_offset": 6, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 332, "col_offset": 28, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 335, "col_offset": 32, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 400, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "ModuleWithSubmodules", "type": "Type[ModuleWithSubmodules]"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 419, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 420, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "local_module", "type": "ModuleWithSubmodules"}, {"lineNumber": 423, "col_offset": 19, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 441, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 441, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "cond", "type": "Any"}, {"lineNumber": 449, "col_offset": 20, "nodeName": "module_a", "type": "SimpleModule"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 454, "col_offset": 20, "nodeName": "module_b", "type": "SimpleModule"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 461, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 468, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 468, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 471, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "exception", "type": "Any"}, {"lineNumber": 476, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 477, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 477, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "functools", "type": "module"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "base", "type": "module"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 481, "col_offset": 21, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 484, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 486, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 487, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 492, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 492, "col_offset": 26, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 492, "col_offset": 36, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 496, "col_offset": 10, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 497, "col_offset": 10, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 498, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 504, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 504, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 506, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 506, "col_offset": 38, "nodeName": "base", "type": "module"}, {"lineNumber": 506, "col_offset": 57, "nodeName": "simple_module_build", "type": "Callable[[Any], Any]"}, {"lineNumber": 508, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 508, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 510, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 512, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 512, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 513, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 515, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 516, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 516, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 517, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 520, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 520, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 521, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 524, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 527, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 528, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 528, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 529, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "module", "type": "nothing"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "module", "type": "nothing"}, {"lineNumber": 545, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 547, "col_offset": 22, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 548, "col_offset": 6, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 550, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 554, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 555, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 556, "col_offset": 6, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 557, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "id_b", "type": "IdentityModule"}, {"lineNumber": 559, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 560, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 561, "col_offset": 6, "nodeName": "id_c", "type": "IdentityModule"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 562, "col_offset": 21, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 562, "col_offset": 33, "nodeName": "id_b", "type": "IdentityModule"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 563, "col_offset": 21, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 564, "col_offset": 24, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 564, "col_offset": 36, "nodeName": "id_c", "type": "IdentityModule"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "id_c", "type": "IdentityModule"}, {"lineNumber": 569, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "ModuleWithSubmodules", "type": "Type[ModuleWithSubmodules]"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "_submodule_a", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 126, "col_offset": 61, "nodeName": "c", "type": "SimpleModule"}, {"lineNumber": 126, "col_offset": 63, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "DifferentGraphError", "type": "Type[sonnet.python.modules.base_errors.DifferentGraphError]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 167, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 181, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "pickle", "type": "module"}, {"lineNumber": 242, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 242, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 251, "col_offset": 42, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 261, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 265, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 268, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 275, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 275, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 277, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 277, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 284, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 43, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 301, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 308, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 318, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 318, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 326, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 328, "col_offset": 6, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 334, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "submodule_a_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 337, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "name", "type": "nothing"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "v", "type": "nothing"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "submodule_a_all_variables", "type": "Tuple[()]"}, {"lineNumber": 347, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "name", "type": "nothing"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "v", "type": "nothing"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "submodule_b_variables", "type": "Tuple[()]"}, {"lineNumber": 356, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "name", "type": "nothing"}, {"lineNumber": 356, "col_offset": 49, "nodeName": "v", "type": "nothing"}, {"lineNumber": 356, "col_offset": 54, "nodeName": "all_variables", "type": "Tuple[()]"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 382, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 382, "col_offset": 37, "nodeName": "name", "type": "nothing"}, {"lineNumber": 382, "col_offset": 49, "nodeName": "v", "type": "nothing"}, {"lineNumber": 382, "col_offset": 54, "nodeName": "all_variables", "type": "Tuple[()]"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 404, "col_offset": 33, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "local_custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 413, "col_offset": 47, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 419, "col_offset": 28, "nodeName": "all_variables", "type": "Any"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "local_variables", "type": "Any"}, {"lineNumber": 423, "col_offset": 19, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 424, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 424, "col_offset": 37, "nodeName": "name", "type": "nothing"}, {"lineNumber": 424, "col_offset": 49, "nodeName": "v", "type": "nothing"}, {"lineNumber": 424, "col_offset": 54, "nodeName": "all_variables", "type": "Tuple[()]"}, {"lineNumber": 446, "col_offset": 34, "nodeName": "module_a", "type": "SimpleModule"}, {"lineNumber": 446, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 446, "col_offset": 60, "nodeName": "module_b", "type": "SimpleModule"}, {"lineNumber": 446, "col_offset": 69, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 450, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 450, "col_offset": 37, "nodeName": "name", "type": "nothing"}, {"lineNumber": 450, "col_offset": 49, "nodeName": "v", "type": "nothing"}, {"lineNumber": 450, "col_offset": 54, "nodeName": "all_variables", "type": "Tuple[()]"}, {"lineNumber": 455, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 455, "col_offset": 37, "nodeName": "name", "type": "nothing"}, {"lineNumber": 455, "col_offset": 49, "nodeName": "v", "type": "nothing"}, {"lineNumber": 455, "col_offset": 54, "nodeName": "all_variables", "type": "Tuple[()]"}, {"lineNumber": 468, "col_offset": 9, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "base", "type": "module"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "cm", "type": "Any"}, {"lineNumber": 476, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 476, "col_offset": 60, "nodeName": "in_size", "type": "int"}, {"lineNumber": 477, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 477, "col_offset": 60, "nodeName": "in_size", "type": "int"}, {"lineNumber": 484, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 9, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 487, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 492, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 496, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 496, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 497, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 498, "col_offset": 13, "nodeName": "w", "type": "Any"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 504, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 504, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 510, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 513, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 513, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 515, "col_offset": 43, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 517, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 517, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 521, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 521, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 525, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 529, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 529, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 532, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 532, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 532, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 533, "col_offset": 17, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "module", "type": "nothing"}, {"lineNumber": 536, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 539, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 539, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 539, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 540, "col_offset": 17, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 541, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 541, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 542, "col_offset": 17, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 546, "col_offset": 27, "nodeName": "rand", "type": "Any"}, {"lineNumber": 546, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 550, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 550, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 558, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "base", "type": "module"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 50, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 49, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 297, "col_offset": 52, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 300, "col_offset": 44, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 305, "col_offset": 52, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 307, "col_offset": 44, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 312, "col_offset": 50, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 30, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 316, "col_offset": 49, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "v", "type": "nothing"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "v", "type": "nothing"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "v", "type": "nothing"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 382, "col_offset": 37, "nodeName": "v", "type": "nothing"}, {"lineNumber": 401, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 404, "col_offset": 33, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "local_module", "type": "ModuleWithSubmodules"}, {"lineNumber": 419, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 423, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 424, "col_offset": 37, "nodeName": "v", "type": "nothing"}, {"lineNumber": 450, "col_offset": 37, "nodeName": "v", "type": "nothing"}, {"lineNumber": 455, "col_offset": 37, "nodeName": "v", "type": "nothing"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 490, "col_offset": 21, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 491, "col_offset": 21, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 490, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 491, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 496, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 519, "col_offset": 49, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 523, "col_offset": 51, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 527, "col_offset": 50, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 532, "col_offset": 11, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 539, "col_offset": 11, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 545, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 546, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 546, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 550, "col_offset": 27, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 554, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 556, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 558, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "ones", "type": "Any"}, {"lineNumber": 559, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "eye", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 55, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 300, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 307, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 314, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 404, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 534, "col_offset": 33, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 534, "col_offset": 55, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 546, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 550, "col_offset": 27, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 554, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 556, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 559, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "tf", "type": "Any"}]