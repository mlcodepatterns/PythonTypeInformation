[{"lineNumber": 33, "col_offset": 0, "nodeName": "_get_lstm_variable_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "_get_possible_initializer_keys", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 616, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 616, "col_offset": 37, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 39, "col_offset": 2, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 616, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 616, "col_offset": 37, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "test", "type": "Any"}, {"lineNumber": 947, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "keys", "type": "Any"}, {"lineNumber": 41, "col_offset": 5, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 51, "col_offset": 5, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 64, "col_offset": 5, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "output", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 197, "col_offset": 56, "nodeName": "output", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "lstm_variable_names", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "lstm_variables", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "train_static_output", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "test_static_output", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "expected", "type": "int"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "obs", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "cell", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "obs", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "cell", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 545, "col_offset": 7, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 547, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 549, "col_offset": 7, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 551, "col_offset": 7, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "lstm1", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "lstm2", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "unnamed_init_state", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "named_init_state", "type": "Any"}, {"lineNumber": 616, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "expected_shape", "type": "numpy.ndarray"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 713, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 727, "col_offset": 8, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 804, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "part", "type": "str"}, {"lineNumber": 847, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 848, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 849, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 869, "col_offset": 51, "nodeName": "output", "type": "Any"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "r", "type": "Any"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "h_twiddle", "type": "Any"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "state_real", "type": "Any"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "POSSIBLE_KEYS", "type": "Set[str]"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "gru_variables", "type": "List[Any]"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 910, "col_offset": 11, "nodeName": "POSSIBLE_KEYS", "type": "Set[str]"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 922, "col_offset": 15, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 931, "col_offset": 11, "nodeName": "POSSIBLE_KEYS", "type": "Set[str]"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 938, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 939, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 948, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 41, "col_offset": 5, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 66, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Set[str]]"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 118, "col_offset": 7, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "next_hidden", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "next_cell", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "gate_weights_ex", "type": "Any"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "gate_biases_ex", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 141, "col_offset": 54, "nodeName": "gate_biases_ex", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 143, "col_offset": 7, "nodeName": "j", "type": "Any"}, {"lineNumber": 143, "col_offset": 10, "nodeName": "f", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "o", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "real_cell", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 160, "col_offset": 7, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "next_hidden", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "next_cell", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 180, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 181, "col_offset": 51, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "w_ex", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "b_ex", "type": "Any"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "wfd_ex", "type": "Any"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "wid_ex", "type": "Any"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "wod_ex", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 199, "col_offset": 43, "nodeName": "b_ex", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 201, "col_offset": 7, "nodeName": "j", "type": "Any"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "f", "type": "Any"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "o", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "real_cell", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "_get_possible_initializer_keys", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 222, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 222, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "_construct_lstm", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "_get_lstm_variable_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 51, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 247, "col_offset": 6, "nodeName": "lstm_variables_v", "type": "Any"}, {"lineNumber": 248, "col_offset": 10, "nodeName": "lstm_variable_v", "type": "Any"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "lstm_variables_v", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "W_F_DIAG", "type": "str"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "W_I_DIAG", "type": "str"}, {"lineNumber": 257, "col_offset": 54, "nodeName": "W_O_DIAG", "type": "str"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "GAMMA_H", "type": "str"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "GAMMA_X", "type": "str"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "GAMMA_C", "type": "str"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "BETA_C", "type": "str"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "_get_possible_initializer_keys", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 290, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "_construct_lstm", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 306, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 307, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "_get_lstm_variable_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 41, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "_get_possible_initializer_keys", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 325, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 325, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "_construct_lstm", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 341, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 342, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 346, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 346, "col_offset": 27, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 372, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "unstack", "type": "Any"}, {"lineNumber": 375, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "_construct_lstm", "type": "Callable[..., Any]"}, {"lineNumber": 387, "col_offset": 38, "nodeName": "static_rnn", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 393, "col_offset": 37, "nodeName": "static_rnn", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "stack", "type": "Any"}, {"lineNumber": 414, "col_offset": 35, "nodeName": "train_static_output_unpacked", "type": "Any"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "stack", "type": "Any"}, {"lineNumber": 415, "col_offset": 34, "nodeName": "test_static_output_unpacked", "type": "Any"}, {"lineNumber": 417, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 434, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 445, "col_offset": 22, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 446, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 449, "col_offset": 20, "nodeName": "use_layer_norm", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 452, "col_offset": 48, "nodeName": "expected", "type": "int"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 456, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 457, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 457, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 458, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 459, "col_offset": 13, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 459, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 460, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 462, "col_offset": 6, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 463, "col_offset": 6, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 464, "col_offset": 6, "nodeName": "clipped", "type": "Any"}, {"lineNumber": 474, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 475, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 476, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 476, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 477, "col_offset": 11, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 478, "col_offset": 13, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 479, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 481, "col_offset": 6, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 482, "col_offset": 6, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 483, "col_offset": 6, "nodeName": "clipped", "type": "Any"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "_construct_lstm", "type": "Callable[..., Any]"}, {"lineNumber": 531, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 531, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 532, "col_offset": 22, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 533, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 536, "col_offset": 21, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 536, "col_offset": 36, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 537, "col_offset": 21, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 537, "col_offset": 39, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 538, "col_offset": 21, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 538, "col_offset": 39, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 539, "col_offset": 21, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 539, "col_offset": 39, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 541, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 541, "col_offset": 27, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 542, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 544, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 546, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 548, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 550, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 552, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 554, "col_offset": 48, "nodeName": "expected", "type": "int"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 557, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 559, "col_offset": 28, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 573, "col_offset": 11, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 575, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "float32", "type": "Any"}, {"lineNumber": 578, "col_offset": 32, "nodeName": "trainable_initial_state", "type": "Any"}, {"lineNumber": 579, "col_offset": 16, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 579, "col_offset": 34, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 580, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 584, "col_offset": 11, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 586, "col_offset": 15, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 586, "col_offset": 61, "nodeName": "loss", "type": "Any"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 598, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 601, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 602, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 605, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 607, "col_offset": 23, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 610, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 612, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 613, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 633, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 633, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 634, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 634, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 635, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 636, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 641, "col_offset": 25, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 641, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 643, "col_offset": 21, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 643, "col_offset": 32, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 645, "col_offset": 26, "nodeName": "expected_shape", "type": "numpy.ndarray"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 646, "col_offset": 26, "nodeName": "expected_shape", "type": "numpy.ndarray"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 647, "col_offset": 26, "nodeName": "expected_shape", "type": "numpy.ndarray"}, {"lineNumber": 647, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 656, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Any]"}, {"lineNumber": 656, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 662, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 669, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 669, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 670, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 670, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 671, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 680, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 682, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 685, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 687, "col_offset": 10, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Any]"}, {"lineNumber": 700, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 706, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 713, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 713, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 714, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 714, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 715, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 715, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 718, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 724, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 727, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 728, "col_offset": 10, "nodeName": "key", "type": "Any"}, {"lineNumber": 728, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Any]"}, {"lineNumber": 739, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 742, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 749, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 749, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 750, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 750, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 751, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 754, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 760, "col_offset": 4, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 760, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 763, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 782, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 786, "col_offset": 13, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 787, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "float32", "type": "Any"}, {"lineNumber": 788, "col_offset": 32, "nodeName": "trainable_initial_state", "type": "Any"}, {"lineNumber": 790, "col_offset": 16, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 790, "col_offset": 34, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 791, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 796, "col_offset": 11, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 797, "col_offset": 15, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 797, "col_offset": 61, "nodeName": "loss", "type": "Any"}, {"lineNumber": 798, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 799, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 809, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 809, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 810, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 811, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 811, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 812, "col_offset": 25, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 812, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 812, "col_offset": 37, "nodeName": "state", "type": "Any"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 814, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 814, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 815, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 815, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 822, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 822, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 823, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 823, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 824, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 824, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 825, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 825, "col_offset": 37, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 828, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 830, "col_offset": 20, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 850, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 850, "col_offset": 28, "nodeName": "float64", "type": "Any"}, {"lineNumber": 851, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 851, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 852, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 852, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 853, "col_offset": 7, "nodeName": "state", "type": "Any"}, {"lineNumber": 853, "col_offset": 15, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 853, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 853, "col_offset": 27, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 854, "col_offset": 20, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 859, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 859, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 859, "col_offset": 45, "nodeName": "input_size", "type": "int"}, {"lineNumber": 860, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 860, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 860, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 862, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 867, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 869, "col_offset": 14, "nodeName": "wz", "type": "Any"}, {"lineNumber": 869, "col_offset": 18, "nodeName": "uz", "type": "Any"}, {"lineNumber": 869, "col_offset": 22, "nodeName": "bz", "type": "Any"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "wr", "type": "Any"}, {"lineNumber": 869, "col_offset": 30, "nodeName": "ur", "type": "Any"}, {"lineNumber": 869, "col_offset": 34, "nodeName": "br", "type": "Any"}, {"lineNumber": 869, "col_offset": 38, "nodeName": "wh", "type": "Any"}, {"lineNumber": 869, "col_offset": 42, "nodeName": "uh", "type": "Any"}, {"lineNumber": 869, "col_offset": 46, "nodeName": "bh", "type": "Any"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 871, "col_offset": 8, "nodeName": "sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "r", "type": "Any"}, {"lineNumber": 872, "col_offset": 22, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 877, "col_offset": 24, "nodeName": "state_real", "type": "Any"}, {"lineNumber": 877, "col_offset": 36, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 888, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 888, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 891, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 891, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 892, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 893, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 894, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 898, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 900, "col_offset": 6, "nodeName": "gru_variables_v", "type": "Any"}, {"lineNumber": 910, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 914, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 914, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 917, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 917, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 918, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 919, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 919, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 931, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 933, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 933, "col_offset": 13, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 935, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 935, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 938, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 938, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 939, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 939, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 940, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 948, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 80, "col_offset": 52, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 118, "col_offset": 47, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "gate_weights_ex", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 198, "col_offset": 45, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "w_ex", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 17, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 224, "col_offset": 46, "nodeName": "key", "type": "Any"}, {"lineNumber": 224, "col_offset": 53, "nodeName": "keys", "type": "Any"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 229, "col_offset": 41, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 233, "col_offset": 40, "nodeName": "initializers", "type": "Dict[Any, Any]"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 244, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 244, "col_offset": 60, "nodeName": "lstm_variable_names", "type": "Any"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 246, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "lstm_variables", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 257, "col_offset": 54, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 277, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 292, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 292, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 296, "col_offset": 39, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 298, "col_offset": 44, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 300, "col_offset": 44, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 301, "col_offset": 40, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 306, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 327, "col_offset": 38, "nodeName": "keys", "type": "Any"}, {"lineNumber": 331, "col_offset": 39, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 332, "col_offset": 41, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 333, "col_offset": 44, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 334, "col_offset": 44, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 335, "col_offset": 44, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 336, "col_offset": 40, "nodeName": "regularizers", "type": "Dict[Any, Any]"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 341, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 342, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 347, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 372, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 379, "col_offset": 39, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 380, "col_offset": 44, "nodeName": "max_unique_stats", "type": "Any"}, {"lineNumber": 381, "col_offset": 41, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 382, "col_offset": 44, "nodeName": "use_batch_norm", "type": "Any"}, {"lineNumber": 383, "col_offset": 44, "nodeName": "use_batch_norm", "type": "Any"}, {"lineNumber": 384, "col_offset": 44, "nodeName": "use_batch_norm", "type": "Any"}, {"lineNumber": 387, "col_offset": 38, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 393, "col_offset": 37, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 417, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 418, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "training", "type": "bool"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 438, "col_offset": 6, "nodeName": "check_static_and_dynamic", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "nn", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 449, "col_offset": 20, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 452, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 456, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 456, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 456, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 457, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 457, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 458, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 459, "col_offset": 24, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 459, "col_offset": 32, "nodeName": "cell", "type": "Any"}, {"lineNumber": 460, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 461, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 464, "col_offset": 16, "nodeName": "clip", "type": "Any"}, {"lineNumber": 465, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 465, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 467, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 467, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 469, "col_offset": 26, "nodeName": "output1", "type": "Any"}, {"lineNumber": 469, "col_offset": 35, "nodeName": "output2", "type": "Any"}, {"lineNumber": 470, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 470, "col_offset": 26, "nodeName": "hidden1", "type": "Any"}, {"lineNumber": 470, "col_offset": 35, "nodeName": "hidden2", "type": "Any"}, {"lineNumber": 471, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 471, "col_offset": 26, "nodeName": "cell1", "type": "Any"}, {"lineNumber": 471, "col_offset": 33, "nodeName": "cell2", "type": "Any"}, {"lineNumber": 474, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 475, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 475, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 476, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 476, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 477, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 478, "col_offset": 32, "nodeName": "cell", "type": "Any"}, {"lineNumber": 479, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 480, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "clip", "type": "Any"}, {"lineNumber": 485, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 485, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 487, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 487, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 489, "col_offset": 26, "nodeName": "output1", "type": "Any"}, {"lineNumber": 489, "col_offset": 35, "nodeName": "output2", "type": "Any"}, {"lineNumber": 490, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 490, "col_offset": 26, "nodeName": "hidden1", "type": "Any"}, {"lineNumber": 490, "col_offset": 35, "nodeName": "hidden2", "type": "Any"}, {"lineNumber": 491, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "cell1", "type": "Any"}, {"lineNumber": 491, "col_offset": 33, "nodeName": "cell2", "type": "Any"}, {"lineNumber": 497, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 499, "col_offset": 6, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 501, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 505, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 507, "col_offset": 6, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 524, "col_offset": 41, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 525, "col_offset": 44, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 526, "col_offset": 44, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 527, "col_offset": 44, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 531, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 531, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "nn", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 536, "col_offset": 36, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 537, "col_offset": 39, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 538, "col_offset": 39, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 539, "col_offset": 39, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 559, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 573, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 573, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 574, "col_offset": 46, "nodeName": "max_unique_stats", "type": "Any"}, {"lineNumber": 575, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 575, "col_offset": 25, "nodeName": "rand", "type": "Any"}, {"lineNumber": 575, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 575, "col_offset": 52, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 576, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 579, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 581, "col_offset": 48, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 582, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 584, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 584, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 587, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 588, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 589, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 590, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 596, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 597, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "lstm1", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "lstm1", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "lstm2", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 605, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 606, "col_offset": 25, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 607, "col_offset": 23, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 630, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 630, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 631, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 631, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 633, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 46, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 634, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 634, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 634, "col_offset": 51, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 635, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 635, "col_offset": 49, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 638, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 640, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 641, "col_offset": 39, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 641, "col_offset": 52, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 643, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 645, "col_offset": 42, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 646, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 42, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 656, "col_offset": 11, "nodeName": "Conv2DLSTM", "type": "Type[sonnet.python.modules.gated_rnn.Conv2DLSTM]"}, {"lineNumber": 658, "col_offset": 13, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 658, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 666, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 666, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 667, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 667, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 669, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 669, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 669, "col_offset": 46, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 670, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 670, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 670, "col_offset": 51, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 671, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 671, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 671, "col_offset": 49, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 676, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 678, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 679, "col_offset": 21, "nodeName": "initializers", "type": "Dict[Any, Any]"}, {"lineNumber": 680, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 680, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 682, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 685, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 686, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 687, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "Conv2DLSTM", "type": "Type[sonnet.python.modules.gated_rnn.Conv2DLSTM]"}, {"lineNumber": 702, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 702, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 702, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 710, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 710, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 711, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 711, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 713, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 713, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 713, "col_offset": 46, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 714, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 714, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 714, "col_offset": 51, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 715, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 715, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 715, "col_offset": 49, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 720, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 722, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 723, "col_offset": 21, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 724, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 724, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 727, "col_offset": 23, "nodeName": "convolutions", "type": "Any"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "Conv2DLSTM", "type": "Type[sonnet.python.modules.gated_rnn.Conv2DLSTM]"}, {"lineNumber": 746, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 746, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 747, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 747, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 749, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 749, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 749, "col_offset": 46, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 750, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 750, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 750, "col_offset": 51, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 751, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 751, "col_offset": 49, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 756, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 758, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 760, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 760, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 763, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 763, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 780, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 780, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 784, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 786, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 46, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 786, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 787, "col_offset": 20, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 790, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 793, "col_offset": 48, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 794, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 796, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 796, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 796, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 798, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 799, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 800, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 800, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 801, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 801, "col_offset": 15, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 809, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 809, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 810, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 811, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 813, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 813, "col_offset": 36, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 822, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 822, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 823, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 823, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 824, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 824, "col_offset": 36, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 825, "col_offset": 21, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 826, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 826, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 827, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 830, "col_offset": 20, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 831, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 831, "col_offset": 25, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 833, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 833, "col_offset": 30, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 835, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 836, "col_offset": 28, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 837, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 838, "col_offset": 28, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 839, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 840, "col_offset": 28, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 850, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 850, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 851, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 851, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 852, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 854, "col_offset": 20, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 856, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 856, "col_offset": 30, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 859, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 860, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 862, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 863, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 864, "col_offset": 17, "nodeName": "state", "type": "Any"}, {"lineNumber": 867, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 867, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 870, "col_offset": 66, "nodeName": "bz", "type": "Any"}, {"lineNumber": 871, "col_offset": 66, "nodeName": "br", "type": "Any"}, {"lineNumber": 873, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 873, "col_offset": 74, "nodeName": "bh", "type": "Any"}, {"lineNumber": 875, "col_offset": 27, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 875, "col_offset": 40, "nodeName": "z", "type": "Any"}, {"lineNumber": 875, "col_offset": 44, "nodeName": "h_twiddle", "type": "Any"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 886, "col_offset": 13, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 886, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 888, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 888, "col_offset": 44, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 891, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 891, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 892, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 894, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 897, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 897, "col_offset": 29, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 897, "col_offset": 49, "nodeName": "key", "type": "str"}, {"lineNumber": 897, "col_offset": 56, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 898, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 899, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 899, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 900, "col_offset": 24, "nodeName": "run", "type": "Any"}, {"lineNumber": 900, "col_offset": 33, "nodeName": "gru_variables", "type": "List[Any]"}, {"lineNumber": 901, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 901, "col_offset": 13, "nodeName": "gru_variable_v", "type": "Any"}, {"lineNumber": 901, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 901, "col_offset": 41, "nodeName": "gru_variables_v", "type": "Any"}, {"lineNumber": 910, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 912, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 912, "col_offset": 55, "nodeName": "key", "type": "str"}, {"lineNumber": 912, "col_offset": 62, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 914, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 914, "col_offset": 44, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 917, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 917, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 918, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 923, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 924, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 931, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 933, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 933, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 933, "col_offset": 38, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 935, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 935, "col_offset": 44, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 938, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 938, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 939, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 939, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 943, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 944, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 944, "col_offset": 25, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 948, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 76, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 78, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 93, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 93, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 94, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 114, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 115, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 116, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 116, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "next_hidden", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "next_cell", "type": "Any"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "j", "type": "Any"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "real_cell", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "exp", "type": "Any"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 156, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 157, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 158, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 158, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "next_hidden", "type": "Any"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "next_cell", "type": "Any"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 190, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 193, "col_offset": 36, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 68, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 205, "col_offset": 76, "nodeName": "j", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "exp", "type": "Any"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 236, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 237, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 237, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 238, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 238, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 245, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "sess", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "lstm_variable_v", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 257, "col_offset": 54, "nodeName": "snt", "type": "module"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "snt", "type": "module"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 272, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 277, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 304, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 305, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 305, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 306, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 306, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 339, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 340, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 340, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 341, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 341, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 347, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 349, "col_offset": 43, "nodeName": "keys", "type": "Any"}, {"lineNumber": 373, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 373, "col_offset": 47, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 373, "col_offset": 56, "nodeName": "input_size", "type": "int"}, {"lineNumber": 387, "col_offset": 38, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 389, "col_offset": 54, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 391, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 393, "col_offset": 37, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 395, "col_offset": 54, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 397, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 397, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 402, "col_offset": 54, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 404, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 405, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 409, "col_offset": 54, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 411, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 417, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 422, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 422, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 422, "col_offset": 48, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 422, "col_offset": 57, "nodeName": "input_size", "type": "int"}, {"lineNumber": 425, "col_offset": 10, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 427, "col_offset": 10, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 429, "col_offset": 46, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 431, "col_offset": 28, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 431, "col_offset": 40, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "check_static_and_dynamic", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 447, "col_offset": 36, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 447, "col_offset": 55, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 447, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 452, "col_offset": 25, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 456, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 456, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 460, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 461, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 462, "col_offset": 18, "nodeName": "rand", "type": "Any"}, {"lineNumber": 463, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 464, "col_offset": 16, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 465, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 467, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 470, "col_offset": 6, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 471, "col_offset": 6, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 475, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 479, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 480, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "rand", "type": "Any"}, {"lineNumber": 482, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 485, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 487, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 490, "col_offset": 6, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 491, "col_offset": 6, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 497, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 499, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 501, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 505, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 507, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 531, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 534, "col_offset": 36, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 534, "col_offset": 55, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 534, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 575, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 576, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 579, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 582, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 584, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 586, "col_offset": 15, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 588, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 589, "col_offset": 6, "nodeName": "init", "type": "Any"}, {"lineNumber": 590, "col_offset": 6, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "unnamed_init_state", "type": "Any"}, {"lineNumber": 610, "col_offset": 21, "nodeName": "unnamed_init_state", "type": "Any"}, {"lineNumber": 612, "col_offset": 21, "nodeName": "named_init_state", "type": "Any"}, {"lineNumber": 613, "col_offset": 21, "nodeName": "named_init_state", "type": "Any"}, {"lineNumber": 630, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 637, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 656, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 658, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 658, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 658, "col_offset": 47, "nodeName": "key", "type": "Any"}, {"lineNumber": 658, "col_offset": 54, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 658, "col_offset": 64, "nodeName": "keys", "type": "Any"}, {"lineNumber": 666, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 685, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 686, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 687, "col_offset": 25, "nodeName": "convolutions", "type": "Any"}, {"lineNumber": 688, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 688, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 688, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 688, "col_offset": 32, "nodeName": "keys", "type": "Any"}, {"lineNumber": 689, "col_offset": 10, "nodeName": "variable", "type": "Any"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 702, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 710, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 719, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 727, "col_offset": 23, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 730, "col_offset": 25, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 746, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 755, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 759, "col_offset": 22, "nodeName": "key", "type": "Any"}, {"lineNumber": 759, "col_offset": 27, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 763, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 763, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 764, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 764, "col_offset": 41, "nodeName": "convolutions", "type": "Any"}, {"lineNumber": 764, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 764, "col_offset": 66, "nodeName": "keys", "type": "Any"}, {"lineNumber": 780, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 783, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 786, "col_offset": 31, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 786, "col_offset": 65, "nodeName": "tf", "type": "Any"}, {"lineNumber": 790, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 794, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 796, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 797, "col_offset": 15, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 799, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 800, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 801, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 809, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 809, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 810, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 810, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 822, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 822, "col_offset": 59, "nodeName": "input_size", "type": "int"}, {"lineNumber": 823, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 823, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 826, "col_offset": 9, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 826, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 827, "col_offset": 6, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 835, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 835, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 835, "col_offset": 39, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 837, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 837, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 839, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 839, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 850, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 850, "col_offset": 59, "nodeName": "input_size", "type": "int"}, {"lineNumber": 851, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 851, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 859, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 860, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 862, "col_offset": 9, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 864, "col_offset": 24, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 864, "col_offset": 41, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 864, "col_offset": 58, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 865, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 865, "col_offset": 34, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 865, "col_offset": 51, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 866, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 866, "col_offset": 34, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 866, "col_offset": 51, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 867, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 867, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 867, "col_offset": 57, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 867, "col_offset": 45, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 867, "col_offset": 67, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 875, "col_offset": 22, "nodeName": "z", "type": "Any"}, {"lineNumber": 886, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 886, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 886, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 886, "col_offset": 54, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 886, "col_offset": 64, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 891, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 891, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 892, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 892, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 897, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 898, "col_offset": 9, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 899, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 900, "col_offset": 24, "nodeName": "sess", "type": "Any"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 902, "col_offset": 28, "nodeName": "gru_variable_v", "type": "Any"}, {"lineNumber": 912, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 917, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 917, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 918, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 918, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 923, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 923, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 924, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 933, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 938, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 938, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 939, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 939, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 943, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 943, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 108, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "exp", "type": "Any"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "o", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 170, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "W_F_DIAG", "type": "str"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "W_I_DIAG", "type": "str"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "W_O_DIAG", "type": "str"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "W_F_DIAG", "type": "str"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "W_I_DIAG", "type": "str"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "W_O_DIAG", "type": "str"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "exp", "type": "Any"}, {"lineNumber": 205, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 312, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 36, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 347, "col_offset": 43, "nodeName": "keys", "type": "Any"}, {"lineNumber": 387, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 391, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 393, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 397, "col_offset": 22, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 397, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 404, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 411, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 418, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 422, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 425, "col_offset": 17, "nodeName": "train_static_output", "type": "Any"}, {"lineNumber": 425, "col_offset": 38, "nodeName": "train_dynamic_output", "type": "Any"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "test_static_output", "type": "Any"}, {"lineNumber": 427, "col_offset": 37, "nodeName": "test_dynamic_output", "type": "Any"}, {"lineNumber": 429, "col_offset": 34, "nodeName": "session", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 447, "col_offset": 36, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 447, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 452, "col_offset": 25, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 456, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 462, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 463, "col_offset": 25, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 465, "col_offset": 62, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 466, "col_offset": 62, "nodeName": "cell", "type": "Any"}, {"lineNumber": 465, "col_offset": 70, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 466, "col_offset": 68, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 467, "col_offset": 62, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 468, "col_offset": 62, "nodeName": "cell", "type": "Any"}, {"lineNumber": 467, "col_offset": 70, "nodeName": "clipped", "type": "Any"}, {"lineNumber": 468, "col_offset": 68, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 475, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 482, "col_offset": 25, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 485, "col_offset": 62, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 486, "col_offset": 62, "nodeName": "cell", "type": "Any"}, {"lineNumber": 485, "col_offset": 70, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 486, "col_offset": 68, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 487, "col_offset": 62, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 488, "col_offset": 62, "nodeName": "cell", "type": "Any"}, {"lineNumber": 487, "col_offset": 70, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 488, "col_offset": 68, "nodeName": "clipped", "type": "Any"}, {"lineNumber": 534, "col_offset": 36, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 534, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 575, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 585, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 585, "col_offset": 44, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 585, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 586, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 687, "col_offset": 25, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 689, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 689, "col_offset": 29, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 689, "col_offset": 42, "nodeName": "key", "type": "Any"}, {"lineNumber": 690, "col_offset": 10, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 729, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 730, "col_offset": 25, "nodeName": "variables", "type": "Any"}, {"lineNumber": 759, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 759, "col_offset": 45, "nodeName": "key", "type": "Any"}, {"lineNumber": 759, "col_offset": 52, "nodeName": "keys", "type": "Any"}, {"lineNumber": 763, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 764, "col_offset": 41, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 797, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 835, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 836, "col_offset": 28, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 837, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 837, "col_offset": 40, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 837, "col_offset": 53, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 838, "col_offset": 28, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 839, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 839, "col_offset": 40, "nodeName": "input_size", "type": "int"}, {"lineNumber": 839, "col_offset": 52, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 840, "col_offset": 28, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 845, "col_offset": 22, "nodeName": "exp", "type": "Any"}, {"lineNumber": 863, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 870, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 870, "col_offset": 23, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 870, "col_offset": 35, "nodeName": "wz", "type": "Any"}, {"lineNumber": 870, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 870, "col_offset": 48, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 870, "col_offset": 60, "nodeName": "uz", "type": "Any"}, {"lineNumber": 871, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 871, "col_offset": 23, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 871, "col_offset": 35, "nodeName": "wr", "type": "Any"}, {"lineNumber": 871, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 871, "col_offset": 48, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 871, "col_offset": 60, "nodeName": "ur", "type": "Any"}, {"lineNumber": 873, "col_offset": 24, "nodeName": "dot", "type": "Any"}, {"lineNumber": 873, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 873, "col_offset": 43, "nodeName": "wh", "type": "Any"}, {"lineNumber": 873, "col_offset": 49, "nodeName": "dot", "type": "Any"}, {"lineNumber": 873, "col_offset": 56, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 873, "col_offset": 69, "nodeName": "uh", "type": "Any"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 903, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 923, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 923, "col_offset": 36, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 943, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 943, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "exp", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "exp", "type": "Any"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "ones", "type": "Any"}, {"lineNumber": 250, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 274, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 312, "col_offset": 48, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 418, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 422, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 430, "col_offset": 57, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 430, "col_offset": 65, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 462, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 586, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 690, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 690, "col_offset": 39, "nodeName": "variable", "type": "Any"}, {"lineNumber": 691, "col_offset": 30, "nodeName": "full", "type": "Any"}, {"lineNumber": 691, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 729, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 729, "col_offset": 38, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 729, "col_offset": 51, "nodeName": "key", "type": "Any"}, {"lineNumber": 759, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 797, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 845, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 845, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 863, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 870, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 870, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 871, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 871, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 873, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 873, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 903, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 903, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 923, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 943, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "f", "type": "Any"}, {"lineNumber": 144, "col_offset": 52, "nodeName": "_forget_bias", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "i", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 42, "nodeName": "lstm_variable_v", "type": "Any"}, {"lineNumber": 260, "col_offset": 36, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 585, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 691, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 691, "col_offset": 38, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 836, "col_offset": 44, "nodeName": "part", "type": "str"}, {"lineNumber": 838, "col_offset": 44, "nodeName": "part", "type": "str"}, {"lineNumber": 840, "col_offset": 44, "nodeName": "part", "type": "str"}, {"lineNumber": 903, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 903, "col_offset": 40, "nodeName": "gru_variable_v", "type": "Any"}, {"lineNumber": 144, "col_offset": 52, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "_forget_bias", "type": "Any"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "wfd_ex", "type": "Any"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 260, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 691, "col_offset": 38, "nodeName": "variable", "type": "Any"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "wid_ex", "type": "Any"}, {"lineNumber": 205, "col_offset": 48, "nodeName": "prev_cell_data", "type": "Any"}]