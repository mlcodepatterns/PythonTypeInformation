[{"lineNumber": 34, "col_offset": 0, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "pack_iterable_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "_DONE_WARN", "type": "Dict[str, bool]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "assert_same_structure", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "flatten", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "is_sequence", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "pack_sequence_as", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "flatten_up_to", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "flatten_dict_items", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "new_fn", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "map_structure_up_to", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assert_shallow_structure", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "flatten_up_to", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "flatten_dict_items", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "with_deprecation_warning", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "pack_iterable_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "nest", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "nest", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "nest", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "nest", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "nest", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "nest", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "nest", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "nest", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "nest", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "nest", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "nest", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "structure", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 37, "col_offset": 7, "nodeName": "extra_message", "type": "str"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "_DONE_WARN", "type": "Dict[str, bool]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "fn", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "nest", "type": "Any"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "warning", "type": "Any"}, {"lineNumber": 43, "col_offset": 6, "nodeName": "_DONE_WARN", "type": "Dict[str, bool]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "logging", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "extra_message", "type": "str"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "extra_message", "type": "str"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "tf", "type": "Any"}]