[{"lineNumber": 45, "col_offset": 0, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 216, "col_offset": 52, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 296, "col_offset": 52, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 376, "col_offset": 61, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 460, "col_offset": 37, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 460, "col_offset": 61, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 549, "col_offset": 37, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 549, "col_offset": 61, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 46, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "test", "type": "Any"}, {"lineNumber": 61, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 62, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "`namedtuple-Conv1DInput-input_batch-input_width-input_channels`"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "test", "type": "Any"}, {"lineNumber": 139, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 140, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 141, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "`namedtuple-Conv1DInput-input_batch-input_width-input_channels`"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 216, "col_offset": 52, "nodeName": "test", "type": "Any"}, {"lineNumber": 217, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 218, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 219, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "`namedtuple-Conv2DInput-input_batch-input_height-input_width-input_channels`"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 296, "col_offset": 52, "nodeName": "test", "type": "Any"}, {"lineNumber": 297, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 298, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 299, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "`namedtuple-Conv3DInput-input_batch-input_depth-input_height-input_width-input_channels`"}, {"lineNumber": 376, "col_offset": 37, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 376, "col_offset": 61, "nodeName": "test", "type": "Any"}, {"lineNumber": 377, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 378, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 379, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "`namedtuple-Conv1DInput-input_batch-input_width-input_channels`"}, {"lineNumber": 460, "col_offset": 37, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 460, "col_offset": 61, "nodeName": "test", "type": "Any"}, {"lineNumber": 461, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 462, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 463, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "`namedtuple-Conv2DInput-input_batch-input_height-input_width-input_channels`"}, {"lineNumber": 549, "col_offset": 37, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 549, "col_offset": 61, "nodeName": "test", "type": "Any"}, {"lineNumber": 550, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 551, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 552, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "`namedtuple-Conv3DInput-input_batch-input_depth-input_height-input_width-input_channels`"}, {"lineNumber": 640, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "collections", "type": "module"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "collections", "type": "module"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "collections", "type": "module"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "Conv1DInput", "type": "Type[`namedtuple-Conv1DInput-input_batch-input_width-input_channels`]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "result_nwc", "type": "nothing"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "result_nwc", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "seq_ncw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "Conv1DInput", "type": "Type[`namedtuple-Conv1DInput-input_batch-input_width-input_channels`]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "result_nwc", "type": "nothing"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "conv_ncw", "type": "nothing"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "result_nwc", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "seq_ncw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 216, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "Conv2DInput", "type": "Type[`namedtuple-Conv2DInput-input_batch-input_height-input_width-input_channels`]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "conv_nhwc", "type": "nothing"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "result_nhwc", "type": "nothing"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "result_nchw", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "seq_nhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "result_nhwc", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "result_nchw", "type": "Any"}, {"lineNumber": 296, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "Conv3DInput", "type": "Type[`namedtuple-Conv3DInput-input_batch-input_depth-input_height-input_width-input_channels`]"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "conv_ndhwc", "type": "nothing"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "result_ndhwc", "type": "nothing"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "result_ncdhw", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "seq_ndhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "result_ndhwc", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "result_ncdhw", "type": "Any"}, {"lineNumber": 376, "col_offset": 61, "nodeName": "tf", "type": "Any"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "Conv1DInput", "type": "Type[`namedtuple-Conv1DInput-input_batch-input_width-input_channels`]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "result_nwc", "type": "nothing"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "conv_ncw", "type": "nothing"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "result_nwc", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "seq_ncw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 460, "col_offset": 61, "nodeName": "tf", "type": "Any"}, {"lineNumber": 463, "col_offset": 16, "nodeName": "Conv2DInput", "type": "Type[`namedtuple-Conv2DInput-input_batch-input_height-input_width-input_channels`]"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "conv_nhwc", "type": "nothing"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "result_nhwc", "type": "nothing"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "result_nchw", "type": "Any"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "seq_nhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "result_nhwc", "type": "Any"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "result_nchw", "type": "Any"}, {"lineNumber": 549, "col_offset": 61, "nodeName": "tf", "type": "Any"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "Conv3DInput", "type": "Type[`namedtuple-Conv3DInput-input_batch-input_depth-input_height-input_width-input_channels`]"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "conv_ndhwc", "type": "nothing"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "result_ndhwc", "type": "nothing"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "result_ncdhw", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "seq_ndhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "result_ndhwc", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "result_ncdhw", "type": "Any"}, {"lineNumber": 641, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "conv_module", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "field_to_get", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "result_nwc", "type": "nothing"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "result_nwc", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "result_nwc", "type": "nothing"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "result_nwc", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 223, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "conv_nhwc", "type": "nothing"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "result_nhwc", "type": "nothing"}, {"lineNumber": 259, "col_offset": 36, "nodeName": "result_nchw", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 284, "col_offset": 18, "nodeName": "seq_nhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "result_nhwc", "type": "Any"}, {"lineNumber": 293, "col_offset": 36, "nodeName": "result_nchw", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 303, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "conv_ndhwc", "type": "nothing"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 336, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "result_ndhwc", "type": "nothing"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "result_ncdhw", "type": "Any"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 364, "col_offset": 19, "nodeName": "seq_ndhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 370, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "result_ndhwc", "type": "Any"}, {"lineNumber": 373, "col_offset": 37, "nodeName": "result_ncdhw", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 383, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "input_batch", "type": "Any"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 412, "col_offset": 17, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 412, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "result_nwc", "type": "nothing"}, {"lineNumber": 423, "col_offset": 35, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 447, "col_offset": 14, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 449, "col_offset": 17, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 454, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 454, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 455, "col_offset": 17, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "result_nwc", "type": "Any"}, {"lineNumber": 457, "col_offset": 35, "nodeName": "result_ncw", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 467, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 467, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 467, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "input_batch", "type": "Any"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 498, "col_offset": 18, "nodeName": "conv_nhwc", "type": "nothing"}, {"lineNumber": 498, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 507, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 507, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 508, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 510, "col_offset": 23, "nodeName": "result_nhwc", "type": "nothing"}, {"lineNumber": 510, "col_offset": 36, "nodeName": "result_nchw", "type": "Any"}, {"lineNumber": 535, "col_offset": 15, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 537, "col_offset": 18, "nodeName": "seq_nhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 537, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 543, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 543, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 544, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 546, "col_offset": 23, "nodeName": "result_nhwc", "type": "Any"}, {"lineNumber": 546, "col_offset": 36, "nodeName": "result_nchw", "type": "Any"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 556, "col_offset": 26, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 556, "col_offset": 47, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 570, "col_offset": 19, "nodeName": "input_batch", "type": "Any"}, {"lineNumber": 574, "col_offset": 19, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 587, "col_offset": 17, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 589, "col_offset": 19, "nodeName": "conv_ndhwc", "type": "nothing"}, {"lineNumber": 589, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 596, "col_offset": 17, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 598, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 598, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 601, "col_offset": 23, "nodeName": "result_ndhwc", "type": "nothing"}, {"lineNumber": 601, "col_offset": 37, "nodeName": "result_ncdhw", "type": "Any"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 629, "col_offset": 19, "nodeName": "seq_ndhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 629, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 635, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 636, "col_offset": 19, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "checkEquality", "type": "Any"}, {"lineNumber": 638, "col_offset": 23, "nodeName": "result_ndhwc", "type": "Any"}, {"lineNumber": 638, "col_offset": 37, "nodeName": "result_ncdhw", "type": "Any"}, {"lineNumber": 641, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 69, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 73, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 98, "col_offset": 65, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 126, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 64, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "seq_ncw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 147, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 168, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 176, "col_offset": 65, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "conv_ncw", "type": "nothing"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 204, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 64, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "seq_ncw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 47, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 246, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 252, "col_offset": 53, "nodeName": "conv_nhwc", "type": "nothing"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "conv_nhwc", "type": "nothing"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "conv_nchw", "type": "nothing"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 274, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 283, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 289, "col_offset": 34, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 290, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "seq_nchw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 291, "col_offset": 40, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 47, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 305, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 321, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 326, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 332, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 332, "col_offset": 53, "nodeName": "conv_ndhwc", "type": "nothing"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 333, "col_offset": 53, "nodeName": "conv_ndhwc", "type": "nothing"}, {"lineNumber": 335, "col_offset": 36, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 336, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 337, "col_offset": 32, "nodeName": "conv_ncdhw", "type": "nothing"}, {"lineNumber": 337, "col_offset": 43, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 354, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 363, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 366, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 369, "col_offset": 35, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 370, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 371, "col_offset": 32, "nodeName": "seq_ncdhw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 371, "col_offset": 42, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 383, "col_offset": 47, "nodeName": "self", "type": "Conv1DTransposeTestDataFormats"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 385, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 388, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 389, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 390, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 404, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 406, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 411, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 417, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 417, "col_offset": 53, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 418, "col_offset": 53, "nodeName": "conv_nwc", "type": "nothing"}, {"lineNumber": 419, "col_offset": 65, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "conv_ncw", "type": "nothing"}, {"lineNumber": 421, "col_offset": 39, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 439, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 448, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 452, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 453, "col_offset": 64, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 454, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 455, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 455, "col_offset": 30, "nodeName": "seq_ncw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 455, "col_offset": 38, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 467, "col_offset": 47, "nodeName": "self", "type": "Conv2DTransposeTestDataFormats"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 472, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 473, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 474, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 483, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 486, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 492, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 493, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 497, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 503, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 503, "col_offset": 53, "nodeName": "conv_nhwc", "type": "nothing"}, {"lineNumber": 504, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 504, "col_offset": 53, "nodeName": "conv_nhwc", "type": "nothing"}, {"lineNumber": 506, "col_offset": 35, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 507, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 508, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 508, "col_offset": 31, "nodeName": "conv_nchw", "type": "nothing"}, {"lineNumber": 508, "col_offset": 41, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 517, "col_offset": 13, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 527, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 536, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 536, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 539, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 540, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 542, "col_offset": 34, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 543, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 544, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 544, "col_offset": 31, "nodeName": "seq_nchw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 544, "col_offset": 40, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 556, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTestDataFormats"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "is_gpu_available", "type": "Any"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 561, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 562, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 570, "col_offset": 19, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 571, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 572, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 573, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 574, "col_offset": 19, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 576, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 579, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 583, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 588, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 594, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 594, "col_offset": 53, "nodeName": "conv_ndhwc", "type": "nothing"}, {"lineNumber": 595, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 595, "col_offset": 53, "nodeName": "conv_ndhwc", "type": "nothing"}, {"lineNumber": 597, "col_offset": 36, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 598, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 599, "col_offset": 32, "nodeName": "conv_ncdhw", "type": "nothing"}, {"lineNumber": 599, "col_offset": 43, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 608, "col_offset": 13, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 619, "col_offset": 9, "nodeName": "data_format", "type": "str"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 624, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 628, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 628, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 631, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 632, "col_offset": 26, "nodeName": "create_custom_field_getter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 634, "col_offset": 35, "nodeName": "custom_getter", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 635, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 636, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 636, "col_offset": 32, "nodeName": "seq_ncdhw", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 636, "col_offset": 42, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 641, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "Conv1DTestDataFormats", "type": "Type[Conv1DTestDataFormats]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 69, "col_offset": 6, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 69, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "self", "type": "Conv1DTestDataFormats"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 126, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 130, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 144, "col_offset": 10, "nodeName": "CausalConv1DTestDataFormats", "type": "Type[CausalConv1DTestDataFormats]"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 147, "col_offset": 6, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 147, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "self", "type": "CausalConv1DTestDataFormats"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 168, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 204, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 208, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 222, "col_offset": 10, "nodeName": "Conv2DTestDataFormats", "type": "Type[Conv2DTestDataFormats]"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 225, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "self", "type": "Conv2DTestDataFormats"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 230, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 246, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 283, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 287, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 302, "col_offset": 10, "nodeName": "Conv3DTestDataFormats", "type": "Type[Conv3DTestDataFormats]"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 305, "col_offset": 6, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 305, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "self", "type": "Conv3DTestDataFormats"}, {"lineNumber": 310, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 310, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 310, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 326, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 363, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 367, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 382, "col_offset": 10, "nodeName": "Conv1DTransposeTestDataFormats", "type": "Type[Conv1DTransposeTestDataFormats]"}, {"lineNumber": 382, "col_offset": 42, "nodeName": "self", "type": "Conv1DTransposeTestDataFormats"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "self", "type": "Conv1DTransposeTestDataFormats"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 385, "col_offset": 6, "nodeName": "self", "type": "Conv1DTransposeTestDataFormats"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 385, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 388, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTestDataFormats"}, {"lineNumber": 390, "col_offset": 6, "nodeName": "self", "type": "Conv1DTransposeTestDataFormats"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 390, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 390, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 398, "col_offset": 58, "nodeName": "stride", "type": "Any"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 22, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 408, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 411, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 432, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 433, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 437, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 444, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 444, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 448, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 452, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 466, "col_offset": 10, "nodeName": "Conv2DTransposeTestDataFormats", "type": "Type[Conv2DTransposeTestDataFormats]"}, {"lineNumber": 466, "col_offset": 42, "nodeName": "self", "type": "Conv2DTransposeTestDataFormats"}, {"lineNumber": 467, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 467, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTestDataFormats"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 469, "col_offset": 6, "nodeName": "self", "type": "Conv2DTransposeTestDataFormats"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 469, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 472, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTestDataFormats"}, {"lineNumber": 474, "col_offset": 6, "nodeName": "self", "type": "Conv2DTransposeTestDataFormats"}, {"lineNumber": 474, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 474, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 474, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 482, "col_offset": 27, "nodeName": "input_height", "type": "Any"}, {"lineNumber": 482, "col_offset": 59, "nodeName": "stride", "type": "Any"}, {"lineNumber": 483, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 27, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 483, "col_offset": 58, "nodeName": "stride", "type": "Any"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "input_height", "type": "Any"}, {"lineNumber": 491, "col_offset": 22, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 494, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 494, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 497, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 517, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 518, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 523, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 532, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 536, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 539, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 540, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 555, "col_offset": 10, "nodeName": "Conv3DTransposeTestDataFormats", "type": "Type[Conv3DTransposeTestDataFormats]"}, {"lineNumber": 555, "col_offset": 42, "nodeName": "self", "type": "Conv3DTransposeTestDataFormats"}, {"lineNumber": 556, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 556, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTestDataFormats"}, {"lineNumber": 557, "col_offset": 11, "nodeName": "test", "type": "Any"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "self", "type": "Conv3DTransposeTestDataFormats"}, {"lineNumber": 558, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 558, "col_offset": 73, "nodeName": "name", "type": "str"}, {"lineNumber": 561, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTestDataFormats"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "self", "type": "Conv3DTransposeTestDataFormats"}, {"lineNumber": 563, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 563, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 563, "col_offset": 53, "nodeName": "atol", "type": "Any"}, {"lineNumber": 570, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 571, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 27, "nodeName": "input_depth", "type": "Any"}, {"lineNumber": 571, "col_offset": 58, "nodeName": "stride", "type": "Any"}, {"lineNumber": 572, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 572, "col_offset": 27, "nodeName": "input_height", "type": "Any"}, {"lineNumber": 572, "col_offset": 59, "nodeName": "stride", "type": "Any"}, {"lineNumber": 573, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 573, "col_offset": 27, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 573, "col_offset": 58, "nodeName": "stride", "type": "Any"}, {"lineNumber": 574, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 579, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 580, "col_offset": 22, "nodeName": "input_depth", "type": "Any"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "input_height", "type": "Any"}, {"lineNumber": 582, "col_offset": 22, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 585, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 588, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 608, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 610, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 611, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 615, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 617, "col_offset": 22, "nodeName": "data_format", "type": "str"}, {"lineNumber": 618, "col_offset": 24, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 620, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 622, "col_offset": 21, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 624, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 624, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 628, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 631, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 632, "col_offset": 53, "nodeName": "layers", "type": "Any"}, {"lineNumber": 73, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 123, "col_offset": 47, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 130, "col_offset": 53, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 201, "col_offset": 47, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 207, "col_offset": 53, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 208, "col_offset": 53, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 246, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 283, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 286, "col_offset": 53, "nodeName": "seq_nhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 287, "col_offset": 53, "nodeName": "seq_nhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 310, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 310, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 360, "col_offset": 47, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 366, "col_offset": 53, "nodeName": "seq_ndhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 367, "col_offset": 53, "nodeName": "seq_ndhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 389, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 390, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 405, "col_offset": 22, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 411, "col_offset": 37, "nodeName": "input_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 432, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 433, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 445, "col_offset": 47, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 448, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 451, "col_offset": 53, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 452, "col_offset": 53, "nodeName": "seq_nwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 473, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 474, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 474, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 482, "col_offset": 27, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 483, "col_offset": 27, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 491, "col_offset": 22, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "input_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "input_height", "type": "Any"}, {"lineNumber": 522, "col_offset": 24, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 524, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 524, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 533, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 533, "col_offset": 47, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 536, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 536, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 539, "col_offset": 53, "nodeName": "seq_nhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 540, "col_offset": 53, "nodeName": "seq_nhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 562, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 563, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 563, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 571, "col_offset": 27, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 572, "col_offset": 27, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 573, "col_offset": 27, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 580, "col_offset": 22, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 582, "col_offset": 22, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 588, "col_offset": 37, "nodeName": "input_shape", "type": "Tuple[Any, Any, Any, Any, Any]"}, {"lineNumber": 610, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 611, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "input_depth", "type": "Any"}, {"lineNumber": 613, "col_offset": 24, "nodeName": "input_height", "type": "Any"}, {"lineNumber": 614, "col_offset": 24, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 616, "col_offset": 23, "nodeName": "create_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 616, "col_offset": 43, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 620, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 622, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 625, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 625, "col_offset": 47, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 628, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 628, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 631, "col_offset": 53, "nodeName": "seq_ndhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 632, "col_offset": 53, "nodeName": "seq_ndhwc", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 73, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 246, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 283, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 389, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 448, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 482, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 491, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 522, "col_offset": 24, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 533, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 536, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 536, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 571, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 572, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 573, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 580, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 581, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 582, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 613, "col_offset": 24, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 614, "col_offset": 24, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 625, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 628, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 628, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 522, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 536, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 612, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 613, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 614, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 628, "col_offset": 20, "nodeName": "np", "type": "module"}]