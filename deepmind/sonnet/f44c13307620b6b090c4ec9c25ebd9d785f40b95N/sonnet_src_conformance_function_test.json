[{"lineNumber": 29, "col_offset": 0, "nodeName": "ModuleFn", "type": "Type[Callable[[], Any]]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "BATCH_MODULES", "type": "Tuple[sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`]"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "BATCH_MODULES", "type": "Tuple[sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "RECURRENT_MODULES", "type": "Tuple[sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, ...]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "RECURRENT_MODULES", "type": "Tuple[sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, ...]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "OPTIMIZER_MODULES", "type": "Tuple[sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`]"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "OPTIMIZER_MODULES", "type": "Tuple[sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`, sonnet.src.conformance.descriptors.`namedtuple-ModuleDescriptor-name-create-shape-dtype`]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "IGNORED_MODULES", "type": "Set[Type[sonnet.src.base.Module]]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "IGNORED_MODULES", "type": "Set[Type[sonnet.src.base.Module]]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "descriptors", "type": "module"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "descriptors", "type": "module"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "descriptors", "type": "module"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "descriptors", "type": "module"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 142, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "forward", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "forward", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "forward", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "cf", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "forward", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "cf", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "optimizer_apply", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "optimizer_apply", "type": "Any"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "Module", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "ModuleFn", "type": "Type[Callable[[], Any]]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "DType", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "module_fn", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "module", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "forward", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "ModuleFn", "type": "Type[Callable[[], Any]]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "DType", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "module_fn", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "create_variables_eagerly", "type": "Any"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "module", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "forward", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "ModuleFn", "type": "Type[Callable[[], Any]]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "DType", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "module_fn", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "module", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "cf", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "ModuleFn", "type": "Type[Callable[[], Any]]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "DType", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "BatchApply", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "module", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "input_shape", "type": "Tuple[int]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "cf", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "ModuleFn", "type": "Type[Callable[[], Any]]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "DType", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "optimizer_fn", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "function", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "apply", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "optimizer_apply", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "ModuleFn", "type": "Type[Callable[[], Any]]"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "DType", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "optimizer_fn", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "function", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "apply", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "optimizer_apply", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "snt", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "autograph", "type": "bool"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int]"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "distribute", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "autograph", "type": "bool"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "autograph", "type": "bool"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 64, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "forward", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "ones", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "input_shape", "type": "Tuple[int]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "snt", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "module_fn", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "autograph", "type": "bool"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 69, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "forward", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "unwrap", "type": "Callable[[sonnet.src.base.Module], sonnet.src.base.Module]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "module", "type": "Any"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "VectorQuantizer", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "VectorQuantizerEMA", "type": "Any"}, {"lineNumber": 99, "col_offset": 7, "nodeName": "ones", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 114, "col_offset": 61, "nodeName": "autograph", "type": "bool"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "IndexedSlices", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 138, "col_offset": 61, "nodeName": "autograph", "type": "bool"}, {"lineNumber": 144, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "snt", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "input_shape", "type": "Tuple[int]"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "descriptors", "type": "module"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "module", "type": "Any"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "nets", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "nets", "type": "Any"}, {"lineNumber": 99, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "constant", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "snt", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "snt", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "tf", "type": "Any"}]