[{"lineNumber": 37, "col_offset": 0, "nodeName": "_build_nested_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "_VALUES_A", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "_VALUES_B", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "RNNCore", "type": "Type[sonnet.python.modules.rnn_core.RNNCore]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "RNNCore", "type": "Type[sonnet.python.modules.rnn_core.RNNCore]"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "tensor", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "rnn_core", "type": "module"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "rnn_core", "type": "module"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "test", "type": "Any"}, {"lineNumber": 173, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "values_c", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "tf_a", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "tf_b", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "tf_add", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "mul_constant", "type": "float"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "values_mul", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "tf_a", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "zeros", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "tf_a", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "tf_zeros", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "threshold", "type": "float"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "seq_input", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "output", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "state_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "vanilla", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "core", "type": "OutputTupleCore"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "core", "type": "Output2DCore"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 174, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "values_out", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "_build_nested_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "_VALUES_A", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "_build_nested_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "_VALUES_B", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "_nested_add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "tf_a", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "tf_b", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "_test_nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "tf_add", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "values_c", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "_build_nested_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "_VALUES_A", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "_nested_unary_mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "tf_a", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "_test_nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "tf_mul", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "values_mul", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "_build_nested_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "_VALUES_A", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "_nested_zeros_like", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 48, "nodeName": "tf_a", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "_test_nested", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "tf_zeros", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "zeros", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "ACTCore", "type": "Type[sonnet.python.modules.pondering_rnn.ACTCore]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "threshold", "type": "float"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "get_state_for_halting", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "act", "type": "sonnet.python.modules.pondering_rnn.ACTCore"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "seq_input", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "seq_output", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "final_cumul_state", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "_testACT", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 144, "col_offset": 56, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 144, "col_offset": 65, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "get_hidden_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "state", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "_testACT", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 156, "col_offset": 43, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "vanilla", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "OutputTupleCore", "type": "Type[OutputTupleCore]"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "Output2DCore", "type": "Type[Output2DCore]"}, {"lineNumber": 174, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "values", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "values_out", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "values_expected", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "values_out", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "a", "type": "Union[numpy.ndarray, float]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "b", "type": "Union[float, numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "pondering_rnn", "type": "module"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "a", "type": "Union[float, numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "mul_constant", "type": "float"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "a", "type": "Union[numpy.ndarray, float]"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "_VALUES_A", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "pondering_rnn", "type": "module"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "mul_constant", "type": "float"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "pondering_rnn", "type": "module"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "pondering_rnn", "type": "module"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "core", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "nest", "type": "Any"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "seq_output", "type": "Any"}, {"lineNumber": 121, "col_offset": 5, "nodeName": "final_out", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "final_out", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "iteration", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "state_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "r_t", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "gated_rnn", "type": "module"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "unused_cell", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "basic_rnn", "type": "module"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 163, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "ACTCore", "type": "Type[sonnet.python.modules.pondering_rnn.ACTCore]"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "core", "type": "OutputTupleCore"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 170, "col_offset": 6, "nodeName": "ACTCore", "type": "Type[sonnet.python.modules.pondering_rnn.ACTCore]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "core", "type": "Output2DCore"}, {"lineNumber": 174, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "values", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "values", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "values_out", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "equal", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "a", "type": "Union[float, numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "b", "type": "Union[float, numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "_VALUES_A", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "_VALUES_B", "type": "List[Union[float, numpy.ndarray]]"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 111, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 111, "col_offset": 62, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "seq_input", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "iteration", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "r_t", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "iteration", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "get_state_for_halting", "type": "Any"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "final_cumul_state", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "r_t", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "r_t", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "threshold", "type": "float"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "pondering_rnn", "type": "module"}, {"lineNumber": 164, "col_offset": 57, "nodeName": "state", "type": "Any"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "self", "type": "ACTCoreTest"}, {"lineNumber": 170, "col_offset": 6, "nodeName": "pondering_rnn", "type": "module"}, {"lineNumber": 170, "col_offset": 57, "nodeName": "state", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "values_expected", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "values_expected", "type": "Any"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "floor", "type": "Any"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "iteration", "type": "Any"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "values_out", "type": "Any"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "values_out", "type": "Any"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "get_state_for_halting", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "initial_state", "type": "Any"}]