[{"lineNumber": 29, "col_offset": 10, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "base", "type": "module"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "base", "type": "module"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "relu", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "_output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "_num_layers", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "_input_shape", "type": "None"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "possible_keys", "type": "Set[str]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "_activation", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "activation", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "_activate_final", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "_use_bias", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "final_index", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "layer_id", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "net", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "_layers", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "_use_bias", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "_initializers", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "_partitioners", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "_regularizers", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "_activation", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "_activate_final", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "_input_shape", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "output_sizes", "type": "List[Callable[..., Any]]"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "_output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "possible_keys", "type": "Set[str]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "possible_keys", "type": "Set[str]"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "possible_keys", "type": "Set[str]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "_instantiate_layers", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Set[str]]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "_num_layers", "type": "int"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "_num_layers", "type": "int"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "_ensure_is_connected", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 206, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 207, "col_offset": 7, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 208, "col_offset": 6, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "reverse", "type": "Callable[[], None]"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "MLP", "type": "Type[MLP]"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "Iterable", "type": "Type[Iterable[Any]]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "self", "type": "MLP"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "self", "type": "MLP"}, {"lineNumber": 85, "col_offset": 69, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "self", "type": "MLP"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "self", "type": "MLP"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "self", "type": "MLP"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "activation", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "_enter_variable_scope", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 125, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "self", "type": "MLP"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "self", "type": "MLP"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "net", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "_activate_final", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "self", "type": "MLP"}, {"lineNumber": 209, "col_offset": 57, "nodeName": "layer", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "_layers", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "output_sizes", "type": "List[Callable[..., Any]]"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "output_sizes", "type": "List[Callable[..., Any]]"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "activation", "type": "Any"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "initializers", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "partitioners", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "regularizers", "type": "Dict[Any, Any]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 10, "nodeName": "MLP", "type": "Type[MLP]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "self", "type": "MLP"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "collections", "type": "module"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "self", "type": "MLP"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "i", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "basic", "type": "module"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "_layers", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "final_index", "type": "int"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "layer_id", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "self", "type": "MLP"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "_activation", "type": "Any"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "net", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "l", "type": "Any"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "l", "type": "Any"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "_output_sizes", "type": "Any"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "self", "type": "MLP"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "layer", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "self", "type": "MLP"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "self", "type": "MLP"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "self", "type": "MLP"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "self", "type": "MLP"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "self", "type": "MLP"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "self", "type": "MLP"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "_num_layers", "type": "int"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "MLP"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "layer_id", "type": "Any"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "self", "type": "MLP"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "l", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "l", "type": "Any"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "l", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "self", "type": "MLP"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "inputs", "type": "Any"}]