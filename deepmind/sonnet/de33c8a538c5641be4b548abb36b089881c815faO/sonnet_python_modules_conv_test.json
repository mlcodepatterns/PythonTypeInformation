[{"lineNumber": 33, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 772, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 882, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1248, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1532, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1591, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1914, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2324, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2671, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 34, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 42, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 52, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 59, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 772, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 882, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 1248, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 1251, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1252, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1253, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1254, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1255, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1256, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1257, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1258, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1259, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1267, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1268, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1269, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1270, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1271, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1532, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 1591, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 1914, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 2324, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 2671, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 2771, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 272, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 286, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 509, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 684, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 745, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 765, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 772, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 787, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 833, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 882, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 920, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 943, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 957, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 998, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1013, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1036, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1050, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1083, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1109, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1122, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1123, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1152, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1154, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1173, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1199, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1225, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1228, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1229, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1248, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1257, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1257, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1257, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1257, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1257, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1261, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1261, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1261, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1261, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1267, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1268, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1268, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1269, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1269, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1270, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1271, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1271, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1290, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1316, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1326, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1355, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1386, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1423, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1447, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1448, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1449, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1451, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1452, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1486, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1495, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1509, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1516, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1517, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1532, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1541, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1542, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1543, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1547, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1562, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1563, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1564, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1565, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1566, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1567, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1581, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1582, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1584, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1591, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1598, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1598, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1599, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1599, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1600, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1600, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1601, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1601, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1602, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1602, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1603, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1603, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1604, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1604, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1605, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1605, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1607, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 1608, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1609, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 1620, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1620, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1621, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1621, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1622, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1622, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1623, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1623, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1624, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1624, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1625, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1625, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1627, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1636, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1640, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1659, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1676, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1696, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1719, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1732, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 1754, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1780, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1782, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1788, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1789, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1815, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1844, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1871, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1872, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1893, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1894, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1895, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1897, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1898, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1914, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1921, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1921, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1922, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1922, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1923, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1923, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1924, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1924, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1925, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 1927, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1927, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1928, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1928, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1929, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1929, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1930, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1932, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1932, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1933, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 1937, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 1946, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1946, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 1947, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1947, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1948, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1948, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1949, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1949, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1950, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 1950, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 1951, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 1951, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 1952, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1952, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1954, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1963, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1970, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1989, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2015, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2043, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2068, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2081, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2082, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2083, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2109, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2122, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2123, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2154, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2157, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2177, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2209, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2239, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2258, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2259, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2260, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2270, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2271, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2272, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2300, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2301, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2302, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2304, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2305, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2324, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2333, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2334, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2335, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2336, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2337, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2338, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2339, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2340, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2341, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2365, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2377, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2378, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2378, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2378, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2379, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2379, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2380, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2380, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2380, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2395, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2450, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2464, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2484, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2496, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2497, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 2528, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2529, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2559, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2561, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2580, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2619, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2620, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2647, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2648, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2649, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2651, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2652, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2671, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2678, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2679, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2680, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2681, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2682, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2683, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2684, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2685, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2686, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2688, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2689, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2690, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 2690, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2695, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 2704, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 2724, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2734, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2740, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2758, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2759, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2760, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2764, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2765, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2766, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 2772, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 131, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 132, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 135, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 202, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 336, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 430, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 430, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 431, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 432, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 463, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 477, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 477, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 488, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 507, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 527, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 533, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 534, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 548, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 557, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 558, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 562, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 586, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 586, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 587, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 587, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 589, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 589, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 590, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 590, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 601, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 624, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 648, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 649, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 655, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 669, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 676, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 676, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 682, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 683, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 683, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 684, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 684, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 694, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 697, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 698, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 705, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 705, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 706, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 716, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 718, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 719, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 726, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 727, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 735, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 736, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 745, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 746, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 754, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 756, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 764, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 766, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 787, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 789, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 789, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 790, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 792, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 792, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 794, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 794, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 796, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 796, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 797, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 797, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 817, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 817, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 819, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 827, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 827, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 843, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 851, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 852, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 852, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 857, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 858, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 858, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 859, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 859, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 867, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 867, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 879, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 879, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 891, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 892, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 893, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 894, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 896, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 898, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 902, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 910, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 910, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 925, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 933, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 933, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 939, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 960, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 965, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 973, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 973, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 995, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1061, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1070, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1070, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1071, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1072, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1082, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1085, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1094, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1104, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1123, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1123, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1125, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1132, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1134, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1134, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1141, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1142, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1144, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1150, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1152, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1152, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1153, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1163, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1172, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1173, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1174, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1175, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1189, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1198, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1199, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1200, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1201, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1216, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1224, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1225, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1225, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1226, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1226, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1228, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1228, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1229, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1229, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1240, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1257, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1257, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1257, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1257, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1257, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1262, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1262, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1264, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1264, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1267, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1267, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1267, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1267, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1270, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1270, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1270, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1270, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1281, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1290, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1304, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1305, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1308, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1316, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1316, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1318, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1322, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1338, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1346, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1377, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1414, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1423, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1423, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1426, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1438, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1447, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1447, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1447, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1447, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1448, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1448, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1449, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1449, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1451, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1451, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1452, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1452, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1463, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1478, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1486, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1489, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1489, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1489, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1490, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1490, "col_offset": 56, "nodeName": "stride", "type": "Tuple[Any, ...]"}, {"lineNumber": 1491, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1491, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1491, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1497, "col_offset": 6, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1500, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1502, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1502, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1503, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1503, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1503, "col_offset": 34, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1517, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1517, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1519, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1527, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1529, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1529, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1541, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1542, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1542, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1543, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1549, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1549, "col_offset": 10, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1552, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1552, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1553, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1553, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1553, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1562, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1563, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1564, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1564, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1565, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1565, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1566, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1566, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1567, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1567, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1574, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1582, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1582, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1584, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1586, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1588, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1588, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1588, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1596, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1598, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1598, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1599, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1599, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1600, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1600, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1601, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1601, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1602, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1602, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1603, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1603, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1604, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1604, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1605, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1605, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1605, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1607, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1607, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1607, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1607, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1607, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1608, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1608, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1608, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1609, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1609, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1609, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1609, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1609, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1610, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1610, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1610, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1611, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1620, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1621, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 1622, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1623, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1624, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1625, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1627, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1627, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1629, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1636, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1636, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1638, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1638, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1639, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1639, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1650, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1651, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1653, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1659, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1659, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1664, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1674, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1675, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1689, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1691, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1693, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1711, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1719, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1719, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1720, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1721, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1731, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1732, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1734, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1741, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1751, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1768, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1769, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1771, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1778, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1780, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1780, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1781, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1781, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1789, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1789, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1791, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1797, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1799, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1799, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1799, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1807, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1815, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1816, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1821, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1822, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1836, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1844, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1845, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1848, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1849, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1863, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1871, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1872, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1873, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1874, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1889, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1893, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1894, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1894, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1895, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1895, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1897, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1897, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1898, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1898, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1909, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1919, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1921, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1921, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1922, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1922, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1923, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1923, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1924, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1924, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1925, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1925, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1925, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1925, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1925, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1927, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1927, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1928, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1928, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1929, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1929, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1930, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1930, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1930, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1932, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1932, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1932, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1933, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1933, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1933, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1933, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1933, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1935, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1935, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1935, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1935, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1937, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1937, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1937, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1946, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1947, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 1948, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1949, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1950, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 1951, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 1952, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1954, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1954, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1956, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 1963, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1963, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1965, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1966, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1968, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1980, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1981, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1983, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 1989, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1989, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1995, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2006, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2012, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2030, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2033, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2059, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2068, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2068, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2069, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2070, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2081, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2082, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2083, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2084, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2092, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2106, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2123, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2123, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2125, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2132, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2134, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2134, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2134, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2141, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2142, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2144, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2152, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2154, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2154, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2155, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2155, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2156, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2156, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2167, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2177, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2178, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2183, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2184, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2200, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2209, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2210, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2213, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2214, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2230, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2239, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2240, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2241, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2242, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2260, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2260, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2261, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2270, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2271, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2273, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2274, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2276, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2296, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2300, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2301, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2301, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2302, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2302, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2304, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2304, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2305, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2305, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2317, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2318, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2333, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2334, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2335, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2336, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2337, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2338, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2339, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2340, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2341, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2343, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2344, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2347, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2355, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2355, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2357, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2361, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2382, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2383, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2387, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2395, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2395, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2412, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2413, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2422, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2424, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2426, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2443, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2446, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2474, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2484, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2484, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2485, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2496, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2497, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2498, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2506, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2516, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2529, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2529, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2531, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2538, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2540, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2540, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2540, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2547, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2548, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2550, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2557, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2559, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2559, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2560, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2560, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2571, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2580, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2593, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2594, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2610, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2619, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2620, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2622, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2623, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2639, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2647, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2648, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2648, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2649, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2649, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2651, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2651, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2652, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2652, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2663, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2676, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2678, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2679, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2680, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2681, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2682, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2683, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2684, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2685, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2686, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2688, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2689, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2690, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2690, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 2692, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2692, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2692, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2692, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2693, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2693, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2695, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2695, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2695, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2695, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2697, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2697, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2697, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2698, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2700, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2700, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2700, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2701, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2701, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2702, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2704, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2704, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2704, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2704, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2724, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2724, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2726, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2734, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2734, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2736, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2739, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2750, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2758, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2759, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2759, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2764, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2765, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2765, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2766, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2766, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2767, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2772, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 80, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 131, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 135, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 149, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 149, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 151, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 176, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 193, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 198, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 210, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 215, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 223, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 229, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 273, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 296, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 311, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 312, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 351, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 351, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 351, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 352, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 371, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 373, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 374, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 391, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 408, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 408, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 408, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 409, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 411, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 411, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 411, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 412, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 430, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 430, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 431, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 453, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 453, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 455, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 459, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 469, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 469, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 469, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 470, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 486, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 486, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 502, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 503, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 505, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 505, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 507, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 510, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 510, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 522, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 527, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 528, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 536, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 540, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 540, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 548, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 554, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 558, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 564, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 568, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 568, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 581, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 582, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 586, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 586, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 587, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 587, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 592, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 601, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 602, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 604, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 621, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 624, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 626, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 630, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 645, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 649, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 657, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 661, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 661, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 669, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 673, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 676, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 676, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 679, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 679, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 681, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 681, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 682, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 686, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 694, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 696, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 697, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 698, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 701, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 702, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 706, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 707, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 708, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 709, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 716, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 716, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 718, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 719, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 722, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 723, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 727, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 728, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 729, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 730, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 730, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 735, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 736, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 736, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 737, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "exception", "type": "Any"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 740, "col_offset": 39, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 745, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 746, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 746, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "exception", "type": "Any"}, {"lineNumber": 749, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 754, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 756, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 756, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 757, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "exception", "type": "Any"}, {"lineNumber": 759, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 759, "col_offset": 62, "nodeName": "shape", "type": "Any"}, {"lineNumber": 764, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 766, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 766, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 767, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "exception", "type": "Any"}, {"lineNumber": 769, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 769, "col_offset": 62, "nodeName": "shape", "type": "Any"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 789, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 790, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 792, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 792, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 794, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 794, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 796, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 797, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 797, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 817, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 817, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 817, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 819, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 820, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 821, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 822, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 823, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 825, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 829, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 832, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 834, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 843, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 844, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 845, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 846, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 847, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 849, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 851, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 852, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 852, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 852, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 854, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 854, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 856, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 856, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 857, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 860, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 861, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 866, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 875, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 877, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 877, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 891, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 892, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 893, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 894, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 896, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 898, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 902, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 903, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 904, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 905, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 908, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 921, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 925, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 926, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 927, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 928, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 931, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 936, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 939, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 944, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 960, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 965, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 967, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 968, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 969, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 971, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 975, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 979, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 982, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 983, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 994, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 995, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 996, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 999, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 999, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 999, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1000, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1011, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1014, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1014, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1014, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1015, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1018, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1018, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1018, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1019, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1031, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1034, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1051, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1051, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 1051, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1052, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1061, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1064, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1065, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1070, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1070, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1071, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1082, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1085, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1089, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1090, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1094, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1094, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1096, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1100, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1110, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1110, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1110, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1111, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1122, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1125, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1130, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1132, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1132, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1142, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1144, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1148, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1150, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1150, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1152, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1152, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1155, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1155, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1163, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1168, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1172, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1173, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1177, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1181, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1181, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1189, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1193, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1194, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1198, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1199, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1203, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1207, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1207, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1216, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1220, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1221, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1224, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1225, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1225, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1226, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1226, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1231, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1235, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1240, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1241, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1243, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1262, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1263, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1264, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1265, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1281, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1281, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1282, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1283, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1284, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1285, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1287, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1290, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1292, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1292, "col_offset": 33, "nodeName": "UnderspecifiedError", "type": "Type[sonnet.python.modules.base.UnderspecifiedError]"}, {"lineNumber": 1292, "col_offset": 58, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1293, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1293, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 1304, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1305, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1308, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1308, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1309, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1310, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1311, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1312, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1314, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1318, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1319, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1322, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1323, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1327, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1338, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1339, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1340, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1342, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1343, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1345, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1346, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1347, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1348, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1350, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1351, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1353, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1356, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1356, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1356, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1357, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1363, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1363, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1363, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1364, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1377, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1378, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1379, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1381, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1384, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1388, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1388, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1388, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1389, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1397, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1397, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1397, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1398, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1414, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1415, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1416, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1417, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1418, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1419, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1421, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1423, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1423, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1424, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1438, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1439, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1440, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1441, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1442, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1443, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1445, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1447, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1448, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1448, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1449, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1449, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1454, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1458, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1463, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1463, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1463, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1463, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1464, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1466, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1478, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1479, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1480, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1481, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1482, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1483, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1485, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1486, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1489, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1489, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1489, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1490, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1490, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1491, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1491, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1491, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1496, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1496, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 1496, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1497, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1500, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1500, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1500, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1500, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1500, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1501, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1503, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1503, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1510, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1510, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 1510, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1511, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1511, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1511, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1516, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1519, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1525, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1527, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1527, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1541, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 1542, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1542, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1543, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1543, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1548, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1548, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 1548, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1549, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1553, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1553, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1562, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1562, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1563, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1564, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1564, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1565, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1565, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1569, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1572, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1574, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1575, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1576, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1581, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1584, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1584, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1586, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1586, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1588, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 1598, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 1599, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 1600, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 1601, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 1602, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1603, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1604, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 1627, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1627, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1627, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1629, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1631, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1632, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1633, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1635, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1638, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1638, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1639, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1639, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1641, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1641, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1650, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1651, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1653, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1654, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1655, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1656, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1658, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1661, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1664, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1665, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1665, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1674, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1675, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1678, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1678, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1678, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1679, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1689, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1690, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1691, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1692, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1693, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1694, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1698, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1698, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1698, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1699, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1711, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1715, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1716, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1719, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1719, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1720, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1731, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1732, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1734, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1738, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1741, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1741, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1743, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1747, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1755, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1755, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1755, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1756, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1769, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1771, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1775, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1776, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1778, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1778, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1780, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1780, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1781, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1783, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1783, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1788, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1791, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1795, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1797, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1797, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1799, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1807, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1811, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1812, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1815, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1816, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1824, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1828, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1828, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1836, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1840, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1841, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1844, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1845, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1851, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1855, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1855, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1863, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1867, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1868, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1871, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1872, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1876, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1880, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1881, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1889, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1890, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1891, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1893, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1894, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1894, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1895, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1895, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1900, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1903, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1909, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1910, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1911, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1921, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 1922, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 1923, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 1924, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 1927, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1928, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1929, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 1954, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1954, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1954, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1956, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1957, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1958, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1959, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1960, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1961, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1965, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1965, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1965, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1966, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1966, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1967, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 1968, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1968, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1969, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 1971, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1980, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1981, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1983, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1984, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 1986, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1987, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1988, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1991, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1995, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1996, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2006, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2011, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2012, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2017, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2017, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 2017, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2018, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2030, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2032, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2033, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2035, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2041, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2045, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2045, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 2045, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2046, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2059, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2063, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2064, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2068, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2068, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2069, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2081, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2082, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2083, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2084, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2088, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2092, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2092, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2094, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2099, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2102, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2110, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2110, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2110, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2111, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2122, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2125, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2130, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2132, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2132, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2134, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2142, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2144, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2149, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2150, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2152, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2152, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2154, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2154, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2155, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2156, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2158, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2158, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2167, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2171, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2173, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2177, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2178, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2186, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2191, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2191, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2200, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2204, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2205, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2209, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2210, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2216, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2221, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2221, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2230, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2234, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2235, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2239, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2240, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2244, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2249, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2249, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2261, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2262, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2263, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2265, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2266, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2270, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2270, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2270, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2271, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2271, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2272, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2276, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2276, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2279, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2284, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2285, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2296, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2298, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2300, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2301, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2301, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2302, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2302, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2307, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2311, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2317, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2318, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2319, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2320, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2321, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2333, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 2334, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2335, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 2336, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2337, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 2338, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 2339, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2340, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2341, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2343, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2344, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2347, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2348, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2350, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2352, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2357, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2358, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2361, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2362, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2366, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2382, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2383, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2387, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2389, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2391, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2393, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2397, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2401, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2405, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2406, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2412, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2413, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2415, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2415, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 2416, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2417, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2422, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2424, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2426, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2430, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2430, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 2431, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2433, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2443, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2445, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2446, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2448, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2465, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2465, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 2465, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2466, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2468, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2468, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 2468, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2469, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2474, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2477, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2484, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2484, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2485, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2486, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2486, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2487, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2487, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 2496, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2497, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2498, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2503, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2506, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2506, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2508, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2512, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2521, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 2521, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2522, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2528, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2531, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2536, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2538, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2538, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2540, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2548, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2550, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2554, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2555, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2557, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2557, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2559, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2559, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2560, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2562, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2562, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2571, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2575, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2577, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2580, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2596, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2600, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2601, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2610, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2614, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2616, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2619, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2625, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2629, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2630, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2639, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2643, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2644, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2647, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2648, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2648, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2649, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2649, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2654, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2658, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2663, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2664, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2666, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2692, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2692, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2693, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2693, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2695, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2695, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2695, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2697, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2698, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2700, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2701, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2701, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2702, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2704, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2704, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2704, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2724, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2724, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2724, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 2726, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2727, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2728, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2729, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2730, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2732, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2736, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2736, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2739, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2739, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2739, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 2741, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2750, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 2751, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2752, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2753, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2754, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2756, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2758, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2759, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2759, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2759, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 2761, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2761, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 2763, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2763, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2764, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2767, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2767, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2768, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2772, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 80, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 174, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 174, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 202, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 212, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 225, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 252, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 257, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 266, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 266, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 270, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 270, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 273, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 297, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 309, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 311, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 351, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 352, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 373, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 374, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 394, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 408, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 408, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 409, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 410, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 411, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 411, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 412, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 413, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 427, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 428, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 431, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 431, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 431, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 433, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 433, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 434, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 451, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 451, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 451, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 451, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 453, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 453, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 455, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 459, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 460, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 461, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 461, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 469, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 470, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 486, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 486, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 505, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 505, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 507, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 510, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 522, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 525, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 525, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 527, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 527, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 536, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 540, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 540, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 555, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 555, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 557, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 564, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 568, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 568, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 581, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 586, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 592, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 597, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 598, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 601, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 604, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 605, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 606, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 622, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 622, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 624, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 624, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 626, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 630, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 630, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 646, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 646, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 648, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 657, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 661, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 661, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 679, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 679, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 680, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 680, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 696, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 702, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 704, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 707, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 709, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 716, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 723, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 725, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 728, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 730, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 730, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 736, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 736, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 737, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 737, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 740, "col_offset": 39, "nodeName": "mask", "type": "Any"}, {"lineNumber": 746, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 747, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 747, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 749, "col_offset": 65, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 749, "col_offset": 70, "nodeName": "mask", "type": "Any"}, {"lineNumber": 756, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 756, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 757, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 759, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 766, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 766, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 767, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 769, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 777, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 777, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 817, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 820, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 821, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 822, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 823, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 832, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 834, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 834, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 844, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 845, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 846, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 847, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 852, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 854, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 854, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 855, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 855, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 860, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 861, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 866, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 877, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 877, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 900, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 900, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 900, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 905, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 914, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 914, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 914, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 918, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 918, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 918, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 921, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 922, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 928, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 937, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 937, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 941, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 941, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 941, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 944, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 945, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 962, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 969, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 975, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 979, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 980, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 982, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 983, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 984, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 984, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 984, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 999, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 999, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1000, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1014, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1014, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1015, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1018, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1018, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1019, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1037, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1037, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1051, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1051, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1052, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1053, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1064, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1067, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1068, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1071, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1071, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1071, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1073, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1073, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1073, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1074, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1074, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1089, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1092, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1092, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1092, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1092, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1094, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1094, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1096, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1100, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1101, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1102, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1102, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1110, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1111, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1114, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1115, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1122, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1132, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1132, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1142, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1150, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1150, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1152, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1153, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1155, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1170, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1170, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1172, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1172, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1177, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1181, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1181, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1193, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1196, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1196, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1198, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1198, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1203, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1207, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1207, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1220, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1224, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1225, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1226, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1231, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1235, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1236, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1237, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1240, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1243, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1244, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1245, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1263, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1265, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1292, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1292, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1306, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1306, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1306, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1320, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1320, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1320, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1324, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1324, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1324, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1327, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1328, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1356, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1356, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1357, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1357, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1358, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1361, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1363, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1363, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1364, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1364, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1365, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1368, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1388, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1388, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1389, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1389, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1390, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1392, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1395, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1397, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1397, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1398, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1398, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1399, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1401, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1404, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1424, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1424, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1425, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1427, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1427, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1427, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1428, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1428, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1447, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1448, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1449, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1454, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1458, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1459, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1460, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1463, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1466, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1467, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1468, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1490, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1496, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1496, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1500, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1501, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1510, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1510, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1511, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1511, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1511, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1516, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1527, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1527, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1542, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1548, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1548, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1563, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1564, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1565, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1569, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1572, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1572, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1572, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1574, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1576, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1576, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1576, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1581, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1586, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1586, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1596, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1596, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 1596, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1633, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1638, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 1639, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1641, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1641, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1651, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1654, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1655, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 1656, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1661, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1664, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1664, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1665, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1665, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1665, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1665, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1678, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1678, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1679, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1680, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1698, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1698, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1699, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1702, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1715, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1717, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1717, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1720, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1720, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1720, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1722, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1722, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1722, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1723, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1723, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1732, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1739, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1739, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1739, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 1739, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1741, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1741, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1743, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1747, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1748, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1748, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 1749, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 1752, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1752, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 1755, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1756, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1760, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1769, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1778, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1778, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1780, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1781, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1783, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1788, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1797, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1797, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1811, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1813, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1813, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1815, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1815, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1824, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1828, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1828, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1840, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1842, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1842, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1844, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1844, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1851, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1855, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1855, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1867, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1869, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1869, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1871, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1871, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1876, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1880, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1881, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1890, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 1893, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1894, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1895, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1900, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1903, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1903, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1903, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1909, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1911, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1911, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1911, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1919, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1919, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 1919, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1960, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1971, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1971, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1981, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1984, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 1986, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 1987, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1991, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1995, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1995, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1996, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1996, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1996, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2017, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2017, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2018, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2021, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2045, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2045, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2046, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2051, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2063, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2065, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2066, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2069, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2069, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2069, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2071, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2071, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2071, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2072, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2072, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2083, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2089, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2090, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2090, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2090, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2090, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2092, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2092, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2094, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2099, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2100, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2100, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2101, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2102, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2103, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2103, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2104, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2107, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2107, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2110, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2111, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2116, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2122, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2132, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2132, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2142, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2152, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2152, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2154, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2155, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2156, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2158, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2171, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2174, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2175, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2177, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2177, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2186, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2191, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2191, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2204, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2206, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2207, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2209, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2209, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2216, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2221, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2221, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2234, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2236, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2237, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2239, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2239, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2244, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2249, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2249, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2265, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2267, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2268, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2270, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2271, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2272, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2272, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2276, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2279, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2284, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2284, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2300, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2301, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2302, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2307, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2311, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2311, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2311, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2317, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2318, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2321, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2321, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2321, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2345, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2345, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2345, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2345, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2345, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2349, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2349, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2349, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2350, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2359, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2359, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2359, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2359, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2359, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2363, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2363, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2363, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2363, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2364, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2366, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2367, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2384, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2390, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2390, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2390, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2391, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2397, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2401, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2402, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2405, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2406, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2407, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2407, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2407, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2407, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2407, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2415, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2415, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2416, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2417, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2430, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2430, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2431, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2433, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2451, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2451, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 2453, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2465, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2465, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2466, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2467, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2468, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2468, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2469, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2470, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2477, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 2485, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2485, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2485, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2486, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2504, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2504, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2504, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 2504, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2506, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2506, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2508, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2512, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2513, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2514, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 2514, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 2517, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2521, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2522, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2528, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2538, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2538, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2548, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2557, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2557, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2559, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2560, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2562, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2575, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2578, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2578, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2580, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2580, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2581, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2596, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2600, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2601, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2614, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2617, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2617, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2619, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2619, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2620, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2625, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2629, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2630, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2643, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2647, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2648, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2649, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2654, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2658, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2659, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2660, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2663, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2666, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2667, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2668, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2676, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2676, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 2676, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2724, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2727, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2728, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2729, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2730, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 2739, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 2741, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2741, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2751, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2752, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 2753, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 2754, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 2759, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 2761, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2761, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2762, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 2762, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 2767, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 2768, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 305, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 394, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 398, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 431, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 460, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 461, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 466, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 510, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 527, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 527, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 537, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 540, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 557, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 565, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 568, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 593, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 597, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 598, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 601, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 602, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 605, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 606, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 624, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 624, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 627, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 630, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 630, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 648, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 648, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 658, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 661, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 661, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 680, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 680, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 685, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 686, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 708, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 709, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 709, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 729, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 730, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 757, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 757, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 767, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 767, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 829, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 830, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 830, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 835, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 855, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 855, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 923, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 936, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 946, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 976, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 980, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1037, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1037, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1039, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1041, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 1071, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1073, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1097, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1101, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1102, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1102, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1106, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1107, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1114, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1142, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1155, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1172, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1172, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1178, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1181, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1181, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1198, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1198, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1204, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1207, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1207, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1232, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1236, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1237, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1240, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1241, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1241, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1244, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1245, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1263, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1263, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1290, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1319, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1323, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1329, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1424, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1424, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1424, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1425, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1427, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1455, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1459, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1460, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1463, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1464, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1464, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1467, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1468, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1490, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1500, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1570, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1572, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1572, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1574, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1575, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1575, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1576, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1576, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1639, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1641, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 1651, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1662, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1664, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1664, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1665, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1720, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1722, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1744, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1748, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1748, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1749, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1752, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1752, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1769, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1783, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1815, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1815, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1825, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1828, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1828, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1844, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1844, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1852, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1855, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1855, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1871, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1871, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1877, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1881, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1881, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1901, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1903, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1903, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1909, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1910, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1910, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1911, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1911, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1965, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1966, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1968, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1971, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1981, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1992, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1995, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1995, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1996, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2069, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2071, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2095, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2100, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2100, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2101, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2103, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2103, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2104, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2107, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2142, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2158, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2177, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2177, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2187, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2191, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2191, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2209, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2209, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2217, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2221, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2221, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2239, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2239, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2245, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2249, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2249, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2276, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2280, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2284, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2284, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2284, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2308, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2311, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2311, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2317, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2318, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2319, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2319, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2320, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2320, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2321, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2321, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2358, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2362, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2368, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2398, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2402, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2451, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2451, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 2453, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 2455, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2480, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2481, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2485, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2509, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2513, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2514, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2514, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2517, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2518, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2519, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 2548, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2562, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2580, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2580, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2581, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2597, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2601, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2601, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2619, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2619, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2620, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2626, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2630, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2630, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2655, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2659, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2660, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2663, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2664, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2664, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2667, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2668, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2736, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2737, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2737, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2739, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2742, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2762, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 2762, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 305, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 309, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 309, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 309, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 456, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 457, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 460, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 461, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 471, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 496, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 527, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 537, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 538, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 557, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 565, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 566, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 568, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 593, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 602, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 624, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 627, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 628, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 630, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 648, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 658, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 659, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 661, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 685, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 686, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 708, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 708, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 709, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 729, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 729, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 730, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 829, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 830, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 830, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 830, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 834, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 835, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 922, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 936, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 937, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 937, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 945, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 976, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 977, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 980, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 980, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 980, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 980, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1097, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1098, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1101, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1102, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1106, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1117, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1142, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1172, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1178, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1179, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1181, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1198, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1204, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1205, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1207, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1232, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1233, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1241, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1263, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1263, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1265, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1319, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1323, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1328, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1455, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1456, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1464, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1570, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1571, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1575, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1641, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1662, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1663, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1664, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1664, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 1744, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1745, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1748, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1749, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 1752, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 1761, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1769, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1815, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1825, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1826, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1828, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1844, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1852, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1853, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1855, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1871, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1877, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1878, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1881, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 1901, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1902, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1910, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1965, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1966, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 1968, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 1971, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1992, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1993, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1995, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1995, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2095, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2096, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2100, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2101, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2103, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2104, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2107, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2117, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2142, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2177, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2187, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2188, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2191, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2209, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2217, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2218, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2221, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2239, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2245, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2246, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2249, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2276, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 2280, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2281, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2284, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2308, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2309, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2319, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2320, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2358, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 2362, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 2367, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2398, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2399, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2402, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 2402, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2402, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2402, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2402, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2403, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2480, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2481, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2509, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2510, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2513, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2514, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 2518, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 2523, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2548, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2580, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2597, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2598, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2601, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2619, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2626, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2627, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2630, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2655, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2656, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2664, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2736, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2737, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2737, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 2737, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2739, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 2741, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2742, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 306, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 457, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 457, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 471, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 538, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 538, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 566, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 594, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 594, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 594, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 602, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 628, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 628, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 628, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 659, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 659, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 659, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 708, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 729, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 830, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 832, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 834, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 922, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 945, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 977, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 977, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 977, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1098, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1098, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1098, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1106, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1117, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1179, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1179, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1179, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1205, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1205, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1205, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1233, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1233, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1233, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1241, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1265, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1265, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1265, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1323, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1328, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1456, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1456, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1456, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1464, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1571, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1571, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1571, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1575, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1663, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1663, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1663, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1745, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1745, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1745, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1752, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1761, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1826, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1826, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1826, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1853, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1853, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1853, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1878, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1878, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1878, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1902, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1902, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1902, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1910, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1966, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1968, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1971, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1993, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 1993, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 1993, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 1994, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 1994, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2096, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2096, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2096, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2097, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2097, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2107, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2117, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2188, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2188, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2188, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2189, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2189, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2218, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2218, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2218, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2219, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2219, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2246, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2246, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2246, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2247, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2247, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2281, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2281, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2281, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2282, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2282, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2309, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2309, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2309, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2310, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2310, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2319, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2320, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2362, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2367, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2399, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2399, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2399, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2510, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2510, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2510, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2518, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2523, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2598, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2598, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2598, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2627, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2627, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2627, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2656, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2656, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2656, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2664, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2737, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2739, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2741, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 306, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 457, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 457, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 538, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 538, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 566, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 566, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 594, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 594, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 594, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 628, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 628, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 628, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 659, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 659, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 659, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 834, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 922, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 945, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 977, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 977, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 977, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1098, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1098, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1098, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1179, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1179, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1179, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1205, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1205, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1205, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1233, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1233, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1233, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1265, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1265, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1328, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1456, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1456, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1456, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1571, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1571, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1571, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1663, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1663, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1663, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1745, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1745, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1745, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1826, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1826, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1826, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1853, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1853, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1853, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1878, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1878, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1878, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1902, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1902, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1902, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1971, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1993, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1993, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1993, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1994, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1994, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2096, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2096, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2096, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2097, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2097, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2188, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2188, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2188, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2189, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2189, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2218, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2218, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2218, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2219, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2219, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2246, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2246, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2246, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2247, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2247, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2281, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2281, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2281, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2282, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2282, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2309, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2309, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2309, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2310, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2310, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2367, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2399, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2399, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2399, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2510, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2510, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2510, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2598, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2598, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2598, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2627, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2627, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2627, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2656, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2656, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2656, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2741, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}]