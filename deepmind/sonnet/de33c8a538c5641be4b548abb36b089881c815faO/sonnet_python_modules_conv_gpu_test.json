[{"lineNumber": 30, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 31, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "OUT_CHANNELS", "type": "int"}, {"lineNumber": 41, "col_offset": 2, "nodeName": "KERNEL_SHAPE", "type": "int"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "INPUT_SHAPE", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 115, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "mod2", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "helperDataFormats", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "mb", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "h", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "c", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "shape", "type": "Union[Any, Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "temp_input", "type": "Any"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "mb", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "h", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "helperDataFormats", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "helperDataFormats", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 116, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 32, "col_offset": 74, "nodeName": "b", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "mod2", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "x_transpose", "type": "Any"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "mod", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "temp_input", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 89, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 111, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "self", "type": "ConvTestDataFormats"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "self", "type": "ConvTestDataFormats"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 62, "nodeName": "mb", "type": "Any"}, {"lineNumber": 76, "col_offset": 66, "nodeName": "c", "type": "Any"}, {"lineNumber": 76, "col_offset": 69, "nodeName": "h", "type": "Any"}, {"lineNumber": 76, "col_offset": 72, "nodeName": "w", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 77, "col_offset": 60, "nodeName": "shape", "type": "Union[Tuple[Any, Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "mod", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 89, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "OUT_CHANNELS", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "KERNEL_SHAPE", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 111, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "o1", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "o2", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "create_constant_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 62, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "create_constant_initializers", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 62, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "INPUT_SHAPE", "type": "Any"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "np", "type": "module"}]