[{"lineNumber": 32, "col_offset": 0, "nodeName": "_nested_add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "_nested_unary_mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "_nested_zeros_like", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "RNNCore", "type": "Type[sonnet.python.modules.rnn_core.RNNCore]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "rnn_core", "type": "module"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "nested_a", "type": "Any"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "nested_b", "type": "Any"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "nested_a", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "nested_a", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "_core", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "core", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "_output_size", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "_threshold", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "_get_state_for_halting", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "get_state_for_halting", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "all_ones", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "is_iteration_over", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "next_iteration", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "halting_input", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "halting", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "next_cumul_halting_raw", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "over_threshold", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "p", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "next_cumul_out", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "halting_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "iteration_init", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "core_output_size", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "cumul_state_init", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "remainder_init", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "nest", "type": "module"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "nest", "type": "module"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "nest", "type": "module"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "ndims", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "_core", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "_ensure_is_connected", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "_ensure_is_connected", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "reduce_any", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "equal", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "cumul_halting", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "all_ones", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "where", "type": "Any"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "is_iteration_over", "type": "Any"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "iteration", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "_core", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "halting_linear", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "halting_input", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "cumul_halting", "type": "Any"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "halting", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "next_cumul_halting_raw", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "_threshold", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "where", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "over_threshold", "type": "Any"}, {"lineNumber": 140, "col_offset": 50, "nodeName": "all_ones", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "next_cumul_halting_raw", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "where", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "over_threshold", "type": "Any"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "remainder", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "next_cumul_halting", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "cumul_halting", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "_nested_add", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "cumul_state", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "cumul_out", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "x_ones", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "next_cumul_out", "type": "Any"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "next_cumul_state", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "next_cumul_halting", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "next_iteration", "type": "Any"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "next_remainder", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "with_rank", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "concat", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "concat", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "_body", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "_nested_zeros_like", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 190, "col_offset": 63, "nodeName": "while_loop", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "_cond", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "body", "type": "functools.partial[nothing]"}, {"lineNumber": 195, "col_offset": 65, "nodeName": "final_out", "type": "Any"}, {"lineNumber": 197, "col_offset": 61, "nodeName": "final_cumul_state", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "a", "type": "Any"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "p", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "a", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 90, "col_offset": 46, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "_threshold", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "_core", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "cumul_halting", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 65, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 60, "nodeName": "iteration", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "_get_state_for_halting", "type": "Any"}, {"lineNumber": 136, "col_offset": 63, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "next_cumul_halting_raw", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "_nested_unary_mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 53, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "p", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "x", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "basic", "type": "module"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "halting_linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 180, "col_offset": 58, "nodeName": "x_ones", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 183, "col_offset": 65, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 65, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 190, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "x_zeros", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "out_init", "type": "Any"}, {"lineNumber": 191, "col_offset": 47, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 191, "col_offset": 59, "nodeName": "cumul_state_init", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "cumul_halting_init", "type": "Any"}, {"lineNumber": 192, "col_offset": 48, "nodeName": "iteration_init", "type": "Any"}, {"lineNumber": 192, "col_offset": 64, "nodeName": "remainder_init", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "act_output", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "ACTCore", "type": "Type[ACTCore]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "_core", "type": "Any"}, {"lineNumber": 90, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "_core", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "_threshold", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "_output_size", "type": "Any"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 131, "col_offset": 65, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 182, "col_offset": 40, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 183, "col_offset": 65, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "_core", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 188, "col_offset": 65, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "basic", "type": "module"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "_output_size", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "final_iteration", "type": "Any"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "final_remainder", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 47, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "_dtype", "type": "Any"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "core_output_size", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 172, "col_offset": 47, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "_batch_size", "type": "Any"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "self", "type": "ACTCore"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "self", "type": "ACTCore"}]