[{"lineNumber": 26, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 180, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "module1", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "module2", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "a1", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "inputs_plus_b1", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "inputs_plus_b2", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "a2", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "inputs_plus_ab1_again", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "inputs_plus_ab2_again", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "m1", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "m2", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "a1", "type": "Any"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "a2", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 181, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "InheritedVariableContainer", "type": "Type[Any]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "InheritedVariableContainer", "type": "Type[Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "module1", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "module2", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "module1", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "module2", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 170, "col_offset": 9, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "m1", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "m2", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 181, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "vs", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "vs", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "module1", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "module1", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "module2", "type": "Any"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "module2", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 137, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "m1", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "a1", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "a2", "type": "Any"}, {"lineNumber": 181, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "name", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 113, "col_offset": 59, "nodeName": "in_size", "type": "int"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "a1", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "inputs_plus_b1", "type": "Any"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 132, "col_offset": 59, "nodeName": "a2", "type": "Any"}, {"lineNumber": 132, "col_offset": 63, "nodeName": "inputs_plus_b2", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 137, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "out", "type": "Any"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 141, "col_offset": 43, "nodeName": "out", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 143, "col_offset": 39, "nodeName": "inputs_plus_ab1_again", "type": "Any"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "inputs_plus_ab2_again", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "name", "type": "str"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "_template", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 144, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 136, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 137, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 138, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "self", "type": "Any"}]