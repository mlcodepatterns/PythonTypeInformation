[{"lineNumber": 35, "col_offset": 0, "nodeName": "_yield_flat_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "assert_shallow_structure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "flatten_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "map_up_to", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 0, "nodeName": "map", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "nest", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "nest", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "nest", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "nest", "type": "Any"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 228, "col_offset": 2, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 6, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 277, "col_offset": 2, "nodeName": "all_flattened", "type": "List[Any]"}, {"lineNumber": 278, "col_offset": 2, "nodeName": "applied_results", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 5, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 63, "col_offset": 5, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 154, "col_offset": 2, "nodeName": "assert_shallow_structure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 270, "col_offset": 9, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 279, "col_offset": 9, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "input_leaf", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "_yield_flat_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 220, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assert_shallow_structure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 227, "col_offset": 43, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "fn_or_op", "type": "Any"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "nest", "type": "Any"}, {"lineNumber": 229, "col_offset": 41, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 229, "col_offset": 69, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 273, "col_offset": 37, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 277, "col_offset": 57, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "fn_or_op", "type": "Any"}, {"lineNumber": 278, "col_offset": 44, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 279, "col_offset": 9, "nodeName": "nest", "type": "Any"}, {"lineNumber": 280, "col_offset": 45, "nodeName": "applied_results", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "_yield_flat_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 39, "col_offset": 58, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "assert_shallow_structure", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 228, "col_offset": 47, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 278, "col_offset": 31, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 278, "col_offset": 55, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 279, "col_offset": 41, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "input_leaf", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 228, "col_offset": 52, "nodeName": "all_flattened_up_to", "type": "List[List[Any]]"}, {"lineNumber": 278, "col_offset": 60, "nodeName": "all_flattened", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "shallow_tree", "type": "Any"}]