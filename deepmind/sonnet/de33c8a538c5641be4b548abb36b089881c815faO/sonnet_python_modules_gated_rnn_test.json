[{"lineNumber": 32, "col_offset": 0, "nodeName": "_get_lstm_variable_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 38, "col_offset": 2, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 39, "col_offset": 2, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "test", "type": "Any"}, {"lineNumber": 670, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "keys", "type": "Any"}, {"lineNumber": 40, "col_offset": 5, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 115, "col_offset": 52, "nodeName": "output", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "output", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "lstm_variable_names", "type": "Set[str]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "lstm_variables", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "var_names", "type": "Set[str]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "var_name", "type": "str"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "var_names", "type": "Set[str]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "train_static_output", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "test_static_output", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 454, "col_offset": 7, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 456, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 458, "col_offset": 7, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 460, "col_offset": 7, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "lstm1", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 508, "col_offset": 4, "nodeName": "lstm2", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "unnamed_init_state", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "named_init_state", "type": "Any"}, {"lineNumber": 527, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "part", "type": "str"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 592, "col_offset": 51, "nodeName": "output", "type": "Any"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "r", "type": "Any"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "h_twiddle", "type": "Any"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "state_real", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 607, "col_offset": 11, "nodeName": "POSSIBLE_KEYS", "type": "Set[str]"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "gru_variables", "type": "List[Any]"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 633, "col_offset": 11, "nodeName": "POSSIBLE_KEYS", "type": "Set[str]"}, {"lineNumber": 637, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 645, "col_offset": 15, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "POSSIBLE_KEYS", "type": "Set[str]"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 671, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 40, "col_offset": 5, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "new_hidden", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "new_cell", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 102, "col_offset": 51, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "new_state_ex", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "gate_weights_ex", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "gate_biases_ex", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "gate_biases_ex", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 119, "col_offset": 7, "nodeName": "j", "type": "Any"}, {"lineNumber": 119, "col_offset": 10, "nodeName": "f", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "o", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "real_cell", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "new_hidden", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "new_cell", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 158, "col_offset": 49, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "new_state_ex", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "w_ex", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "b_ex", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "wfd_ex", "type": "Any"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "wid_ex", "type": "Any"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "wod_ex", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "b_ex", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "j", "type": "Any"}, {"lineNumber": 177, "col_offset": 10, "nodeName": "f", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "o", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "real_cell", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Set[str]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 199, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "_get_lstm_variable_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 51, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 224, "col_offset": 6, "nodeName": "lstm_variables_v", "type": "Any"}, {"lineNumber": 225, "col_offset": 10, "nodeName": "lstm_variable_v", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "lstm_variables_v", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "W_F_DIAG", "type": "str"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "W_I_DIAG", "type": "str"}, {"lineNumber": 234, "col_offset": 54, "nodeName": "W_O_DIAG", "type": "str"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "GAMMA_H", "type": "str"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "GAMMA_X", "type": "str"}, {"lineNumber": 244, "col_offset": 52, "nodeName": "GAMMA_C", "type": "str"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "BETA_C", "type": "str"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Set[str]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 265, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 282, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "_get_lstm_variable_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Set[str]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 301, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 301, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 317, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 317, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 318, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "unstack", "type": "Any"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 364, "col_offset": 38, "nodeName": "static_rnn", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "static_rnn", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 377, "col_offset": 30, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "stack", "type": "Any"}, {"lineNumber": 391, "col_offset": 35, "nodeName": "train_static_output_unpacked", "type": "Any"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "stack", "type": "Any"}, {"lineNumber": 392, "col_offset": 34, "nodeName": "test_static_output_unpacked", "type": "Any"}, {"lineNumber": 394, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 411, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 440, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 441, "col_offset": 22, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 442, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 445, "col_offset": 21, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 445, "col_offset": 36, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 446, "col_offset": 21, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 446, "col_offset": 39, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 447, "col_offset": 39, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 448, "col_offset": 21, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 448, "col_offset": 39, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 450, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 450, "col_offset": 27, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 451, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 453, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 455, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 457, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 459, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 461, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 463, "col_offset": 48, "nodeName": "expected", "type": "int"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 466, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 487, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 489, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 490, "col_offset": 20, "nodeName": "float32", "type": "Any"}, {"lineNumber": 490, "col_offset": 32, "nodeName": "trainable_initial_state", "type": "Any"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 491, "col_offset": 34, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 492, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 498, "col_offset": 61, "nodeName": "loss", "type": "Any"}, {"lineNumber": 499, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 509, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 512, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 513, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 517, "col_offset": 25, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 518, "col_offset": 23, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 519, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 521, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 523, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 524, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 532, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 533, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 534, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 534, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 535, "col_offset": 25, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 535, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 535, "col_offset": 37, "nodeName": "state", "type": "Any"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 537, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 537, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 538, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 538, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 545, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 546, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 547, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 547, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 548, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 548, "col_offset": 37, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 551, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 553, "col_offset": 20, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 573, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 573, "col_offset": 28, "nodeName": "float64", "type": "Any"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 574, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 575, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 576, "col_offset": 7, "nodeName": "state", "type": "Any"}, {"lineNumber": 576, "col_offset": 15, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 576, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 576, "col_offset": 27, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 582, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 582, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 582, "col_offset": 45, "nodeName": "input_size", "type": "int"}, {"lineNumber": 583, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 583, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 583, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 585, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 590, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 592, "col_offset": 14, "nodeName": "wz", "type": "Any"}, {"lineNumber": 592, "col_offset": 18, "nodeName": "uz", "type": "Any"}, {"lineNumber": 592, "col_offset": 22, "nodeName": "bz", "type": "Any"}, {"lineNumber": 592, "col_offset": 26, "nodeName": "wr", "type": "Any"}, {"lineNumber": 592, "col_offset": 30, "nodeName": "ur", "type": "Any"}, {"lineNumber": 592, "col_offset": 34, "nodeName": "br", "type": "Any"}, {"lineNumber": 592, "col_offset": 38, "nodeName": "wh", "type": "Any"}, {"lineNumber": 592, "col_offset": 42, "nodeName": "uh", "type": "Any"}, {"lineNumber": 592, "col_offset": 46, "nodeName": "bh", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 595, "col_offset": 18, "nodeName": "r", "type": "Any"}, {"lineNumber": 595, "col_offset": 22, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 600, "col_offset": 24, "nodeName": "state_real", "type": "Any"}, {"lineNumber": 600, "col_offset": 36, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 607, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 611, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 611, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 614, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 614, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 615, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 617, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 621, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 623, "col_offset": 6, "nodeName": "gru_variables_v", "type": "Any"}, {"lineNumber": 633, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 637, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 637, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 640, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 640, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 641, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 658, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 658, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 661, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 662, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 663, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 671, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 56, "col_offset": 52, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "gate_weights_ex", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "new_state_ex", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "new_state_ex", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 161, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 174, "col_offset": 45, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "w_ex", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "new_state_ex", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 186, "col_offset": 35, "nodeName": "new_state_ex", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 201, "col_offset": 46, "nodeName": "key", "type": "str"}, {"lineNumber": 201, "col_offset": 53, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 221, "col_offset": 52, "nodeName": "name", "type": "str"}, {"lineNumber": 221, "col_offset": 60, "nodeName": "lstm_variable_names", "type": "Set[str]"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "run", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "lstm_variables", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 234, "col_offset": 54, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 244, "col_offset": 52, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 267, "col_offset": 55, "nodeName": "key", "type": "str"}, {"lineNumber": 267, "col_offset": 62, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 273, "col_offset": 37, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 275, "col_offset": 37, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 287, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 303, "col_offset": 38, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 309, "col_offset": 37, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 310, "col_offset": 37, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 312, "col_offset": 33, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 317, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 317, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 321, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 323, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 325, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 356, "col_offset": 32, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 357, "col_offset": 37, "nodeName": "max_unique_stats", "type": "Any"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 359, "col_offset": 37, "nodeName": "use_batch_norm", "type": "Any"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "use_batch_norm", "type": "Any"}, {"lineNumber": 361, "col_offset": 37, "nodeName": "use_batch_norm", "type": "Any"}, {"lineNumber": 364, "col_offset": 38, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 389, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 394, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "training", "type": "bool"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 415, "col_offset": 6, "nodeName": "check_static_and_dynamic", "type": "Callable[[Any], Any]"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 433, "col_offset": 34, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 434, "col_offset": 37, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 436, "col_offset": 37, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 440, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "nn", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 445, "col_offset": 36, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 446, "col_offset": 39, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 447, "col_offset": 39, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 448, "col_offset": 39, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 484, "col_offset": 32, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 486, "col_offset": 37, "nodeName": "max_unique_stats", "type": "Any"}, {"lineNumber": 487, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "rand", "type": "Any"}, {"lineNumber": 487, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 487, "col_offset": 52, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 488, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 489, "col_offset": 20, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 490, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 493, "col_offset": 48, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 494, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 496, "col_offset": 26, "nodeName": "square", "type": "Any"}, {"lineNumber": 499, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 500, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 501, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 502, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 507, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 509, "col_offset": 4, "nodeName": "lstm1", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "lstm1", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "lstm2", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 517, "col_offset": 25, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 518, "col_offset": 23, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 532, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 533, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 534, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 536, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 536, "col_offset": 36, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 545, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 546, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 547, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 547, "col_offset": 36, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 548, "col_offset": 21, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 549, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 549, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 550, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 553, "col_offset": 20, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 556, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 556, "col_offset": 30, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 559, "col_offset": 28, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 560, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 561, "col_offset": 28, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 562, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 563, "col_offset": 28, "nodeName": "initial_value", "type": "Any"}, {"lineNumber": 573, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 573, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 574, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 579, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 579, "col_offset": 30, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 582, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 583, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 585, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 587, "col_offset": 17, "nodeName": "state", "type": "Any"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 590, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 593, "col_offset": 66, "nodeName": "bz", "type": "Any"}, {"lineNumber": 594, "col_offset": 66, "nodeName": "br", "type": "Any"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 74, "nodeName": "bh", "type": "Any"}, {"lineNumber": 598, "col_offset": 27, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 598, "col_offset": 40, "nodeName": "z", "type": "Any"}, {"lineNumber": 598, "col_offset": 44, "nodeName": "h_twiddle", "type": "Any"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 607, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 609, "col_offset": 13, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 609, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 611, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 611, "col_offset": 44, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 614, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 614, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 615, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 617, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 620, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 620, "col_offset": 29, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 620, "col_offset": 49, "nodeName": "key", "type": "str"}, {"lineNumber": 620, "col_offset": 56, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 621, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 622, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 622, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 623, "col_offset": 24, "nodeName": "run", "type": "Any"}, {"lineNumber": 623, "col_offset": 33, "nodeName": "gru_variables", "type": "List[Any]"}, {"lineNumber": 624, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 624, "col_offset": 13, "nodeName": "gru_variable_v", "type": "Any"}, {"lineNumber": 624, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 624, "col_offset": 41, "nodeName": "gru_variables_v", "type": "Any"}, {"lineNumber": 633, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 635, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 635, "col_offset": 55, "nodeName": "key", "type": "str"}, {"lineNumber": 635, "col_offset": 62, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 637, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 637, "col_offset": 44, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 640, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 640, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 641, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 647, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 656, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 656, "col_offset": 38, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 658, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 658, "col_offset": 44, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 661, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 662, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 666, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 667, "col_offset": 25, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 671, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 52, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 53, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 54, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 54, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 90, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 92, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "new_hidden", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "new_cell", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "j", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "real_cell", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "exp", "type": "Any"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 132, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 133, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 134, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "new_hidden", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "new_cell", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 68, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 181, "col_offset": 76, "nodeName": "j", "type": "Any"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "exp", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 213, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 214, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 214, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 215, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 215, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "name", "type": "str"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "sess", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "lstm_variable_v", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 234, "col_offset": 54, "nodeName": "snt", "type": "module"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 235, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 244, "col_offset": 52, "nodeName": "snt", "type": "module"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 279, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 279, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 280, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 280, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 281, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 281, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 287, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 315, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 316, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 316, "col_offset": 62, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 317, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 317, "col_offset": 64, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 321, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 323, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 325, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 325, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 325, "col_offset": 43, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 350, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 350, "col_offset": 47, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 350, "col_offset": 56, "nodeName": "input_size", "type": "int"}, {"lineNumber": 364, "col_offset": 38, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 366, "col_offset": 54, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 368, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 368, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 372, "col_offset": 54, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 374, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 377, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 379, "col_offset": 54, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 381, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 386, "col_offset": 54, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 388, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 389, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 394, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 399, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 399, "col_offset": 48, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 399, "col_offset": 57, "nodeName": "input_size", "type": "int"}, {"lineNumber": 402, "col_offset": 10, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 404, "col_offset": 10, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 406, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 406, "col_offset": 46, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 408, "col_offset": 28, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 408, "col_offset": 40, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "check_static_and_dynamic", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 443, "col_offset": 36, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 443, "col_offset": 55, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 443, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 463, "col_offset": 25, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 488, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 494, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 496, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 500, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 501, "col_offset": 6, "nodeName": "init", "type": "Any"}, {"lineNumber": 502, "col_offset": 6, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 519, "col_offset": 21, "nodeName": "unnamed_init_state", "type": "Any"}, {"lineNumber": 521, "col_offset": 21, "nodeName": "unnamed_init_state", "type": "Any"}, {"lineNumber": 523, "col_offset": 21, "nodeName": "named_init_state", "type": "Any"}, {"lineNumber": 524, "col_offset": 21, "nodeName": "named_init_state", "type": "Any"}, {"lineNumber": 532, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 532, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 533, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 533, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 545, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 545, "col_offset": 59, "nodeName": "input_size", "type": "int"}, {"lineNumber": 546, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 546, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 549, "col_offset": 9, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 549, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 550, "col_offset": 6, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 558, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 558, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 558, "col_offset": 39, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 560, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 562, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 562, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 573, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 573, "col_offset": 59, "nodeName": "input_size", "type": "int"}, {"lineNumber": 574, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 574, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 582, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 583, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 9, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 587, "col_offset": 24, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 587, "col_offset": 41, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 587, "col_offset": 58, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 588, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 588, "col_offset": 34, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 588, "col_offset": 51, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 589, "col_offset": 17, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 589, "col_offset": 34, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 589, "col_offset": 51, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 590, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 590, "col_offset": 57, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 590, "col_offset": 45, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 590, "col_offset": 67, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 598, "col_offset": 22, "nodeName": "z", "type": "Any"}, {"lineNumber": 609, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 609, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 609, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 609, "col_offset": 54, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 609, "col_offset": 64, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 614, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 614, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 615, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 615, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 620, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 621, "col_offset": 9, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 622, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 623, "col_offset": 24, "nodeName": "sess", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 625, "col_offset": 28, "nodeName": "gru_variable_v", "type": "Any"}, {"lineNumber": 635, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 640, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 640, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 641, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 641, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 647, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 661, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 661, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 662, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 662, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 666, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 666, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 84, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "exp", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 56, "nodeName": "o", "type": "Any"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 146, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "W_F_DIAG", "type": "str"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "W_I_DIAG", "type": "str"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "W_O_DIAG", "type": "str"}, {"lineNumber": 161, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "W_F_DIAG", "type": "str"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "W_I_DIAG", "type": "str"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "W_O_DIAG", "type": "str"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "exp", "type": "Any"}, {"lineNumber": 181, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 36, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 321, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 323, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 323, "col_offset": 43, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 364, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 368, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 374, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 381, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 388, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 399, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 402, "col_offset": 17, "nodeName": "train_static_output", "type": "Any"}, {"lineNumber": 402, "col_offset": 38, "nodeName": "train_dynamic_output", "type": "Any"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "test_static_output", "type": "Any"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "test_dynamic_output", "type": "Any"}, {"lineNumber": 406, "col_offset": 34, "nodeName": "session", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 443, "col_offset": 36, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 443, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 463, "col_offset": 25, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 487, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 497, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 497, "col_offset": 44, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 497, "col_offset": 56, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 558, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 559, "col_offset": 28, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 560, "col_offset": 40, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 560, "col_offset": 53, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 561, "col_offset": 28, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 562, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 562, "col_offset": 40, "nodeName": "input_size", "type": "int"}, {"lineNumber": 562, "col_offset": 52, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 563, "col_offset": 28, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "exp", "type": "Any"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 593, "col_offset": 35, "nodeName": "wz", "type": "Any"}, {"lineNumber": 593, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 593, "col_offset": 48, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 593, "col_offset": 60, "nodeName": "uz", "type": "Any"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 594, "col_offset": 23, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 594, "col_offset": 35, "nodeName": "wr", "type": "Any"}, {"lineNumber": 594, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 594, "col_offset": 48, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 594, "col_offset": 60, "nodeName": "ur", "type": "Any"}, {"lineNumber": 596, "col_offset": 24, "nodeName": "dot", "type": "Any"}, {"lineNumber": 596, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 596, "col_offset": 43, "nodeName": "wh", "type": "Any"}, {"lineNumber": 596, "col_offset": 49, "nodeName": "dot", "type": "Any"}, {"lineNumber": 596, "col_offset": 56, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 596, "col_offset": 69, "nodeName": "uh", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 626, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 646, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 646, "col_offset": 36, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 666, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 666, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "exp", "type": "Any"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 161, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "exp", "type": "Any"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "ones", "type": "Any"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 287, "col_offset": 48, "nodeName": "var_name", "type": "str"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 399, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 57, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 407, "col_offset": 65, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 498, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 593, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 594, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 626, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 626, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 646, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 666, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "f", "type": "Any"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "_forget_bias", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "i", "type": "Any"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "snt", "type": "module"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "lstm_variable_v", "type": "Any"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 248, "col_offset": 36, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 497, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 559, "col_offset": 44, "nodeName": "part", "type": "str"}, {"lineNumber": 561, "col_offset": 44, "nodeName": "part", "type": "str"}, {"lineNumber": 563, "col_offset": 44, "nodeName": "part", "type": "str"}, {"lineNumber": 626, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 626, "col_offset": 40, "nodeName": "gru_variable_v", "type": "Any"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "_forget_bias", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "wfd_ex", "type": "Any"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 248, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "wid_ex", "type": "Any"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "prev_cell_data", "type": "Any"}]