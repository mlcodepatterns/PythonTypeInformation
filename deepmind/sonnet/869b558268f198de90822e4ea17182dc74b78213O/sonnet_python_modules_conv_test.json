[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 350, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 908, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 909, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1049, "col_offset": 17, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1049, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1403, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1404, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1690, "col_offset": 23, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1690, "col_offset": 60, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1812, "col_offset": 24, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1812, "col_offset": 61, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1869, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1870, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2182, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 2183, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2581, "col_offset": 17, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 2581, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2919, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 2920, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "test", "type": "Any"}, {"lineNumber": 190, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 191, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 350, "col_offset": 54, "nodeName": "test", "type": "Any"}, {"lineNumber": 908, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 909, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 1049, "col_offset": 17, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1049, "col_offset": 54, "nodeName": "test", "type": "Any"}, {"lineNumber": 1403, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1404, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 1407, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1408, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1409, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1410, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1411, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1412, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1413, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1414, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1415, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1423, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1424, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1425, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1426, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1427, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1690, "col_offset": 23, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1690, "col_offset": 60, "nodeName": "test", "type": "Any"}, {"lineNumber": 1812, "col_offset": 24, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1812, "col_offset": 61, "nodeName": "test", "type": "Any"}, {"lineNumber": 1869, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1870, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 2182, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 2183, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 2581, "col_offset": 17, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 2581, "col_offset": 54, "nodeName": "test", "type": "Any"}, {"lineNumber": 2919, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 2920, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 3049, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 254, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 296, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 308, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 350, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 388, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 401, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 616, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 691, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 771, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 909, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 923, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 924, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 924, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 968, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 974, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 984, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 994, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 995, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1018, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1020, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1024, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1025, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1049, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1058, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1060, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1062, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1086, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1099, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1109, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1120, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1121, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1122, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1122, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1123, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1162, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1198, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1211, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1230, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1241, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1242, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1268, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1281, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1282, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1310, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1312, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1329, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1330, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1354, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1355, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1379, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1380, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1381, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1383, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1384, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1404, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1413, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1413, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1413, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1413, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1413, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1417, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1417, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1417, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1417, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1423, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1424, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1424, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1425, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1425, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1426, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1427, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1427, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1450, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1451, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1479, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1489, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1517, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1547, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1583, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1606, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1607, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1608, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1610, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1611, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1644, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1653, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1667, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1674, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1675, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1690, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1705, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1706, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1707, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1732, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1733, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1758, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1759, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1760, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1784, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1785, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1786, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1788, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1789, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1791, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 1792, "col_offset": 4, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 1812, "col_offset": 61, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1820, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1821, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1822, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1826, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1840, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1841, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1842, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1843, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1844, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1845, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1859, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1860, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1862, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1870, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1877, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1877, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1878, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1878, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1879, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1879, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1880, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1880, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1881, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1881, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1882, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1882, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1883, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1883, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1884, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1884, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1886, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 1887, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1888, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 1898, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1898, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1899, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1899, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1900, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1900, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1901, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1901, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1902, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1902, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1903, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1903, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1905, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1914, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1918, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1936, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1952, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1971, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1993, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2004, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2005, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2027, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2052, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2054, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2060, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2061, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2086, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2114, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2140, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2141, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2161, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2162, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2163, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2165, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2166, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2183, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2190, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2190, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2191, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2191, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2192, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2192, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2193, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2193, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2194, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2196, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2196, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2197, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2197, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2198, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2198, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2199, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2201, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2201, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2202, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2206, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2214, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2214, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2215, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2215, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2216, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2216, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2217, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2217, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2218, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2218, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2219, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2219, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2220, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2220, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2222, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2231, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2238, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2256, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2281, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2308, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2332, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2344, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2345, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2346, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2372, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2385, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2386, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2416, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2419, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2438, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2469, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2498, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2499, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2516, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2517, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2518, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2528, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2529, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2530, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2557, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2558, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2559, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2561, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2562, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2581, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2589, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2590, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2591, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2592, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2593, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2594, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2595, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2596, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2597, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2611, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2621, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2632, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2633, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2633, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2633, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2634, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2634, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2635, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2635, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2635, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2650, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2704, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2717, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2737, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2748, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2749, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 2780, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2781, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2810, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2812, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2830, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2868, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2869, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2895, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2896, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2897, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2899, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2900, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2920, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2927, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2928, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2929, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2930, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2931, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2932, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2933, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2934, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2935, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2936, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2937, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2938, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2939, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 2939, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2944, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 2953, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 2976, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2986, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2992, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3001, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3002, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3012, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3013, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3036, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3037, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3038, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3042, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3043, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3044, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3050, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 240, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 247, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 259, "col_offset": 40, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 262, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 265, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 288, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 312, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 331, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 339, "col_offset": 45, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 342, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 343, "col_offset": 6, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 344, "col_offset": 6, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 345, "col_offset": 6, "nodeName": "out3", "type": "Any"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 361, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 366, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 436, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 450, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 539, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 539, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 540, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 541, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 571, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 585, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 585, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 596, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 596, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 614, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 615, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 633, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 634, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 639, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 640, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 662, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 663, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 667, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 690, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 691, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 691, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 693, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 693, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 694, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 694, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 705, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 717, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 727, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 750, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 756, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 757, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 766, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 771, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 773, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 773, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 774, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 774, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 775, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 775, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 776, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 776, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 778, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 779, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 782, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 785, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 789, "col_offset": 42, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 790, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 791, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 805, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 812, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 812, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 818, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 819, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 819, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 820, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 820, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 830, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 833, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 834, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 841, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 841, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 842, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 852, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 854, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 862, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 862, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 871, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 872, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 881, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 882, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 890, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 892, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 902, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 904, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 920, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 923, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 924, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 924, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 926, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 926, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 926, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 927, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 929, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 929, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 931, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 931, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 933, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 933, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 934, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 934, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 958, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 958, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 960, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 968, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 968, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 970, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 983, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 984, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 986, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 994, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 994, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 995, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 995, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 997, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 999, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1010, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1018, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1019, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1019, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1024, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1025, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1025, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1026, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1026, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1034, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1034, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1036, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1046, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1046, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1046, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1057, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1058, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1059, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1060, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1062, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1064, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1068, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1076, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1076, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1091, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1099, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1099, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1101, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1105, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1125, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1126, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1130, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1138, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1138, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1157, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1159, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1191, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1194, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1221, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1230, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1230, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1231, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1232, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1241, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1242, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1244, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1253, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1263, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1282, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1282, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1284, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1293, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1293, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1299, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1300, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1302, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1308, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1310, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1310, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1311, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1311, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1320, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1329, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1330, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1331, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1332, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1345, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1354, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1355, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1356, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1357, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1371, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1379, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1380, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1380, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1381, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1381, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1383, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1383, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1384, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1384, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1395, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1413, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1413, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1413, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1413, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1413, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1418, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1418, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1420, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1420, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1423, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1423, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1423, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1423, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1426, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1426, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1426, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1426, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1441, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1450, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1450, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1451, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1451, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 1452, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1455, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1467, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1468, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1471, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1479, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1479, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1485, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1500, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1538, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1574, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1583, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1583, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1586, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1597, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1606, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1606, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1606, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1606, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1607, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1607, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1608, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1608, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1610, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1610, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1611, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1611, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1622, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1636, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1644, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1647, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1647, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1647, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1648, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1648, "col_offset": 56, "nodeName": "stride", "type": "Tuple[Any, ...]"}, {"lineNumber": 1649, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1649, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1649, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1655, "col_offset": 6, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1658, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1660, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1660, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1661, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1661, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1661, "col_offset": 34, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1675, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1675, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1677, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1685, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1687, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1687, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1687, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1697, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1705, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1706, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1708, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1710, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1712, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1714, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1716, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1716, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1716, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1723, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1731, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1732, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1734, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1736, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1738, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1740, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1742, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1742, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1742, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1749, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1758, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1759, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1761, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1763, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1765, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1767, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1769, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1769, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1769, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1777, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1784, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1785, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1785, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1786, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1786, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1788, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1788, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1789, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1789, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1791, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1792, "col_offset": 23, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1792, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 1794, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1797, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1799, "col_offset": 6, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 1800, "col_offset": 6, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 1805, "col_offset": 6, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 1806, "col_offset": 6, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 1808, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1808, "col_offset": 24, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 1808, "col_offset": 43, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 1809, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1809, "col_offset": 24, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 1809, "col_offset": 51, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 1820, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1821, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1821, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1822, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1828, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1828, "col_offset": 10, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1831, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1831, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1832, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1832, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1832, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1840, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1841, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1842, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1842, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1843, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1843, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1844, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1844, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1845, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1845, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1852, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1860, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1860, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1862, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1864, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1866, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1866, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1866, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1875, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1877, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1877, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1878, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1878, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1879, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1879, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1880, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1880, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1881, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1881, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1882, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1882, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1883, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1883, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1884, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1884, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1884, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1886, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1886, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1886, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1886, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1886, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1887, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1887, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1887, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1888, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1888, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1888, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1888, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1888, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1889, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1889, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1889, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1890, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1898, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1899, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 1900, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1901, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1902, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1903, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1905, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1905, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1907, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1914, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1914, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1916, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1916, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1917, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1917, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1927, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1928, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1930, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1936, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1936, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1941, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1950, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1951, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1964, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1966, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1968, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1985, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1993, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1993, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1994, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1995, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2004, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2005, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2007, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2014, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2024, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2040, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2041, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2043, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2050, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2052, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2052, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2053, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2053, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2061, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2061, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2063, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2069, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2071, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2071, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2071, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2078, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2086, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2087, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2092, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2093, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2106, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2114, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2115, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2118, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2119, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2132, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2140, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2141, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2142, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2143, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2157, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2161, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2162, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2162, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2163, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2163, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2165, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2165, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2166, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2166, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2177, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2188, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2190, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2190, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2191, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2191, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2192, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2192, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2193, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2193, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2194, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2194, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2194, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2194, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2194, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2196, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2196, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2197, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2197, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2198, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2198, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2199, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2199, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2199, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2201, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2201, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2201, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2202, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2202, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2202, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2202, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2202, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2204, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2204, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2204, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2204, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2206, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2206, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2206, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2214, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2215, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2216, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2217, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2218, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2219, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2220, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2222, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2222, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2224, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2231, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2231, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2233, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2234, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2236, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2247, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2248, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2250, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2256, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2256, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2262, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2272, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2278, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2295, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2298, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2301, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2323, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2332, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2332, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2333, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2334, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2344, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2345, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2346, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2347, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2369, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2386, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2386, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2388, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2395, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2397, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2397, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2397, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2403, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2404, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2406, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2414, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2416, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2416, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2417, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2417, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2418, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2418, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2428, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2438, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2439, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2444, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2445, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2460, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2469, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2470, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2473, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2474, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2489, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2498, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2499, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2500, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2501, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2518, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2518, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2519, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2528, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2529, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2531, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2532, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2534, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2553, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2557, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2558, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2558, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2559, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2559, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2561, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2561, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2562, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2562, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2574, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2575, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2589, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2590, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2591, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2592, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2593, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2594, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2595, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2596, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2597, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2599, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2600, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2603, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2611, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2611, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2613, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2617, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2637, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2638, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2642, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2650, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2650, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2667, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2668, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2677, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2679, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2681, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2697, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2700, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2727, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2737, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2737, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2738, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2748, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2749, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2750, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2758, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2768, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2781, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2781, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2783, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2790, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2792, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2792, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2792, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2798, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2799, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2801, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2808, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2810, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2810, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2811, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2811, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2821, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2830, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2843, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2844, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2859, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2868, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2869, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2871, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2872, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2887, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2895, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2896, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2896, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2897, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2897, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2899, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2899, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2900, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2900, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2911, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2925, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2927, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2928, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2929, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2930, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2931, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2932, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2933, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2934, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2935, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2936, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2937, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2938, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2939, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2939, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 2941, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2941, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2941, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2941, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2942, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2942, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2944, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2944, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2944, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2944, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2946, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2946, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2946, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2947, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2949, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2949, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2949, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2950, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2950, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2951, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2953, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2953, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2953, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2953, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2976, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2976, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2978, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2986, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2986, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2988, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2991, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3001, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3002, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3004, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3012, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3012, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3013, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3013, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3015, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3017, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3028, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3036, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3037, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3037, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3042, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3043, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3043, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3044, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3044, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3045, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3050, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 163, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 238, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 240, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 240, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 244, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 264, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 267, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 279, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 281, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 283, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 283, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 286, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 302, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 302, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 309, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 315, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 316, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "stop_gradient", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 335, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 336, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 35, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 344, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 344, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 345, "col_offset": 33, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "out3", "type": "Any"}, {"lineNumber": 347, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 347, "col_offset": 47, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 361, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 362, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 366, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 376, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 389, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 411, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 426, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 427, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 436, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 448, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 459, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 461, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 464, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 464, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 464, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 465, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 485, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 485, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 486, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 499, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 502, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 518, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 518, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 518, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 519, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 521, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 521, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 533, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 535, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 539, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 539, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 540, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 558, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 561, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 561, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 563, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 567, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 577, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 577, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 577, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 578, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 584, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 592, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 594, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 609, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 610, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 612, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 612, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 614, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 614, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 617, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 617, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 628, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 630, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 634, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 646, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 659, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 662, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 663, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 669, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 673, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 673, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 681, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 686, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 690, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 691, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 691, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 696, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 705, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 706, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 708, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 717, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 724, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 729, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 733, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 745, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 747, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 750, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 751, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 759, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 763, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 763, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 766, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 771, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 773, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 773, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 778, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 779, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 782, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 785, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 789, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 790, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 790, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 791, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 792, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 792, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 793, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 793, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 793, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 793, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 794, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 794, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 794, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 805, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 809, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 812, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 812, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 815, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 815, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 817, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 817, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 818, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 821, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 822, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 830, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 832, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 833, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 834, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 837, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 838, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 842, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 843, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 844, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 845, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 845, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 852, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 852, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 854, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 858, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 859, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 864, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 865, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 866, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 866, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 871, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 872, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 872, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 873, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 875, "col_offset": 8, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 875, "col_offset": 12, "nodeName": "exception", "type": "Any"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 876, "col_offset": 39, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 881, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 882, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 882, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 883, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 885, "col_offset": 8, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 885, "col_offset": 12, "nodeName": "exception", "type": "Any"}, {"lineNumber": 885, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 890, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 892, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 892, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 893, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 894, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 902, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 902, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 903, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 904, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 904, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 926, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 926, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 927, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 929, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 929, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 931, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 931, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 933, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 934, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 934, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 938, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 938, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 958, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 958, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 958, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 960, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 961, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 962, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 963, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 964, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 966, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 970, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 970, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 973, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 973, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 975, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 983, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 983, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 984, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 984, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 986, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 990, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 992, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 997, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 997, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 999, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1000, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1001, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1001, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1010, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1011, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1012, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1013, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1014, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1016, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1018, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1019, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1019, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1019, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1021, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1021, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1023, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1023, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1024, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1027, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1028, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1033, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1036, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1042, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1044, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1044, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1046, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1057, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1058, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1059, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1060, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1062, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1064, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1065, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1068, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1069, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1070, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1071, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1074, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1079, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1087, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1091, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1092, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1093, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1094, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1097, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1101, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1102, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1105, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1110, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1125, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1126, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1130, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1132, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1133, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1134, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1136, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1140, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1144, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1147, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1148, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1157, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1158, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1159, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1160, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1163, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1163, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1163, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1164, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1174, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1177, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1177, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1177, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1178, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1181, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1181, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1181, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1182, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1191, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1193, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1194, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1196, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1212, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1212, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 1212, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1213, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1221, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1224, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1225, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1230, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1230, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1231, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1241, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1242, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1244, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1248, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1249, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1253, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1253, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1255, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1259, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1269, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1269, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1269, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1270, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1281, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1284, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1289, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1291, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1291, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1300, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1302, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1306, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1308, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1308, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1310, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1310, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1311, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1313, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1313, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1320, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1324, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1325, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1329, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1330, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1334, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1338, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1338, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1345, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1349, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1350, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1354, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1355, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1359, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1363, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1363, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1371, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1375, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1376, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1379, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1380, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1380, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1381, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1381, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1386, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1390, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1395, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1396, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1398, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1418, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1419, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1420, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1421, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1431, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1431, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1432, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1441, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1441, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1442, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1443, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1444, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1445, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1447, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1450, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1450, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1452, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1452, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1455, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1456, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1457, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1457, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 1467, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1468, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1471, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1471, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1472, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1473, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1474, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1475, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1477, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1482, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1485, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1486, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1490, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1500, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1501, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1502, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1504, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1505, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1507, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1509, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1510, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1512, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1513, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1515, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1518, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1518, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1518, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1519, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1525, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1525, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1525, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1526, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1538, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1539, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1540, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1542, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1545, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1549, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1549, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1549, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1550, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1558, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1558, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1558, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1559, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1574, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1575, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1576, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1577, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1578, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1579, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1581, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1583, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1583, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1584, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1597, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1598, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1599, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1600, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1601, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1602, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1604, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1606, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1607, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1607, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1608, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1608, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1613, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1617, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1622, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1622, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1622, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1622, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1623, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1625, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1636, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1637, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1638, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1639, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1640, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1641, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1643, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1644, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1647, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1647, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1647, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1648, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1648, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1649, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1649, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1649, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1654, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1654, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1654, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1655, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1658, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1658, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1658, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1658, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1658, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1659, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1661, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1661, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1668, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1668, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1668, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1669, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1669, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1669, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1674, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1677, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1683, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1685, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1685, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1687, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1697, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1701, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1705, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1706, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1706, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1710, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1711, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1712, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1713, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1713, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1714, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1714, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1716, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1723, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1727, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1731, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1732, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1732, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1736, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1737, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1738, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1739, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1739, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1740, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1740, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1742, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1749, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1754, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1758, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1759, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1759, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1763, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1764, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1765, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1766, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1766, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1767, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1767, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1769, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1777, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1781, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1784, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1785, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1785, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1786, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1786, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1791, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1792, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 1794, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1795, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1797, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1798, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1798, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1799, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 1799, "col_offset": 35, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1800, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 1800, "col_offset": 36, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1803, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1803, "col_offset": 15, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 1805, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 1805, "col_offset": 43, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1806, "col_offset": 35, "nodeName": "run", "type": "Any"}, {"lineNumber": 1806, "col_offset": 44, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1808, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1809, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1820, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 1821, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1821, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1822, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1822, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1827, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1827, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1827, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1828, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1832, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1832, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1840, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1840, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1841, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1842, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1842, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1843, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1843, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1847, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1850, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1852, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1853, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1854, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1859, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1862, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1862, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1864, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1864, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1866, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 1877, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 1878, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 1879, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 1880, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 1881, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1882, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1883, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 1905, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1905, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1905, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1907, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1909, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1910, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1911, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1913, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1916, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1916, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1917, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1917, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1919, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1919, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1927, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1928, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1930, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1931, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1932, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1933, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1935, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1938, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1941, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1942, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1942, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1950, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1951, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1954, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1954, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1954, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1955, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1964, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1965, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1966, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1967, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1968, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1969, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1973, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1973, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1973, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1974, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1985, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1989, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1990, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1993, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1993, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1994, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2004, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2005, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2007, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2011, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2014, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2014, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2016, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2020, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2028, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2028, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2028, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2029, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2041, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2043, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2047, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2048, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2050, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2050, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2052, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2052, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2053, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2055, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2055, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2060, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2063, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2067, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2069, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2069, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2071, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2078, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2082, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2083, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2086, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2087, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2095, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2099, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2099, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2106, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2110, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2111, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2114, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2115, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2121, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2125, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2125, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2132, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2136, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2137, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2140, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2141, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2145, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2149, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2150, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2157, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2158, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2159, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2161, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2162, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2162, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2163, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2163, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2168, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2171, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2177, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2178, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2179, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2190, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2191, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2192, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2193, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2196, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2197, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2198, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2222, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2222, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2222, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2224, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2225, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2226, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2227, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2228, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2229, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2233, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2233, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2233, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2234, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2234, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2235, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2236, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2236, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2237, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2239, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2247, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2248, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2250, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2251, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2253, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2254, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2255, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2258, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2262, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2263, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2263, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2272, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2277, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2278, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2283, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2283, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2283, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2284, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2295, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2297, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2298, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2300, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2301, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2306, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2310, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2310, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2310, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2311, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2323, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2327, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2328, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2332, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2332, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2333, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2344, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2345, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2346, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2347, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2351, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2355, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2355, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2357, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2362, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2365, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2373, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2373, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2373, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2374, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2385, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2388, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2393, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2395, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2395, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2397, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2404, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2406, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2411, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2412, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2414, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2414, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2416, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2416, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2417, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2418, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2420, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2420, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2428, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2432, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2434, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2438, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2439, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2447, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2452, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2452, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2460, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2464, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2465, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2469, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2470, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2476, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2481, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2481, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2489, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2493, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2494, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2498, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2499, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2503, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2508, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2508, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2519, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2520, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2521, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2523, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2524, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2528, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2528, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2528, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2529, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2529, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2530, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2534, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2534, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2537, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2542, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2543, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2553, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2555, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2557, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2558, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2558, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2559, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2559, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2564, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2568, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2574, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2575, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2576, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2577, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2578, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2589, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 2590, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2591, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 2592, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2593, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 2594, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 2595, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2596, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2597, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2599, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2600, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2603, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2604, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2606, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2608, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2613, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2614, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2617, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2618, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2622, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2637, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2638, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2642, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2644, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2646, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2648, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2652, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2656, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2660, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2661, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2667, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2668, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2670, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2670, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 2671, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2672, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2677, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2679, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2681, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2685, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2685, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 2686, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2688, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2697, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2699, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2700, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2702, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2718, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2718, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 2718, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2719, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2721, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2721, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 2721, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2722, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2727, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2730, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2737, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2737, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2738, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2739, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2739, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2740, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2740, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 2748, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2749, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2750, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2755, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2758, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2758, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2760, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2764, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2773, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 2773, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2774, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2780, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2783, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2788, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2790, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2790, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2792, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2799, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2801, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2805, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2806, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2808, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2808, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2810, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2810, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2811, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2813, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2813, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2821, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2825, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2827, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2830, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2846, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2850, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2851, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2859, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2863, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2865, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2868, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2874, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2878, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2879, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2887, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2891, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2892, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2895, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2896, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2896, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2897, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2897, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2902, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2906, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2911, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2912, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2914, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2941, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2941, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2942, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2942, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2944, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2944, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2944, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2946, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2947, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2949, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2950, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2950, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2951, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2953, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2953, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2953, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2956, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2956, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2957, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2976, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2976, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2976, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 2978, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2979, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2980, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2981, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2982, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2984, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2988, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2988, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2991, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2991, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2991, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 2993, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3001, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3001, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3002, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3002, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3004, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3008, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3010, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3015, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3015, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3017, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3018, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3019, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3019, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3028, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 3029, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3030, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3031, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3032, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3034, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3036, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3037, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3037, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3037, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 3039, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3039, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 3041, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3041, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3042, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3045, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3045, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3046, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3050, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 119, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 138, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 178, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 262, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 262, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 267, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 286, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 299, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 302, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 311, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 323, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "getter", "type": "Any"}, {"lineNumber": 325, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 338, "col_offset": 51, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 338, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 338, "col_offset": 63, "nodeName": "g", "type": "Any"}, {"lineNumber": 338, "col_offset": 68, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 344, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 344, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 344, "col_offset": 52, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 346, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 347, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 32, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 368, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 368, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 368, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 373, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 382, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 382, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 382, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 386, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 386, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 389, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 406, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 412, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 412, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 424, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 426, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 427, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 428, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 428, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 464, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 464, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 465, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 485, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 485, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 486, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 505, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 518, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 518, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 519, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 520, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 521, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 523, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 533, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 536, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 537, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 540, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 540, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 540, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 542, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 542, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 543, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 559, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 559, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 559, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 559, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 561, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 561, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 563, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 568, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 569, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 569, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 577, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 578, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 584, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 594, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 612, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 612, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 614, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 615, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 617, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 628, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 631, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 642, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 660, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 660, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 662, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 662, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 669, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 673, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 673, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 691, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 696, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 701, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 702, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 705, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 708, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 709, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 710, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 725, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 725, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 727, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 729, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 733, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 733, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 745, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 748, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 748, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 750, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 750, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 759, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 763, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 763, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 781, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 790, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 792, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 792, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 815, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 815, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 816, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 816, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 832, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 838, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 840, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 843, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 845, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 845, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 852, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 859, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 861, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 864, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 866, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 866, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 872, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 872, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 873, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 873, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 875, "col_offset": 12, "nodeName": "cm", "type": "Any"}, {"lineNumber": 876, "col_offset": 39, "nodeName": "mask", "type": "Any"}, {"lineNumber": 882, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 883, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 883, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 885, "col_offset": 12, "nodeName": "cm", "type": "Any"}, {"lineNumber": 885, "col_offset": 62, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 885, "col_offset": 67, "nodeName": "mask", "type": "Any"}, {"lineNumber": 892, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 892, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 893, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 895, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 895, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 902, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 902, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 903, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 905, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 905, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 914, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 914, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 938, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 939, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 958, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 961, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 962, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 963, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 964, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 973, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 975, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 975, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 983, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 984, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 990, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 999, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1001, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1002, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1002, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1003, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 1003, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1011, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1012, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1013, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1014, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1019, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1021, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1021, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1022, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1022, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1027, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1028, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1033, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1044, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1044, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1066, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1066, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1066, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1071, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1080, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1080, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1080, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1084, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1084, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1084, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1087, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1088, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1094, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1103, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1103, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1107, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1107, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1107, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1110, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1111, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1127, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1134, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1140, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1144, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1145, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1147, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1148, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1149, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1149, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1149, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1163, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1163, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1164, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1177, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1177, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1178, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1181, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1181, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1182, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1199, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1199, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1201, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1212, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1212, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1213, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1214, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1224, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1227, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1228, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1231, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1231, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1231, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1233, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1233, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1233, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1234, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1234, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1248, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1251, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1251, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1251, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1251, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1253, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1253, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1255, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1259, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1260, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1261, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1261, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1264, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1269, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1270, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1273, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1274, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1281, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1291, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1291, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1300, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1308, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1308, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1310, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1311, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1313, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1324, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1327, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1327, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1329, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1329, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1334, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1338, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1338, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1349, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1352, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1352, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1354, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1354, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1359, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1363, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1363, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1375, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1379, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1380, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1381, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1386, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1390, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1391, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1392, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1395, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1398, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1399, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1400, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1419, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1421, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1431, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1432, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1453, "col_offset": 15, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1453, "col_offset": 26, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1455, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1457, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1469, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1469, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1469, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1483, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1483, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1483, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1487, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1487, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1487, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1490, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1491, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1518, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1518, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1519, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1519, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1520, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1523, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1525, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1525, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1526, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1526, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1527, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1530, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1549, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1549, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1550, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1550, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1551, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1553, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1556, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1558, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1558, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1559, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1559, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1560, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1562, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1565, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1584, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1584, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1585, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1587, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1587, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1587, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1588, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1588, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1606, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1607, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1608, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1613, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1617, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1618, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1619, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1622, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1625, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1626, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1627, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1648, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1654, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1654, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1658, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1659, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1668, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1668, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1669, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1669, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1669, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1674, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1685, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1685, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1703, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1703, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1705, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1705, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1706, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1711, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1711, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1711, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1712, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1713, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1714, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1729, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1729, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1731, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1731, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1732, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1737, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1737, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1737, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1738, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1739, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1740, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1756, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1756, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1758, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1758, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1759, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1764, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1764, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1764, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1765, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1766, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1767, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1784, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1785, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1786, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1791, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1792, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1795, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1795, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1795, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1797, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1798, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1799, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1800, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1803, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1805, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1806, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1821, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1827, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1827, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1841, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1842, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1843, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1847, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1850, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1850, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1850, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1852, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1854, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1854, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1854, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1859, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1864, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1864, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1875, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1875, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 1875, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1911, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1916, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 1917, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1919, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1919, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1928, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1931, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1932, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 1933, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1938, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1941, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1941, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1942, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1942, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1942, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1942, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1954, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1954, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1955, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1956, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1973, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1973, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1974, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1977, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1989, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1991, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1991, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1994, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1994, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1994, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1996, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1996, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1996, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1997, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1997, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2005, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2012, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2012, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2012, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 2012, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2014, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2014, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2016, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2020, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2021, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2021, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 2022, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 2025, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2025, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2028, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2029, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2033, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2041, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2050, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2050, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2052, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2053, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2055, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2060, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2069, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2069, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2082, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2084, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2084, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2086, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2086, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2095, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2099, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2099, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2110, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2112, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2112, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2114, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2114, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2121, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2125, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2125, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2136, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2138, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2138, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2140, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2140, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2145, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2149, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2150, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2158, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2161, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2162, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2163, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2168, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2171, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2171, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2171, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2177, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2179, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2179, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2179, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2188, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2188, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2188, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2228, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2239, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2239, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2248, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2251, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2253, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2254, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2258, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2262, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2262, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2263, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2263, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2263, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2263, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2283, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2283, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2284, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2287, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2310, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2310, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2311, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2316, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2327, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2329, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2330, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2333, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2333, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2333, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2335, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2335, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2335, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2336, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2336, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2346, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2352, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2353, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2353, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2353, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2353, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2355, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2355, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2357, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2362, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2363, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2363, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2364, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2365, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2366, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2366, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2367, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2370, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2370, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2373, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2374, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2379, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2385, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2395, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2395, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2404, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2414, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2414, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2416, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2417, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2418, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2420, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2432, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2435, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2436, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2438, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2438, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2447, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2452, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2452, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2464, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2466, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2467, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2469, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2469, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2476, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2481, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2481, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2493, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2495, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2496, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2498, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2498, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2503, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2508, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2508, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2523, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2525, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2526, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2528, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2529, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2530, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2530, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2534, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2537, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2542, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2542, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2557, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2558, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2559, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2564, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2568, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2568, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2568, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2574, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2575, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2578, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2578, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2578, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2601, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2601, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2601, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2601, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2601, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2605, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2605, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2605, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2606, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2615, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2615, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2615, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2615, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2615, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2619, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2619, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2619, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2619, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2620, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2622, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2623, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2639, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2645, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2645, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2645, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2646, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2652, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2656, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2657, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2660, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2661, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2662, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2662, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2662, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2662, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2662, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2670, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2670, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2671, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2672, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2685, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2685, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2686, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2688, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2705, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2705, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2707, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2718, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2718, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2719, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2720, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2721, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2721, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2722, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2723, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2730, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 2738, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2738, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2738, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2739, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2756, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2756, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2756, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 2756, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2758, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2758, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2760, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2764, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2765, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2766, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 2766, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 2769, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2773, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2774, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2780, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2790, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2790, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2799, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2808, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2808, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2810, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2811, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2813, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2825, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2828, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2828, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2830, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2830, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2831, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2846, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2850, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2851, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2863, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2866, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2866, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2868, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2868, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2869, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2874, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2878, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2879, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2891, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2895, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2896, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2897, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2902, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2906, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2907, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2908, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2911, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2914, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2915, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2916, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2925, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2925, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 2925, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2956, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2957, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2976, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2979, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2980, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2981, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2982, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 2991, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 2993, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2993, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3001, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3002, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3008, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 3017, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3019, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3020, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3020, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 3021, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 3021, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3029, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3030, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3031, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3032, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 3037, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 3039, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3039, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3040, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3040, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 3045, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3046, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 244, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 291, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 323, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 323, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 344, "col_offset": 52, "nodeName": "out2", "type": "Any"}, {"lineNumber": 346, "col_offset": 39, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 420, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 505, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 505, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 509, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 540, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 542, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 564, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 568, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 569, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 569, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 574, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 617, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 633, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 633, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 643, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 646, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 646, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 662, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 662, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 670, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 673, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 697, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 701, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 702, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 705, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 706, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 706, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 709, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 710, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 727, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 727, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 730, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 733, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 733, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 750, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 750, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 760, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 763, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 763, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 781, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 816, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 816, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 821, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 822, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 844, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 845, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 845, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 865, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 866, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 866, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 893, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 893, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 894, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 894, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 895, "col_offset": 40, "nodeName": "mask", "type": "Any"}, {"lineNumber": 903, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 903, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 904, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 904, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 905, "col_offset": 40, "nodeName": "mask", "type": "Any"}, {"lineNumber": 970, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 971, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 971, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 973, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 976, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 997, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1000, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1002, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1002, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 1003, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1022, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 1022, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1079, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1089, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1102, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1112, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1141, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1145, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1199, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1199, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1201, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1203, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1231, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1233, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1256, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1260, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1261, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1261, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1264, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1265, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1266, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1273, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1300, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1313, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1329, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1329, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1335, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1338, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1338, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1354, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1354, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1360, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1363, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1363, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1387, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1391, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1392, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1395, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1396, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1396, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1399, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1400, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1419, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1419, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1450, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1452, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1456, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1457, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 1482, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1486, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1492, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1584, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1584, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1584, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1585, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1587, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1614, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1618, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1619, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1622, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1623, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1623, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1626, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1627, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1648, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1658, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1705, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1705, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1711, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1711, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1711, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1731, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1731, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1737, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1737, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1737, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1758, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1758, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1764, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1764, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1764, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1795, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1795, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1795, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1848, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1850, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1850, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1852, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1853, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1853, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1854, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1854, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1917, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1919, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 1928, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1939, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1941, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1941, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1942, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1994, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1996, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2017, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2021, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2021, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2022, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2025, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2025, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2041, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2055, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2086, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2086, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2096, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2099, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2099, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2114, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2114, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2122, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2125, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2125, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2140, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2140, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2146, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2150, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2150, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2169, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2171, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2171, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2177, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2178, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2178, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2179, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2179, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2233, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2234, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2236, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2239, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2248, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2259, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2262, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2262, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2263, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2333, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2335, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2358, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2363, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2363, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2364, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2366, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2366, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2367, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2370, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2370, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2404, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2420, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2438, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2438, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2448, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2452, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2452, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2469, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2469, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2477, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2481, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2481, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2498, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2498, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2504, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2508, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2508, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2534, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2538, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2542, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2542, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2542, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2565, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2568, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2568, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2574, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2575, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2576, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2576, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2577, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2577, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2578, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2578, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2614, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2618, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2624, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2653, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2657, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2705, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2705, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 2707, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 2709, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 2733, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2734, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2738, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2761, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2765, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2766, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2766, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2769, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2770, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2771, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 2799, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2813, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2830, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2830, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2831, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2847, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2851, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2851, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2868, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2868, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2869, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2875, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2879, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2879, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2903, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2907, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2908, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2911, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2912, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2912, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2915, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2916, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2988, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2989, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2989, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2991, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2994, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3015, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3018, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 3020, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3020, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 3021, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3040, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 3040, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 346, "col_offset": 39, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 420, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 421, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 424, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 424, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 424, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 424, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 564, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 565, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 568, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 569, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 579, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 643, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 644, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 646, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 662, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 670, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 671, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 673, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 697, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 698, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 706, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 727, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 731, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 733, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 750, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 760, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 761, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 763, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 781, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 821, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 822, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 844, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 844, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 845, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 865, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 865, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 866, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 894, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 904, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 970, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 971, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 971, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 973, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 975, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 976, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 997, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1000, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1002, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1079, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1088, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1102, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1103, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1103, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1111, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1141, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1142, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1145, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1145, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1145, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1145, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1256, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1257, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1260, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1261, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1265, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1276, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1300, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1329, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1335, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1336, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1338, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1354, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1360, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1361, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1363, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1387, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1388, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1396, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1419, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1419, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1421, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1452, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1456, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1457, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1482, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1486, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1491, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1614, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1615, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1623, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1705, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1731, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1758, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1848, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1849, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1853, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1919, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1939, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1940, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1941, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1941, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2017, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2018, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2021, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2022, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 2025, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2034, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2041, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2086, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2096, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2097, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2099, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2114, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2122, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2123, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2125, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2140, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2146, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2147, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2150, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2169, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2170, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2178, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2233, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2234, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2236, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2239, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2259, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2260, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2262, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2262, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2358, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2359, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2363, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2364, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2366, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2367, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2370, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2380, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2404, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2438, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2448, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2449, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2452, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2469, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2477, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2478, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2481, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2498, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2504, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2505, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2508, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2534, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 2538, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2539, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2542, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2565, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2566, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2576, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2577, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2614, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 2618, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 2623, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2653, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2654, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2657, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 2657, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2657, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2657, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2657, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2658, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2733, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2734, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2761, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2762, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2765, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2766, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 2770, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 2775, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2799, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2830, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2847, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2848, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2851, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2868, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2875, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2876, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2879, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2903, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2904, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2912, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2988, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2989, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2989, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 2989, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2991, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 2993, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2994, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3015, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3018, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3020, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 108, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 111, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 421, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 565, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 565, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 579, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 644, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 644, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 644, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 671, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 671, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 671, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 698, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 698, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 698, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 706, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 731, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 731, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 731, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 761, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 761, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 844, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 865, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 971, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 973, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 975, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1083, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1088, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1106, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1111, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1142, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1142, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1142, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1257, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1257, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1257, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1265, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1276, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1336, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1336, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1336, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1361, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1361, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1361, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1388, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1388, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1388, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1396, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1421, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1421, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1421, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1457, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1486, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1491, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1615, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1615, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1615, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1623, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1849, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1849, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1849, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1853, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1940, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1940, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1940, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2018, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2018, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2018, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2025, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2034, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2097, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2097, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2097, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2123, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2123, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2123, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2147, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2147, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2147, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2170, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2170, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2170, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2178, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2234, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2236, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2239, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2260, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2260, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2260, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2261, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2261, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2359, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2359, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2359, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2360, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2360, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2370, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2380, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2449, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2449, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2449, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2450, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2450, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2478, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2478, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2478, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2479, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2479, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2505, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2505, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2505, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2506, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2506, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2539, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2539, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2539, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2540, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2540, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2566, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2566, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2566, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2567, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2567, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2576, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2577, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2618, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2623, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2654, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2654, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2654, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2762, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2762, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2762, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2770, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2775, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2848, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2848, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2848, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2876, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2876, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2876, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2904, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2904, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2904, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2912, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2989, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2991, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2993, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 108, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 108, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 421, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 565, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 565, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 644, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 644, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 644, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 671, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 671, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 671, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 698, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 698, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 698, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 731, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 731, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 731, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 761, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 761, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 975, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1088, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1111, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1142, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1142, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1142, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1257, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1257, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1257, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1336, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1336, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1336, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1361, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1361, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1361, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1388, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1388, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1388, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1421, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1421, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1457, "col_offset": 58, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1491, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1615, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1615, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1615, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1849, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1849, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1849, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1940, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1940, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1940, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2018, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2018, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2018, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2097, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2097, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2097, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2123, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2123, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2123, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2147, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2147, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2147, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2170, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2170, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2170, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2239, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2260, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2260, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2260, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2261, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2261, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2359, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2359, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2359, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2360, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2360, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2449, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2449, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2449, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2450, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2450, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2478, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2478, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2478, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2479, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2479, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2505, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2505, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2505, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2506, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2506, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2539, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2539, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2539, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2540, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2540, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2566, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2566, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2566, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2567, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2567, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2623, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2654, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2654, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2654, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2762, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2762, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2762, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2848, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2848, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2848, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2876, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2876, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2876, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2904, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2904, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2904, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2993, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}]