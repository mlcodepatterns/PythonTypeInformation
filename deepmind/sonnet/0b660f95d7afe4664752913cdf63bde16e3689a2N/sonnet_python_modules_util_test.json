[{"lineNumber": 51, "col_offset": 15, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 588, "col_offset": 44, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1005, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1061, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1061, "col_offset": 55, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 588, "col_offset": 44, "nodeName": "test", "type": "Any"}, {"lineNumber": 590, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 603, "col_offset": 35, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 1005, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 1061, "col_offset": 31, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1061, "col_offset": 55, "nodeName": "test", "type": "Any"}, {"lineNumber": 1137, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "items", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "items_str", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "saver", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "saver", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 213, "col_offset": 7, "nodeName": "partitioned", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "var_map", "type": "Dict[str, Any]"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "mod", "type": "Any"}, {"lineNumber": 543, "col_offset": 23, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "pm", "type": "Any"}, {"lineNumber": 562, "col_offset": 22, "nodeName": "ParentModule", "type": "Type[Any]"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "cm", "type": "Any"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "arg_spec", "type": "inspect.ArgSpec"}, {"lineNumber": 588, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 635, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[nothing]"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[Any]"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 649, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[Any]"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 684, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 720, "col_offset": 4, "nodeName": "module1", "type": "Any"}, {"lineNumber": 721, "col_offset": 4, "nodeName": "module2", "type": "Any"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "a1", "type": "Any"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "inputs_plus_b1", "type": "Any"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "inputs_plus_b2", "type": "Any"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "a2", "type": "Any"}, {"lineNumber": 731, "col_offset": 4, "nodeName": "inputs_plus_ab1_again", "type": "Any"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "inputs_plus_ab2_again", "type": "Any"}, {"lineNumber": 758, "col_offset": 21, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "m1", "type": "Any"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "m2", "type": "Any"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "a1", "type": "Any"}, {"lineNumber": 778, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "a2", "type": "Any"}, {"lineNumber": 779, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "g1", "type": "Any"}, {"lineNumber": 786, "col_offset": 4, "nodeName": "g2", "type": "Any"}, {"lineNumber": 810, "col_offset": 35, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "ones", "type": "Any"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "observed_tensor_names", "type": "List[Any]"}, {"lineNumber": 943, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 945, "col_offset": 4, "nodeName": "obj1_a_outputs", "type": "Any"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "container", "type": "Any"}, {"lineNumber": 968, "col_offset": 26, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 975, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "defun_a", "type": "None"}, {"lineNumber": 983, "col_offset": 14, "nodeName": "a", "type": "None"}, {"lineNumber": 990, "col_offset": 4, "nodeName": "raw_module", "type": "Any"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "defun_module", "type": "Any"}, {"lineNumber": 993, "col_offset": 7, "nodeName": "connect_defun_first", "type": "Any"}, {"lineNumber": 1005, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1022, "col_offset": 34, "nodeName": "test_cases", "type": "List[Tuple[str, str]]"}, {"lineNumber": 1035, "col_offset": 4, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "test", "type": "functools.partial[nothing]"}, {"lineNumber": 1048, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 1056, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 1061, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1064, "col_offset": 4, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 1070, "col_offset": 16, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 1072, "col_offset": 7, "nodeName": "resource", "type": "Any"}, {"lineNumber": 1083, "col_offset": 4, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 1098, "col_offset": 4, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 1110, "col_offset": 4, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 1138, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "input_", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "s2", "type": "Any"}, {"lineNumber": 70, "col_offset": 6, "nodeName": "v2", "type": "Any"}, {"lineNumber": 71, "col_offset": 6, "nodeName": "v3", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "v2", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "s1", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "v1", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "v2", "type": "Any"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "s1", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "s3", "type": "Any"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "s2", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "v1", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "v2", "type": "Any"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "s4", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "s2", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "v1", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "v2", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "input_", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 51, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "w", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "b", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 163, "col_offset": 9, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 183, "col_offset": 9, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 51, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "variable_map_items", "type": "Callable[[Any], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "items_str", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "get_saver", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "s1", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "saver", "type": "Any"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "input_", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "get_saver", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "saver", "type": "Any"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 214, "col_offset": 6, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "partitioners", "type": "None"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 232, "col_offset": 6, "nodeName": "conv", "type": "Any"}, {"lineNumber": 233, "col_offset": 6, "nodeName": "saver", "type": "Any"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 237, "col_offset": 6, "nodeName": "w_value", "type": "Any"}, {"lineNumber": 240, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "conv", "type": "Any"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "saver", "type": "Any"}, {"lineNumber": 244, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 248, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "input_", "type": "Any"}, {"lineNumber": 258, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 259, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "get_saver", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "s1", "type": "Any"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "get_saver", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "s1", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 265, "col_offset": 26, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 271, "col_offset": 44, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 272, "col_offset": 48, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 275, "col_offset": 30, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 277, "col_offset": 37, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 278, "col_offset": 47, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 279, "col_offset": 51, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 318, "col_offset": 28, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 333, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 353, "col_offset": 28, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 361, "col_offset": 28, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 399, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 410, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 415, "col_offset": 53, "nodeName": "expected", "type": "Any"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 428, "col_offset": 22, "nodeName": "v1", "type": "Any"}, {"lineNumber": 428, "col_offset": 33, "nodeName": "v2", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 429, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "log_variables", "type": "Callable[..., None]"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 443, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "log_variables", "type": "Callable[..., None]"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 461, "col_offset": 54, "nodeName": "expected_string", "type": "Any"}, {"lineNumber": 481, "col_offset": 50, "nodeName": "mocked_logging_info", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "graph_creator_fn", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 504, "col_offset": 52, "nodeName": "expected_dict", "type": "Any"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 516, "col_offset": 21, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 535, "col_offset": 10, "nodeName": "module_builder", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 536, "col_offset": 60, "nodeName": "expected", "type": "Any"}, {"lineNumber": 543, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 556, "col_offset": 9, "nodeName": "ParentModule", "type": "Type[Any]"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 573, "col_offset": 9, "nodeName": "ChildModule", "type": "Type[Any]"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "getargspec", "type": "Callable[[object], inspect.ArgSpec]"}, {"lineNumber": 584, "col_offset": 34, "nodeName": "func", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 585, "col_offset": 58, "nodeName": "expected_result", "type": "Any"}, {"lineNumber": 613, "col_offset": 6, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 613, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 630, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 630, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 632, "col_offset": 13, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 635, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 636, "col_offset": 52, "nodeName": "all_variable_names", "type": "List[nothing]"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 639, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "all_variable_names", "type": "List[Any]"}, {"lineNumber": 643, "col_offset": 10, "nodeName": "Sequential", "type": "Type[sonnet.python.modules.sequential.Sequential]"}, {"lineNumber": 649, "col_offset": 17, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "_all_variables", "type": "Set[nothing]"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 654, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 662, "col_offset": 7, "nodeName": "all_variable_names", "type": "List[Any]"}, {"lineNumber": 665, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 668, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 669, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 671, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 672, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 674, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 676, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 677, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 679, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 680, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 683, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 684, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 686, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 687, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 689, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 690, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 693, "col_offset": 11, "nodeName": "InheritedVariableContainer", "type": "Type[Any]"}, {"lineNumber": 694, "col_offset": 11, "nodeName": "InheritedVariableContainer", "type": "Type[Any]"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 696, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 697, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 699, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 700, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 702, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 704, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 705, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 706, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 707, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 709, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 710, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 711, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 712, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 718, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 718, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 720, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 721, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 723, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 724, "col_offset": 21, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 724, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 725, "col_offset": 22, "nodeName": "module1", "type": "Any"}, {"lineNumber": 725, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 727, "col_offset": 22, "nodeName": "module2", "type": "Any"}, {"lineNumber": 727, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 728, "col_offset": 21, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 728, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 729, "col_offset": 9, "nodeName": "a", "type": "Any"}, {"lineNumber": 731, "col_offset": 28, "nodeName": "module1", "type": "Any"}, {"lineNumber": 731, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 732, "col_offset": 28, "nodeName": "module2", "type": "Any"}, {"lineNumber": 732, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 734, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 736, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 758, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 775, "col_offset": 9, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 776, "col_offset": 9, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 778, "col_offset": 9, "nodeName": "m1", "type": "Any"}, {"lineNumber": 779, "col_offset": 9, "nodeName": "m2", "type": "Any"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 785, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 786, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 789, "col_offset": 6, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 790, "col_offset": 6, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 799, "col_offset": 6, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 800, "col_offset": 6, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 810, "col_offset": 35, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 831, "col_offset": 6, "nodeName": "tensor_names", "type": "List[Any]"}, {"lineNumber": 832, "col_offset": 10, "nodeName": "op", "type": "Any"}, {"lineNumber": 832, "col_offset": 16, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 834, "col_offset": 13, "nodeName": "tensor_names", "type": "List[Any]"}, {"lineNumber": 836, "col_offset": 11, "nodeName": "VariableContainerWithOps", "type": "Type[Any]"}, {"lineNumber": 837, "col_offset": 11, "nodeName": "VariableContainerWithOps", "type": "Type[Any]"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 840, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 841, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 848, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 848, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 849, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 849, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 851, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 852, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 854, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 855, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 855, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 856, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 858, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 859, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 861, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 862, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 864, "col_offset": 28, "nodeName": "get_tensor_names_from_default_graph", "type": "Callable[[], Any]"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 940, "col_offset": 21, "nodeName": "expected_tensor_names", "type": "List[str]"}, {"lineNumber": 940, "col_offset": 44, "nodeName": "observed_tensor_names", "type": "List[Any]"}, {"lineNumber": 943, "col_offset": 11, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 944, "col_offset": 21, "nodeName": "is_connected", "type": "Any"}, {"lineNumber": 945, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 946, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 946, "col_offset": 20, "nodeName": "is_connected", "type": "Any"}, {"lineNumber": 958, "col_offset": 16, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 968, "col_offset": 26, "nodeName": "snt", "type": "module"}, {"lineNumber": 969, "col_offset": 6, "nodeName": "_build", "type": "None"}, {"lineNumber": 975, "col_offset": 13, "nodeName": "AssigningModule", "type": "Type[Any]"}, {"lineNumber": 978, "col_offset": 4, "nodeName": "assign_a", "type": "Any"}, {"lineNumber": 979, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 979, "col_offset": 7, "nodeName": "a", "type": "Any"}, {"lineNumber": 979, "col_offset": 18, "nodeName": "a", "type": "None"}, {"lineNumber": 983, "col_offset": 14, "nodeName": "module", "type": "Any"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 986, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 986, "col_offset": 21, "nodeName": "defun_a", "type": "None"}, {"lineNumber": 990, "col_offset": 17, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 991, "col_offset": 19, "nodeName": "defun", "type": "Any"}, {"lineNumber": 991, "col_offset": 42, "nodeName": "raw_module", "type": "Any"}, {"lineNumber": 994, "col_offset": 6, "nodeName": "defun_result", "type": "Any"}, {"lineNumber": 995, "col_offset": 6, "nodeName": "raw_result", "type": "Any"}, {"lineNumber": 997, "col_offset": 6, "nodeName": "raw_result", "type": "Any"}, {"lineNumber": 998, "col_offset": 6, "nodeName": "defun_result", "type": "Any"}, {"lineNumber": 1000, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1001, "col_offset": 4, "nodeName": "raw_result", "type": "Any"}, {"lineNumber": 1001, "col_offset": 16, "nodeName": "defun_result", "type": "Any"}, {"lineNumber": 1001, "col_offset": 31, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1002, "col_offset": 21, "nodeName": "raw_result", "type": "Any"}, {"lineNumber": 1002, "col_offset": 33, "nodeName": "defun_result", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "camel_case", "type": "str"}, {"lineNumber": 1022, "col_offset": 20, "nodeName": "snake_case", "type": "str"}, {"lineNumber": 1023, "col_offset": 6, "nodeName": "actual", "type": "str"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1032, "col_offset": 20, "nodeName": "test", "type": "Callable[[], Any]"}, {"lineNumber": 1035, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1036, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1036, "col_offset": 20, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 1043, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1044, "col_offset": 20, "nodeName": "test", "type": "functools.partial[nothing]"}, {"lineNumber": 1053, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1056, "col_offset": 11, "nodeName": "name_for_callable", "type": "Callable[[Any], Any]"}, {"lineNumber": 1056, "col_offset": 34, "nodeName": "func", "type": "Any"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1057, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 1057, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 1067, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1067, "col_offset": 21, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "assertVariableType", "type": "Any"}, {"lineNumber": 1087, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 1087, "col_offset": 31, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 1088, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1088, "col_offset": 21, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 1098, "col_offset": 19, "nodeName": "variable_type", "type": "Any"}, {"lineNumber": 1104, "col_offset": 6, "nodeName": "var", "type": "Any"}, {"lineNumber": 1108, "col_offset": 13, "nodeName": "var", "type": "Any"}, {"lineNumber": 1112, "col_offset": 36, "nodeName": "stack", "type": "Any"}, {"lineNumber": 1114, "col_offset": 10, "nodeName": "stack_entry", "type": "Any"}, {"lineNumber": 1114, "col_offset": 25, "nodeName": "stack_entries", "type": "Any"}, {"lineNumber": 1126, "col_offset": 6, "nodeName": "v", "type": "Any"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "assertVariableType", "type": "Any"}, {"lineNumber": 1128, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 1128, "col_offset": 31, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 1129, "col_offset": 7, "nodeName": "stack_entries", "type": "Any"}, {"lineNumber": 1138, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "b", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "s1", "type": "Any"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "v1", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 76, "col_offset": 59, "nodeName": "v2", "type": "Any"}, {"lineNumber": 76, "col_offset": 63, "nodeName": "v3", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "v1", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 64, "nodeName": "v2", "type": "Any"}, {"lineNumber": 78, "col_offset": 68, "nodeName": "v3", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 79, "col_offset": 59, "nodeName": "v1", "type": "Any"}, {"lineNumber": 79, "col_offset": 63, "nodeName": "v2", "type": "Any"}, {"lineNumber": 79, "col_offset": 67, "nodeName": "v3", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "s2", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "v1", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 109, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 116, "col_offset": 63, "nodeName": "s1", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 131, "col_offset": 63, "nodeName": "s4", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 195, "col_offset": 6, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "train", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 200, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "train", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "saver", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "saver", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 218, "col_offset": 35, "nodeName": "partitioners", "type": "Optional[Dict[str, Any]]"}, {"lineNumber": 218, "col_offset": 54, "nodeName": "name", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 231, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "_create_conv", "type": "Any"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "get_saver", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "conv", "type": "Any"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "save", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "sess", "type": "Any"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "identity", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "run", "type": "Any"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "w", "type": "Any"}, {"lineNumber": 240, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "_create_conv", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "get_saver", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "conv", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "restore", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "sess", "type": "Any"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "path", "type": "str"}, {"lineNumber": 244, "col_offset": 10, "nodeName": "identity", "type": "Any"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 245, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "w_value", "type": "Any"}, {"lineNumber": 248, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 251, "col_offset": 48, "nodeName": "s1", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 252, "col_offset": 48, "nodeName": "s1", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 253, "col_offset": 46, "nodeName": "s1", "type": "Any"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "input_", "type": "Any"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "net", "type": "Any"}, {"lineNumber": 261, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "train", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "train", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 271, "col_offset": 44, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 272, "col_offset": 48, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 275, "col_offset": 30, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 277, "col_offset": 37, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 278, "col_offset": 47, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 279, "col_offset": 51, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 305, "col_offset": 41, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 306, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 312, "col_offset": 59, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 316, "col_offset": 29, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 321, "col_offset": 41, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 329, "col_offset": 41, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 330, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 337, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 340, "col_offset": 17, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 343, "col_offset": 59, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 347, "col_offset": 17, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "l2_regularizer", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 353, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 354, "col_offset": 41, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 355, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 361, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 362, "col_offset": 41, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 369, "col_offset": 41, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 370, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "l2_regularizer", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 376, "col_offset": 40, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 376, "col_offset": 59, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 382, "col_offset": 40, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 383, "col_offset": 62, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 384, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 385, "col_offset": 6, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 390, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 390, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 391, "col_offset": 6, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "layers", "type": "Any"}, {"lineNumber": 394, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 394, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "has_variable_scope", "type": "Callable[[Any], bool]"}, {"lineNumber": 399, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 400, "col_offset": 20, "nodeName": "has_variable_scope", "type": "Callable[[Any], bool]"}, {"lineNumber": 400, "col_offset": 43, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "has_variable_scope", "type": "Callable[[Any], bool]"}, {"lineNumber": 402, "col_offset": 43, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 411, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "format_variables", "type": "Callable[..., Any]"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 424, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 429, "col_offset": 21, "nodeName": "format_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 429, "col_offset": 45, "nodeName": "var_map", "type": "Dict[str, Any]"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 435, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 443, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 444, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 447, "col_offset": 23, "nodeName": "v2", "type": "Any"}, {"lineNumber": 447, "col_offset": 27, "nodeName": "v1", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "_num_bytes_to_human_readable", "type": "Callable[[Any], str]"}, {"lineNumber": 461, "col_offset": 42, "nodeName": "num_bytes", "type": "Any"}, {"lineNumber": 481, "col_offset": 9, "nodeName": "object", "type": "Callable[..., mock._patch]"}, {"lineNumber": 481, "col_offset": 27, "nodeName": "logging", "type": "Any"}, {"lineNumber": 482, "col_offset": 6, "nodeName": "graph_creator_fn", "type": "Any"}, {"lineNumber": 483, "col_offset": 6, "nodeName": "summarize_variables", "type": "Callable[..., None]"}, {"lineNumber": 484, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 486, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 486, "col_offset": 34, "nodeName": "expected_strings", "type": "Any"}, {"lineNumber": 487, "col_offset": 34, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "actual_args", "type": "Any"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 504, "col_offset": 21, "nodeName": "count_variables_by_type", "type": "Callable[..., Dict[Any, Dict[str, Any]]]"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 21, "nodeName": "parse_string_to_constructor", "type": "Callable[[Any], Any]"}, {"lineNumber": 515, "col_offset": 53, "nodeName": "constructor_string", "type": "Any"}, {"lineNumber": 523, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 523, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "parse_string_to_constructor", "type": "Callable[[Any], Any]"}, {"lineNumber": 524, "col_offset": 38, "nodeName": "erroneous_string", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 536, "col_offset": 21, "nodeName": "supports_kwargs", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 536, "col_offset": 41, "nodeName": "mod", "type": "Any"}, {"lineNumber": 536, "col_offset": 46, "nodeName": "kwargs_list", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 557, "col_offset": 20, "nodeName": "supports_kwargs", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 557, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 558, "col_offset": 20, "nodeName": "supports_kwargs", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 558, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 559, "col_offset": 21, "nodeName": "supports_kwargs", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 559, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 560, "col_offset": 21, "nodeName": "supports_kwargs", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 560, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 574, "col_offset": 20, "nodeName": "supports_kwargs", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 574, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 576, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 576, "col_offset": 21, "nodeName": "supports_kwargs", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 576, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "supports_kwargs", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 577, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 578, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "supports_kwargs", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 578, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "inspect", "type": "module"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "_arg_spec_is_generic", "type": "Callable[[Any], Any]"}, {"lineNumber": 585, "col_offset": 47, "nodeName": "arg_spec", "type": "inspect.ArgSpec"}, {"lineNumber": 593, "col_offset": 38, "nodeName": "vs", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 594, "col_offset": 30, "nodeName": "vs", "type": "Any"}, {"lineNumber": 598, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 601, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 607, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 612, "col_offset": 6, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 613, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 617, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 621, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 624, "col_offset": 13, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 630, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 630, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 632, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 632, "col_offset": 39, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 635, "col_offset": 33, "nodeName": "name", "type": "nothing"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 639, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 643, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 650, "col_offset": 6, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 650, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 651, "col_offset": 21, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 654, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 665, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 668, "col_offset": 26, "nodeName": "op", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 671, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 674, "col_offset": 28, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 676, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 677, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 679, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 680, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 680, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 683, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 684, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 686, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 687, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 689, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 690, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 693, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 694, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 696, "col_offset": 26, "nodeName": "op", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 699, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 702, "col_offset": 28, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 704, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 705, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 706, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 706, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 707, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 709, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 710, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 711, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 712, "col_offset": 33, "nodeName": "op", "type": "Any"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 718, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 718, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 720, "col_offset": 14, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 720, "col_offset": 40, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 721, "col_offset": 14, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 721, "col_offset": 40, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 723, "col_offset": 9, "nodeName": "module1", "type": "Any"}, {"lineNumber": 724, "col_offset": 21, "nodeName": "module1", "type": "Any"}, {"lineNumber": 728, "col_offset": 21, "nodeName": "module2", "type": "Any"}, {"lineNumber": 729, "col_offset": 9, "nodeName": "module2", "type": "Any"}, {"lineNumber": 734, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 735, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 736, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 736, "col_offset": 34, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 736, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 737, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 741, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 742, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 743, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 745, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 746, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 750, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 754, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 765, "col_offset": 15, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 773, "col_offset": 15, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 781, "col_offset": 27, "nodeName": "a1", "type": "Any"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 782, "col_offset": 27, "nodeName": "a2", "type": "Any"}, {"lineNumber": 785, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 788, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 789, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 790, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 792, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 792, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 793, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 793, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 795, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 795, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 796, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 796, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 798, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 799, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 800, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 802, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 802, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 803, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 803, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 805, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 805, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 806, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 806, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 840, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 841, "col_offset": 43, "nodeName": "op", "type": "Any"}, {"lineNumber": 842, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 843, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 844, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 845, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 846, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 848, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 848, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 849, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 849, "col_offset": 43, "nodeName": "op", "type": "Any"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 851, "col_offset": 46, "nodeName": "op", "type": "Any"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 852, "col_offset": 48, "nodeName": "op", "type": "Any"}, {"lineNumber": 854, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 855, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 855, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 856, "col_offset": 43, "nodeName": "op", "type": "Any"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 858, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 859, "col_offset": 43, "nodeName": "op", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 861, "col_offset": 46, "nodeName": "op", "type": "Any"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 862, "col_offset": 48, "nodeName": "op", "type": "Any"}, {"lineNumber": 866, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 866, "col_offset": 11, "nodeName": "observed_tensor_names", "type": "List[Any]"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 943, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 944, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 945, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 946, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 946, "col_offset": 20, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 947, "col_offset": 11, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 948, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 948, "col_offset": 23, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 949, "col_offset": 6, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 949, "col_offset": 20, "nodeName": "module", "type": "Any"}, {"lineNumber": 949, "col_offset": 57, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 950, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 950, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 951, "col_offset": 6, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 951, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 951, "col_offset": 58, "nodeName": "obj1_a_outputs", "type": "Any"}, {"lineNumber": 955, "col_offset": 11, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 956, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 958, "col_offset": 16, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 959, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 959, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 961, "col_offset": 6, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 965, "col_offset": 11, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 966, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 978, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 979, "col_offset": 7, "nodeName": "module", "type": "Any"}, {"lineNumber": 979, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "defun", "type": "Any"}, {"lineNumber": 982, "col_offset": 27, "nodeName": "assign_a", "type": "Any"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 990, "col_offset": 17, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 991, "col_offset": 19, "nodeName": "eager", "type": "Any"}, {"lineNumber": 994, "col_offset": 21, "nodeName": "defun_module", "type": "Any"}, {"lineNumber": 995, "col_offset": 19, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 997, "col_offset": 19, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 998, "col_offset": 21, "nodeName": "defun_module", "type": "Any"}, {"lineNumber": 1000, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1000, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1001, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 1001, "col_offset": 46, "nodeName": "raw_result", "type": "Any"}, {"lineNumber": 1001, "col_offset": 58, "nodeName": "defun_result", "type": "Any"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1023, "col_offset": 15, "nodeName": "to_snake_case", "type": "Callable[[Any], str]"}, {"lineNumber": 1023, "col_offset": 34, "nodeName": "camel_case", "type": "str"}, {"lineNumber": 1024, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1024, "col_offset": 23, "nodeName": "actual", "type": "str"}, {"lineNumber": 1024, "col_offset": 31, "nodeName": "snake_case", "type": "str"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 1036, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 1043, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 1043, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 1043, "col_offset": 47, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 1053, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 1053, "col_offset": 20, "nodeName": "Test", "type": "Type[Any]"}, {"lineNumber": 1056, "col_offset": 11, "nodeName": "util", "type": "module"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 1065, "col_offset": 9, "nodeName": "notify_about_variables", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 1065, "col_offset": 37, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1067, "col_offset": 4, "nodeName": "self", "type": "TestNotifyAboutVariables"}, {"lineNumber": 1070, "col_offset": 16, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 1070, "col_offset": 21, "nodeName": "variable", "type": "Any"}, {"lineNumber": 1073, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1073, "col_offset": 23, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 1076, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 1076, "col_offset": 20, "nodeName": "type_name", "type": "Any"}, {"lineNumber": 1080, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 1080, "col_offset": 38, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 1081, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 1084, "col_offset": 9, "nodeName": "notify_about_variables", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 1084, "col_offset": 37, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1086, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1088, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1088, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 1100, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 1100, "col_offset": 38, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 1101, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "getter", "type": "Any"}, {"lineNumber": 1106, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1107, "col_offset": 6, "nodeName": "getter", "type": "Any"}, {"lineNumber": 1112, "col_offset": 9, "nodeName": "ExitStack", "type": "Any"}, {"lineNumber": 1113, "col_offset": 6, "nodeName": "enter_context", "type": "Any"}, {"lineNumber": 1126, "col_offset": 10, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1133, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1135, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1138, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "get_variables_in_module", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 53, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "s2", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "s1", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 91, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 109, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 114, "col_offset": 65, "nodeName": "s3", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 117, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 117, "col_offset": 70, "nodeName": "s1", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 119, "col_offset": 70, "nodeName": "name", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "s4", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 132, "col_offset": 70, "nodeName": "s4", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 134, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 134, "col_offset": 70, "nodeName": "name", "type": "Any"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 182, "col_offset": 41, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 187, "col_offset": 58, "nodeName": "items", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 194, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 195, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "saver", "type": "Any"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 231, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 43, "nodeName": "save_partitioned", "type": "Any"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "saver", "type": "Any"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "conv", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "sess", "type": "Any"}, {"lineNumber": 240, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 43, "nodeName": "load_partitioned", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "saver", "type": "Any"}, {"lineNumber": 244, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "conv", "type": "Any"}, {"lineNumber": 245, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "w", "type": "Any"}, {"lineNumber": 248, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 262, "col_offset": 44, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 316, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 382, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 384, "col_offset": 9, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 385, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 386, "col_offset": 18, "nodeName": "zero_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 386, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 390, "col_offset": 9, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 391, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 391, "col_offset": 44, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 394, "col_offset": 9, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 395, "col_offset": 44, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 400, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 410, "col_offset": 60, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 411, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "get_local_variable", "type": "Any"}, {"lineNumber": 415, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 415, "col_offset": 43, "nodeName": "v2", "type": "Any"}, {"lineNumber": 415, "col_offset": 47, "nodeName": "v1", "type": "Any"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 423, "col_offset": 60, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 424, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 426, "col_offset": 13, "nodeName": "get_local_variable", "type": "Any"}, {"lineNumber": 429, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 435, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "get_local_variable", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 443, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "get_local_variable", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "util", "type": "module"}, {"lineNumber": 481, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 481, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 483, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 484, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 484, "col_offset": 26, "nodeName": "expected_strings", "type": "Any"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 487, "col_offset": 34, "nodeName": "mocked_logging_info", "type": "Any"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "actual", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 489, "col_offset": 25, "nodeName": "expected", "type": "Any"}, {"lineNumber": 504, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 515, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 523, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 536, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 554, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 557, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 557, "col_offset": 40, "nodeName": "pm", "type": "Any"}, {"lineNumber": 558, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 558, "col_offset": 40, "nodeName": "pm", "type": "Any"}, {"lineNumber": 559, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 559, "col_offset": 41, "nodeName": "pm", "type": "Any"}, {"lineNumber": 560, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 560, "col_offset": 41, "nodeName": "pm", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 571, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 574, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 574, "col_offset": 40, "nodeName": "cm", "type": "Any"}, {"lineNumber": 576, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 576, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 577, "col_offset": 40, "nodeName": "cm", "type": "Any"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 578, "col_offset": 40, "nodeName": "cm", "type": "Any"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 593, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 593, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 598, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 601, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 607, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 612, "col_offset": 59, "nodeName": "name", "type": "str"}, {"lineNumber": 617, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 617, "col_offset": 40, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 624, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 624, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 630, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 630, "col_offset": 59, "nodeName": "in_size", "type": "int"}, {"lineNumber": 635, "col_offset": 33, "nodeName": "v", "type": "nothing"}, {"lineNumber": 635, "col_offset": 44, "nodeName": "v", "type": "nothing"}, {"lineNumber": 635, "col_offset": 49, "nodeName": "_all_variables", "type": "Set[nothing]"}, {"lineNumber": 639, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 639, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 650, "col_offset": 6, "nodeName": "layer", "type": "Any"}, {"lineNumber": 654, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 654, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 715, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 718, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 718, "col_offset": 59, "nodeName": "in_size", "type": "int"}, {"lineNumber": 734, "col_offset": 9, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 735, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 735, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 736, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 737, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 737, "col_offset": 22, "nodeName": "a1", "type": "Any"}, {"lineNumber": 737, "col_offset": 26, "nodeName": "inputs_plus_b1", "type": "Any"}, {"lineNumber": 737, "col_offset": 42, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 737, "col_offset": 59, "nodeName": "a2", "type": "Any"}, {"lineNumber": 737, "col_offset": 63, "nodeName": "inputs_plus_b2", "type": "Any"}, {"lineNumber": 738, "col_offset": 22, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 741, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 741, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 742, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 742, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 743, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 743, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 745, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 745, "col_offset": 43, "nodeName": "out", "type": "Any"}, {"lineNumber": 746, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 746, "col_offset": 43, "nodeName": "out", "type": "Any"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 748, "col_offset": 22, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 748, "col_offset": 39, "nodeName": "inputs_plus_ab1_again", "type": "Any"}, {"lineNumber": 750, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 750, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 750, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 752, "col_offset": 22, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 752, "col_offset": 39, "nodeName": "inputs_plus_ab2_again", "type": "Any"}, {"lineNumber": 754, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 754, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 754, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 765, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 773, "col_offset": 15, "nodeName": "_template", "type": "Any"}, {"lineNumber": 788, "col_offset": 9, "nodeName": "g1", "type": "Any"}, {"lineNumber": 789, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 790, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 792, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 792, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 793, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 793, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 795, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 795, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 796, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 796, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 798, "col_offset": 9, "nodeName": "g2", "type": "Any"}, {"lineNumber": 799, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 800, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 802, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 802, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 803, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 803, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 805, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 805, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 806, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 806, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 814, "col_offset": 12, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 815, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 815, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 819, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 827, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 842, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 843, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 844, "col_offset": 23, "nodeName": "op", "type": "Any"}, {"lineNumber": 845, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 846, "col_offset": 23, "nodeName": "op", "type": "Any"}, {"lineNumber": 947, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 948, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 948, "col_offset": 23, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 949, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 949, "col_offset": 20, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 950, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 950, "col_offset": 23, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 951, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 951, "col_offset": 20, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 955, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 956, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 959, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 961, "col_offset": 6, "nodeName": "container", "type": "Any"}, {"lineNumber": 965, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 966, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 973, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 973, "col_offset": 17, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "eager", "type": "Any"}, {"lineNumber": 982, "col_offset": 27, "nodeName": "module", "type": "Any"}, {"lineNumber": 991, "col_offset": 19, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 994, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 995, "col_offset": 19, "nodeName": "raw_module", "type": "Any"}, {"lineNumber": 995, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 997, "col_offset": 19, "nodeName": "raw_module", "type": "Any"}, {"lineNumber": 997, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 998, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1000, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1023, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 1024, "col_offset": 6, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 1043, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 1065, "col_offset": 9, "nodeName": "util", "type": "module"}, {"lineNumber": 1065, "col_offset": 37, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 1073, "col_offset": 6, "nodeName": "self", "type": "TestNotifyAboutVariables"}, {"lineNumber": 1076, "col_offset": 6, "nodeName": "self", "type": "TestNotifyAboutVariables"}, {"lineNumber": 1080, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1081, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1084, "col_offset": 9, "nodeName": "util", "type": "module"}, {"lineNumber": 1084, "col_offset": 37, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 1085, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1086, "col_offset": 12, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 1100, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1101, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1104, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1107, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1112, "col_offset": 9, "nodeName": "contextlib2", "type": "Any"}, {"lineNumber": 1113, "col_offset": 6, "nodeName": "stack", "type": "Any"}, {"lineNumber": 1113, "col_offset": 26, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1115, "col_offset": 11, "nodeName": "stack_entry", "type": "Any"}, {"lineNumber": 1126, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1133, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1133, "col_offset": 24, "nodeName": "name", "type": "nothing"}, {"lineNumber": 1135, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1135, "col_offset": 24, "nodeName": "name", "type": "nothing"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "s2", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 70, "nodeName": "s1", "type": "Any"}, {"lineNumber": 134, "col_offset": 70, "nodeName": "s4", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "op", "type": "Any"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "key", "type": "Any"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "var", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 262, "col_offset": 44, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 347, "col_offset": 17, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 385, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 385, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 385, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 386, "col_offset": 18, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 386, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 414, "col_offset": 45, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 426, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 427, "col_offset": 45, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 481, "col_offset": 9, "nodeName": "mock", "type": "module"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "mocked_logging_info", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 593, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 612, "col_offset": 6, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 612, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 617, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 621, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 621, "col_offset": 49, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 624, "col_offset": 33, "nodeName": "a", "type": "Any"}, {"lineNumber": 632, "col_offset": 39, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 635, "col_offset": 49, "nodeName": "module", "type": "Any"}, {"lineNumber": 639, "col_offset": 49, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 644, "col_offset": 34, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 645, "col_offset": 34, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 646, "col_offset": 34, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 654, "col_offset": 49, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 668, "col_offset": 26, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 676, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 677, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 679, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 680, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 686, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 687, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 689, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 690, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 696, "col_offset": 26, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 704, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 705, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 706, "col_offset": 33, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 707, "col_offset": 33, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 709, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 710, "col_offset": 33, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 711, "col_offset": 33, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 712, "col_offset": 33, "nodeName": "not_inherited_method_with_reuse", "type": "Any"}, {"lineNumber": 720, "col_offset": 40, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 721, "col_offset": 40, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 735, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 736, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 739, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 739, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 741, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 742, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 743, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 745, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 745, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 746, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 746, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 749, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 749, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 753, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 753, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 761, "col_offset": 46, "nodeName": "name", "type": "str"}, {"lineNumber": 773, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 814, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 819, "col_offset": 24, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 823, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 823, "col_offset": 36, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 823, "col_offset": 47, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 827, "col_offset": 23, "nodeName": "get_operations", "type": "Any"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "tensor_names", "type": "List[Any]"}, {"lineNumber": 833, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 840, "col_offset": 41, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 840, "col_offset": 52, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 841, "col_offset": 43, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 841, "col_offset": 54, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 848, "col_offset": 41, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 848, "col_offset": 52, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 849, "col_offset": 43, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 849, "col_offset": 54, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 851, "col_offset": 46, "nodeName": "nested_add", "type": "Any"}, {"lineNumber": 851, "col_offset": 62, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 852, "col_offset": 48, "nodeName": "nested_add", "type": "Any"}, {"lineNumber": 852, "col_offset": 64, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 855, "col_offset": 41, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 855, "col_offset": 52, "nodeName": "ones", "type": "Any"}, {"lineNumber": 856, "col_offset": 43, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 856, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 858, "col_offset": 41, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 858, "col_offset": 52, "nodeName": "ones", "type": "Any"}, {"lineNumber": 859, "col_offset": 43, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 859, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 861, "col_offset": 46, "nodeName": "nested_add", "type": "Any"}, {"lineNumber": 861, "col_offset": 62, "nodeName": "ones", "type": "Any"}, {"lineNumber": 862, "col_offset": 48, "nodeName": "nested_add", "type": "Any"}, {"lineNumber": 862, "col_offset": 64, "nodeName": "ones", "type": "Any"}, {"lineNumber": 948, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 949, "col_offset": 20, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 950, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 951, "col_offset": 20, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 973, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 991, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 994, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 995, "col_offset": 36, "nodeName": "raw_module", "type": "Any"}, {"lineNumber": 997, "col_offset": 36, "nodeName": "raw_module", "type": "Any"}, {"lineNumber": 998, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1025, "col_offset": 24, "nodeName": "camel_case", "type": "str"}, {"lineNumber": 1025, "col_offset": 36, "nodeName": "actual", "type": "str"}, {"lineNumber": 1025, "col_offset": 44, "nodeName": "snake_case", "type": "str"}, {"lineNumber": 1085, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1085, "col_offset": 46, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 1086, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1113, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1113, "col_offset": 61, "nodeName": "use_resource", "type": "Any"}, {"lineNumber": 1116, "col_offset": 10, "nodeName": "enter_context", "type": "Any"}, {"lineNumber": 1117, "col_offset": 13, "nodeName": "stack_entry", "type": "Any"}, {"lineNumber": 1133, "col_offset": 24, "nodeName": "v", "type": "nothing"}, {"lineNumber": 1133, "col_offset": 35, "nodeName": "v", "type": "nothing"}, {"lineNumber": 1133, "col_offset": 40, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 1135, "col_offset": 24, "nodeName": "v", "type": "nothing"}, {"lineNumber": 1135, "col_offset": 35, "nodeName": "v", "type": "nothing"}, {"lineNumber": 1135, "col_offset": 40, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 262, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 385, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 386, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 489, "col_offset": 35, "nodeName": "actual_args", "type": "Any"}, {"lineNumber": 489, "col_offset": 52, "nodeName": "actual_args", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 621, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 624, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 632, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 639, "col_offset": 49, "nodeName": "module", "type": "Any"}, {"lineNumber": 654, "col_offset": 49, "nodeName": "seq", "type": "sonnet.python.modules.sequential.Sequential"}, {"lineNumber": 668, "col_offset": 26, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 676, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 677, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 679, "col_offset": 33, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 680, "col_offset": 33, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 686, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 687, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 689, "col_offset": 33, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 690, "col_offset": 33, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 696, "col_offset": 26, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 704, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 705, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 706, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 707, "col_offset": 33, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 709, "col_offset": 33, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 710, "col_offset": 33, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 711, "col_offset": 33, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 712, "col_offset": 33, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 720, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 721, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 741, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 741, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 742, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 742, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 742, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 743, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 743, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 743, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 761, "col_offset": 14, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 761, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 792, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 793, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 795, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 796, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 802, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 803, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 805, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 806, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 819, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 823, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 823, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 828, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 828, "col_offset": 62, "nodeName": "name", "type": "Any"}, {"lineNumber": 829, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 833, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 833, "col_offset": 44, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 833, "col_offset": 54, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 840, "col_offset": 41, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 841, "col_offset": 43, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 844, "col_offset": 23, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 844, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 846, "col_offset": 23, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 846, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 848, "col_offset": 41, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 849, "col_offset": 43, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 851, "col_offset": 46, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 852, "col_offset": 48, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 855, "col_offset": 41, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 856, "col_offset": 43, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 858, "col_offset": 41, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 859, "col_offset": 43, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 861, "col_offset": 46, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 862, "col_offset": 48, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1116, "col_offset": 10, "nodeName": "stack", "type": "Any"}, {"lineNumber": 1116, "col_offset": 30, "nodeName": "notify_about_variables", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 1116, "col_offset": 58, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1118, "col_offset": 10, "nodeName": "enter_context", "type": "Any"}, {"lineNumber": 1120, "col_offset": 13, "nodeName": "stack_entry", "type": "Any"}, {"lineNumber": 1124, "col_offset": 16, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 644, "col_offset": 34, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 645, "col_offset": 34, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 646, "col_offset": 34, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 792, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 793, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 795, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 796, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 802, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 803, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 805, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 806, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 827, "col_offset": 23, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 828, "col_offset": 34, "nodeName": "op", "type": "Any"}, {"lineNumber": 828, "col_offset": 62, "nodeName": "op", "type": "Any"}, {"lineNumber": 829, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 833, "col_offset": 54, "nodeName": "op", "type": "Any"}, {"lineNumber": 844, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 846, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 1116, "col_offset": 30, "nodeName": "util", "type": "module"}, {"lineNumber": 1116, "col_offset": 58, "nodeName": "variables", "type": "List[nothing]"}, {"lineNumber": 1118, "col_offset": 10, "nodeName": "stack", "type": "Any"}, {"lineNumber": 1119, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1121, "col_offset": 10, "nodeName": "enter_context", "type": "Any"}, {"lineNumber": 644, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 645, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 646, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 827, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1119, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1119, "col_offset": 50, "nodeName": "my_custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 1121, "col_offset": 10, "nodeName": "stack", "type": "Any"}, {"lineNumber": 1122, "col_offset": 14, "nodeName": "variable_creator_scope", "type": "Any"}, {"lineNumber": 1122, "col_offset": 56, "nodeName": "my_custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 1122, "col_offset": 14, "nodeName": "variable_scope_ops", "type": "Any"}]