[{"lineNumber": 541, "col_offset": 0, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "tfe", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "eager", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "logging", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "logging", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 647, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 708, "col_offset": 16, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "base", "type": "module"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "base", "type": "module"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "base", "type": "module"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "base", "type": "module"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "base", "type": "module"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "base", "type": "module"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "base", "type": "module"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "test", "type": "Any"}, {"lineNumber": 542, "col_offset": 2, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 543, "col_offset": 2, "nodeName": "weight", "type": "Any"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 647, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 697, "col_offset": 19, "nodeName": "base", "type": "module"}, {"lineNumber": 699, "col_offset": 2, "nodeName": "call_count", "type": "int"}, {"lineNumber": 708, "col_offset": 16, "nodeName": "test", "type": "Any"}, {"lineNumber": 752, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "_w", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "_b", "type": "SimpleModule"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "_submodule_a", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "submodule_a", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "_submodule_b", "type": "Any"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "submodule_b", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "c", "type": "SimpleModule"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "d", "type": "ComplexModule"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "PY2", "type": "bool"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "connected_subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "module", "type": "NoInitIdentityModule"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "module", "type": "NoSuperInitIdentityModule"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "module", "type": "IdentityModule"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "submodule_a_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "submodule_a_all_variables", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "submodule_b_variables", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "all_variables", "type": "Any"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "all_variables", "type": "Any"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "all_variables", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "cond", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "module_a", "type": "SimpleModule"}, {"lineNumber": 497, "col_offset": 4, "nodeName": "module_b", "type": "SimpleModule"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "all_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "outer", "type": "ComplexModule"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "inner1", "type": "Any"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "_b", "type": "Any"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "inner2", "type": "Any"}, {"lineNumber": 523, "col_offset": 13, "nodeName": "_b", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "my_module", "type": "SimpleModule"}, {"lineNumber": 542, "col_offset": 52, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 543, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 544, "col_offset": 9, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 544, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 544, "col_offset": 27, "nodeName": "weight", "type": "Any"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "build", "type": "functools.partial[nothing]"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 567, "col_offset": 4, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 647, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "activation_module", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "complex_module", "type": "ComplexModule"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "call_count", "type": "int"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 708, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 718, "col_offset": 4, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 720, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 721, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 753, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "custom_key", "type": "bool"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_b", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "_b", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "_a", "type": "SimpleModule"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "_b", "type": "SimpleModule"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "six", "type": "module"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "msg", "type": "str"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "msg", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 169, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 197, "col_offset": 6, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 200, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 211, "col_offset": 14, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 6, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 214, "col_offset": 6, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 221, "col_offset": 18, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 226, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 227, "col_offset": 49, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 247, "col_offset": 6, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 250, "col_offset": 6, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 256, "col_offset": 6, "nodeName": "connected_subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 275, "col_offset": 13, "nodeName": "NoSuperInitIdentityModule", "type": "Type[NoSuperInitIdentityModule]"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 296, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 300, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 304, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 308, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 316, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 323, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 338, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 342, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 354, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 356, "col_offset": 6, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 361, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 365, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "ModuleWithSubmodules", "type": "Type[ModuleWithSubmodules]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 389, "col_offset": 32, "nodeName": "all_trainable_variables", "type": "Any"}, {"lineNumber": 389, "col_offset": 56, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 390, "col_offset": 37, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "submodule_a_variable_names", "type": "List[str]"}, {"lineNumber": 392, "col_offset": 49, "nodeName": "submodule_a_all_variable_names", "type": "List[str]"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 396, "col_offset": 7, "nodeName": "submodule_a_variable_names", "type": "List[str]"}, {"lineNumber": 399, "col_offset": 28, "nodeName": "all_trainable_variables", "type": "Any"}, {"lineNumber": 399, "col_offset": 52, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 400, "col_offset": 33, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 407, "col_offset": 7, "nodeName": "submodule_b_variable_names", "type": "List[str]"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "all_trainable_variables", "type": "Any"}, {"lineNumber": 409, "col_offset": 44, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 424, "col_offset": 7, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "ModuleWithSubmodules", "type": "Type[ModuleWithSubmodules]"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "all_trainable_variables", "type": "Any"}, {"lineNumber": 434, "col_offset": 44, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 449, "col_offset": 7, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 463, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 466, "col_offset": 6, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 467, "col_offset": 6, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "local_module", "type": "ModuleWithSubmodules"}, {"lineNumber": 470, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 476, "col_offset": 20, "nodeName": "get_non_trainable_variables", "type": "Any"}, {"lineNumber": 476, "col_offset": 48, "nodeName": "local_module", "type": "ModuleWithSubmodules"}, {"lineNumber": 477, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 491, "col_offset": 7, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 494, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "cond", "type": "Any"}, {"lineNumber": 501, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "msg", "type": "str"}, {"lineNumber": 508, "col_offset": 6, "nodeName": "all_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 509, "col_offset": 6, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 513, "col_offset": 20, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 514, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 515, "col_offset": 55, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "outer", "type": "ComplexModule"}, {"lineNumber": 521, "col_offset": 13, "nodeName": "outer", "type": "ComplexModule"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "outer", "type": "ComplexModule"}, {"lineNumber": 523, "col_offset": 13, "nodeName": "outer", "type": "ComplexModule"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "assertIsNot", "type": "Any"}, {"lineNumber": 527, "col_offset": 21, "nodeName": "inner1", "type": "Any"}, {"lineNumber": 527, "col_offset": 29, "nodeName": "inner2", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "assertNotEmpty", "type": "Any"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "variables", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "variables", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "v1", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "v2", "type": "Any"}, {"lineNumber": 530, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 530, "col_offset": 22, "nodeName": "variables", "type": "Any"}, {"lineNumber": 530, "col_offset": 40, "nodeName": "variables", "type": "Any"}, {"lineNumber": 534, "col_offset": 16, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 538, "col_offset": 21, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 538, "col_offset": 49, "nodeName": "__doc__", "type": "str"}, {"lineNumber": 543, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 543, "col_offset": 38, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 543, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 544, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 551, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 559, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 559, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 559, "col_offset": 44, "nodeName": "in_size", "type": "int"}, {"lineNumber": 560, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 560, "col_offset": 26, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 561, "col_offset": 14, "nodeName": "constant", "type": "Any"}, {"lineNumber": 561, "col_offset": 26, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 563, "col_offset": 30, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 564, "col_offset": 24, "nodeName": "build", "type": "functools.partial[nothing]"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 566, "col_offset": 21, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 567, "col_offset": 21, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 570, "col_offset": 14, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 570, "col_offset": 25, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 571, "col_offset": 24, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 571, "col_offset": 34, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 575, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 576, "col_offset": 6, "nodeName": "b", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 585, "col_offset": 38, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 587, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 590, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 594, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 598, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 602, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 606, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 610, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 617, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 625, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 626, "col_offset": 6, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 633, "col_offset": 36, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 634, "col_offset": 6, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 636, "col_offset": 6, "nodeName": "id_b", "type": "IdentityModule"}, {"lineNumber": 638, "col_offset": 36, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 639, "col_offset": 6, "nodeName": "id_c", "type": "IdentityModule"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "graph", "type": "Any"}, {"lineNumber": 641, "col_offset": 33, "nodeName": "graph", "type": "Any"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 642, "col_offset": 21, "nodeName": "graph", "type": "Any"}, {"lineNumber": 642, "col_offset": 33, "nodeName": "graph_1", "type": "Any"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "graph", "type": "Any"}, {"lineNumber": 643, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 644, "col_offset": 21, "nodeName": "graph", "type": "Any"}, {"lineNumber": 644, "col_offset": 33, "nodeName": "graph_2", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "append", "type": "Any"}, {"lineNumber": 650, "col_offset": 37, "nodeName": "subgraph", "type": "Any"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 653, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 657, "col_offset": 24, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 657, "col_offset": 36, "nodeName": "relu", "type": "Any"}, {"lineNumber": 659, "col_offset": 6, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 663, "col_offset": 18, "nodeName": "activation_module", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 663, "col_offset": 37, "nodeName": "module", "type": "nothing"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 664, "col_offset": 18, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 665, "col_offset": 18, "nodeName": "outputs", "type": "nothing"}, {"lineNumber": 665, "col_offset": 56, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 670, "col_offset": 6, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 674, "col_offset": 18, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 674, "col_offset": 33, "nodeName": "module", "type": "nothing"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 675, "col_offset": 18, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 676, "col_offset": 18, "nodeName": "outputs", "type": "nothing"}, {"lineNumber": 676, "col_offset": 56, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 679, "col_offset": 21, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 681, "col_offset": 6, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 685, "col_offset": 26, "nodeName": "module", "type": "nothing"}, {"lineNumber": 685, "col_offset": 63, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 688, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 688, "col_offset": 26, "nodeName": "module", "type": "nothing"}, {"lineNumber": 688, "col_offset": 63, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 689, "col_offset": 18, "nodeName": "outputs", "type": "nothing"}, {"lineNumber": 691, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 691, "col_offset": 18, "nodeName": "outputs", "type": "nothing"}, {"lineNumber": 691, "col_offset": 56, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 693, "col_offset": 18, "nodeName": "complex_module", "type": "ComplexModule"}, {"lineNumber": 693, "col_offset": 34, "nodeName": "module", "type": "nothing"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 694, "col_offset": 18, "nodeName": "outputs", "type": "nothing"}, {"lineNumber": 694, "col_offset": 56, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "self", "type": "MatMulModule"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "self", "type": "MatMulModule"}, {"lineNumber": 703, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 704, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "MatMulModule", "type": "Type[MatMulModule]"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 712, "col_offset": 21, "nodeName": "defun_wrapped", "type": "Any"}, {"lineNumber": 713, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 718, "col_offset": 13, "nodeName": "MatMulModule", "type": "Type[MatMulModule]"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "defun", "type": "Callable[[], None]"}, {"lineNumber": 721, "col_offset": 13, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 725, "col_offset": 13, "nodeName": "MatMulModule", "type": "Type[MatMulModule]"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "defun", "type": "Callable[[], None]"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 730, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 732, "col_offset": 21, "nodeName": "call_count", "type": "int"}, {"lineNumber": 736, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 737, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 739, "col_offset": 21, "nodeName": "call_count", "type": "int"}, {"lineNumber": 742, "col_offset": 13, "nodeName": "MatMulModule", "type": "Type[MatMulModule]"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "defun", "type": "Callable[[], None]"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 745, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 746, "col_offset": 6, "nodeName": "msg", "type": "str"}, {"lineNumber": 753, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "name", "type": "str"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "_enter_variable_scope", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "_w", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "custom_getter", "type": "None"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "name", "type": "str"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "_enter_variable_scope", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "_a", "type": "SimpleModule"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "custom_getter", "type": "Any"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "d", "type": "ComplexModule"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "_submodule_b", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "ModuleWithClassKeys", "type": "Type[ModuleWithClassKeys]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "ModuleWithNoInitializerKeys", "type": "Type[ModuleWithNoInitializerKeys]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 158, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 159, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "graph", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 169, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 182, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 191, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 197, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 200, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 221, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 221, "col_offset": 50, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 249, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 251, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 256, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 265, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "module", "type": "NoInitIdentityModule"}, {"lineNumber": 276, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "NotInitializedError", "type": "Type[sonnet.python.modules.base_errors.NotInitializedError]"}, {"lineNumber": 277, "col_offset": 6, "nodeName": "module", "type": "NoSuperInitIdentityModule"}, {"lineNumber": 281, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 284, "col_offset": 6, "nodeName": "dumps", "type": "Callable[..., bytes]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "module", "type": "IdentityModule"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 293, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 295, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 297, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 298, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 301, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 305, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 306, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 309, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 313, "col_offset": 6, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 335, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 337, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 339, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 340, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 343, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 343, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 344, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 348, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 350, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 351, "col_offset": 47, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 352, "col_offset": 47, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 355, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 357, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 358, "col_offset": 47, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 359, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 359, "col_offset": 47, "nodeName": "trainable_names", "type": "List[Any]"}, {"lineNumber": 361, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 362, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 363, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 366, "col_offset": 6, "nodeName": "module", "type": "ComplexModule"}, {"lineNumber": 366, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 367, "col_offset": 6, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 379, "col_offset": 45, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 380, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 382, "col_offset": 6, "nodeName": "all_trainable_variables", "type": "Any"}, {"lineNumber": 382, "col_offset": 30, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 431, "col_offset": 20, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 431, "col_offset": 45, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 461, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 463, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 465, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 466, "col_offset": 20, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 467, "col_offset": 20, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 468, "col_offset": 21, "nodeName": "ModuleWithSubmodules", "type": "Type[ModuleWithSubmodules]"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 21, "nodeName": "all_variables", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "local_variables", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 494, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 494, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 495, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 499, "col_offset": 16, "nodeName": "cond", "type": "Any"}, {"lineNumber": 501, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 508, "col_offset": 22, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 509, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 510, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 510, "col_offset": 57, "nodeName": "all_variable_names", "type": "List[str]"}, {"lineNumber": 513, "col_offset": 20, "nodeName": "module_b", "type": "SimpleModule"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 519, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 520, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 522, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "inner1", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "inner2", "type": "Any"}, {"lineNumber": 529, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 529, "col_offset": 41, "nodeName": "variables", "type": "Any"}, {"lineNumber": 530, "col_offset": 22, "nodeName": "inner1", "type": "Any"}, {"lineNumber": 530, "col_offset": 40, "nodeName": "inner2", "type": "Any"}, {"lineNumber": 531, "col_offset": 6, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 531, "col_offset": 20, "nodeName": "v1", "type": "Any"}, {"lineNumber": 531, "col_offset": 24, "nodeName": "v2", "type": "Any"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "getargspec", "type": "Callable[[object], inspect.ArgSpec]"}, {"lineNumber": 536, "col_offset": 27, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "getargspec", "type": "Callable[[object], inspect.ArgSpec]"}, {"lineNumber": 537, "col_offset": 27, "nodeName": "_build", "type": "Callable[[Any], Any]"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 538, "col_offset": 21, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 538, "col_offset": 49, "nodeName": "_build", "type": "Callable[[Any], Any]"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 543, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 551, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 551, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 552, "col_offset": 6, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 554, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "exception", "type": "Any"}, {"lineNumber": 559, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 560, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 561, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "functools", "type": "module"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "base", "type": "module"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 569, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 570, "col_offset": 25, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 570, "col_offset": 40, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 570, "col_offset": 50, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 576, "col_offset": 10, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 577, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 582, "col_offset": 6, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 583, "col_offset": 13, "nodeName": "getter", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 585, "col_offset": 38, "nodeName": "base", "type": "module"}, {"lineNumber": 585, "col_offset": 57, "nodeName": "simple_module_build", "type": "Callable[[Any], Any]"}, {"lineNumber": 587, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 587, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 589, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 591, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 592, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 595, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 595, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 598, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 599, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 599, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 600, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 603, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 603, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 604, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 607, "col_offset": 6, "nodeName": "module", "type": "nothing"}, {"lineNumber": 607, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 608, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "module", "type": "nothing"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "module", "type": "nothing"}, {"lineNumber": 624, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 625, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 626, "col_offset": 22, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 627, "col_offset": 6, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 627, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 629, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 633, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 634, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 635, "col_offset": 6, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 636, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 637, "col_offset": 6, "nodeName": "id_b", "type": "IdentityModule"}, {"lineNumber": 638, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 639, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 640, "col_offset": 6, "nodeName": "id_c", "type": "IdentityModule"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 641, "col_offset": 33, "nodeName": "id_b", "type": "IdentityModule"}, {"lineNumber": 642, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 642, "col_offset": 21, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "id_a", "type": "IdentityModule"}, {"lineNumber": 643, "col_offset": 36, "nodeName": "id_c", "type": "IdentityModule"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 644, "col_offset": 21, "nodeName": "id_c", "type": "IdentityModule"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "_connected_subgraphs", "type": "Any"}, {"lineNumber": 653, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 657, "col_offset": 24, "nodeName": "base", "type": "module"}, {"lineNumber": 657, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 658, "col_offset": 9, "nodeName": "observe_connections", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 658, "col_offset": 34, "nodeName": "_connection_observer", "type": "Callable[[Any], Any]"}, {"lineNumber": 659, "col_offset": 16, "nodeName": "activation_module", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 659, "col_offset": 34, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 661, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 664, "col_offset": 18, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 669, "col_offset": 9, "nodeName": "observe_connections", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 669, "col_offset": 34, "nodeName": "_connection_observer", "type": "Callable[[Any], Any]"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 670, "col_offset": 30, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 672, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 672, "col_offset": 28, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 675, "col_offset": 18, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 675, "col_offset": 32, "nodeName": "inputs", "type": "nothing"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 680, "col_offset": 9, "nodeName": "observe_connections", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 680, "col_offset": 34, "nodeName": "_connection_observer", "type": "Callable[[Any], Any]"}, {"lineNumber": 681, "col_offset": 16, "nodeName": "complex_module", "type": "ComplexModule"}, {"lineNumber": 681, "col_offset": 31, "nodeName": "_inputs", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 683, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 683, "col_offset": 28, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 686, "col_offset": 32, "nodeName": "inputs", "type": "nothing"}, {"lineNumber": 688, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 690, "col_offset": 18, "nodeName": "inputs", "type": "nothing"}, {"lineNumber": 691, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 703, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 704, "col_offset": 15, "nodeName": "self", "type": "MatMulModule"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "self", "type": "DefunTest"}, {"lineNumber": 712, "col_offset": 21, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 714, "col_offset": 6, "nodeName": "defun", "type": "Callable[[], None]"}, {"lineNumber": 715, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 715, "col_offset": 22, "nodeName": "defun_wrapped", "type": "Any"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "self", "type": "DefunTest"}, {"lineNumber": 722, "col_offset": 25, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 722, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 730, "col_offset": 15, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 731, "col_offset": 6, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 732, "col_offset": 4, "nodeName": "self", "type": "DefunTest"}, {"lineNumber": 732, "col_offset": 21, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 737, "col_offset": 15, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 738, "col_offset": 6, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "self", "type": "DefunTest"}, {"lineNumber": 739, "col_offset": 21, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 744, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 745, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 750, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 753, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "ComplexModule", "type": "Type[ComplexModule]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "self", "type": "ComplexModule"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "ModuleWithSubmodules", "type": "Type[ModuleWithSubmodules]"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "_submodule_a", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 131, "col_offset": 61, "nodeName": "c", "type": "SimpleModule"}, {"lineNumber": 131, "col_offset": 63, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "DifferentGraphError", "type": "Type[sonnet.python.modules.base_errors.DifferentGraphError]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 170, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 182, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 239, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 249, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 265, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 276, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 281, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 284, "col_offset": 6, "nodeName": "pickle", "type": "module"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 295, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 298, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 298, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 300, "col_offset": 42, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 306, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 306, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 310, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 310, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 317, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "module", "type": "SimpleModule"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 324, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 324, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 326, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 326, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 333, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 333, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 335, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 337, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 342, "col_offset": 43, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 344, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 349, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 350, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 351, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 352, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 356, "col_offset": 36, "nodeName": "v", "type": "Any"}, {"lineNumber": 357, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 359, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 363, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 367, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 380, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 388, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 388, "col_offset": 30, "nodeName": "submodule_a_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 391, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 391, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "submodule_a_all_variables", "type": "Any"}, {"lineNumber": 401, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 401, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "submodule_b_variables", "type": "Any"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 410, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 410, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 410, "col_offset": 54, "nodeName": "all_variables", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "module", "type": "ModuleWithSubmodules"}, {"lineNumber": 427, "col_offset": 44, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 435, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 435, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 435, "col_offset": 54, "nodeName": "all_variables", "type": "Any"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 458, "col_offset": 34, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 460, "col_offset": 33, "nodeName": "LOCAL_VARIABLES", "type": "Any"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 461, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 465, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 465, "col_offset": 45, "nodeName": "local_custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 469, "col_offset": 22, "nodeName": "submodule_a", "type": "SimpleModule"}, {"lineNumber": 469, "col_offset": 47, "nodeName": "submodule_b", "type": "ComplexModule"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "local_module", "type": "ModuleWithSubmodules"}, {"lineNumber": 473, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 474, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 477, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 477, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 477, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 477, "col_offset": 54, "nodeName": "all_variables", "type": "Any"}, {"lineNumber": 494, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 499, "col_offset": 34, "nodeName": "module_a", "type": "SimpleModule"}, {"lineNumber": 499, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 499, "col_offset": 60, "nodeName": "module_b", "type": "SimpleModule"}, {"lineNumber": 499, "col_offset": 69, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 504, "col_offset": 35, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 504, "col_offset": 59, "nodeName": "msg", "type": "str"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "get_all_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 508, "col_offset": 22, "nodeName": "module_a", "type": "SimpleModule"}, {"lineNumber": 510, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 514, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 514, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 514, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 514, "col_offset": 54, "nodeName": "all_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 520, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 522, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 529, "col_offset": 41, "nodeName": "inner1", "type": "Any"}, {"lineNumber": 531, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "inspect", "type": "module"}, {"lineNumber": 536, "col_offset": 27, "nodeName": "my_module", "type": "SimpleModule"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "inspect", "type": "module"}, {"lineNumber": 537, "col_offset": 27, "nodeName": "my_module", "type": "SimpleModule"}, {"lineNumber": 538, "col_offset": 21, "nodeName": "my_module", "type": "SimpleModule"}, {"lineNumber": 538, "col_offset": 49, "nodeName": "my_module", "type": "SimpleModule"}, {"lineNumber": 551, "col_offset": 9, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 552, "col_offset": 6, "nodeName": "base", "type": "module"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "cm", "type": "Any"}, {"lineNumber": 559, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 569, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 575, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 576, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 576, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 577, "col_offset": 13, "nodeName": "w", "type": "Any"}, {"lineNumber": 577, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 583, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 583, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 587, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 589, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 592, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 592, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 594, "col_offset": 43, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 596, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 600, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 600, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 604, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 604, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 608, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 608, "col_offset": 26, "nodeName": "connection_count", "type": "Dict[str, int]"}, {"lineNumber": 611, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 611, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 611, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 612, "col_offset": 17, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "module", "type": "nothing"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 618, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 618, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 618, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 619, "col_offset": 17, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 620, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 620, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 620, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 621, "col_offset": 17, "nodeName": "create_module", "type": "functools.partial[nothing]"}, {"lineNumber": 625, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 625, "col_offset": 27, "nodeName": "rand", "type": "Any"}, {"lineNumber": 625, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 629, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 629, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 630, "col_offset": 25, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 635, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 640, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 653, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 657, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 658, "col_offset": 9, "nodeName": "base", "type": "module"}, {"lineNumber": 658, "col_offset": 34, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 659, "col_offset": 34, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 663, "col_offset": 37, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 664, "col_offset": 32, "nodeName": "inputs", "type": "nothing"}, {"lineNumber": 665, "col_offset": 18, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 669, "col_offset": 9, "nodeName": "base", "type": "module"}, {"lineNumber": 669, "col_offset": 34, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 670, "col_offset": 30, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 672, "col_offset": 28, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 674, "col_offset": 33, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 676, "col_offset": 18, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 680, "col_offset": 9, "nodeName": "base", "type": "module"}, {"lineNumber": 680, "col_offset": 34, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 681, "col_offset": 31, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 683, "col_offset": 28, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 685, "col_offset": 26, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 688, "col_offset": 26, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 689, "col_offset": 18, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 691, "col_offset": 18, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 693, "col_offset": 34, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 694, "col_offset": 18, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 703, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 714, "col_offset": 6, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 715, "col_offset": 6, "nodeName": "self", "type": "DefunTest"}, {"lineNumber": 715, "col_offset": 22, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 721, "col_offset": 30, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 722, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 730, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 731, "col_offset": 6, "nodeName": "self", "type": "DefunTest"}, {"lineNumber": 731, "col_offset": 27, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 731, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 737, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 738, "col_offset": 6, "nodeName": "self", "type": "DefunTest"}, {"lineNumber": 738, "col_offset": 27, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 738, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 744, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 747, "col_offset": 35, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 747, "col_offset": 54, "nodeName": "msg", "type": "str"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 750, "col_offset": 6, "nodeName": "self", "type": "DefunTest"}, {"lineNumber": 750, "col_offset": 23, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 750, "col_offset": 48, "nodeName": "w", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "self", "type": "ModuleWithSubmodules"}, {"lineNumber": 158, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "base", "type": "module"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 48, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 50, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 49, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 346, "col_offset": 52, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 41, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 354, "col_offset": 52, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 356, "col_offset": 41, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 361, "col_offset": 50, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 365, "col_offset": 49, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 401, "col_offset": 13, "nodeName": "v", "type": "Any"}, {"lineNumber": 410, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 427, "col_offset": 44, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 457, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool, List[Any]]]"}, {"lineNumber": 458, "col_offset": 34, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 460, "col_offset": 33, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 477, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 504, "col_offset": 35, "nodeName": "base", "type": "module"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "module_a", "type": "SimpleModule"}, {"lineNumber": 509, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 509, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 509, "col_offset": 51, "nodeName": "v", "type": "Any"}, {"lineNumber": 509, "col_offset": 56, "nodeName": "all_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 514, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 575, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 576, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 598, "col_offset": 49, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 602, "col_offset": 51, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 606, "col_offset": 50, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 11, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 618, "col_offset": 11, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 620, "col_offset": 11, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 624, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 625, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 625, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 629, "col_offset": 27, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 630, "col_offset": 25, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 633, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 635, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 635, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 637, "col_offset": 23, "nodeName": "ones", "type": "Any"}, {"lineNumber": 638, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 640, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 640, "col_offset": 23, "nodeName": "eye", "type": "Any"}, {"lineNumber": 663, "col_offset": 37, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 665, "col_offset": 18, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 674, "col_offset": 33, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 675, "col_offset": 32, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 676, "col_offset": 18, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 685, "col_offset": 26, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 686, "col_offset": 32, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 688, "col_offset": 26, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 689, "col_offset": 18, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 690, "col_offset": 18, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 691, "col_offset": 18, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 693, "col_offset": 34, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 694, "col_offset": 18, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 703, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 722, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 730, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 730, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 731, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 737, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 737, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 738, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 747, "col_offset": 11, "nodeName": "self", "type": "DefunTest"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 750, "col_offset": 23, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 750, "col_offset": 48, "nodeName": "module", "type": "MatMulModule"}, {"lineNumber": 158, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 33, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 319, "col_offset": 55, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 356, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 427, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 458, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 460, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 509, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 613, "col_offset": 33, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 613, "col_offset": 55, "nodeName": "custom_getter", "type": "Callable[..., Any]"}, {"lineNumber": 624, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 625, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 629, "col_offset": 27, "nodeName": "simple_module", "type": "SimpleModule"}, {"lineNumber": 633, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 635, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 637, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 638, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 640, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 664, "col_offset": 32, "nodeName": "_connected_subgraphs", "type": "List[nothing]"}, {"lineNumber": 675, "col_offset": 32, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 686, "col_offset": 32, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 690, "col_offset": 18, "nodeName": "self", "type": "ConnectionObserverTest"}, {"lineNumber": 731, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 738, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 664, "col_offset": 32, "nodeName": "self", "type": "ConnectionObserverTest"}]