[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 419, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 419, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1067, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1067, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1313, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1313, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1785, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1785, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2136, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2136, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2304, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2304, "col_offset": 48, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2360, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2360, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2673, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2673, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3105, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3105, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3528, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3528, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 4089, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 4089, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 205, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 206, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "SAME", "type": "str"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "VALID", "type": "str"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "FULL", "type": "str"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "CAUSAL", "type": "str"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "REVERSE_CAUSAL", "type": "str"}, {"lineNumber": 419, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 419, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1067, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1067, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1313, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1313, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1785, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1785, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1788, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1789, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1790, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1791, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1792, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1793, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1794, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1795, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1796, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1797, "col_offset": 2, "nodeName": "use_output_shape", "type": "List[bool]"}, {"lineNumber": 1805, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1806, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1807, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1808, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1809, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 2136, "col_offset": 23, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2136, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 2304, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2304, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 2360, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2360, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2673, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2673, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3105, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3105, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3528, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3528, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 4089, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 4089, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 4345, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "CAUSAL", "type": "str"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 289, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 337, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 349, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 360, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "out3", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 411, "col_offset": 45, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 414, "col_offset": 47, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 415, "col_offset": 55, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 419, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 471, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 484, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 485, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 699, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 743, "col_offset": 41, "nodeName": "padding_and_expected_out", "type": "Any"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 756, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 904, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 909, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 916, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 917, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 965, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 966, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 978, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 995, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 999, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1008, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1025, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1035, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1047, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1048, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1058, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1067, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1074, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1075, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 1082, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1089, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1116, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1126, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1132, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1141, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1142, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1152, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1176, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1177, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1182, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1183, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1184, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1191, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1192, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1213, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1233, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1238, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1239, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1240, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1241, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1255, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1266, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1277, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1286, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1292, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1293, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1308, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1313, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1323, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1324, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1325, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1326, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1328, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1346, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1363, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1374, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1375, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1376, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1376, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1377, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1416, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1430, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1452, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1465, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1484, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1495, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1496, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1522, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1535, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1536, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1564, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1566, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1579, "col_offset": 28, "nodeName": "padding_and_expected_out", "type": "Any"}, {"lineNumber": 1590, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1591, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1592, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1615, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1616, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1617, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1619, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1620, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1640, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1641, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1649, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1650, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1657, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1658, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1666, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1667, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1674, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1675, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1683, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1684, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1692, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1693, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1696, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1705, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1706, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1709, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1718, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1719, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1722, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1732, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1744, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1745, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1747, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1748, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1749, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1750, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1752, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1777, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1778, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1785, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1794, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1794, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1794, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1794, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1794, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1799, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1799, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1799, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1799, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1805, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1806, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1806, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1807, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1807, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1808, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1809, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1809, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1824, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1837, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1838, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1854, "col_offset": 7, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1871, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1881, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1909, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1940, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1976, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2000, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2001, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2002, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2004, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2005, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2040, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2049, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2066, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2087, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2096, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2113, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2120, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2121, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2136, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2151, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2152, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2153, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2177, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2178, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2179, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2204, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2205, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2206, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2230, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2231, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2232, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2234, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2235, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2237, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 2238, "col_offset": 4, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2262, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2263, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2265, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2266, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2267, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2268, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2270, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2295, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2296, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2304, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2312, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2313, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2314, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2318, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2332, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2333, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2334, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2335, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2336, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2337, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2352, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2354, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2360, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2367, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2367, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2368, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2368, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2369, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2369, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2370, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2370, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2371, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2371, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2372, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2372, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2373, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2373, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2374, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2374, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2376, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2377, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2378, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2388, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2388, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2389, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2389, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2390, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2390, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2391, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2391, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2392, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2392, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2393, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2393, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2395, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2404, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2408, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2426, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2442, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2461, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2484, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2495, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2496, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2518, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2543, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2545, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2551, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2552, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2577, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2605, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2631, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2632, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2652, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2653, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2654, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2656, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2657, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2673, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2680, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2680, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2681, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2681, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2682, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2682, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2683, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2683, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2684, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2686, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2686, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2687, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2688, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2688, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2689, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2691, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2691, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2692, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2696, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2704, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2704, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2705, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2705, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2706, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2706, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2707, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2707, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2708, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2708, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2709, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2709, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2710, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2710, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2712, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2721, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2728, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2746, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2771, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2798, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2823, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2835, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2836, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2837, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2863, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2876, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2877, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2907, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2910, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2929, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2962, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2993, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3022, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3023, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3040, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3041, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3042, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3052, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3053, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3054, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3081, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3082, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3083, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3085, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3086, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3105, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3112, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3112, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3113, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3113, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3114, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3114, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3115, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 3117, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3117, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3118, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3118, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3119, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 3121, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3121, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3122, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 3126, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 3134, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3134, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 3135, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3135, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3136, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3136, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3137, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3137, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3138, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3138, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3139, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3139, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3140, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3140, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3142, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3151, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3158, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3176, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3201, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3229, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3254, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3266, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3267, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3268, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 3294, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3307, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3308, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3338, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3341, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3360, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3361, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3391, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3420, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3421, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3447, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3448, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 3465, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3466, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3467, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3477, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3478, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3479, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3504, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3505, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3506, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3508, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3509, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3528, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3536, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3537, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3538, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3539, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3540, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3541, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3542, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3543, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3544, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3558, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3568, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3579, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3580, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3580, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3580, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3581, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3581, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3582, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3582, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3582, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3597, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 3651, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 3664, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3684, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3695, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 3696, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 3727, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3728, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3774, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3776, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3794, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3832, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3833, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3859, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3860, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3861, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3863, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3864, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3884, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3885, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3893, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3894, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3901, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3902, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3910, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3911, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3918, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3919, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3927, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3928, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3935, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3936, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3944, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3945, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3952, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3953, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3961, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3962, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3970, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3971, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3974, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3983, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3984, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3987, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3996, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3997, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 4000, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4009, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4010, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 4013, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4022, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4023, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 4026, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4035, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4036, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 4048, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4049, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4051, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4052, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4053, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 4054, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 4056, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 4081, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 4082, "col_offset": 4, "nodeName": "data_format", "type": "str"}, {"lineNumber": 4089, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4096, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 4097, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4098, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4099, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4100, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4101, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 4102, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4103, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4104, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4105, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 4106, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 4107, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 4108, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 4108, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4113, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 4122, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 4145, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4155, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4161, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4170, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4171, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 4181, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4182, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 4197, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4207, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4241, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4242, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4243, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4247, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4248, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4249, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 4268, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4277, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4295, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4314, "col_offset": 4, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4323, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4341, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 4346, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv1DTranspose], Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "CAUSAL", "type": "str"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "SAME", "type": "str"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "FULL", "type": "str"}, {"lineNumber": 242, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 243, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "CONV_1D_MASKED_KWARGS", "type": "Dict[str, Any]"}, {"lineNumber": 244, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "CONV_1D_CAUSAL_KWARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 245, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 247, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "CONV_3D_MIXED_PADDING_KWARGS", "type": "Dict[str, Union[List[str], int]]"}, {"lineNumber": 248, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 249, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 250, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 251, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 252, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 253, "col_offset": 7, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "SEPARABLE_CONV_1D_KWARGS", "type": "Dict[str, Union[Tuple[int], int]]"}, {"lineNumber": 254, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, Union[Tuple[int, int], int]]"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 278, "col_offset": 6, "nodeName": "convolution_t", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 282, "col_offset": 49, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 294, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 297, "col_offset": 6, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 301, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 304, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 331, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 340, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 340, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 361, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 364, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 380, "col_offset": 6, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 395, "col_offset": 45, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 399, "col_offset": 6, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 402, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 403, "col_offset": 11, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 403, "col_offset": 31, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "out3", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 405, "col_offset": 45, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 430, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 433, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 435, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 436, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 438, "col_offset": 7, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 438, "col_offset": 22, "nodeName": "DATA_FORMAT_NHWC", "type": "str"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 454, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 454, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "in_height", "type": "int"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "in_width", "type": "int"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 460, "col_offset": 7, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "DATA_FORMAT_NHWC", "type": "str"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 487, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 519, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 533, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 622, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 622, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 623, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 624, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 654, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 668, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 668, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 679, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 679, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 685, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 688, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 697, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "padding_h", "type": "Any"}, {"lineNumber": 743, "col_offset": 15, "nodeName": "padding_w", "type": "Any"}, {"lineNumber": 743, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 753, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 754, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 754, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 755, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 755, "col_offset": 30, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 757, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 780, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 780, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 781, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 781, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 783, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 783, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 784, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 784, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 795, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 807, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 817, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 830, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 840, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 841, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 847, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 856, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 860, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 861, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 863, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 864, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 864, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 865, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 865, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 866, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 866, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 868, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 869, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 875, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 879, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 879, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 880, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 881, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 895, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 901, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 902, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 902, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 908, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 909, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 909, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 910, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 910, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 911, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 916, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 917, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 925, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 925, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 937, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 940, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 941, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 948, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 948, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 949, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 956, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 957, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 958, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 965, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 965, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 976, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 978, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 986, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 986, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 987, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 995, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 996, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 999, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1008, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1012, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1021, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1025, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1034, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1035, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1038, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1047, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1050, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1060, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 1060, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1060, "col_offset": 34, "nodeName": "SUPPORTED_2D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 1072, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1074, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1075, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1077, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1082, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 1084, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1084, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1084, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1084, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1085, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1087, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1087, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1089, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1089, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1089, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1091, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1091, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1092, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1092, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1116, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1116, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1118, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1126, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1126, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1131, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1141, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1142, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1144, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1152, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1152, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1153, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1153, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1155, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1157, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1168, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1176, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1177, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1177, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1182, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1183, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1183, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1184, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1184, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1185, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1192, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1192, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1194, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1202, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1204, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1204, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1213, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1215, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1224, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1227, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1227, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1227, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1228, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1228, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1229, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1229, "col_offset": 21, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 1229, "col_offset": 54, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 1235, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1235, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1242, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1245, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1245, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1246, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1246, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1246, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1249, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1249, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1249, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1266, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 1268, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1277, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1280, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1280, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1280, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1281, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1281, "col_offset": 64, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1282, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1282, "col_offset": 21, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 1282, "col_offset": 54, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 1288, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 1288, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1295, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1298, "col_offset": 4, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1298, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1299, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1299, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1299, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1302, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1302, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1302, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1323, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1324, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1325, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1326, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1328, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1330, "col_offset": 7, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 1330, "col_offset": 22, "nodeName": "DATA_FORMAT_NWC", "type": "str"}, {"lineNumber": 1337, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1346, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1346, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1349, "col_offset": 8, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1349, "col_offset": 19, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1350, "col_offset": 7, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 1350, "col_offset": 22, "nodeName": "DATA_FORMAT_NWC", "type": "str"}, {"lineNumber": 1359, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1379, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1380, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1384, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1392, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1392, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1411, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1413, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1426, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1445, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1448, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1475, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1484, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1484, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1485, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1486, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1495, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1498, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1507, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1517, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1536, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1536, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1538, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1545, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1547, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1547, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1547, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1553, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1554, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1556, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1562, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1564, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1564, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1565, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1565, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1579, "col_offset": 4, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1579, "col_offset": 13, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1581, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1590, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1591, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1591, "col_offset": 30, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1593, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1607, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1615, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1616, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1616, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1617, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1617, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1619, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1619, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1620, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1620, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1640, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1641, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1642, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1649, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1649, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1650, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1657, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1658, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1659, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1666, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1666, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1667, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1674, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1675, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1676, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1683, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1683, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1684, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1692, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1693, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1696, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1705, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1706, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1709, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1718, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1719, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1722, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1731, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1732, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1734, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1736, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1740, "col_offset": 10, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1744, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1745, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 1747, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1747, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1748, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1748, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1749, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1749, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1750, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1750, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1752, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 1753, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1754, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1756, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1757, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1759, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1760, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 1763, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1763, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1763, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1764, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1764, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1765, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1765, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1766, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1767, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1768, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1769, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1771, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1777, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1779, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 1779, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1779, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 1794, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1794, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1794, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1794, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1794, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1800, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1800, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1805, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1805, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1805, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1805, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1808, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1808, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1808, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1808, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1825, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1825, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1827, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1828, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1837, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1837, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1838, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1838, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 1839, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1842, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1855, "col_offset": 6, "nodeName": "output_shape_arg", "type": "Any"}, {"lineNumber": 1855, "col_offset": 25, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1857, "col_offset": 6, "nodeName": "output_shape_arg", "type": "None"}, {"lineNumber": 1859, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1860, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1863, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1871, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1871, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1873, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1877, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1892, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1900, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1931, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1967, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1976, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1976, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1979, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1991, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2000, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2000, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2000, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2000, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2001, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2001, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2002, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2002, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2004, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2004, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2005, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2005, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2016, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2031, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2040, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 2043, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2043, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2043, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2044, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2044, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2045, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2045, "col_offset": 21, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 2045, "col_offset": 54, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 2051, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2054, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2056, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2056, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2057, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2057, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2057, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2060, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2060, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2060, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2078, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2087, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 2090, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2090, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2090, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2091, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2091, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2092, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2092, "col_offset": 21, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 2092, "col_offset": 54, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 2098, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2101, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2103, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2103, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 2104, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2104, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2104, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2107, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 2107, "col_offset": 18, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2107, "col_offset": 29, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2121, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2121, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2123, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 2131, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2133, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2133, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2133, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2143, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2151, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2152, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2154, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2156, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2158, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2160, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2162, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2162, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2162, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2169, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2177, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2178, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2180, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2182, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2184, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2186, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2188, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2188, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2188, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2195, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2204, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2205, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2207, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2209, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2211, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2213, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2215, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2215, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 2215, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2223, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2231, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2231, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2232, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2232, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2234, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2234, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2235, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2235, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2237, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2238, "col_offset": 23, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2238, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 2240, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2243, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2245, "col_offset": 6, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2246, "col_offset": 6, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2251, "col_offset": 6, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2252, "col_offset": 6, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2254, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2254, "col_offset": 24, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 2254, "col_offset": 43, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 2255, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2255, "col_offset": 24, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 2255, "col_offset": 51, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 2258, "col_offset": 10, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2262, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2263, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 2265, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2265, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2266, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2266, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2267, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2267, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2268, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2268, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2270, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 2271, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2272, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2274, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2275, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2277, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2278, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 2281, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2281, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2281, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2282, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2282, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2283, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2283, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2284, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2285, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2286, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2287, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2289, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2295, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2297, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 2297, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2297, "col_offset": 34, "nodeName": "SUPPORTED_1D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 2312, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2313, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2313, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2314, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2320, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 2320, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2323, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2323, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2324, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2324, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2324, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2332, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2333, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2334, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2334, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2335, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2335, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2336, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2336, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2337, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2337, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2344, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2352, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2352, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2354, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2356, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2357, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2357, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2357, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2365, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2367, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2367, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2368, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2368, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2369, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2369, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2370, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2370, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2371, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2371, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2372, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2372, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2373, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2373, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2374, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2374, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2374, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2376, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2376, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2376, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2376, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2376, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2377, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2377, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2377, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2378, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2378, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2378, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2378, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2378, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2379, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2379, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2379, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2380, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2388, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2389, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2390, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2391, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2392, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2393, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2395, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2395, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2397, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2404, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2404, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2406, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2406, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2407, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2407, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2417, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2418, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2420, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2426, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2426, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2431, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2440, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2441, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2454, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2456, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2458, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2476, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2484, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2484, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2485, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2486, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2495, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2496, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2498, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2505, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2515, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2531, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2532, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2534, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2541, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2543, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2543, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2544, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2544, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2552, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2552, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2554, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2560, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2562, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2562, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2562, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2569, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2577, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2578, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2583, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2584, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2597, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2605, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2606, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2609, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2610, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2623, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2631, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2632, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2633, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2634, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2648, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2652, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2653, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2653, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2654, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2654, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2656, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2656, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2657, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2657, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2668, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2678, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2680, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2680, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2681, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2681, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2682, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2682, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2683, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2683, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2684, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2684, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2684, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2684, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2684, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2686, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2686, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2687, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2688, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2688, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2689, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2689, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2689, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2691, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2691, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2691, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2692, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2692, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2692, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2692, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2692, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2694, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2694, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2694, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2694, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2696, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2696, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2696, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2704, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2705, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2706, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2707, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2708, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2709, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2710, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2712, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2712, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2714, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2721, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2721, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2723, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2724, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2726, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2737, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2738, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2740, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2746, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2746, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2752, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2762, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2768, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2785, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2788, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2791, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2814, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2823, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2823, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2824, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2825, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2835, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2836, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2837, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2838, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2846, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2860, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2877, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2877, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2879, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2886, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2888, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2888, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2888, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2894, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2895, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2897, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2905, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2907, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2907, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2908, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2908, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2909, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2909, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2919, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2929, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2930, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2935, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2936, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2951, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2962, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2963, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2968, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2969, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2984, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2993, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2994, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2997, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2998, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3013, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 3022, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3023, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3024, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3025, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3042, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3042, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3043, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 3052, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3053, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3055, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3056, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3058, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3077, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 3081, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3082, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3082, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3083, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3083, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3085, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3085, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3086, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3086, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3098, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3099, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3110, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 3112, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3112, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3113, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3113, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3114, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3114, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3115, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3115, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3115, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3115, "col_offset": 46, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3117, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3117, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3118, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3118, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3119, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3119, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3121, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3121, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3121, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3122, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3122, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3122, "col_offset": 37, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3122, "col_offset": 47, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3124, "col_offset": 11, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3124, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3124, "col_offset": 40, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3126, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3126, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3126, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 3134, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3135, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 3136, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3137, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 3138, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 3139, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 3140, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 3142, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3142, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3144, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3151, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3151, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3153, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3154, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3156, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3167, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3168, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3170, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3176, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3176, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3178, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3182, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3183, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3183, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3192, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3198, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3216, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3219, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3222, "col_offset": 4, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3245, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3254, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 3254, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 3255, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 3256, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 3266, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3267, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3268, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3269, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3277, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3291, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3308, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 3308, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3310, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3317, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3319, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 3319, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3319, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3325, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 3326, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3328, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3336, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3338, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3338, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 3339, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3339, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3340, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3340, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3350, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3360, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3361, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3362, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3363, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3365, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3369, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 3380, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3391, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3392, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3395, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3396, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3398, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3402, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 3411, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3420, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3421, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3422, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3423, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3425, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3429, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3438, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3447, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3448, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3449, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3450, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3452, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3456, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3467, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3467, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3468, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3477, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3478, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3480, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3481, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3483, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3485, "col_offset": 32, "nodeName": "session", "type": "Any"}, {"lineNumber": 3489, "col_offset": 6, "nodeName": "out", "type": "Any"}, {"lineNumber": 3500, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3504, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3505, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3505, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3506, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3506, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3508, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3508, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3509, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3509, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3521, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3522, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3536, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3537, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3538, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3539, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3540, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3541, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3542, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3543, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3544, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 3546, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3547, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3550, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3558, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3558, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3560, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3564, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3584, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3585, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3589, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3597, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3597, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3614, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3615, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3624, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3626, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3628, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3644, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3647, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3674, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3684, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 3684, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 3685, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 3695, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3696, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 3697, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3705, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3715, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3728, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 3728, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3730, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3737, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3739, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 3739, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3739, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 3744, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3749, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3762, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 3763, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3765, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3772, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3774, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 3774, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 3775, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3775, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 3785, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3794, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3807, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3808, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3823, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3832, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3833, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3835, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3836, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3851, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3859, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3860, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3860, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3861, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3861, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3863, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3863, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3864, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3864, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3875, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3885, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3886, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3893, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3893, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3901, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3902, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3903, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3910, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3910, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3918, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3919, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3920, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3927, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3927, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3935, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3936, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3937, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3944, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3944, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3952, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3953, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3954, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3961, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3961, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3970, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3971, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3974, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3983, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3984, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3987, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3996, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3997, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4000, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4009, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 4010, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4013, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4022, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 4023, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4026, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4035, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4036, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4038, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4040, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4044, "col_offset": 10, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4048, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 4049, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 4051, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4051, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4052, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4052, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4053, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4053, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4054, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4054, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4056, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 4057, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 4058, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 4060, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 4061, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 4063, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 4064, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 4067, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4067, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4067, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4068, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4068, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 4069, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4069, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 4070, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4071, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4072, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4073, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4075, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4081, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4083, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 4083, "col_offset": 21, "nodeName": "data_format", "type": "str"}, {"lineNumber": 4083, "col_offset": 34, "nodeName": "SUPPORTED_3D_DATA_FORMATS", "type": "Set[str]"}, {"lineNumber": 4094, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 4096, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4097, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4098, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4099, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4100, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4101, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4102, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4103, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4104, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4105, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4106, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4107, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4108, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4108, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 4110, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4110, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 4110, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4110, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4111, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4111, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4113, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4113, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 4113, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 4113, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 4115, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4115, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4115, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4116, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4118, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4118, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 4118, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 4119, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 4119, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 4120, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 4122, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4122, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 4122, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 4122, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 4145, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4145, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4147, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4155, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4155, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4157, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4160, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4170, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4171, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4173, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4181, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4181, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4182, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4182, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 4184, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4186, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4197, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4199, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4207, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4207, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 4209, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4214, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4219, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4233, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4241, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4242, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4242, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4247, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4248, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4248, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4249, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4249, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4250, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4259, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4268, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4271, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4271, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4271, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4272, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4272, "col_offset": 49, "nodeName": "stride", "type": "Any"}, {"lineNumber": 4273, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4273, "col_offset": 21, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 4273, "col_offset": 54, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 4279, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 4279, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4282, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4288, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4288, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 4289, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4289, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4289, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4305, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4314, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4317, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4317, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4317, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4318, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4318, "col_offset": 44, "nodeName": "stride", "type": "Any"}, {"lineNumber": 4319, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4319, "col_offset": 21, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 4319, "col_offset": 54, "nodeName": "conv_op_padding", "type": "Any"}, {"lineNumber": 4325, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 4325, "col_offset": 10, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4328, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 4334, "col_offset": 4, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4334, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 4335, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4335, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4335, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 4346, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "float64", "type": "Any"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "snt", "type": "module"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 242, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 243, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 244, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 245, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 247, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 248, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 249, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 250, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 251, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 252, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 253, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 254, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 263, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 263, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 268, "col_offset": 59, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 270, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 270, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "convolution_t", "type": "Any"}, {"lineNumber": 282, "col_offset": 49, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 298, "col_offset": 6, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 298, "col_offset": 59, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 301, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 303, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 306, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 306, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 307, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 317, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 320, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 320, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 322, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 324, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 324, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 327, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 327, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 330, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 338, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 338, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 340, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 340, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 343, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 343, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 344, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 350, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 352, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 354, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 354, "col_offset": 33, "nodeName": "UnderspecifiedError", "type": "Type[sonnet.python.modules.base_errors.UnderspecifiedError]"}, {"lineNumber": 354, "col_offset": 58, "nodeName": "err", "type": "str"}, {"lineNumber": 355, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 361, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 361, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 364, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 367, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 367, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 367, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "stop_gradient", "type": "Any"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 381, "col_offset": 6, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 381, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 381, "col_offset": 59, "nodeName": "np_dtype", "type": "Any"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 386, "col_offset": 37, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 386, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 392, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 394, "col_offset": 35, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 399, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 400, "col_offset": 28, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 402, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 402, "col_offset": 50, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 404, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 404, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 412, "col_offset": 46, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 412, "col_offset": 58, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 413, "col_offset": 45, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 413, "col_offset": 57, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 430, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 433, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 435, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 436, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 438, "col_offset": 22, "nodeName": "conv", "type": "module"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 440, "col_offset": 10, "nodeName": "float32", "type": "Any"}, {"lineNumber": 442, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 443, "col_offset": 10, "nodeName": "float32", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 447, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 450, "col_offset": 20, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 452, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 455, "col_offset": 26, "nodeName": "_PADDINGS_EXPECTED_SHAPE_TRANSFORMS", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "_PADDINGS_EXPECTED_SHAPE_TRANSFORMS", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "conv", "type": "module"}, {"lineNumber": 461, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 464, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 472, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 487, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 502, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 506, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 509, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 510, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 519, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 528, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 531, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 542, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 544, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 547, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 547, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 547, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 548, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 560, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 561, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 563, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 566, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 568, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 568, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 569, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 580, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 582, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 585, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 601, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 601, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 601, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 602, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 604, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 604, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 604, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 605, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 618, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 622, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 622, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 623, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 641, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 644, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 644, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 646, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 650, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 660, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 660, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 660, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 661, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 667, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 675, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 677, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 677, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 688, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 692, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 693, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 695, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 697, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 700, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 750, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 753, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 754, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 755, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 755, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 759, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 763, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 763, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 775, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 776, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 780, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 780, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 781, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 781, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 786, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 790, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 795, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 796, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 798, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 807, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 812, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 814, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 817, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 819, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 823, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 830, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 835, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 837, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 840, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 841, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 849, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 853, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 853, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 856, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 860, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 861, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 863, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 868, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 869, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 875, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 879, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 879, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 880, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 880, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 880, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 881, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 881, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 882, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 882, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 883, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 883, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 883, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 883, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 884, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 884, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 884, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 884, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 885, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 886, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 887, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 888, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 895, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 899, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 901, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 902, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 902, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 905, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 905, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 907, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 907, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 908, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 911, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 911, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 912, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 916, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 916, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 917, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 921, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 922, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 926, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 927, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 928, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 929, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 929, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 937, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 939, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 940, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 941, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 944, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 945, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 949, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 950, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 951, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 952, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 952, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 956, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 956, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 957, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 958, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 961, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 962, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 966, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 967, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 968, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 969, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 969, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 976, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 976, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 978, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 982, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 983, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 987, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 988, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 989, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 990, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 990, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 995, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 996, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 999, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 999, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1000, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1002, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1008, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1009, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1012, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1012, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1013, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1015, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1021, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1025, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1025, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1026, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1028, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1034, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1035, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1038, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1038, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1039, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1041, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1047, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1047, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1050, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1050, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1051, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1052, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1060, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1060, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 1062, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1062, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1064, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 1084, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1084, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1085, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1087, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1087, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1089, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1089, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1091, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1092, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1092, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1096, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1096, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1097, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1116, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1116, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1116, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1118, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1119, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1120, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1121, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1122, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1124, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1128, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1131, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1131, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1131, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 1133, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1141, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1141, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1142, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1142, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1144, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1148, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1150, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1155, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1155, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1157, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1158, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1159, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1159, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1168, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1169, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1170, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1171, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1172, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1174, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1176, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1177, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1177, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1177, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1179, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1179, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1181, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1181, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1182, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1185, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1185, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1186, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1191, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1194, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1200, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1202, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1202, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1213, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1215, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1219, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1222, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1223, "col_offset": 20, "nodeName": "DATA_FORMAT_NHWC", "type": "str"}, {"lineNumber": 1224, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1227, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1227, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1227, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1228, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1228, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1229, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1229, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1229, "col_offset": 54, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1234, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1234, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1234, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1235, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1242, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1242, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1242, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1242, "col_offset": 48, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1242, "col_offset": 59, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1243, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1244, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1246, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1246, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1249, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1249, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1256, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1256, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1256, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1257, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1257, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1257, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1266, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1268, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1272, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1275, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1276, "col_offset": 20, "nodeName": "DATA_FORMAT_NCHW", "type": "str"}, {"lineNumber": 1277, "col_offset": 12, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1280, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1280, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1280, "col_offset": 51, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1281, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1281, "col_offset": 64, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1282, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1282, "col_offset": 21, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1282, "col_offset": 54, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1287, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1287, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1287, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1288, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1295, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1295, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1295, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1295, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1295, "col_offset": 61, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1296, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1297, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1299, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1299, "col_offset": 34, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1302, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1302, "col_offset": 35, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1309, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1309, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1309, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1310, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1310, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1310, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1323, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1324, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1325, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1326, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1328, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1330, "col_offset": 22, "nodeName": "conv", "type": "module"}, {"lineNumber": 1331, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1332, "col_offset": 10, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1334, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1335, "col_offset": 10, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1337, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1338, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1339, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1340, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1342, "col_offset": 20, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 1344, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1348, "col_offset": 26, "nodeName": "_PADDINGS_EXPECTED_SHAPE_TRANSFORMS", "type": "Dict[str, Callable[[Any, Any], Any]]"}, {"lineNumber": 1350, "col_offset": 22, "nodeName": "conv", "type": "module"}, {"lineNumber": 1351, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1355, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1359, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1360, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1364, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1379, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1380, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1384, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1386, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1387, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1388, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1390, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1394, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1398, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1401, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1402, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1411, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1412, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1413, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1414, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1417, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1417, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1417, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1418, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1426, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1428, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1431, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1431, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1431, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1432, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1435, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1435, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1435, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1436, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1445, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1447, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1448, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1450, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1466, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1466, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 1466, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1467, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1475, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1478, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1479, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1484, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1484, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1485, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1495, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1496, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1498, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1502, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1503, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1507, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1507, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1509, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1513, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1523, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1523, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1523, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1524, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1535, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1538, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1543, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1545, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1545, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1547, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1554, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1556, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1560, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1562, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1562, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1564, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1564, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1565, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1567, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1567, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1581, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1585, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1586, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1590, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1591, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1591, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1595, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1599, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1599, "col_offset": 48, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1607, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1611, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1612, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1615, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1616, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1616, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1617, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1617, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1622, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1626, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1631, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1632, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1634, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1640, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1640, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1641, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1642, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1645, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1646, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1650, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1650, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1651, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1652, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1653, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1653, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1657, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1657, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1658, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1659, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1662, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1663, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1667, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1667, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1668, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1669, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1670, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1670, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1674, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1674, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1675, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1676, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1679, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1680, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1684, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1684, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1685, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1686, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1687, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1687, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1692, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1693, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1696, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1696, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1697, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1699, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1705, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1706, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1709, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1709, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1710, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1712, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1718, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1719, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1722, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1722, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1723, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1725, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1731, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1731, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1732, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1734, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1734, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1735, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 1736, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1736, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1740, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1744, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1745, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1747, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1747, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1752, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1753, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1754, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1756, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1757, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1759, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1760, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1763, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1763, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1763, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1764, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1764, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 1764, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1765, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1765, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1766, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1766, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1766, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 1767, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1767, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1767, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1767, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1767, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 1768, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1768, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1768, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1768, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1768, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 1769, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1769, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1770, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1771, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1771, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1772, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 1777, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1779, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1779, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 1781, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1781, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1782, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 1800, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1801, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1802, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1802, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1813, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1813, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1814, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1828, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1828, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1829, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1830, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1831, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1832, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1834, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1837, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1837, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1839, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1839, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1842, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1843, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1844, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1844, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 1859, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1860, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1863, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1863, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1864, "col_offset": 45, "nodeName": "output_shape_arg", "type": "Optional[Any]"}, {"lineNumber": 1865, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1866, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1867, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1869, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1873, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1874, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1877, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1878, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1882, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1892, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1893, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1896, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1897, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1899, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1900, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1901, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1904, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1905, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1907, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1910, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1910, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1910, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1911, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1917, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1917, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1917, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1918, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1931, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1932, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1935, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1938, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1942, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1942, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1942, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1943, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1951, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1951, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1951, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1952, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1967, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1968, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1970, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1971, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1972, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1974, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1976, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1976, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1977, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1991, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1992, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1994, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1995, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1996, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1998, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2000, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2001, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2001, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2002, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2002, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2007, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2011, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2016, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2016, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2016, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2016, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2017, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2019, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2031, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 2032, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2034, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2035, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2036, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 2038, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2039, "col_offset": 20, "nodeName": "DATA_FORMAT_NWC", "type": "str"}, {"lineNumber": 2040, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2043, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2043, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2043, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2044, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2044, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2045, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2045, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2045, "col_offset": 54, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2050, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2050, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2050, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2051, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2054, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2054, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2054, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2054, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2054, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2055, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2057, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2057, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2060, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2060, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2067, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2067, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2067, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2068, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2068, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2068, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2078, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 2079, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2081, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2082, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2083, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 2085, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2086, "col_offset": 20, "nodeName": "DATA_FORMAT_NCW", "type": "str"}, {"lineNumber": 2087, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2090, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2090, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2090, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2091, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2091, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2092, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2092, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2092, "col_offset": 54, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2097, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2097, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2097, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2098, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2101, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2101, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2101, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2101, "col_offset": 48, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2101, "col_offset": 61, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 2102, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2104, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2104, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2107, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2107, "col_offset": 29, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2114, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2114, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2114, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2115, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2115, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2115, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2120, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2123, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2129, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2131, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2131, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2133, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 2143, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2147, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2151, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2152, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2152, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2156, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2157, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2158, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2159, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2159, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2160, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2160, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2162, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2169, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2173, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2177, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2178, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2178, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2182, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2183, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2184, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2185, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2185, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2186, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2186, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2188, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2195, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2200, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2204, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2205, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2205, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2209, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2210, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2211, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2212, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2212, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2213, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 2213, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 2215, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2223, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2227, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2231, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2231, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2232, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2232, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2237, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2238, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 2240, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2241, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2243, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2244, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2244, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 2245, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 2245, "col_offset": 35, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2246, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 2246, "col_offset": 36, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2249, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2249, "col_offset": 15, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 2251, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 2251, "col_offset": 43, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2252, "col_offset": 35, "nodeName": "run", "type": "Any"}, {"lineNumber": 2252, "col_offset": 44, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2254, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2255, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2258, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 2262, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2263, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2265, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2265, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2270, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2271, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2272, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2274, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2275, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2277, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2278, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2281, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2281, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2281, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2282, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2282, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 2282, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2283, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2283, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2284, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2284, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2284, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 2285, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2285, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2285, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2285, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2285, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 2286, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2286, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2286, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2286, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2286, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 2287, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2287, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2288, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2289, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2289, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2290, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 2295, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2297, "col_offset": 4, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2297, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 2299, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2299, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2301, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 2312, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2313, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2313, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2314, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2314, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2319, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2319, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 2319, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2320, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2324, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2324, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2332, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2332, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2333, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2334, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2334, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2335, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2335, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2339, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2342, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2344, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2345, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2346, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2351, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2354, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2354, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2356, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2356, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2357, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 2367, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2368, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2369, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2370, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2371, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2372, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2373, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2395, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2395, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2395, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2397, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2399, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2400, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2401, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2403, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2406, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2406, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2407, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2407, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2409, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2409, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2417, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2418, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2420, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2421, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2422, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2423, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2425, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2428, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2431, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2432, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2432, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2440, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2441, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2444, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2444, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2444, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2445, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2454, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2455, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2456, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2457, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2458, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2459, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2464, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2464, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2464, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2465, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2476, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2480, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2481, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2484, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2484, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2485, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2495, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2496, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2498, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2502, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2505, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2505, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2507, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2511, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2519, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2519, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2519, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2520, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2532, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2534, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2538, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2539, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2541, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2541, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2543, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2543, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2544, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2546, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2546, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2551, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2554, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2558, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2560, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2560, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2562, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2569, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2573, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2574, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2577, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2578, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2586, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2590, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2590, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2597, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2601, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2602, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2605, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2606, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2612, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2616, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2616, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2623, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2627, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2628, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2631, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2632, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2636, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2640, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2641, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2648, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2649, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2650, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2652, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2653, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2653, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2654, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2654, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2659, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2662, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2668, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2669, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2670, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2680, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2681, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2682, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2683, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2686, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2687, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2688, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2712, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2712, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2712, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2714, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2715, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2716, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2717, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2718, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2719, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2723, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2723, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2723, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2724, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2724, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2725, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2726, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2726, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2727, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2729, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2737, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2738, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2740, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2741, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2743, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2744, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2745, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2748, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2752, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2753, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2753, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2762, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2767, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2768, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2773, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2773, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2773, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2774, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2785, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2787, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2788, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2790, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2791, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2796, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2801, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2801, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2801, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2802, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2814, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2818, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2819, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2823, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2823, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2824, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2835, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2836, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2837, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2838, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2842, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2846, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2846, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2848, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2853, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2856, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2864, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2864, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2864, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2865, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2876, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2879, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2884, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2886, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2886, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2888, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2895, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2897, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2902, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2903, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2905, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2905, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2907, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2907, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2908, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2909, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2911, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2911, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2919, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2923, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2925, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2929, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2930, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2938, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2943, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2943, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2951, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2955, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2958, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2962, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2963, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2971, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2976, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2976, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2984, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2988, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2989, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2993, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2994, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3000, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3005, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3005, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3013, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3017, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3018, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3022, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3023, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3027, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3032, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3032, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3043, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3044, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3045, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3047, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3048, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3052, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3052, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3052, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3053, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3053, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3054, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3058, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3058, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3061, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3066, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3067, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3077, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3079, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3081, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3082, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3082, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3083, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3083, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3088, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3092, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3098, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3099, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3100, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3101, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3102, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3112, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 3113, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 3114, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 3117, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 3118, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 3142, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3142, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3142, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3144, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3145, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3146, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 3147, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3148, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3149, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3153, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3153, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3153, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3154, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3154, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3155, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 3156, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3156, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3157, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 3159, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3167, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3168, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3170, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3171, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 3173, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3174, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3175, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3178, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3182, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 3182, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 3183, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3183, "col_offset": 21, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3183, "col_offset": 40, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 3183, "col_offset": 46, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 3192, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3197, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3198, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3204, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3204, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3204, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3205, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3216, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3218, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3219, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3221, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3222, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3227, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3232, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3232, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3232, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3233, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3245, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3249, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3250, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3254, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3254, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3255, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3266, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 3267, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 3268, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3269, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3273, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3277, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3277, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3279, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3284, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3287, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3295, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3295, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3295, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 3296, "col_offset": 6, "nodeName": "SeparableConv1D", "type": "Type[sonnet.python.modules.conv.SeparableConv1D]"}, {"lineNumber": 3307, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3310, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3315, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3317, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3317, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3319, "col_offset": 4, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3326, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 3328, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3333, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 3334, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3336, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3336, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3338, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3338, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3339, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3340, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3342, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3342, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 3350, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3354, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3356, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3360, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3361, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3365, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3369, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 3369, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 3370, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3370, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 3370, "col_offset": 34, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3380, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3384, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3386, "col_offset": 13, "nodeName": "rate", "type": "Any"}, {"lineNumber": 3387, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3391, "col_offset": 19, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3392, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3398, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3402, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 3402, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 3403, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3403, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 3403, "col_offset": 34, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3411, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3415, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3416, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3420, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3421, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3425, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3429, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3429, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3430, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3430, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3430, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3438, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3442, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3443, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3447, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3448, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3452, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3456, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3456, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3457, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3457, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3457, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3468, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3469, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3470, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 3472, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3473, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3477, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3477, "col_offset": 32, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 3477, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3478, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3478, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 3479, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3483, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3483, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3485, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3489, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 3489, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 3490, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3490, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3490, "col_offset": 31, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3500, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3502, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3504, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3505, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3505, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3506, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3506, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3511, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3515, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3521, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3522, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3523, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3524, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3525, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3536, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 3537, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3538, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 3539, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 3540, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 3541, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 3542, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3543, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3544, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 3546, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3547, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3550, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3551, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3553, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3555, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3560, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3561, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3564, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3565, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3569, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3584, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3585, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3589, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3591, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3593, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3595, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3599, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3603, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3607, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3608, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3614, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3615, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3617, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3617, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3618, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3619, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3624, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3626, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3628, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3632, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3632, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3633, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3635, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3644, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3646, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3647, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 3649, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3665, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3665, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3665, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3666, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3668, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3668, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 3668, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 3669, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3674, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3677, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3684, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3684, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3685, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3686, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3686, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3687, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3687, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 3695, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3696, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 3697, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3702, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3705, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3705, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3707, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3711, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3720, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3720, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3721, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3727, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3730, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3735, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 3737, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3737, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3739, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3744, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3749, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3749, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3751, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3752, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3754, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3763, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 3765, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3769, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 3770, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3772, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3772, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3774, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3774, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 3775, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3777, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 3777, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 3785, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3789, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3791, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3794, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3810, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3814, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3815, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3823, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3827, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3829, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3832, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3838, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3842, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3843, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3851, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3855, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3856, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3859, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3860, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3860, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3861, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3861, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3866, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3870, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3875, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3876, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3878, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3884, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3885, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3886, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3889, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3890, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3894, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3895, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3896, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3897, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3897, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3901, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3901, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3902, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3903, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3906, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3907, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3911, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3912, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3913, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3914, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3914, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3918, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3918, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3919, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3920, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3923, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3924, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3928, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3929, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3930, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3931, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3931, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3935, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3935, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3936, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3937, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3940, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3941, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3945, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3946, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3947, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3948, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3948, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3952, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3952, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3953, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3954, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3957, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3958, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3962, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3963, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3964, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3965, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3965, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3970, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3970, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3971, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3971, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3974, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3974, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3975, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3977, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3983, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3983, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3984, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3984, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3987, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3987, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3988, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3990, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3996, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3996, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3997, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3997, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4000, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 4000, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4001, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4003, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4009, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 4009, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4010, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4010, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4013, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 4013, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4014, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4016, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4022, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 4022, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4023, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4023, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4026, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 4026, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4027, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4029, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4035, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4035, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 4036, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4038, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4038, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 4039, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 4040, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4040, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 4044, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 4048, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4049, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4051, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4051, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4056, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4057, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4058, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 4060, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4061, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 4063, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4064, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 4067, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4067, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4067, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4068, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4068, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 4068, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4069, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4069, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4070, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4070, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4070, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 4071, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4071, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4071, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 4071, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4071, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 4072, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4072, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4072, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 4072, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4072, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 4073, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4073, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 4074, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 4075, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4075, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 4076, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 4081, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4083, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4083, "col_offset": 34, "nodeName": "conv", "type": "module"}, {"lineNumber": 4085, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4085, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 4086, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 4110, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4110, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4111, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4111, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4113, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4113, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4113, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4115, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4116, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4118, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4119, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4119, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4120, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4122, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4122, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4122, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4125, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4125, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 4126, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 4145, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4145, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4145, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 4147, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4148, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4149, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4150, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4151, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4153, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4157, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4157, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4160, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4160, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4160, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 4162, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 4170, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4170, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4171, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4171, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4173, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4177, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4179, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4184, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4184, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4186, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 4187, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4188, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4188, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4197, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4197, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4199, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4203, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 4205, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4209, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4209, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4214, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 4219, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 4219, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4221, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 4222, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 4224, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 4233, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 4234, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4235, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4236, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4237, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4239, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4241, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4242, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4242, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4242, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 4244, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4244, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4246, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4246, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4247, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4250, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4250, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4251, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4259, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 4260, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4261, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4262, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4263, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4264, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4266, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4267, "col_offset": 20, "nodeName": "DATA_FORMAT_NDHWC", "type": "str"}, {"lineNumber": 4268, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4271, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4271, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4271, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4272, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4272, "col_offset": 49, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4273, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4273, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4273, "col_offset": 54, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4278, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4278, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4278, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4279, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4282, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4282, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 4282, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4283, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 4284, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 4285, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 4286, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4287, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4289, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4289, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4289, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4296, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4296, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4296, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4297, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4297, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 4297, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 4305, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 4306, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4307, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4308, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 4309, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 4310, "col_offset": 15, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4312, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 4313, "col_offset": 20, "nodeName": "DATA_FORMAT_NCDHW", "type": "str"}, {"lineNumber": 4314, "col_offset": 12, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4317, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4317, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4317, "col_offset": 51, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4318, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4318, "col_offset": 30, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4318, "col_offset": 44, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4319, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4319, "col_offset": 21, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4319, "col_offset": 54, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4324, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4324, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4324, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4325, "col_offset": 10, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4328, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4328, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 4328, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4329, "col_offset": 36, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 4330, "col_offset": 36, "nodeName": "in_depth", "type": "Any"}, {"lineNumber": 4331, "col_offset": 36, "nodeName": "in_height", "type": "Any"}, {"lineNumber": 4332, "col_offset": 36, "nodeName": "in_width", "type": "Any"}, {"lineNumber": 4333, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4335, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 4335, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4335, "col_offset": 39, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4342, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 4342, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 4342, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 4343, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 4343, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 4343, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 4346, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 274, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 301, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 306, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 307, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 327, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 327, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 327, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 331, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 340, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 343, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 354, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 363, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 364, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 367, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 367, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 375, "col_offset": 30, "nodeName": "getter", "type": "Any"}, {"lineNumber": 377, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 391, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 394, "col_offset": 51, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 394, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 394, "col_offset": 63, "nodeName": "g", "type": "Any"}, {"lineNumber": 394, "col_offset": 68, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 399, "col_offset": 28, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 400, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 402, "col_offset": 50, "nodeName": "out2", "type": "Any"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 440, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 442, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 443, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 448, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 448, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 449, "col_offset": 17, "nodeName": "padding_height", "type": "Any"}, {"lineNumber": 449, "col_offset": 33, "nodeName": "padding_width", "type": "Any"}, {"lineNumber": 455, "col_offset": 62, "nodeName": "padding_height", "type": "Any"}, {"lineNumber": 457, "col_offset": 61, "nodeName": "padding_width", "type": "Any"}, {"lineNumber": 461, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 464, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 464, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 469, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 469, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 469, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 469, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 472, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 495, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 502, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 506, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 507, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 509, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 510, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 511, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 511, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 511, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 511, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 528, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 547, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 547, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 548, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 568, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 568, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 569, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 588, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 588, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 601, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 601, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 602, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 603, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 604, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 604, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 605, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 606, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 619, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 620, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 623, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 623, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 623, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 625, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 625, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 625, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 626, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 642, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 642, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 642, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 642, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 644, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 644, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 646, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 650, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 651, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 652, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 652, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 660, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 661, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 667, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 677, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 677, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 695, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 697, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 748, "col_offset": 17, "nodeName": "padding_h", "type": "Any"}, {"lineNumber": 748, "col_offset": 28, "nodeName": "padding_w", "type": "Any"}, {"lineNumber": 751, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 751, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 753, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 755, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 759, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 763, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 763, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 775, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 780, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 781, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 786, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 790, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 791, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 792, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 795, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 798, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 799, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 800, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 812, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 815, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 817, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 817, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 819, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 823, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 823, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 835, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 838, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 838, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 840, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 840, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 849, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 853, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 853, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 871, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 874, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 877, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 880, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 882, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 882, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 905, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 905, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 906, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 906, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 916, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 922, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 924, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 926, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 927, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 929, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 929, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 939, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 945, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 947, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 950, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 952, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 952, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 956, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 962, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 964, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 966, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 967, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 969, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 969, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 976, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 983, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 985, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 988, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 990, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 990, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 999, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1000, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1000, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1001, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1002, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1002, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1012, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1013, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1014, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1015, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1015, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1025, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1026, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1026, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1027, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1028, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1028, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1038, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1039, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1039, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1040, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1041, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1041, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1047, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1050, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1051, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1062, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1063, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1072, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1072, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 1072, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1096, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1097, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1116, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1119, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1120, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1121, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1122, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 1131, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 1133, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1133, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1141, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1142, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1146, "col_offset": 45, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 1148, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 1157, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1159, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1160, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1160, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1161, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 1161, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1169, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1170, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1171, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1172, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1177, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1179, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1179, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1180, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1180, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1185, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1186, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1191, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1202, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1202, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1217, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1217, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1219, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1223, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1234, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1234, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1242, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1244, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1256, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1256, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1257, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1257, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1257, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1270, "col_offset": 37, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1270, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1272, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1276, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 1287, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1287, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1295, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1297, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1309, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1309, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1310, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1310, "col_offset": 23, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1310, "col_offset": 53, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1331, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1332, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1334, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1335, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1348, "col_offset": 62, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1351, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1352, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1355, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1356, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1361, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1361, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1361, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1364, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1365, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1381, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1388, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1394, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1398, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1399, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1401, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1402, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1403, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1403, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1403, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1417, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1417, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1418, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1431, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1431, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1432, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1435, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1435, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1436, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1453, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1453, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1455, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1466, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1466, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1467, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1468, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1478, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1481, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1482, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1485, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1485, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1485, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1487, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1487, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1487, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1488, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1488, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1502, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1505, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1505, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1505, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1505, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1507, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1507, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1509, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1513, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1514, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1515, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1515, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1518, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1523, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1524, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1527, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1528, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1535, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1545, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1545, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1554, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1562, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1562, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1564, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1565, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1567, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1588, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1588, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1590, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1590, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1591, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 1595, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1599, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1599, "col_offset": 26, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 1611, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1615, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1616, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1617, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1622, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1626, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1627, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1628, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1631, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1634, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1635, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1636, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1640, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 1646, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1648, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1650, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1651, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1653, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1653, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1657, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 1663, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1665, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1667, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1668, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1670, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1670, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1674, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 1680, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1682, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1684, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1685, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1687, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1687, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1696, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1697, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1697, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1698, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1699, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1699, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1709, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1710, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1710, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1711, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1712, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1712, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1722, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1723, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1723, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1724, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1725, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1725, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1731, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1734, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1735, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1754, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1755, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1757, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1758, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1760, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1761, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 1764, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1766, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1766, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 1781, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1782, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1801, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1802, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1803, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1813, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1814, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1840, "col_offset": 15, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1840, "col_offset": 26, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1842, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1844, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1861, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1861, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1861, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1875, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1875, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1875, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1879, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1879, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1879, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1882, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1883, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1894, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1894, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1902, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1902, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1910, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1910, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1911, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1911, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1915, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1917, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1917, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1918, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1918, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1922, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1933, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1933, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1942, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1942, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1943, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1943, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1946, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1949, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1951, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1951, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1952, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1952, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1955, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1958, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1969, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1969, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1977, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1977, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1978, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1980, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1980, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1980, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1981, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1981, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1993, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1993, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2000, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2001, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2002, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2007, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2011, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2012, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2013, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2016, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2019, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2020, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2021, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2033, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 2033, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2039, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 2044, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2050, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2050, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2054, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2055, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2067, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2067, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2068, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2068, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2068, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2080, "col_offset": 34, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 2080, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2086, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 2091, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 2097, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2097, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2101, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 2102, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2114, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2114, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2115, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2115, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2115, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 2120, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2124, "col_offset": 21, "nodeName": "Dimension", "type": "Any"}, {"lineNumber": 2131, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2131, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2149, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2149, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2151, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2151, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2152, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2157, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2157, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2157, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2158, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2159, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2160, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2175, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2175, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2177, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2177, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2178, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2183, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2183, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2183, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2184, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2185, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2186, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2202, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2202, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2204, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2204, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2205, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2210, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2210, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2210, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2211, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2212, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2213, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2230, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2231, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2232, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2237, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2238, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2241, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 2241, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 2241, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 2243, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2244, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2245, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2246, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2249, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2251, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2252, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2272, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2273, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2275, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2276, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2278, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2279, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 2282, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2284, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 2284, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 2299, "col_offset": 9, "nodeName": "self", "type": "CausalConv1DTest"}, {"lineNumber": 2300, "col_offset": 6, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 2313, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2319, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2319, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2333, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2334, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2335, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2339, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2342, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2342, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2342, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2344, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2346, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2346, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2346, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2351, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2356, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2356, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2365, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2365, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 2365, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2401, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2406, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 2407, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2409, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2409, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2418, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2421, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 2422, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2423, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2428, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2431, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2431, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2432, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2432, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2432, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2432, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2444, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2444, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2445, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2446, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2464, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2464, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2465, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2468, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2480, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2482, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2482, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2485, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2485, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2485, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2487, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2487, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2487, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2488, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2488, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2496, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2503, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2503, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2503, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 2503, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2505, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2505, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2507, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2511, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2512, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2512, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 2513, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 2516, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2516, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2519, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2520, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2524, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2532, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2541, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2541, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2543, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2544, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2546, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2551, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2560, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2560, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2573, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2575, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2575, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2577, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2577, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2586, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2590, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2590, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2601, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2603, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2603, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2605, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2605, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2612, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2616, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2616, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2627, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2629, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2629, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2631, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2631, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2636, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2640, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2641, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2649, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2652, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2653, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2654, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2659, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2662, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2662, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2662, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2668, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2670, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2670, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2670, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2678, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2678, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2678, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2718, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2729, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2729, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2738, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2741, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2743, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2744, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2748, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2752, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2752, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2753, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2753, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2753, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2753, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2773, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2773, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2774, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2777, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2801, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2801, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2802, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2807, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2818, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2820, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2821, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2824, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2824, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2824, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2826, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2826, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2826, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2827, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2827, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2837, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2843, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2844, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2844, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2844, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2844, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2846, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2846, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2848, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2853, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2854, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2854, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2855, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2856, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2857, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2857, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2858, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2861, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2861, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2864, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2865, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2870, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2876, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2886, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2886, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2895, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2905, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2905, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2907, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2908, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2909, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2911, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2923, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2926, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2927, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2929, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2929, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2938, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2943, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2943, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2955, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2959, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2960, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2962, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2962, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2971, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2976, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2976, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2988, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2990, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2991, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2993, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2993, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3000, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3005, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3005, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3017, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3019, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3020, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3022, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3022, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3027, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3032, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3032, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3047, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3049, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3050, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3052, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 3053, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3054, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3054, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3058, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3061, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3066, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3066, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3081, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3082, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3083, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3088, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3092, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3092, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3092, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3098, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3099, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3102, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3102, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3102, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3110, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 3110, "col_offset": 10, "nodeName": "SeparableConv1DTest", "type": "Type[SeparableConv1DTest]"}, {"lineNumber": 3110, "col_offset": 31, "nodeName": "self", "type": "SeparableConv1DTest"}, {"lineNumber": 3148, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3159, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3159, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3168, "col_offset": 39, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 3171, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 3173, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 3174, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3178, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3182, "col_offset": 20, "nodeName": "session", "type": "Any"}, {"lineNumber": 3182, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3183, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3204, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3204, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3205, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3208, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3232, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3232, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3233, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3238, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3249, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3251, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3252, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3255, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3255, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3255, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3257, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3257, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3257, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 3258, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3258, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 3268, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3274, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3275, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3275, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3275, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 3275, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3277, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3277, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3279, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3284, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3285, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3285, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 3286, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 3287, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3288, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3288, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 3289, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 3292, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3292, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 3295, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3296, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3301, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3307, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3317, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3317, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3326, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 3336, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3336, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3338, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3339, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3340, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3342, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3354, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3357, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3358, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3360, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3360, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3365, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3369, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 3370, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3384, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3388, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3389, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3391, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3391, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3398, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3402, "col_offset": 15, "nodeName": "session", "type": "Any"}, {"lineNumber": 3403, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3415, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3417, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3418, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3420, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3420, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3425, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3429, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3430, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3442, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3444, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3445, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3447, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3447, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3452, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3456, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3457, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3472, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3474, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 3475, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3477, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 3478, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3479, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3479, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3483, "col_offset": 62, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3485, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3489, "col_offset": 12, "nodeName": "session", "type": "Any"}, {"lineNumber": 3490, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3504, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3505, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3506, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3511, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3515, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3515, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3515, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3521, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3522, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 3525, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3525, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3525, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3548, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3548, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3548, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3548, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3548, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3552, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3552, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3552, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3553, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3562, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3562, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3562, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3562, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3562, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3566, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3566, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3566, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3566, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3567, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3569, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3570, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3586, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3592, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3592, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3592, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3593, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3599, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3603, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 3604, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3607, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3608, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 3609, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3609, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3609, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3609, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3609, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3617, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3617, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3618, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3619, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3632, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3632, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3633, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3635, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3652, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3652, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 3654, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3665, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3665, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3666, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3667, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3668, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3668, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3669, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3670, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3677, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 3685, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3685, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3685, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 3686, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3703, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3703, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 3703, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 3703, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3705, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3705, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3707, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3711, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3712, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3713, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 3713, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 3716, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3720, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3721, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3727, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3737, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3737, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3749, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3749, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3751, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3754, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3755, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3756, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3763, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 3772, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3772, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3774, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3775, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3777, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3789, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3792, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3792, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3794, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3794, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3795, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3810, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3814, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3815, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3827, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3830, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3830, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3832, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3832, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3833, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3838, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3842, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3843, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3855, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3859, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3860, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3861, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3866, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3870, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3871, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3872, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3875, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 3878, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3879, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3880, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3884, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3884, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3890, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3892, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3894, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3894, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3895, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3897, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3897, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3901, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 3907, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3909, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3911, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3911, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3912, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3914, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3914, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3918, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3924, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3926, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3928, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3928, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3929, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3931, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3931, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3935, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3941, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3943, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3945, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3945, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3946, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3948, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3948, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3952, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3958, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3960, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3962, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3962, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3963, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3965, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3965, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3970, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 3971, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3974, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3975, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3975, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3976, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3977, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3977, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3983, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3984, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3987, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3988, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3988, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3989, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3990, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3990, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3996, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3997, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 4000, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4001, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4001, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 4002, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 4003, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4003, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 4009, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 4010, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 4013, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4014, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4014, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 4015, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 4016, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4016, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 4022, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 4023, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 4026, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4027, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4027, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 4028, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 4029, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4029, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 4035, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4038, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4039, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4058, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4059, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 4061, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4062, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 4064, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4065, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 4068, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4070, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 4070, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 4085, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4086, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4094, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 4094, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 4094, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4125, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4126, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 4145, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4148, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 4149, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 4150, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 4151, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 4160, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 4162, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4162, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 4170, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4171, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4177, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 4186, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4188, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4189, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 4189, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 4190, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 4190, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 4197, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4203, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 4219, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4219, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4221, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4224, "col_offset": 6, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 4225, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 4226, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 4234, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4235, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 4236, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 4237, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 4242, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 4244, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4244, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4245, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 4245, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 4250, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 4251, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 4260, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 4261, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4262, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4263, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 4264, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 4267, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 4272, "col_offset": 28, "nodeName": "strides", "type": "Any"}, {"lineNumber": 4278, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4278, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4282, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 4282, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4283, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4284, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4285, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4286, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4287, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 4296, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4296, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4297, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4297, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4297, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4306, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 4307, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4308, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 4309, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 4310, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 4313, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 4318, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 4324, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4324, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4328, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 4328, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4329, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4330, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4331, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4332, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 4333, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 4342, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 4342, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 4343, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 4343, "col_offset": 23, "nodeName": "conv3_transpose", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4343, "col_offset": 53, "nodeName": "conv3", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 274, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 330, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 352, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 375, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 375, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 381, "col_offset": 30, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 391, "col_offset": 37, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 394, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 440, "col_offset": 41, "nodeName": "in_height", "type": "int"}, {"lineNumber": 440, "col_offset": 52, "nodeName": "in_width", "type": "int"}, {"lineNumber": 440, "col_offset": 62, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 443, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 443, "col_offset": 41, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 443, "col_offset": 54, "nodeName": "in_height", "type": "int"}, {"lineNumber": 443, "col_offset": 65, "nodeName": "in_width", "type": "int"}, {"lineNumber": 462, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 462, "col_offset": 23, "nodeName": "expected_out_height", "type": "int"}, {"lineNumber": 462, "col_offset": 44, "nodeName": "expected_out_width", "type": "int"}, {"lineNumber": 462, "col_offset": 64, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 465, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 465, "col_offset": 37, "nodeName": "expected_out_height", "type": "int"}, {"lineNumber": 465, "col_offset": 58, "nodeName": "expected_out_width", "type": "int"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 474, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 507, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 588, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 588, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 592, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 623, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 625, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 647, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 651, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 652, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 652, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 657, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 700, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 753, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 760, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 763, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 787, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 791, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 792, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 795, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 796, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 799, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 800, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 817, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 817, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 820, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 823, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 823, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 840, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 840, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 850, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 853, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 853, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 871, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 874, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 877, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 885, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 886, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 887, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 888, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 906, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 906, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 911, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 912, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 928, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 929, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 951, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 952, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 952, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 968, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 969, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 989, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 990, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 990, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1000, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1000, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1001, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1003, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1003, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1013, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1014, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1016, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1016, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1026, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1026, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1027, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1029, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1029, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1039, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 1039, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1040, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1042, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1042, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1051, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1051, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1052, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1052, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1063, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1064, "col_offset": 29, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1128, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1129, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1129, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1131, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1134, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1146, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1155, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1158, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1160, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1160, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 1161, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1180, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 1180, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1228, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1242, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1281, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1295, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1332, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1332, "col_offset": 41, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1332, "col_offset": 52, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1335, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1335, "col_offset": 41, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1335, "col_offset": 54, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1353, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1353, "col_offset": 27, "nodeName": "expected_out_length", "type": "int"}, {"lineNumber": 1353, "col_offset": 48, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1357, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1357, "col_offset": 27, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1357, "col_offset": 41, "nodeName": "expected_out_length", "type": "int"}, {"lineNumber": 1360, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1366, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1395, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1399, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1453, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1453, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1455, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1457, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 1485, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1487, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1510, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1514, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1515, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1515, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1518, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1519, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1520, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1527, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1554, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1567, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1590, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1590, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1596, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1623, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1627, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1628, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1631, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1632, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1632, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1635, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1636, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1652, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1653, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1669, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1670, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1686, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1687, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1697, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1697, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1698, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1700, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1700, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1710, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1710, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1711, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1713, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1713, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1723, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1723, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1724, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1726, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1726, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1735, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1735, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1736, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1736, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1755, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1758, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1761, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 1769, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1770, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1771, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1772, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1782, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1782, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 1801, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1801, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1803, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1837, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1839, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1843, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1844, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 1874, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1878, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1884, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1912, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1912, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1919, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1919, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1944, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1944, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1953, "col_offset": 52, "nodeName": "use_output_shape", "type": "Any"}, {"lineNumber": 1953, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1977, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1977, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1977, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1978, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1980, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2008, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2012, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2013, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2016, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2017, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2017, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2020, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2021, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2044, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2054, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2091, "col_offset": 28, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2101, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 2124, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2151, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2151, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2157, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2157, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2157, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2177, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2177, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2183, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2183, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2183, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2204, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2204, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2210, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2210, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2210, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2241, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2241, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2241, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2273, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2276, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2279, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 2287, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2288, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2289, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2290, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2300, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2301, "col_offset": 35, "nodeName": "data_format", "type": "str"}, {"lineNumber": 2340, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2342, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2342, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2344, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2345, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2345, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2346, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2346, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2407, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2409, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 2418, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2429, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2431, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2431, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2432, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2485, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2487, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2508, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2512, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2512, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2513, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2516, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2516, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2532, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2546, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2577, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2577, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2587, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2590, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2590, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2605, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2605, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2613, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2616, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2616, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2631, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2631, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2637, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2641, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2641, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2660, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2662, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2662, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2668, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2669, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2669, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2670, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2670, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2723, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2724, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2726, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2729, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2738, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2749, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2752, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2752, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2753, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2824, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2826, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2849, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2854, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2854, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2855, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2857, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2857, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2858, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2861, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2861, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2895, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2911, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2929, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2929, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2939, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2943, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2943, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2962, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2962, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2972, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2976, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2976, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2993, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2993, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3001, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3005, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3005, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3022, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3022, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3028, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3032, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3032, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3058, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3062, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3066, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3066, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3066, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 3089, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3092, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3092, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3098, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3099, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3100, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3100, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3101, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3101, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3102, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3102, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3153, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3154, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3156, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3159, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3168, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 3179, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3182, "col_offset": 49, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3182, "col_offset": 58, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 3255, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 3257, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3280, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3285, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3285, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 3286, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3288, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3288, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 3289, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3292, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3292, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3326, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 3342, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3360, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 3360, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3366, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3391, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 3391, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3399, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3420, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3420, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3426, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3447, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3447, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3453, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3483, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3486, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3512, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3515, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3515, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3521, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3522, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 3523, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3523, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3524, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3524, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3525, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3525, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3561, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3565, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3571, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3600, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3604, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3652, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3652, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 3654, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3656, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 3680, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3681, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 3685, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 3708, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3712, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 3713, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3713, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3716, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3717, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3718, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 3752, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3755, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3756, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3756, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3763, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 3777, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3794, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3794, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3795, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3811, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3815, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3815, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3832, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3832, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3833, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3839, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3843, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3843, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3867, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3871, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3872, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3875, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3876, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3876, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 3879, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3880, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3884, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 3894, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 3896, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3897, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3911, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3913, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3914, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3928, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3930, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3931, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3945, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3947, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3948, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3962, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3964, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3965, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3975, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3975, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3976, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3978, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3978, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3988, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3988, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3989, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3991, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3991, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 4001, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4001, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 4002, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4004, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 4004, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 4014, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4014, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 4015, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4017, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 4017, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 4027, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 4027, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 4028, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 4030, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 4030, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 4039, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 4039, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4040, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 4040, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 4059, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 4062, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 4065, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 4073, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4074, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4075, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4076, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4086, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 4086, "col_offset": 64, "nodeName": "data_format", "type": "str"}, {"lineNumber": 4157, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4158, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 4158, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4160, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4163, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 4184, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4187, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 4189, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 4189, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 4190, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 4209, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4222, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 4225, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 4226, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 4226, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 4245, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 4245, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4272, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 4282, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 4328, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 330, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 461, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 464, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 473, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 504, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 507, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 507, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 507, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 507, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 507, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 647, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 648, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 651, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 652, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 662, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 753, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 760, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 761, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 787, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 788, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 796, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 817, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 820, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 821, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 823, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 840, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 850, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 851, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 853, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 871, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 874, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 877, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 885, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 886, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 887, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 888, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 911, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 912, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 928, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 928, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 951, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 951, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 952, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 968, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 968, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 989, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 989, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 990, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1001, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1001, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1002, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1002, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1003, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1014, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1014, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1015, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1015, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1016, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1027, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1027, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1028, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1028, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1029, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1040, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1040, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1041, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1041, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1042, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1052, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1128, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1129, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1129, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 1129, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1131, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 1133, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1134, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1155, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1158, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1160, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1228, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1281, "col_offset": 28, "nodeName": "conv2_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1352, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1356, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1360, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1365, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1395, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1396, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1399, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1399, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1399, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1399, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1510, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1511, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1514, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1515, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1519, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1530, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1554, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1590, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1596, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1597, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1599, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1623, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1624, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1632, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1652, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1652, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1669, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1669, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1686, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1686, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1698, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1698, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1699, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1699, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1700, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1711, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1711, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1712, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1712, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1713, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1724, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1724, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1725, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1725, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1726, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1736, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1755, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1758, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1761, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1769, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1770, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 1771, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1772, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 1801, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1801, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1839, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1843, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1844, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1874, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1878, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1883, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2008, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2009, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2017, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2151, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2177, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2204, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2273, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2276, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2279, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2287, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2288, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 2289, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2290, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 2340, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2341, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2345, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2409, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2429, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2430, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2431, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2431, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2508, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2509, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2512, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2513, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 2516, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2525, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2532, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2577, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2587, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2588, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2590, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2605, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2613, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2614, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2616, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2631, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2637, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2638, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2641, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2660, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2661, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2669, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2723, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2724, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2726, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2729, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2749, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2750, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2752, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2752, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2849, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2850, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2854, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2855, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2857, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2858, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2861, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2871, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2895, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2929, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2939, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2940, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2943, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2962, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2972, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2973, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2976, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2993, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3001, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3002, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3005, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3022, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3028, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3029, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3032, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3058, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 3062, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3063, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3066, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 3089, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3090, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3100, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3101, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3153, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 3154, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3156, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3159, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3179, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3180, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3182, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 3182, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 3280, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3281, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3285, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3286, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 3288, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3289, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 3292, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 3302, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3326, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3360, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3366, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3367, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3391, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3399, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3400, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3420, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 3426, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3427, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3447, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 3453, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3454, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3483, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 3486, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3487, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3512, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3513, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3523, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3524, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3561, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 3565, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 3570, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3600, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3601, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3604, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 3604, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3604, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3604, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3604, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3605, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3680, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3681, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3708, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3709, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3712, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3713, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 3717, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 3722, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3752, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3752, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3752, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 3755, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3756, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3763, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3794, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3811, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3812, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3815, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3832, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3839, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3840, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3843, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3867, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3868, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3876, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3896, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3896, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3913, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3913, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3930, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3930, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3947, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3947, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3964, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3964, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3976, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3976, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3977, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3977, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3978, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3989, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3989, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3990, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3990, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3991, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4002, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 4002, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4003, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 4003, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 4004, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4015, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 4015, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4016, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 4016, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 4017, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4028, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 4028, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 4029, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 4029, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 4030, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 4040, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4059, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4062, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4065, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4073, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4074, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 4075, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 4076, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 4157, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4158, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 4158, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 4158, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 4160, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 4162, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 4163, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 4184, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4187, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4189, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4209, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 4222, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 4222, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 4222, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 4225, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4226, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 107, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 461, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 464, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 473, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 504, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 504, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 648, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 648, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 648, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 662, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 761, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 761, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 788, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 788, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 796, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 821, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 821, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 851, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 851, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 851, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 928, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 951, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 968, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 989, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1002, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1015, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1028, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1041, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1129, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1131, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1133, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1352, "col_offset": 10, "nodeName": "output", "type": "Any"}, {"lineNumber": 1356, "col_offset": 10, "nodeName": "output", "type": "Any"}, {"lineNumber": 1360, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1365, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1396, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1396, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1396, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1511, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1511, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1511, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1519, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1530, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1597, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1597, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1597, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1599, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1624, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1624, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1624, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1632, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1652, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1669, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1686, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1699, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1712, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1725, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1803, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1844, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1878, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1883, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2009, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2009, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2009, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2017, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2341, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2341, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2341, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2345, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2430, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2430, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2430, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2509, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2509, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2509, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2516, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2525, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2588, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2588, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2588, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2614, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2614, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2614, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2638, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2638, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2638, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2661, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2661, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2661, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2669, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2724, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2726, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2729, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2750, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2750, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2750, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2751, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2751, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2850, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2850, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2850, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2851, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2851, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2861, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2871, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2940, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2940, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2940, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2941, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2941, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2973, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2973, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2973, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2974, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2974, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3002, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3002, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3002, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3003, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3003, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3029, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3029, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3029, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3030, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3030, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3063, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3063, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3063, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3064, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3064, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3090, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3090, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3090, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3091, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3091, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3100, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3101, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3154, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3156, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3159, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 3180, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3180, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3180, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3181, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3181, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3281, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3281, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3281, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3282, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3282, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3292, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3302, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3367, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3367, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3367, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3368, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3368, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3400, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3400, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3400, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3401, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3401, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3427, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3427, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3427, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3428, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3428, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3454, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3454, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3454, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3455, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3455, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3487, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3487, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3487, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3488, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3488, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3513, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3513, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3513, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 3514, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 3514, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 3523, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3524, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3565, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3570, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3601, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3601, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3601, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3709, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3709, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3709, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3717, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3722, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3752, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3752, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3812, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3812, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3812, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3840, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3840, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3840, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3868, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3868, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3868, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3876, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3896, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3913, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3930, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3947, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3964, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3977, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3990, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4003, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4016, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4029, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 4158, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 4160, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4162, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 4222, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 4222, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 473, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 504, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 504, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 648, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 648, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 648, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 761, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 761, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 788, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 788, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 821, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 821, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 851, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 851, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 851, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1133, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1365, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1396, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1396, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1396, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1511, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1511, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1511, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1597, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1597, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1597, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1624, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1624, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1624, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1803, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1803, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1803, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1844, "col_offset": 58, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1883, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2009, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2009, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2009, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2341, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2341, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2341, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2430, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2430, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2430, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2509, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2509, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2509, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2588, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2588, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2588, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2614, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2614, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2614, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2638, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2638, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2638, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2661, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2661, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2661, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2729, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2750, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2750, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2750, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2751, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2751, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2850, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2850, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2850, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2851, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2851, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2940, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2940, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2940, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2941, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2941, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2973, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2973, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2973, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2974, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2974, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3002, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3002, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3002, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3003, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3003, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3029, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3029, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3029, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3030, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3030, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3063, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3063, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3063, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3064, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3064, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3090, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3090, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3090, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3091, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3091, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 3159, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3180, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3180, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3180, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3181, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3181, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3281, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3281, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3281, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3282, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3282, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3367, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3367, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3367, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3368, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3368, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3400, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3400, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3400, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3401, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3401, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3427, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3427, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3427, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3428, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3428, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3454, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3454, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3454, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3455, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3455, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3487, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3487, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3487, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3488, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3488, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3513, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3513, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3513, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3514, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3514, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv1D"}, {"lineNumber": 3570, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3601, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3601, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3601, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3709, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3709, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3709, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3812, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3812, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3812, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3840, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3840, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3840, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3868, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3868, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3868, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 4162, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 1803, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1803, "col_offset": 46, "nodeName": "i", "type": "int"}]