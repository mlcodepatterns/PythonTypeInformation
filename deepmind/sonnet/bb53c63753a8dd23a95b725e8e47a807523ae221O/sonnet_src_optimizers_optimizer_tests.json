[{"lineNumber": 48, "col_offset": 0, "nodeName": "is_tf_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "_generate_dense_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "_apply_optimizer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "named_product", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "Optimizer", "type": "Type[sonnet.src.base.Optimizer]"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 121, "col_offset": 44, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "base", "type": "module"}, {"lineNumber": 35, "col_offset": 2, "nodeName": "wrapped", "type": "None"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 121, "col_offset": 44, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 152, "col_offset": 2, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 2, "nodeName": "per_step_grads", "type": "List[List[Any]]"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 2, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 2, "nodeName": "per_step_grads", "type": "Any"}, {"lineNumber": 171, "col_offset": 2, "nodeName": "param_vals", "type": "List[List[Any]]"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "per_step_grads", "type": "Any"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "grads", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "per_step_grads", "type": "Any"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "param_vals", "type": "List[List[Any]]"}, {"lineNumber": 180, "col_offset": 2, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 2, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 2, "nodeName": "configs", "type": "List[Tuple[str, Dict[nothing, nothing]]]"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "val", "type": "Tuple[Any, ...]"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "configs", "type": "List[Tuple[str, Dict[nothing, nothing]]]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "WrappedTFOptimizer", "type": "Type[WrappedTFOptimizer]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "updates", "type": "List[None]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 151, "col_offset": 2, "nodeName": "seed", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "per_step_grads", "type": "List[List[Any]]"}, {"lineNumber": 168, "col_offset": 2, "nodeName": "params", "type": "Any"}, {"lineNumber": 168, "col_offset": 10, "nodeName": "per_step_grads", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 170, "col_offset": 60, "nodeName": "per_step_grads", "type": "Any"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "product", "type": "Callable"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "config", "type": "Dict[nothing, nothing]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "self", "type": "WrappedTFOptimizer"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "apply_gradients", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "MirroredStrategy", "type": "Any"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 128, "col_offset": 10, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "_make_tf", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 2, "nodeName": "random", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "seed", "type": "Any"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "astype", "type": "Any"}, {"lineNumber": 153, "col_offset": 49, "nodeName": "float32", "type": "Any"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "astype", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "astype", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 169, "col_offset": 67, "nodeName": "p", "type": "Any"}, {"lineNumber": 169, "col_offset": 72, "nodeName": "params", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "tree", "type": "Any"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "apply_fn", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "grads", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "values", "type": "Callable"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "itertools", "type": "module"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "self", "type": "WrappedTFOptimizer"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "updates", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "params", "type": "Any"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "constant", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "OptimizerTestBase"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "self", "type": "OptimizerTestBase"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "OptimizerTestBase"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "self", "type": "OptimizerTestBase"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "self", "type": "OptimizerTestBase"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "distribute", "type": "Any"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "scope", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "self", "type": "AbstractFuzzTest"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 151, "col_offset": 2, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "per_step_grads", "type": "List[List[Any]]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "param_vals", "type": "List[List[Any]]"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "val", "type": "Tuple[Any, ...]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "configs", "type": "List[Tuple[str, Dict[nothing, nothing]]]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "config", "type": "Dict[nothing, nothing]"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "WrappedTFOptimizer", "type": "Type[WrappedTFOptimizer]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "self", "type": "WrappedTFOptimizer"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "self", "type": "WrappedTFOptimizer"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "constant", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "self", "type": "OptimizerTestBase"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "normal", "type": "Any"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "normal", "type": "Any"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "normal", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "astype", "type": "Any"}, {"lineNumber": 162, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "k", "type": "nothing"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "v", "type": "nothing"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "random", "type": "Any"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "random", "type": "Any"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "shape", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "k", "type": "nothing"}, {"lineNumber": 185, "col_offset": 48, "nodeName": "v", "type": "nothing"}, {"lineNumber": 185, "col_offset": 53, "nodeName": "items", "type": "Callable"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "normal", "type": "Any"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "p", "type": "Any"}, {"lineNumber": 185, "col_offset": 53, "nodeName": "config", "type": "Dict[nothing, nothing]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "np", "type": "module"}]