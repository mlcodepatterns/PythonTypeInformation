[{"lineNumber": 31, "col_offset": 0, "nodeName": "_read_words", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "_build_vocab", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "_file_to_word_ids", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "ptb_raw_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "ptb_producer", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 2, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 2, "nodeName": "counter", "type": "Counter[nothing]"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "count_pairs", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "word_to_id", "type": "Dict[Any, Any]"}, {"lineNumber": 48, "col_offset": 9, "nodeName": "word_to_id", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 2, "nodeName": "train_path", "type": "str"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "valid_path", "type": "str"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "test_path", "type": "str"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "word_to_id", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 2, "nodeName": "train_data", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 2, "nodeName": "valid_data", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 2, "nodeName": "test_data", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "f", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "PY3", "type": "bool"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "_read_words", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "filename", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 45, "col_offset": 2, "nodeName": "words", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "_", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "_read_words", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "filename", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "_build_vocab", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "train_path", "type": "str"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "_file_to_word_ids", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "train_path", "type": "str"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "word_to_id", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "_file_to_word_ids", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "valid_path", "type": "str"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "word_to_id", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "_file_to_word_ids", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "test_path", "type": "str"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "word_to_id", "type": "Dict[Any, Any]"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "train_data", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "valid_data", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "test_data", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "word_to_id", "type": "Dict[Any, Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "raw_data", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "data_len", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "batch_len", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "epoch_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "GFile", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "filename", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "six", "type": "module"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "collections", "type": "module"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "words", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "word_to_id", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "word", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 105, "col_offset": 7, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "raw_data", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "raw_data", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "data_len", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "assert_positive", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "epoch_size", "type": "Any"}, {"lineNumber": 118, "col_offset": 6, "nodeName": "epoch_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "dequeue", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "strided_slice", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "set_shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "strided_slice", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "set_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "y", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "gfile", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "split", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "counter", "type": "Counter[nothing]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "count_pairs", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "word", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "word", "type": "Any"}, {"lineNumber": 53, "col_offset": 55, "nodeName": "word_to_id", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 105, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "raw_data", "type": "Any"}, {"lineNumber": 105, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 65, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 106, "col_offset": 69, "nodeName": "int32", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "raw_data", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "batch_len", "type": "Any"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "batch_len", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "control_dependencies", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "epoch_size", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "words", "type": "Any"}, {"lineNumber": 106, "col_offset": 69, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "assertion", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "range_input_producer", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "epoch_size", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "replace", "type": "Any"}, {"lineNumber": 43, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "batch_len", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 43, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "read", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "f", "type": "Any"}]