[{"lineNumber": 45, "col_offset": 15, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 663, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 380, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 663, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 715, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "items", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "items_str", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "saver", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "input_", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "saver", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "var_map", "type": "Dict[str, Any]"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 459, "col_offset": 22, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "module1", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "module2", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "a1", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "inputs_plus_b1", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "inputs_plus_b2", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "a2", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "inputs_plus_ab1_again", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "inputs_plus_ab2_again", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "m1", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "m2", "type": "Any"}, {"lineNumber": 538, "col_offset": 4, "nodeName": "a1", "type": "Callable[..., Any]"}, {"lineNumber": 538, "col_offset": 9, "nodeName": "a", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 4, "nodeName": "a2", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 9, "nodeName": "a", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "g1", "type": "Any"}, {"lineNumber": 546, "col_offset": 4, "nodeName": "g2", "type": "Any"}, {"lineNumber": 578, "col_offset": 35, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "ones", "type": "Any"}, {"lineNumber": 663, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 680, "col_offset": 34, "nodeName": "test_cases", "type": "List[Tuple[str, str]]"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "test", "type": "functools.partial[nothing]"}, {"lineNumber": 703, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 716, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "input_", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "s2", "type": "Any"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "v2", "type": "Any"}, {"lineNumber": 66, "col_offset": 6, "nodeName": "v3", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 86, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "v2", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 51, "nodeName": "s1", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "v1", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "v2", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "s1", "type": "Any"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "s3", "type": "Any"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "s2", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "v1", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 120, "col_offset": 47, "nodeName": "v2", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "s4", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "s2", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "v1", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "v2", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "input_", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "w", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 157, "col_offset": 9, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 51, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 51, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "variable_map_items", "type": "Callable[[Any], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "items_str", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "get_saver", "type": "Any"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "s1", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "saver", "type": "Any"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 201, "col_offset": 9, "nodeName": "input_", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "get_saver", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "saver", "type": "Any"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "s1", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "input_", "type": "Any"}, {"lineNumber": 218, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "get_saver", "type": "Any"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "s1", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "get_saver", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "s1", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 232, "col_offset": 50, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 238, "col_offset": 49, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 239, "col_offset": 53, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 257, "col_offset": 28, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 264, "col_offset": 28, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 278, "col_offset": 28, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 317, "col_offset": 28, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 342, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "_EXPECTED_FORMATTED_VARIABLE_LIST", "type": "str"}, {"lineNumber": 351, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "v1", "type": "Any"}, {"lineNumber": 355, "col_offset": 33, "nodeName": "v2", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "_EXPECTED_FORMATTED_VARIABLE_MAP", "type": "str"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "log_variables", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "add_to_collection", "type": "Any"}, {"lineNumber": 371, "col_offset": 6, "nodeName": "v1", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "log_variables", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 404, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 409, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 414, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 428, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 431, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "InheritedVariableContainer", "type": "Type[Any]"}, {"lineNumber": 437, "col_offset": 11, "nodeName": "InheritedVariableContainer", "type": "Type[Any]"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 440, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 442, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 443, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 445, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 447, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 448, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 449, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 450, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 452, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 453, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 454, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 455, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 459, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 479, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 479, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 481, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 482, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 484, "col_offset": 9, "nodeName": "a", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 21, "nodeName": "add_b", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 486, "col_offset": 22, "nodeName": "module1", "type": "Any"}, {"lineNumber": 486, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "module2", "type": "Any"}, {"lineNumber": 488, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "add_b", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 490, "col_offset": 9, "nodeName": "a", "type": "Callable[..., Any]"}, {"lineNumber": 492, "col_offset": 28, "nodeName": "module1", "type": "Any"}, {"lineNumber": 492, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "module2", "type": "Any"}, {"lineNumber": 493, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 495, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 497, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 518, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 535, "col_offset": 9, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 536, "col_offset": 9, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 538, "col_offset": 9, "nodeName": "m1", "type": "Any"}, {"lineNumber": 539, "col_offset": 9, "nodeName": "m2", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 545, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 546, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 549, "col_offset": 6, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 550, "col_offset": 6, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 564, "col_offset": 6, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 578, "col_offset": 35, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 599, "col_offset": 6, "nodeName": "tensor_names", "type": "List[Any]"}, {"lineNumber": 600, "col_offset": 10, "nodeName": "op", "type": "Any"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "ops", "type": "List[Any]"}, {"lineNumber": 602, "col_offset": 13, "nodeName": "tensor_names", "type": "List[Any]"}, {"lineNumber": 604, "col_offset": 11, "nodeName": "VariableContainerWithOps", "type": "Type[Any]"}, {"lineNumber": 605, "col_offset": 11, "nodeName": "VariableContainerWithOps", "type": "Type[Any]"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 608, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 609, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 611, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 612, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 615, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 620, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 621, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 623, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 624, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 660, "col_offset": 21, "nodeName": "tensor_names", "type": "List[str]"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "camel_case", "type": "str"}, {"lineNumber": 680, "col_offset": 20, "nodeName": "snake_case", "type": "str"}, {"lineNumber": 681, "col_offset": 6, "nodeName": "actual", "type": "str"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 689, "col_offset": 20, "nodeName": "test", "type": "Callable[[], Any]"}, {"lineNumber": 692, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 693, "col_offset": 20, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 699, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "test", "type": "functools.partial[nothing]"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 711, "col_offset": 11, "nodeName": "name_for_callable", "type": "Callable[[Any], Any]"}, {"lineNumber": 711, "col_offset": 34, "nodeName": "func", "type": "Any"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 712, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 712, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 716, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "s1", "type": "Any"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "v1", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 71, "col_offset": 59, "nodeName": "v2", "type": "Any"}, {"lineNumber": 71, "col_offset": 63, "nodeName": "v3", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "v1", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "v2", "type": "Any"}, {"lineNumber": 73, "col_offset": 68, "nodeName": "v3", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "_is_scope_prefix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "s2", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "v1", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 103, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 110, "col_offset": 63, "nodeName": "s1", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 125, "col_offset": 63, "nodeName": "s4", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "get_normalized_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 147, "col_offset": 39, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "conv", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 190, "col_offset": 6, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 191, "col_offset": 6, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "train", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "saver", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "saver", "type": "Any"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "train", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "saver", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "saver", "type": "Any"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 209, "col_offset": 6, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "input_", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "net", "type": "Any"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "train", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "train", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 227, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 232, "col_offset": 50, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "_var_list", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 238, "col_offset": 49, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 239, "col_offset": 53, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 257, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 258, "col_offset": 41, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 264, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 268, "col_offset": 38, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 270, "col_offset": 38, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 272, "col_offset": 59, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 289, "col_offset": 41, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 296, "col_offset": 41, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 300, "col_offset": 38, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 301, "col_offset": 40, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 301, "col_offset": 59, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "l2_regularizer", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 310, "col_offset": 41, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 311, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 317, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 318, "col_offset": 41, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 319, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 325, "col_offset": 41, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "l2_regularizer", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 331, "col_offset": 40, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 331, "col_offset": 59, "nodeName": "keys", "type": "List[str]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "has_variable_scope", "type": "Callable[[Any], bool]"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "has_variable_scope", "type": "Callable[[Any], bool]"}, {"lineNumber": 336, "col_offset": 43, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "has_variable_scope", "type": "Callable[[Any], bool]"}, {"lineNumber": 338, "col_offset": 43, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 343, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "format_variables", "type": "Callable[..., Any]"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 352, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 356, "col_offset": 21, "nodeName": "format_variable_map", "type": "Callable[..., Any]"}, {"lineNumber": 356, "col_offset": 45, "nodeName": "var_map", "type": "Dict[str, Any]"}, {"lineNumber": 361, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 362, "col_offset": 6, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 363, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 370, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 372, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 375, "col_offset": 23, "nodeName": "v2", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "v1", "type": "Any"}, {"lineNumber": 383, "col_offset": 38, "nodeName": "vs", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 384, "col_offset": 30, "nodeName": "vs", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 397, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 400, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 409, "col_offset": 28, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 437, "col_offset": 11, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 442, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 445, "col_offset": 28, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 463, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 479, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 479, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 481, "col_offset": 26, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 482, "col_offset": 26, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 484, "col_offset": 9, "nodeName": "module1", "type": "Any"}, {"lineNumber": 485, "col_offset": 21, "nodeName": "module1", "type": "Any"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "module2", "type": "Any"}, {"lineNumber": 490, "col_offset": 9, "nodeName": "module2", "type": "Any"}, {"lineNumber": 495, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 496, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 497, "col_offset": 34, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 497, "col_offset": 46, "nodeName": "in_size", "type": "int"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 502, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 504, "col_offset": 6, "nodeName": "assertNotAlmostEqual", "type": "Any"}, {"lineNumber": 506, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 507, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 511, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 515, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 533, "col_offset": 15, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 541, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 541, "col_offset": 27, "nodeName": "a1", "type": "Callable[..., Any]"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 542, "col_offset": 27, "nodeName": "a2", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 546, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 548, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 549, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 550, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 552, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 553, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 554, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 555, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 557, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 559, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 560, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 562, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 563, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 564, "col_offset": 13, "nodeName": "VariableContainer", "type": "Type[Any]"}, {"lineNumber": 566, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 567, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 568, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 571, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 572, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 573, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 574, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 660, "col_offset": 35, "nodeName": "get_tensor_names_from_default_graph", "type": "Callable[[], Any]"}, {"lineNumber": 681, "col_offset": 15, "nodeName": "to_snake_case", "type": "Callable[[Any], str]"}, {"lineNumber": 681, "col_offset": 34, "nodeName": "camel_case", "type": "str"}, {"lineNumber": 682, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 682, "col_offset": 23, "nodeName": "actual", "type": "str"}, {"lineNumber": 682, "col_offset": 31, "nodeName": "snake_case", "type": "str"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 699, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 699, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 699, "col_offset": 47, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 708, "col_offset": 20, "nodeName": "Test", "type": "Type[Any]"}, {"lineNumber": 711, "col_offset": 11, "nodeName": "util", "type": "module"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 716, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "get_variables_in_module", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "s2", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "s1", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 103, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 108, "col_offset": 65, "nodeName": "s3", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 111, "col_offset": 70, "nodeName": "s1", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 113, "col_offset": 70, "nodeName": "name", "type": "Any"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "s4", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 126, "col_offset": 70, "nodeName": "s4", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "s2", "type": "Any"}, {"lineNumber": 128, "col_offset": 70, "nodeName": "name", "type": "Any"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "variable_map", "type": "Any"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "partitioner", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 182, "col_offset": 55, "nodeName": "items", "type": "Generator[Tuple[Any, Any], Any, None]"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 190, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 209, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 211, "col_offset": 52, "nodeName": "s1", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 212, "col_offset": 52, "nodeName": "s1", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "get_variables_in_scope", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "s1", "type": "Any"}, {"lineNumber": 216, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "saver1", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "saver2", "type": "Any"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 268, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 270, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 300, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "snt", "type": "module"}, {"lineNumber": 341, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 343, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "get_local_variable", "type": "Any"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "v2", "type": "Any"}, {"lineNumber": 346, "col_offset": 47, "nodeName": "v1", "type": "Any"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 352, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 354, "col_offset": 13, "nodeName": "get_local_variable", "type": "Any"}, {"lineNumber": 356, "col_offset": 21, "nodeName": "snt", "type": "module"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 361, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 362, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "get_local_variable", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 370, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 372, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "get_local_variable", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "name", "type": "str"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 391, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 397, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 414, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 428, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 431, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "method_without_reuse", "type": "Callable[[], Any]"}, {"lineNumber": 447, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 448, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 450, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 452, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 453, "col_offset": 35, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 454, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 455, "col_offset": 35, "nodeName": "not_inherited_method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 474, "col_offset": 15, "nodeName": "add_b", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 479, "col_offset": 59, "nodeName": "in_size", "type": "int"}, {"lineNumber": 495, "col_offset": 9, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 496, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 498, "col_offset": 22, "nodeName": "a1", "type": "Any"}, {"lineNumber": 498, "col_offset": 26, "nodeName": "inputs_plus_b1", "type": "Any"}, {"lineNumber": 498, "col_offset": 42, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 498, "col_offset": 59, "nodeName": "a2", "type": "Any"}, {"lineNumber": 498, "col_offset": 63, "nodeName": "inputs_plus_b2", "type": "Any"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 502, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 502, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 503, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 503, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 504, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 504, "col_offset": 32, "nodeName": "norm", "type": "Any"}, {"lineNumber": 506, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 506, "col_offset": 43, "nodeName": "out", "type": "Any"}, {"lineNumber": 507, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 507, "col_offset": 43, "nodeName": "out", "type": "Any"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "inputs_plus_ab1", "type": "Any"}, {"lineNumber": 509, "col_offset": 39, "nodeName": "inputs_plus_ab1_again", "type": "Any"}, {"lineNumber": 511, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 511, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 511, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 513, "col_offset": 22, "nodeName": "inputs_plus_ab2", "type": "Any"}, {"lineNumber": 513, "col_offset": 39, "nodeName": "inputs_plus_ab2_again", "type": "Any"}, {"lineNumber": 515, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 515, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 515, "col_offset": 34, "nodeName": "out", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 533, "col_offset": 15, "nodeName": "_template", "type": "Any"}, {"lineNumber": 548, "col_offset": 9, "nodeName": "g1", "type": "Any"}, {"lineNumber": 549, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 550, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 552, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 554, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 557, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 559, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 562, "col_offset": 9, "nodeName": "g2", "type": "Any"}, {"lineNumber": 563, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 564, "col_offset": 13, "nodeName": "ReuseVarsTest", "type": "Type[ReuseVarsTest]"}, {"lineNumber": 566, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 568, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 571, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 573, "col_offset": 6, "nodeName": "self", "type": "ReuseVarsTest"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 583, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 583, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 595, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 608, "col_offset": 43, "nodeName": "add_b", "type": "Callable[..., Any]"}, {"lineNumber": 608, "col_offset": 54, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 609, "col_offset": 45, "nodeName": "add_b", "type": "Callable[..., Any]"}, {"lineNumber": 609, "col_offset": 56, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 611, "col_offset": 43, "nodeName": "add_a", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 54, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 612, "col_offset": 45, "nodeName": "add_a", "type": "Callable[..., Any]"}, {"lineNumber": 612, "col_offset": 56, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 615, "col_offset": 21, "nodeName": "nested_add", "type": "Callable[..., Any]"}, {"lineNumber": 615, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "nested_add", "type": "Callable[..., Any]"}, {"lineNumber": 617, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 620, "col_offset": 43, "nodeName": "add_b", "type": "Callable[..., Any]"}, {"lineNumber": 620, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 621, "col_offset": 45, "nodeName": "add_b", "type": "Callable[..., Any]"}, {"lineNumber": 621, "col_offset": 56, "nodeName": "ones", "type": "Any"}, {"lineNumber": 623, "col_offset": 43, "nodeName": "add_a", "type": "Callable[..., Any]"}, {"lineNumber": 623, "col_offset": 54, "nodeName": "ones", "type": "Any"}, {"lineNumber": 624, "col_offset": 45, "nodeName": "add_a", "type": "Callable[..., Any]"}, {"lineNumber": 624, "col_offset": 56, "nodeName": "ones", "type": "Any"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "nested_add", "type": "Callable[..., Any]"}, {"lineNumber": 627, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "nested_add", "type": "Callable[..., Any]"}, {"lineNumber": 629, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 681, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 682, "col_offset": 6, "nodeName": "self", "type": "NameFunctionTest"}, {"lineNumber": 699, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "module", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "s2", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 70, "nodeName": "s1", "type": "Any"}, {"lineNumber": 128, "col_offset": 70, "nodeName": "s4", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "key", "type": "Any"}, {"lineNumber": 182, "col_offset": 48, "nodeName": "var", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 345, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 354, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 403, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 414, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 428, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 431, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 447, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 448, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 449, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 450, "col_offset": 35, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 452, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 453, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 454, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 455, "col_offset": 35, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 462, "col_offset": 47, "nodeName": "name", "type": "str"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 467, "col_offset": 42, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 474, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 474, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 481, "col_offset": 26, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 482, "col_offset": 26, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 500, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 502, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 503, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 504, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 506, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 506, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 507, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 507, "col_offset": 35, "nodeName": "out", "type": "Any"}, {"lineNumber": 510, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 510, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 514, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 514, "col_offset": 40, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 521, "col_offset": 46, "nodeName": "name", "type": "str"}, {"lineNumber": 533, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 553, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 555, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 560, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 567, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 572, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 574, "col_offset": 23, "nodeName": "method_with_reuse", "type": "Callable[..., Any]"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 587, "col_offset": 24, "nodeName": "method_with_reuse", "type": "Any"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 591, "col_offset": 36, "nodeName": "add_a", "type": "Any"}, {"lineNumber": 591, "col_offset": 47, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 595, "col_offset": 23, "nodeName": "get_operations", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "tensor_names", "type": "List[Any]"}, {"lineNumber": 601, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 608, "col_offset": 43, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 609, "col_offset": 45, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 611, "col_offset": 43, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 612, "col_offset": 45, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 615, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 620, "col_offset": 43, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 621, "col_offset": 45, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 623, "col_offset": 43, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 624, "col_offset": 45, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 683, "col_offset": 24, "nodeName": "camel_case", "type": "str"}, {"lineNumber": 683, "col_offset": 36, "nodeName": "actual", "type": "str"}, {"lineNumber": 683, "col_offset": 44, "nodeName": "snake_case", "type": "str"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 462, "col_offset": 14, "nodeName": "ModuleReuse", "type": "Type[Any]"}, {"lineNumber": 462, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 467, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 471, "col_offset": 51, "nodeName": "_shape", "type": "Any"}, {"lineNumber": 474, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 481, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 482, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 502, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 502, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 502, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 503, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 503, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 503, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 504, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 47, "nodeName": "out", "type": "Any"}, {"lineNumber": 504, "col_offset": 56, "nodeName": "out", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 521, "col_offset": 14, "nodeName": "TestModule", "type": "Type[Any]"}, {"lineNumber": 521, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 553, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 555, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 560, "col_offset": 23, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 567, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "obj1", "type": "Any"}, {"lineNumber": 572, "col_offset": 23, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 574, "col_offset": 23, "nodeName": "obj2", "type": "Any"}, {"lineNumber": 587, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 591, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 596, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 596, "col_offset": 62, "nodeName": "name", "type": "Any"}, {"lineNumber": 597, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 601, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 601, "col_offset": 44, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 601, "col_offset": 54, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 471, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 474, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 595, "col_offset": 23, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 596, "col_offset": 34, "nodeName": "op", "type": "Any"}, {"lineNumber": 596, "col_offset": 62, "nodeName": "op", "type": "Any"}, {"lineNumber": 597, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 601, "col_offset": 54, "nodeName": "op", "type": "Any"}, {"lineNumber": 595, "col_offset": 23, "nodeName": "tf", "type": "Any"}]