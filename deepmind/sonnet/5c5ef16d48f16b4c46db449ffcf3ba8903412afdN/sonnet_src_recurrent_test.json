[{"lineNumber": 500, "col_offset": 0, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 258, "col_offset": 44, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 446, "col_offset": 14, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 446, "col_offset": 35, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 504, "col_offset": 40, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 577, "col_offset": 14, "nodeName": "RNNCore", "type": "Type[sonnet.src.recurrent.RNNCore]"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "RNNCore", "type": "Type[sonnet.src.recurrent.RNNCore]"}, {"lineNumber": 622, "col_offset": 25, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 622, "col_offset": 46, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 688, "col_offset": 17, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 688, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 856, "col_offset": 29, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 258, "col_offset": 44, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 446, "col_offset": 14, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 446, "col_offset": 35, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 504, "col_offset": 19, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 504, "col_offset": 40, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 577, "col_offset": 14, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 622, "col_offset": 25, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 622, "col_offset": 46, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 688, "col_offset": 17, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 688, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 856, "col_offset": 29, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 905, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "atol", "type": "float"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "variables", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "expected_next_state", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "core0", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "core1", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "deep_rnn", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "prev_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "o", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "expected_cell", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "expected_hidden", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "atol", "type": "float"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "projection_size", "type": "int"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "variables", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "almost_zero", "type": "Any"}, {"lineNumber": 243, "col_offset": 7, "nodeName": "almost_zero", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 272, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "atol", "type": "float"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 308, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "variables", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "core", "type": "Any"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "w_i", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "g", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "o", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "expected_cell", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "expected_hidden", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "atol", "type": "float"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "num_spatial_dims", "type": "int"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "num_spatial_dims", "type": "int"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 442, "col_offset": 13, "nodeName": "variables", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "r", "type": "Any"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "expected_state", "type": "Any"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "atol", "type": "float"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 496, "col_offset": 13, "nodeName": "variables", "type": "Any"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "cudnn_gru", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 573, "col_offset": 13, "nodeName": "variables", "type": "Any"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 589, "col_offset": 24, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "_built", "type": "bool"}, {"lineNumber": 599, "col_offset": 11, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "_base_core", "type": "Any"}, {"lineNumber": 611, "col_offset": 22, "nodeName": "base_core", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "_n", "type": "Any"}, {"lineNumber": 612, "col_offset": 14, "nodeName": "n", "type": "Any"}, {"lineNumber": 639, "col_offset": 7, "nodeName": "initial_values_shape", "type": "Any"}, {"lineNumber": 643, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "mask", "type": "Tuple[bool, bool]"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 653, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "trainable_state", "type": "sonnet.src.recurrent.TrainableState"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "core", "type": "Counter"}, {"lineNumber": 699, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 713, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 730, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "num_replicas", "type": "int"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "core", "type": "Replicate"}, {"lineNumber": 735, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 747, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 760, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 771, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 783, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 799, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 803, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 824, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 840, "col_offset": 7, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "core", "type": "Counter"}, {"lineNumber": 906, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "VanillaRNN", "type": "Type[sonnet.src.recurrent.VanillaRNN]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 49, "col_offset": 56, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 50, "col_offset": 64, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "VanillaRNN", "type": "Type[sonnet.src.recurrent.VanillaRNN]"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[int], Any]"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "VanillaRNN", "type": "Type[sonnet.src.recurrent.VanillaRNN]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[int], Any]"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "DeepRNN", "type": "Type[sonnet.src.recurrent.DeepRNN]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 102, "col_offset": 56, "nodeName": "core", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "l", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "_layers", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "DeepRNN", "type": "Type[sonnet.src.recurrent.DeepRNN]"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "core", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 122, "col_offset": 64, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "VanillaRNN", "type": "Type[sonnet.src.recurrent.VanillaRNN]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "VanillaRNN", "type": "Type[sonnet.src.recurrent.VanillaRNN]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "DeepRNN", "type": "Type[sonnet.src.recurrent.DeepRNN]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "deep_rnn_with_skip_connections", "type": "Callable[..., sonnet.src.recurrent.RNNCore]"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "core", "type": "sonnet.src.recurrent.RNNCore"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "_", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 147, "col_offset": 55, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.src.recurrent.LSTM]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 179, "col_offset": 56, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 180, "col_offset": 64, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "w_ii", "type": "Any"}, {"lineNumber": 182, "col_offset": 10, "nodeName": "w_if", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "w_ig", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "w_io", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "w_hi", "type": "Any"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "w_hf", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "w_hg", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "w_ho", "type": "Any"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "b_i", "type": "Any"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "b_f", "type": "Any"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "b_g", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "b_o", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "o", "type": "Any"}, {"lineNumber": 193, "col_offset": 7, "nodeName": "projection_size", "type": "Any"}, {"lineNumber": 194, "col_offset": 6, "nodeName": "expected_hidden", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "expected_hidden", "type": "Any"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "expected_cell", "type": "Any"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "cell", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.src.recurrent.LSTM]"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[int], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 206, "col_offset": 41, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.src.recurrent.LSTM]"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[int], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 223, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "lstm_with_recurrent_dropout", "type": "Callable[..., Tuple[sonnet.src.recurrent._RecurrentDropoutWrapper, sonnet.src.recurrent.LSTM]]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "dynamic_unroll", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 236, "col_offset": 36, "nodeName": "train_core", "type": "sonnet.src.recurrent._RecurrentDropoutWrapper"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "dynamic_unroll", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 239, "col_offset": 36, "nodeName": "test_core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 239, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "rate", "type": "Any"}, {"lineNumber": 245, "col_offset": 6, "nodeName": "rtol", "type": "float"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "UnrolledLSTM", "type": "Type[sonnet.src.recurrent.UnrolledLSTM]"}, {"lineNumber": 269, "col_offset": 43, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 270, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[[Any], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 281, "col_offset": 6, "nodeName": "unrolled_lstm_fn", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 285, "col_offset": 35, "nodeName": "unrolled_lstm_fn", "type": "Any"}, {"lineNumber": 285, "col_offset": 52, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 286, "col_offset": 52, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "_w_i", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "_w_i", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "_w_h", "type": "Any"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "_w_h", "type": "Any"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "b", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "expected_output_sequence", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 301, "col_offset": 42, "nodeName": "cell", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "UnrolledLSTM", "type": "Type[sonnet.src.recurrent.UnrolledLSTM]"}, {"lineNumber": 305, "col_offset": 43, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[[Any], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 306, "col_offset": 48, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 317, "col_offset": 6, "nodeName": "unrolled_lstm_fn", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "UnrolledLSTM", "type": "Type[sonnet.src.recurrent.UnrolledLSTM]"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[[Any], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 330, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 331, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 331, "col_offset": 46, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 332, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "UnrolledLSTM", "type": "Type[sonnet.src.recurrent.UnrolledLSTM]"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 345, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[[Any], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 345, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 346, "col_offset": 34, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 367, "col_offset": 7, "nodeName": "core_cls", "type": "Any"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "Conv1DLSTM", "type": "Type[sonnet.src.recurrent.Conv1DLSTM]"}, {"lineNumber": 368, "col_offset": 6, "nodeName": "num_spatial_dims", "type": "int"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "core_cls", "type": "Any"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 382, "col_offset": 35, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 382, "col_offset": 56, "nodeName": "core", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 383, "col_offset": 64, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "input_to_hidden", "type": "Any"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "hidden_to_hidden", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "w_ii", "type": "Any"}, {"lineNumber": 391, "col_offset": 10, "nodeName": "w_if", "type": "Any"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "w_ig", "type": "Any"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "w_io", "type": "Any"}, {"lineNumber": 391, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 391, "col_offset": 38, "nodeName": "w_i", "type": "Any"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "w_hi", "type": "Any"}, {"lineNumber": 392, "col_offset": 10, "nodeName": "w_hf", "type": "Any"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "w_hg", "type": "Any"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "w_ho", "type": "Any"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 392, "col_offset": 38, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "b_i", "type": "Any"}, {"lineNumber": 393, "col_offset": 9, "nodeName": "b_f", "type": "Any"}, {"lineNumber": 393, "col_offset": 14, "nodeName": "b_g", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "b_o", "type": "Any"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 400, "col_offset": 22, "nodeName": "o", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 403, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 404, "col_offset": 24, "nodeName": "expected_hidden", "type": "Any"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "expected_cell", "type": "Any"}, {"lineNumber": 405, "col_offset": 39, "nodeName": "cell", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "Conv1DLSTM", "type": "Type[sonnet.src.recurrent.Conv1DLSTM]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[Any], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 418, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 420, "col_offset": 41, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 430, "col_offset": 31, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "Conv1DLSTM", "type": "Type[sonnet.src.recurrent.Conv1DLSTM]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[Any], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 439, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.Conv1DLSTM"}, {"lineNumber": 440, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 440, "col_offset": 17, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 442, "col_offset": 13, "nodeName": "core", "type": "sonnet.src.recurrent.Conv1DLSTM"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.src.recurrent.GRU]"}, {"lineNumber": 458, "col_offset": 25, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 461, "col_offset": 35, "nodeName": "use_tf_function", "type": "Any"}, {"lineNumber": 461, "col_offset": 56, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 462, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 462, "col_offset": 26, "nodeName": "core_fn", "type": "Any"}, {"lineNumber": 462, "col_offset": 64, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "w_iz", "type": "Any"}, {"lineNumber": 464, "col_offset": 10, "nodeName": "w_ir", "type": "Any"}, {"lineNumber": 464, "col_offset": 16, "nodeName": "w_ia", "type": "Any"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "w_hz", "type": "Any"}, {"lineNumber": 465, "col_offset": 10, "nodeName": "w_hr", "type": "Any"}, {"lineNumber": 465, "col_offset": 16, "nodeName": "w_ha", "type": "Any"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "b_z", "type": "Any"}, {"lineNumber": 466, "col_offset": 9, "nodeName": "b_r", "type": "Any"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "b_a", "type": "Any"}, {"lineNumber": 466, "col_offset": 20, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "expit", "type": "Callable[[Any], Any]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 474, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 475, "col_offset": 51, "nodeName": "expected_state", "type": "Any"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.src.recurrent.GRU]"}, {"lineNumber": 479, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 481, "col_offset": 36, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 487, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.src.recurrent.GRU]"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 493, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 493, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 494, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 496, "col_offset": 13, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 509, "col_offset": 7, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 512, "col_offset": 4, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 518, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "CuDNNGRU", "type": "Type[sonnet.src.recurrent.CuDNNGRU]"}, {"lineNumber": 520, "col_offset": 35, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 521, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 522, "col_offset": 13, "nodeName": "states", "type": "Any"}, {"lineNumber": 522, "col_offset": 22, "nodeName": "cudnn_gru", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 522, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 522, "col_offset": 40, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 534, "col_offset": 6, "nodeName": "w_i", "type": "Any"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "input_to_hidden", "type": "Any"}, {"lineNumber": 535, "col_offset": 6, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "hidden_to_hidden", "type": "Any"}, {"lineNumber": 545, "col_offset": 6, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 548, "col_offset": 45, "nodeName": "dynamic_unroll", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "cudnn_compatible_gru_fn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 549, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 549, "col_offset": 41, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 551, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 551, "col_offset": 33, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 552, "col_offset": 36, "nodeName": "expected_final_state", "type": "Any"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "CuDNNGRU", "type": "Type[sonnet.src.recurrent.CuDNNGRU]"}, {"lineNumber": 556, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 557, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 558, "col_offset": 18, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 558, "col_offset": 36, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "CuDNNGRU", "type": "Type[sonnet.src.recurrent.CuDNNGRU]"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 570, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 570, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "core", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 571, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 573, "col_offset": 13, "nodeName": "core", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 588, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "self", "type": "Counter"}, {"lineNumber": 590, "col_offset": 4, "nodeName": "self", "type": "Counter"}, {"lineNumber": 593, "col_offset": 11, "nodeName": "_built", "type": "bool"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "one", "type": "Any"}, {"lineNumber": 597, "col_offset": 6, "nodeName": "_built", "type": "bool"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 599, "col_offset": 7, "nodeName": "h", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 610, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "self", "type": "Replicate"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "self", "type": "Replicate"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 615, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 615, "col_offset": 26, "nodeName": "_base_core", "type": "Any"}, {"lineNumber": 615, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 615, "col_offset": 50, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 616, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 619, "col_offset": 41, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 636, "col_offset": 22, "nodeName": "TrainableState", "type": "Type[sonnet.src.recurrent.TrainableState]"}, {"lineNumber": 643, "col_offset": 20, "nodeName": "trainable_state", "type": "sonnet.src.recurrent.TrainableState"}, {"lineNumber": 644, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 650, "col_offset": 22, "nodeName": "TrainableState", "type": "Type[sonnet.src.recurrent.TrainableState]"}, {"lineNumber": 651, "col_offset": 47, "nodeName": "mask", "type": "Tuple[bool, bool]"}, {"lineNumber": 653, "col_offset": 15, "nodeName": "trainable_state", "type": "sonnet.src.recurrent.TrainableState"}, {"lineNumber": 656, "col_offset": 20, "nodeName": "trainable_state", "type": "sonnet.src.recurrent.TrainableState"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 657, "col_offset": 11, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 657, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 658, "col_offset": 9, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 664, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.src.recurrent.LSTM]"}, {"lineNumber": 665, "col_offset": 22, "nodeName": "for_core", "type": "Callable"}, {"lineNumber": 665, "col_offset": 56, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 691, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "Counter", "type": "Type[Counter]"}, {"lineNumber": 696, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 702, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 702, "col_offset": 23, "nodeName": "h", "type": "Any"}, {"lineNumber": 702, "col_offset": 27, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 702, "col_offset": 51, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 704, "col_offset": 35, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 704, "col_offset": 45, "nodeName": "core", "type": "Any"}, {"lineNumber": 704, "col_offset": 56, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 705, "col_offset": 45, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 710, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 714, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 716, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 716, "col_offset": 23, "nodeName": "h", "type": "Any"}, {"lineNumber": 716, "col_offset": 27, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 716, "col_offset": 51, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 717, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 718, "col_offset": 35, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 722, "col_offset": 12, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 727, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 731, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 734, "col_offset": 11, "nodeName": "Replicate", "type": "Type[Replicate]"}, {"lineNumber": 734, "col_offset": 21, "nodeName": "core", "type": "Any"}, {"lineNumber": 734, "col_offset": 32, "nodeName": "num_replicas", "type": "int"}, {"lineNumber": 735, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 735, "col_offset": 23, "nodeName": "h", "type": "Any"}, {"lineNumber": 735, "col_offset": 27, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 735, "col_offset": 46, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 736, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 737, "col_offset": 35, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 737, "col_offset": 45, "nodeName": "core", "type": "Replicate"}, {"lineNumber": 737, "col_offset": 51, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 738, "col_offset": 45, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 743, "col_offset": 24, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 744, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 748, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 753, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 754, "col_offset": 37, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "core_fn", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 755, "col_offset": 17, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 757, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 757, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 761, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 763, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 763, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 772, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 774, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 774, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 784, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 786, "col_offset": 22, "nodeName": "constant", "type": "Any"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 788, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 790, "col_offset": 25, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "assertConsistentWithLength", "type": "Any"}, {"lineNumber": 796, "col_offset": 36, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 796, "col_offset": 53, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 800, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 802, "col_offset": 22, "nodeName": "range", "type": "Any"}, {"lineNumber": 802, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 803, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 803, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 804, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 805, "col_offset": 25, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "assertConsistentWithLength", "type": "Any"}, {"lineNumber": 811, "col_offset": 36, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 811, "col_offset": 53, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "t", "type": "int"}, {"lineNumber": 814, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 814, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 814, "col_offset": 26, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 815, "col_offset": 10, "nodeName": "b", "type": "int"}, {"lineNumber": 825, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 827, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 827, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 828, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 829, "col_offset": 35, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 830, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 832, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 834, "col_offset": 53, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 835, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 835, "col_offset": 19, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 835, "col_offset": 35, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 836, "col_offset": 24, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 836, "col_offset": 41, "nodeName": "expected_output_sequence", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 837, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 837, "col_offset": 37, "nodeName": "expected_final_state", "type": "Any"}, {"lineNumber": 841, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 843, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 844, "col_offset": 21, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 845, "col_offset": 35, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "core", "type": "Any"}, {"lineNumber": 847, "col_offset": 8, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 850, "col_offset": 24, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 852, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 864, "col_offset": 16, "nodeName": "Counter", "type": "Type[Counter]"}, {"lineNumber": 864, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 869, "col_offset": 6, "nodeName": "initial_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 880, "col_offset": 6, "nodeName": "initial_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 883, "col_offset": 9, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 885, "col_offset": 42, "nodeName": "cf", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 887, "col_offset": 47, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 896, "col_offset": 9, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 906, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "initial_state", "type": "Callable[[int], Any]"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "atol", "type": "float"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "atol", "type": "float"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 62, "col_offset": 68, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "input_size", "type": "int"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "input_size", "type": "int"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "core", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "core", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "l", "type": "Any"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "expected_next_state", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "sign", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "core", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "sign", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "core0", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "core1", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "sign", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "deep_rnn", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "prev_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "initial_state", "type": "Callable[[int], Any]"}, {"lineNumber": 132, "col_offset": 59, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "prev_state", "type": "Tuple[Any, ...]"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "initial_state", "type": "Callable[[int], Any]"}, {"lineNumber": 133, "col_offset": 59, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "core", "type": "sonnet.src.recurrent.RNNCore"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "deep_rnn_with_skip_connections", "type": "Callable[..., sonnet.src.recurrent.RNNCore]"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "deep_rnn_with_residual_connections", "type": "Callable[..., sonnet.src.recurrent.RNNCore]"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "projection_size", "type": "Any"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "forget_bias", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "initial_state", "type": "Callable[[int], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 177, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 179, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 180, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "input_to_hidden", "type": "Any"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 183, "col_offset": 53, "nodeName": "hidden_to_hidden", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "b", "type": "Any"}, {"lineNumber": 185, "col_offset": 63, "nodeName": "b_i", "type": "Any"}, {"lineNumber": 186, "col_offset": 63, "nodeName": "b_f", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 65, "nodeName": "b_g", "type": "Any"}, {"lineNumber": 188, "col_offset": 63, "nodeName": "b_o", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "f", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "i", "type": "Any"}, {"lineNumber": 190, "col_offset": 46, "nodeName": "g", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 191, "col_offset": 34, "nodeName": "expected_cell", "type": "Any"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "dot", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 197, "col_offset": 57, "nodeName": "atol", "type": "float"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 198, "col_offset": 65, "nodeName": "atol", "type": "float"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 39, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 199, "col_offset": 61, "nodeName": "atol", "type": "float"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 202, "col_offset": 62, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "input_size", "type": "int"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "cell", "type": "Any"}, {"lineNumber": 206, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 209, "col_offset": 6, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "projection_size", "type": "int"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "input_size", "type": "int"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 226, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 231, "col_offset": 60, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 34, "nodeName": "rate", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 237, "col_offset": 61, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "initial_state", "type": "Callable[[int], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 240, "col_offset": 60, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 246, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "train_output", "type": "Any"}, {"lineNumber": 246, "col_offset": 40, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 253, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "lstm_with_recurrent_dropout", "type": "Callable[..., Tuple[sonnet.src.recurrent._RecurrentDropoutWrapper, sonnet.src.recurrent.LSTM]]"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 269, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 20, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 270, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 284, "col_offset": 9, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "LSTM", "type": "Type[sonnet.src.recurrent.LSTM]"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "_initialize", "type": "Any"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 294, "col_offset": 55, "nodeName": "dynamic_unroll", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 295, "col_offset": 10, "nodeName": "lstm", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 72, "nodeName": "atol", "type": "float"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "expected_final_state", "type": "Any"}, {"lineNumber": 300, "col_offset": 62, "nodeName": "atol", "type": "float"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 301, "col_offset": 42, "nodeName": "expected_final_state", "type": "Any"}, {"lineNumber": 301, "col_offset": 74, "nodeName": "atol", "type": "float"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 305, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 306, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "unrolled_lstm_fn", "type": "Any"}, {"lineNumber": 323, "col_offset": 10, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 324, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 324, "col_offset": 49, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 329, "col_offset": 60, "nodeName": "input_size", "type": "int"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 330, "col_offset": 48, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 331, "col_offset": 18, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 331, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 332, "col_offset": 18, "nodeName": "cell", "type": "Any"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 333, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 335, "col_offset": 36, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 344, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 344, "col_offset": 60, "nodeName": "input_size", "type": "int"}, {"lineNumber": 345, "col_offset": 20, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 345, "col_offset": 48, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 369, "col_offset": 9, "nodeName": "core_cls", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "Conv2DLSTM", "type": "Type[sonnet.src.recurrent.Conv2DLSTM]"}, {"lineNumber": 370, "col_offset": 6, "nodeName": "num_spatial_dims", "type": "int"}, {"lineNumber": 373, "col_offset": 6, "nodeName": "num_spatial_dims", "type": "int"}, {"lineNumber": 376, "col_offset": 20, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 380, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 382, "col_offset": 26, "nodeName": "core", "type": "Any"}, {"lineNumber": 383, "col_offset": 34, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 383, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 387, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "core", "type": "Any"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "core", "type": "Any"}, {"lineNumber": 391, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 393, "col_offset": 49, "nodeName": "b", "type": "Any"}, {"lineNumber": 394, "col_offset": 67, "nodeName": "b_i", "type": "Any"}, {"lineNumber": 395, "col_offset": 67, "nodeName": "b_f", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 396, "col_offset": 69, "nodeName": "b_g", "type": "Any"}, {"lineNumber": 397, "col_offset": 67, "nodeName": "b_o", "type": "Any"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "f", "type": "Any"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 399, "col_offset": 42, "nodeName": "i", "type": "Any"}, {"lineNumber": 399, "col_offset": 46, "nodeName": "g", "type": "Any"}, {"lineNumber": 400, "col_offset": 26, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 400, "col_offset": 34, "nodeName": "expected_cell", "type": "Any"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 403, "col_offset": 57, "nodeName": "atol", "type": "float"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 41, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 404, "col_offset": 65, "nodeName": "atol", "type": "float"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 39, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 405, "col_offset": 61, "nodeName": "atol", "type": "float"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.Conv1DLSTM"}, {"lineNumber": 418, "col_offset": 36, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "cell", "type": "Any"}, {"lineNumber": 420, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 421, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "core", "type": "sonnet.src.recurrent.Conv1DLSTM"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 423, "col_offset": 19, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 428, "col_offset": 20, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.Conv1DLSTM"}, {"lineNumber": 439, "col_offset": 36, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 443, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 458, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 459, "col_offset": 31, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 50, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 461, "col_offset": 14, "nodeName": "function", "type": "Any"}, {"lineNumber": 461, "col_offset": 26, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 462, "col_offset": 34, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 462, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 464, "col_offset": 33, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 464, "col_offset": 47, "nodeName": "input_to_hidden", "type": "Any"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 465, "col_offset": 33, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 465, "col_offset": 47, "nodeName": "hidden_to_hidden", "type": "Any"}, {"lineNumber": 466, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 466, "col_offset": 30, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 466, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 468, "col_offset": 56, "nodeName": "b_z", "type": "Any"}, {"lineNumber": 469, "col_offset": 56, "nodeName": "b_r", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 64, "nodeName": "b_a", "type": "Any"}, {"lineNumber": 471, "col_offset": 31, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 471, "col_offset": 44, "nodeName": "z", "type": "Any"}, {"lineNumber": 471, "col_offset": 48, "nodeName": "a", "type": "Any"}, {"lineNumber": 473, "col_offset": 19, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 474, "col_offset": 50, "nodeName": "atol", "type": "float"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 475, "col_offset": 38, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 475, "col_offset": 72, "nodeName": "atol", "type": "float"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 478, "col_offset": 37, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 478, "col_offset": 61, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 479, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 479, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 479, "col_offset": 49, "nodeName": "input_size", "type": "int"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 480, "col_offset": 36, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 481, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 482, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 484, "col_offset": 6, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 487, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 488, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 492, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 492, "col_offset": 49, "nodeName": "input_size", "type": "int"}, {"lineNumber": 493, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 493, "col_offset": 36, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 497, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "exp", "type": "Any"}, {"lineNumber": 509, "col_offset": 7, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 510, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 518, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 518, "col_offset": 43, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 518, "col_offset": 60, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 520, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 521, "col_offset": 17, "nodeName": "cudnn_gru", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 521, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "cudnn_gru", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "cudnn_gru", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 536, "col_offset": 6, "nodeName": "w_iz", "type": "Any"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "w_ir", "type": "Any"}, {"lineNumber": 536, "col_offset": 18, "nodeName": "w_ia", "type": "Any"}, {"lineNumber": 536, "col_offset": 25, "nodeName": "split", "type": "Any"}, {"lineNumber": 536, "col_offset": 34, "nodeName": "w_i", "type": "Any"}, {"lineNumber": 537, "col_offset": 6, "nodeName": "w_hz", "type": "Any"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "w_hr", "type": "Any"}, {"lineNumber": 537, "col_offset": 18, "nodeName": "w_ha", "type": "Any"}, {"lineNumber": 537, "col_offset": 25, "nodeName": "split", "type": "Any"}, {"lineNumber": 537, "col_offset": 34, "nodeName": "w_h", "type": "Any"}, {"lineNumber": 538, "col_offset": 6, "nodeName": "b_z", "type": "Any"}, {"lineNumber": 538, "col_offset": 11, "nodeName": "b_r", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "b_a", "type": "Any"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "split", "type": "Any"}, {"lineNumber": 538, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 539, "col_offset": 10, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 541, "col_offset": 10, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 543, "col_offset": 10, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 546, "col_offset": 13, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 548, "col_offset": 45, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 552, "col_offset": 24, "nodeName": "states", "type": "Any"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 555, "col_offset": 42, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 555, "col_offset": 66, "nodeName": "bfloat16", "type": "Any"}, {"lineNumber": 556, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 556, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 556, "col_offset": 52, "nodeName": "input_size", "type": "int"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 557, "col_offset": 36, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 558, "col_offset": 18, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 558, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 559, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 561, "col_offset": 6, "nodeName": "core", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 561, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 561, "col_offset": 19, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 569, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 569, "col_offset": 52, "nodeName": "input_size", "type": "int"}, {"lineNumber": 570, "col_offset": 17, "nodeName": "core", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 570, "col_offset": 36, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 574, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 593, "col_offset": 11, "nodeName": "self", "type": "Counter"}, {"lineNumber": 596, "col_offset": 6, "nodeName": "self", "type": "Counter"}, {"lineNumber": 596, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 597, "col_offset": 6, "nodeName": "self", "type": "Counter"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 600, "col_offset": 44, "nodeName": "h", "type": "Any"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 603, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 603, "col_offset": 38, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 615, "col_offset": 26, "nodeName": "self", "type": "Replicate"}, {"lineNumber": 616, "col_offset": 24, "nodeName": "_n", "type": "Any"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "_base_core", "type": "Any"}, {"lineNumber": 619, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 636, "col_offset": 22, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 637, "col_offset": 27, "nodeName": "ones", "type": "Any"}, {"lineNumber": 637, "col_offset": 36, "nodeName": "initial_values_shape", "type": "Any"}, {"lineNumber": 640, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 645, "col_offset": 21, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 645, "col_offset": 37, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 645, "col_offset": 50, "nodeName": "initial_values_shape", "type": "Any"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 650, "col_offset": 22, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 654, "col_offset": 6, "nodeName": "assign_add", "type": "Any"}, {"lineNumber": 657, "col_offset": 28, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 657, "col_offset": 41, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 657, "col_offset": 57, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 657, "col_offset": 70, "nodeName": "mask", "type": "Tuple[bool, bool]"}, {"lineNumber": 664, "col_offset": 11, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 665, "col_offset": 22, "nodeName": "TrainableState", "type": "Type[sonnet.src.recurrent.TrainableState]"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "self", "type": "TrainableStateTest"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "trainable_state", "type": "sonnet.src.recurrent.TrainableState"}, {"lineNumber": 667, "col_offset": 40, "nodeName": "initial_state", "type": "Callable[[int], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 696, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 700, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 700, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 702, "col_offset": 27, "nodeName": "core", "type": "Any"}, {"lineNumber": 702, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 703, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 703, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 704, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 710, "col_offset": 75, "nodeName": "h", "type": "Any"}, {"lineNumber": 714, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 714, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 716, "col_offset": 27, "nodeName": "core", "type": "Any"}, {"lineNumber": 716, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 717, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 717, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 717, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 727, "col_offset": 75, "nodeName": "h", "type": "Any"}, {"lineNumber": 731, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 731, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 734, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 735, "col_offset": 27, "nodeName": "core", "type": "Replicate"}, {"lineNumber": 735, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 736, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 736, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 736, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 743, "col_offset": 63, "nodeName": "num_replicas", "type": "int"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 744, "col_offset": 75, "nodeName": "h", "type": "Any"}, {"lineNumber": 748, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 748, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 751, "col_offset": 45, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 753, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 753, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 753, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 757, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 757, "col_offset": 21, "nodeName": "empty", "type": "Any"}, {"lineNumber": 757, "col_offset": 34, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 761, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 761, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 763, "col_offset": 20, "nodeName": "core", "type": "Any"}, {"lineNumber": 763, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 764, "col_offset": 43, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 766, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 766, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 768, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 768, "col_offset": 16, "nodeName": "core", "type": "Any"}, {"lineNumber": 768, "col_offset": 27, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 768, "col_offset": 43, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 772, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 772, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 774, "col_offset": 20, "nodeName": "core", "type": "Any"}, {"lineNumber": 774, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 775, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 776, "col_offset": 22, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 778, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 778, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 780, "col_offset": 6, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 780, "col_offset": 16, "nodeName": "core", "type": "Any"}, {"lineNumber": 780, "col_offset": 27, "nodeName": "input_sequence", "type": "Tuple[Any, Any]"}, {"lineNumber": 780, "col_offset": 43, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 784, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 786, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "core", "type": "Any"}, {"lineNumber": 788, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 789, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 789, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 794, "col_offset": 24, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 800, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 800, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 802, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 802, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 803, "col_offset": 20, "nodeName": "core", "type": "Any"}, {"lineNumber": 803, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 804, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 804, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 804, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 809, "col_offset": 24, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 815, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 825, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 825, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 827, "col_offset": 20, "nodeName": "core", "type": "Any"}, {"lineNumber": 827, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 828, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 828, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 828, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 830, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 835, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 841, "col_offset": 18, "nodeName": "function", "type": "Any"}, {"lineNumber": 841, "col_offset": 30, "nodeName": "unroll_fn", "type": "Any"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "core", "type": "Any"}, {"lineNumber": 843, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 844, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 844, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 844, "col_offset": 56, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 850, "col_offset": 41, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 850, "col_offset": 55, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 852, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 852, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 853, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 853, "col_offset": 40, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 864, "col_offset": 24, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 869, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 869, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 870, "col_offset": 13, "nodeName": "static_unroll", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 870, "col_offset": 37, "nodeName": "core", "type": "Counter"}, {"lineNumber": 870, "col_offset": 48, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 870, "col_offset": 64, "nodeName": "initial_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 872, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 874, "col_offset": 6, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 880, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 880, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 881, "col_offset": 13, "nodeName": "dynamic_unroll", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 881, "col_offset": 38, "nodeName": "core", "type": "Counter"}, {"lineNumber": 881, "col_offset": 49, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 881, "col_offset": 65, "nodeName": "initial_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 887, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 887, "col_offset": 47, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 893, "col_offset": 13, "nodeName": "dynamic_unroll", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 893, "col_offset": 64, "nodeName": "input_sequence", "type": "Tuple[Any, ...]"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 897, "col_offset": 40, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 898, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 898, "col_offset": 32, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 900, "col_offset": 6, "nodeName": "cf", "type": "Any"}, {"lineNumber": 906, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "VanillaRNNTest", "type": "Type[VanillaRNNTest]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "_b", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 62, "col_offset": 68, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "DeepRNNTest", "type": "Type[DeepRNNTest]"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "VanillaRNN", "type": "Type[sonnet.src.recurrent.VanillaRNN]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "VanillaRNN", "type": "Type[sonnet.src.recurrent.VanillaRNN]"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "core", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 53, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "core", "type": "sonnet.src.recurrent.DeepRNN"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "core0", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 132, "col_offset": 59, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "core1", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 133, "col_offset": 59, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "VanillaRNN", "type": "Type[sonnet.src.recurrent.VanillaRNN]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "VanillaRNN", "type": "Type[sonnet.src.recurrent.VanillaRNN]"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "core", "type": "sonnet.src.recurrent.RNNCore"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 154, "col_offset": 48, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 156, "col_offset": 52, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "LSTMTest", "type": "Type[LSTMTest]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 177, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 53, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "expected_hidden", "type": "Any"}, {"lineNumber": 194, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 194, "col_offset": 58, "nodeName": "projection", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 202, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 226, "col_offset": 6, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "train_core", "type": "sonnet.src.recurrent._RecurrentDropoutWrapper"}, {"lineNumber": 237, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "test_core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 240, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 246, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 58, "nodeName": "rtol", "type": "float"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 253, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 261, "col_offset": 10, "nodeName": "UnrolledLSTMTest", "type": "Type[UnrolledLSTMTest]"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 294, "col_offset": 55, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "initial_state", "type": "Callable[[int], sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 295, "col_offset": 51, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 324, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 329, "col_offset": 60, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 331, "col_offset": 18, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 332, "col_offset": 18, "nodeName": "initial_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 333, "col_offset": 9, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 342, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 344, "col_offset": 43, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 344, "col_offset": 60, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 349, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 349, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 349, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 355, "col_offset": 10, "nodeName": "ConvNDLSTMTest", "type": "Type[ConvNDLSTMTest]"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "core_cls", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "Conv3DLSTM", "type": "Type[sonnet.src.recurrent.Conv3DLSTM]"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 375, "col_offset": 61, "nodeName": "num_spatial_dims", "type": "int"}, {"lineNumber": 376, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "core", "type": "Any"}, {"lineNumber": 380, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 382, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 383, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 387, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 387, "col_offset": 27, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 387, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 387, "col_offset": 48, "nodeName": "f", "type": "Any"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 393, "col_offset": 49, "nodeName": "core", "type": "Any"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 400, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 409, "col_offset": 61, "nodeName": "num_spatial_dims", "type": "int"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "prev_state", "type": "sonnet.src.recurrent.`namedtuple-LSTMState-hidden-cell`"}, {"lineNumber": 421, "col_offset": 9, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 427, "col_offset": 61, "nodeName": "num_spatial_dims", "type": "int"}, {"lineNumber": 428, "col_offset": 20, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 436, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 443, "col_offset": 6, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 443, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 443, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 443, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 449, "col_offset": 10, "nodeName": "GRUTest", "type": "Type[GRUTest]"}, {"lineNumber": 449, "col_offset": 19, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 457, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 457, "col_offset": 44, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 459, "col_offset": 31, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 459, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 462, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 464, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 464, "col_offset": 47, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 465, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 465, "col_offset": 47, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 466, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 466, "col_offset": 44, "nodeName": "core", "type": "sonnet.src.recurrent.GRU"}, {"lineNumber": 471, "col_offset": 26, "nodeName": "z", "type": "Any"}, {"lineNumber": 473, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 37, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 478, "col_offset": 61, "nodeName": "tf", "type": "Any"}, {"lineNumber": 479, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 479, "col_offset": 32, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 479, "col_offset": 49, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 482, "col_offset": 9, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 488, "col_offset": 20, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 490, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 492, "col_offset": 32, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 492, "col_offset": 49, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 497, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 497, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 497, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 501, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 507, "col_offset": 10, "nodeName": "CuDNNGRUTest", "type": "Type[CuDNNGRUTest]"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 510, "col_offset": 6, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 518, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 518, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 518, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 536, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 537, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 538, "col_offset": 31, "nodeName": "cudnn_gru", "type": "sonnet.src.recurrent.CuDNNGRU"}, {"lineNumber": 539, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 540, "col_offset": 66, "nodeName": "b_z", "type": "Any"}, {"lineNumber": 541, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 542, "col_offset": 66, "nodeName": "b_r", "type": "Any"}, {"lineNumber": 543, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 544, "col_offset": 70, "nodeName": "b_a", "type": "Any"}, {"lineNumber": 545, "col_offset": 29, "nodeName": "a", "type": "Any"}, {"lineNumber": 545, "col_offset": 33, "nodeName": "z", "type": "Any"}, {"lineNumber": 545, "col_offset": 37, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 555, "col_offset": 42, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 555, "col_offset": 66, "nodeName": "tf", "type": "Any"}, {"lineNumber": 556, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 556, "col_offset": 35, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 556, "col_offset": 52, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 559, "col_offset": 9, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 565, "col_offset": 20, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 566, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 567, "col_offset": 17, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 568, "col_offset": 15, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 569, "col_offset": 35, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 569, "col_offset": 52, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 574, "col_offset": 6, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 574, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 574, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 574, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 588, "col_offset": 10, "nodeName": "Counter", "type": "Type[Counter]"}, {"lineNumber": 588, "col_offset": 19, "nodeName": "self", "type": "Counter"}, {"lineNumber": 596, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "h", "type": "Any"}, {"lineNumber": 600, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 600, "col_offset": 30, "nodeName": "t", "type": "Any"}, {"lineNumber": 600, "col_offset": 34, "nodeName": "one", "type": "Any"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 603, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 603, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 603, "col_offset": 48, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 603, "col_offset": 60, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 610, "col_offset": 10, "nodeName": "Replicate", "type": "Type[Replicate]"}, {"lineNumber": 610, "col_offset": 21, "nodeName": "self", "type": "Replicate"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 616, "col_offset": 24, "nodeName": "self", "type": "Replicate"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "self", "type": "Replicate"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 637, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 640, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 641, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 641, "col_offset": 14, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 641, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 641, "col_offset": 56, "nodeName": "initial_values_shape", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 645, "col_offset": 37, "nodeName": "tree", "type": "Any"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 646, "col_offset": 32, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 650, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 650, "col_offset": 64, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 654, "col_offset": 6, "nodeName": "var", "type": "Any"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 654, "col_offset": 34, "nodeName": "var", "type": "Any"}, {"lineNumber": 657, "col_offset": 28, "nodeName": "tree", "type": "Any"}, {"lineNumber": 657, "col_offset": 57, "nodeName": "tree", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "assertNotAllClose", "type": "Any"}, {"lineNumber": 659, "col_offset": 31, "nodeName": "s", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "s", "type": "Any"}, {"lineNumber": 665, "col_offset": 22, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 667, "col_offset": 40, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 691, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 691, "col_offset": 10, "nodeName": "UnrollTest", "type": "Any"}, {"lineNumber": 691, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 700, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 702, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 703, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 703, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 703, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 709, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 710, "col_offset": 38, "nodeName": "cast", "type": "Any"}, {"lineNumber": 710, "col_offset": 46, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 710, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 714, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 716, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 717, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 717, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 717, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 719, "col_offset": 35, "nodeName": "core", "type": "Any"}, {"lineNumber": 719, "col_offset": 63, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 721, "col_offset": 17, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 726, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 727, "col_offset": 38, "nodeName": "cast", "type": "Any"}, {"lineNumber": 727, "col_offset": 46, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 727, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 731, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 736, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 736, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 736, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 741, "col_offset": 18, "nodeName": "h", "type": "Any"}, {"lineNumber": 741, "col_offset": 22, "nodeName": "t", "type": "int"}, {"lineNumber": 741, "col_offset": 29, "nodeName": "t", "type": "int"}, {"lineNumber": 741, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 741, "col_offset": 42, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 741, "col_offset": 52, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 743, "col_offset": 42, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 744, "col_offset": 38, "nodeName": "cast", "type": "Any"}, {"lineNumber": 744, "col_offset": 46, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 744, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 748, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 751, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 753, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 753, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 753, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 755, "col_offset": 47, "nodeName": "constant", "type": "Any"}, {"lineNumber": 757, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 757, "col_offset": 50, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 761, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 763, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 764, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 766, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 768, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 772, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 774, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 775, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 775, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 776, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 776, "col_offset": 44, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 778, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 780, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 789, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 789, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 800, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 803, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 804, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 804, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 804, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 815, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 816, "col_offset": 11, "nodeName": "equal", "type": "Any"}, {"lineNumber": 816, "col_offset": 40, "nodeName": "t", "type": "int"}, {"lineNumber": 825, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 827, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 828, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 828, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 828, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 833, "col_offset": 24, "nodeName": "constant", "type": "Any"}, {"lineNumber": 841, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 844, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 844, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 844, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 849, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 849, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 849, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 850, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 859, "col_offset": 10, "nodeName": "UnknownStepsUnrollTest", "type": "Type[UnknownStepsUnrollTest]"}, {"lineNumber": 859, "col_offset": 34, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 869, "col_offset": 22, "nodeName": "core", "type": "Counter"}, {"lineNumber": 869, "col_offset": 46, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 870, "col_offset": 13, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 870, "col_offset": 37, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 872, "col_offset": 9, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 875, "col_offset": 10, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 880, "col_offset": 22, "nodeName": "core", "type": "Counter"}, {"lineNumber": 880, "col_offset": 46, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 881, "col_offset": 13, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 881, "col_offset": 38, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 883, "col_offset": 9, "nodeName": "function", "type": "Any"}, {"lineNumber": 883, "col_offset": 21, "nodeName": "do_unroll", "type": "Callable[[Any], Any]"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 886, "col_offset": 27, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 886, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 887, "col_offset": 21, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 893, "col_offset": 13, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 893, "col_offset": 56, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 896, "col_offset": 9, "nodeName": "function", "type": "Any"}, {"lineNumber": 896, "col_offset": 21, "nodeName": "do_unroll", "type": "Callable[..., Any]"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 897, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 898, "col_offset": 9, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 898, "col_offset": 32, "nodeName": "errors", "type": "Any"}, {"lineNumber": 901, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 902, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "dot", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "initializers", "type": "module"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "self", "type": "VanillaRNNTest"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 81, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 109, "col_offset": 64, "nodeName": "idx", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "self", "type": "DeepRNNTest"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 154, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "dot", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "w_ii", "type": "Any"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "dot", "type": "Any"}, {"lineNumber": 185, "col_offset": 55, "nodeName": "w_hi", "type": "Any"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "dot", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "w_if", "type": "Any"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "dot", "type": "Any"}, {"lineNumber": 186, "col_offset": 55, "nodeName": "w_hf", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "w_ig", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "dot", "type": "Any"}, {"lineNumber": 187, "col_offset": 57, "nodeName": "w_hg", "type": "Any"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "dot", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "w_io", "type": "Any"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "dot", "type": "Any"}, {"lineNumber": 188, "col_offset": 55, "nodeName": "w_ho", "type": "Any"}, {"lineNumber": 194, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 58, "nodeName": "core", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "initializers", "type": "module"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "initializers", "type": "module"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 226, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 226, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "reduce_max", "type": "Any"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "device", "type": "Any"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "lstm", "type": "sonnet.src.recurrent.LSTM"}, {"lineNumber": 295, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "device", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "unrolled_lstm", "type": "sonnet.src.recurrent.UnrolledLSTM"}, {"lineNumber": 322, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 322, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 322, "col_offset": 57, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 342, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "initializers", "type": "module"}, {"lineNumber": 349, "col_offset": 26, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 349, "col_offset": 44, "nodeName": "self", "type": "UnrolledLSTMTest"}, {"lineNumber": 349, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 349, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "recurrent", "type": "module"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 375, "col_offset": 41, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 387, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 394, "col_offset": 14, "nodeName": "conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 394, "col_offset": 27, "nodeName": "w_ii", "type": "Any"}, {"lineNumber": 394, "col_offset": 35, "nodeName": "conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 40, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 394, "col_offset": 59, "nodeName": "w_hi", "type": "Any"}, {"lineNumber": 395, "col_offset": 14, "nodeName": "conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "w_if", "type": "Any"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 395, "col_offset": 40, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 395, "col_offset": 59, "nodeName": "w_hf", "type": "Any"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 396, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "w_ig", "type": "Any"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 396, "col_offset": 42, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 396, "col_offset": 61, "nodeName": "w_hg", "type": "Any"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 397, "col_offset": 27, "nodeName": "w_io", "type": "Any"}, {"lineNumber": 397, "col_offset": 35, "nodeName": "conv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 397, "col_offset": 59, "nodeName": "w_ho", "type": "Any"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 409, "col_offset": 41, "nodeName": "input_size", "type": "int"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "input_size", "type": "int"}, {"lineNumber": 436, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "initializers", "type": "module"}, {"lineNumber": 443, "col_offset": 26, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 443, "col_offset": 44, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 443, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 443, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 457, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 457, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 468, "col_offset": 14, "nodeName": "dot", "type": "Any"}, {"lineNumber": 468, "col_offset": 25, "nodeName": "w_iz", "type": "Any"}, {"lineNumber": 468, "col_offset": 33, "nodeName": "dot", "type": "Any"}, {"lineNumber": 468, "col_offset": 48, "nodeName": "w_hz", "type": "Any"}, {"lineNumber": 469, "col_offset": 14, "nodeName": "dot", "type": "Any"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "w_ir", "type": "Any"}, {"lineNumber": 469, "col_offset": 33, "nodeName": "dot", "type": "Any"}, {"lineNumber": 469, "col_offset": 48, "nodeName": "w_hr", "type": "Any"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 470, "col_offset": 27, "nodeName": "w_ia", "type": "Any"}, {"lineNumber": 470, "col_offset": 36, "nodeName": "dot", "type": "Any"}, {"lineNumber": 470, "col_offset": 56, "nodeName": "w_ha", "type": "Any"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 490, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "initializers", "type": "module"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 497, "col_offset": 44, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 497, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 497, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 545, "col_offset": 24, "nodeName": "z", "type": "Any"}, {"lineNumber": 566, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 567, "col_offset": 17, "nodeName": "initializers", "type": "module"}, {"lineNumber": 568, "col_offset": 15, "nodeName": "initializers", "type": "module"}, {"lineNumber": 574, "col_offset": 26, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 574, "col_offset": 44, "nodeName": "self", "type": "CuDNNGRUTest"}, {"lineNumber": 574, "col_offset": 58, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 574, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 600, "col_offset": 34, "nodeName": "self", "type": "Counter"}, {"lineNumber": 603, "col_offset": 60, "nodeName": "self", "type": "Counter"}, {"lineNumber": 641, "col_offset": 14, "nodeName": "trainable_state", "type": "sonnet.src.recurrent.TrainableState"}, {"lineNumber": 646, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 650, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 650, "col_offset": 64, "nodeName": "tf", "type": "Any"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "self", "type": "TrainableStateTest"}, {"lineNumber": 659, "col_offset": 34, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 659, "col_offset": 48, "nodeName": "s", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "self", "type": "TrainableStateTest"}, {"lineNumber": 661, "col_offset": 31, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 661, "col_offset": 45, "nodeName": "s", "type": "Any"}, {"lineNumber": 709, "col_offset": 19, "nodeName": "h", "type": "Any"}, {"lineNumber": 709, "col_offset": 23, "nodeName": "t", "type": "int"}, {"lineNumber": 709, "col_offset": 30, "nodeName": "t", "type": "int"}, {"lineNumber": 709, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 709, "col_offset": 43, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 709, "col_offset": 53, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 710, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 710, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 710, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 719, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "h", "type": "Any"}, {"lineNumber": 726, "col_offset": 23, "nodeName": "t", "type": "int"}, {"lineNumber": 726, "col_offset": 30, "nodeName": "t", "type": "int"}, {"lineNumber": 726, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 726, "col_offset": 43, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 726, "col_offset": 53, "nodeName": "input_sequence", "type": "Any"}, {"lineNumber": 727, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 727, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 727, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 744, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 744, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 744, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 751, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 755, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 757, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 775, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 775, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 776, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 776, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 786, "col_offset": 41, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 787, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 816, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 816, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 817, "col_offset": 13, "nodeName": "t", "type": "int"}, {"lineNumber": 833, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 833, "col_offset": 55, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 849, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 849, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 849, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 869, "col_offset": 22, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 874, "col_offset": 6, "nodeName": "function", "type": "Any"}, {"lineNumber": 874, "col_offset": 18, "nodeName": "do_unroll", "type": "Callable[[Any], Any]"}, {"lineNumber": 875, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 880, "col_offset": 22, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 883, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 886, "col_offset": 27, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 886, "col_offset": 43, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 896, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 898, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 901, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 901, "col_offset": 29, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 901, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 902, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 902, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "hidden_to_hidden", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 226, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "abs", "type": "Any"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 278, "col_offset": 45, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 322, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 375, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 387, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 394, "col_offset": 40, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 395, "col_offset": 40, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 396, "col_offset": 42, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 409, "col_offset": 41, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 427, "col_offset": 41, "nodeName": "self", "type": "ConvNDLSTMTest"}, {"lineNumber": 443, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 468, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 468, "col_offset": 33, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 469, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 469, "col_offset": 33, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 497, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 540, "col_offset": 10, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 540, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 540, "col_offset": 28, "nodeName": "w_iz", "type": "Any"}, {"lineNumber": 540, "col_offset": 36, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 540, "col_offset": 46, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 540, "col_offset": 58, "nodeName": "w_hz", "type": "Any"}, {"lineNumber": 542, "col_offset": 10, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 542, "col_offset": 28, "nodeName": "w_ir", "type": "Any"}, {"lineNumber": 542, "col_offset": 36, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 542, "col_offset": 46, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 542, "col_offset": 58, "nodeName": "w_hr", "type": "Any"}, {"lineNumber": 544, "col_offset": 10, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "w_ia", "type": "Any"}, {"lineNumber": 544, "col_offset": 36, "nodeName": "r", "type": "Any"}, {"lineNumber": 574, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 646, "col_offset": 54, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 659, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 661, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 719, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 751, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 787, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 816, "col_offset": 36, "nodeName": "b", "type": "int"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 833, "col_offset": 37, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 833, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 874, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 901, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 901, "col_offset": 29, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 901, "col_offset": 45, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 902, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 902, "col_offset": 29, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 902, "col_offset": 49, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "core", "type": "sonnet.src.recurrent.VanillaRNN"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 45, "nodeName": "train_output", "type": "Any"}, {"lineNumber": 249, "col_offset": 60, "nodeName": "test_output", "type": "Any"}, {"lineNumber": 278, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 470, "col_offset": 36, "nodeName": "r", "type": "Any"}, {"lineNumber": 470, "col_offset": 40, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 540, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 540, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 542, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 542, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 544, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 544, "col_offset": 40, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 544, "col_offset": 50, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 544, "col_offset": 62, "nodeName": "w_ha", "type": "Any"}, {"lineNumber": 646, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 818, "col_offset": 32, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 820, "col_offset": 32, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 820, "col_offset": 55, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 833, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 902, "col_offset": 29, "nodeName": "self", "type": "UnknownStepsUnrollTest"}, {"lineNumber": 544, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 818, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 818, "col_offset": 46, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 820, "col_offset": 48, "nodeName": "t", "type": "int"}, {"lineNumber": 820, "col_offset": 51, "nodeName": "b", "type": "int"}, {"lineNumber": 821, "col_offset": 71, "nodeName": "b", "type": "int"}, {"lineNumber": 818, "col_offset": 62, "nodeName": "t", "type": "int"}, {"lineNumber": 818, "col_offset": 65, "nodeName": "b", "type": "int"}, {"lineNumber": 820, "col_offset": 71, "nodeName": "t", "type": "int"}]