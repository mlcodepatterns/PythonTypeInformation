[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 349, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 918, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 918, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1058, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1058, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1412, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1412, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1698, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1698, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1820, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1820, "col_offset": 48, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1877, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1877, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2189, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2189, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2587, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2587, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2925, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2925, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 349, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 918, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 918, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1058, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1058, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1412, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1412, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1415, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1416, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1417, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1418, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1419, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1420, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1421, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1422, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1423, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1431, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1432, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1433, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1434, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1435, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1698, "col_offset": 23, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1698, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 1820, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1820, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 1877, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1877, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2189, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2189, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2587, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2587, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 2925, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2925, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3054, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 253, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 295, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 307, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 349, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 387, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 399, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 400, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 549, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 613, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 615, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 688, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 841, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 884, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 887, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 909, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 918, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 933, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 938, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 967, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 983, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 992, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1003, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1035, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1058, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1066, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1067, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1068, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1069, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1071, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1095, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1108, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1118, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1129, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1130, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1131, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1131, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1132, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1147, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1171, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1185, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1207, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1220, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1239, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1250, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1277, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1290, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1319, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1321, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1338, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1339, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1363, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1364, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1388, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1389, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1390, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1393, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1412, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1421, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1421, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1421, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1421, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1421, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1425, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1425, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1425, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1425, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1431, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1432, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1432, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1433, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1433, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1434, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1435, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1435, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1458, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1459, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1487, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1497, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1525, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1555, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1591, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1614, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1615, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1616, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1618, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1619, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1652, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1661, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1675, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1682, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1683, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1698, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1713, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1714, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1715, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1739, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1740, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1741, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1766, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1767, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1768, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1792, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1793, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1794, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1796, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1797, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1799, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 1800, "col_offset": 4, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 1820, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1828, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1829, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1830, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1834, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1848, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1849, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1850, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1851, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1852, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1853, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1867, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1868, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1870, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1877, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1884, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1884, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1885, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1885, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1886, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1886, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1887, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1887, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1888, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1888, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1889, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1889, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1890, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1890, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1891, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1891, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1893, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 1894, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1895, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 1905, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1905, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1906, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1906, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1907, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1907, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1908, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1908, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1909, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1909, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1910, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1910, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1912, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1921, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1925, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1943, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1959, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1978, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2000, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2011, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2012, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2034, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2059, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2061, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2067, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2068, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2093, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2121, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2147, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2148, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2168, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2169, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2170, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2172, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2173, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2189, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2196, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2196, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2197, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2197, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2198, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2198, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2199, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2199, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2200, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2202, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2202, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2203, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2203, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2204, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2204, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2205, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2207, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2207, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2208, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2220, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2220, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2221, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2221, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2222, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2222, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2223, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2223, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2224, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2224, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2225, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2225, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2226, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2226, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2228, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2237, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2244, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2262, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2287, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2314, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2338, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2350, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2352, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2378, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2391, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2392, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2422, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2425, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2444, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2475, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2504, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2505, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2522, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2523, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2524, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2534, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2535, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2536, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2563, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2564, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2565, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2567, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2568, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2587, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2595, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2596, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2597, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2598, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2599, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2600, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2601, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2602, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2603, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2617, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2627, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2638, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2639, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2639, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2639, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2640, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2640, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2641, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2641, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2641, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2656, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2710, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2723, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2743, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2754, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2755, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 2786, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2787, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2816, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2818, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2836, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2874, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2875, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2901, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2902, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2903, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2905, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2906, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2925, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2932, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2933, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2934, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2935, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2936, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2937, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2938, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2939, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2940, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2941, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2942, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2943, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2944, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 2944, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2949, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 2958, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 2981, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2991, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2997, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3006, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3007, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3017, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3018, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3041, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3042, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3043, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3047, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3048, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3049, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3055, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv1DTranspose], Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 264, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 277, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 311, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 327, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 330, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 332, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 335, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 338, "col_offset": 45, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 341, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 342, "col_offset": 6, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 343, "col_offset": 6, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 344, "col_offset": 6, "nodeName": "out3", "type": "Any"}, {"lineNumber": 345, "col_offset": 6, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 360, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 361, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 362, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 377, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 403, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 416, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 435, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 449, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 538, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 539, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 540, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 570, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 584, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 584, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 595, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 595, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 601, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 613, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 614, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 632, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 633, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 638, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 639, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 652, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 661, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 662, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 665, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 666, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 689, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 689, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 690, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 692, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 692, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 693, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 693, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 704, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 726, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 749, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 750, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 755, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 756, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 765, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 769, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 772, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 772, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 773, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 773, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 774, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 774, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 775, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 775, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 777, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 778, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 781, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 788, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 788, "col_offset": 42, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 789, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 790, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 804, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 811, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 817, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 818, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 818, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 819, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 819, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 829, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 832, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 833, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 840, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 840, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 841, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 851, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 853, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 861, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 870, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 873, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 883, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 887, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 896, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 900, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 909, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 910, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 912, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 923, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 926, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 928, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 933, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 935, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 935, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 935, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 936, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 938, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 938, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 938, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 940, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 940, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 942, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 942, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 943, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 943, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 967, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 967, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 969, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 977, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 977, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 979, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 992, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 993, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 995, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1003, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1003, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1004, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1004, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1008, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1019, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1027, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1028, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1028, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1033, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1034, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1034, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1035, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1035, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1036, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1043, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1043, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1045, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1053, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1055, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1055, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1055, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1066, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1067, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1068, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1069, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1071, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1073, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1074, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1077, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1085, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1085, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1100, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1108, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1108, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1110, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1114, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1134, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1135, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1139, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1147, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1147, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1166, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1168, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1181, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1200, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1203, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1230, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1239, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1239, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1240, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1241, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1250, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1251, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1253, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1262, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1272, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1291, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1291, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1293, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1300, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1302, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1302, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1302, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1308, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1309, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1311, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1317, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1319, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1319, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1320, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1320, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1329, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1338, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1339, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1340, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1341, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1354, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1363, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1364, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1365, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1366, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1380, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1388, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1389, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1389, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1390, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1390, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1392, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1392, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1393, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1393, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1404, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1421, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1421, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1421, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1421, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1421, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1426, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1426, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1428, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1428, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1431, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1431, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1431, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1431, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1434, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1434, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1434, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1434, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1449, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1458, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1458, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1459, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1459, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 1460, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1463, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1475, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1476, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1479, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1487, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1487, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1489, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1493, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1516, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1546, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1582, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1591, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1591, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1594, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1605, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1614, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1614, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1614, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1614, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1615, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1615, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1616, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1616, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1618, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1618, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1619, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1619, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1630, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1644, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1652, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1655, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1655, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1655, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1656, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1656, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1657, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1657, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1657, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1663, "col_offset": 6, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1666, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1668, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1668, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1669, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1669, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1669, "col_offset": 34, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1683, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1683, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1685, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1693, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1695, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1695, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1695, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1705, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1713, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1714, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1716, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1718, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1720, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1722, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1724, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1724, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1724, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1731, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1739, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1740, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1742, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1744, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1746, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1748, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1750, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1750, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1750, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1757, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1766, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1767, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1769, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1771, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1773, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1775, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1777, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1777, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1777, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1785, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1792, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1793, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1793, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1794, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1794, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1796, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1796, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1797, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1797, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1799, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1800, "col_offset": 23, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1800, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 1802, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1805, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1807, "col_offset": 6, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 1808, "col_offset": 6, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 1813, "col_offset": 6, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 1814, "col_offset": 6, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 1816, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1816, "col_offset": 24, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 1816, "col_offset": 43, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 1817, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1817, "col_offset": 24, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 1817, "col_offset": 51, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 1828, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1829, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1829, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1830, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1836, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1836, "col_offset": 10, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1839, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1839, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1840, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1840, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1840, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1848, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1849, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1850, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1850, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1851, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1851, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1852, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1852, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1853, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1853, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1860, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1868, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1868, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1870, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1872, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1874, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1874, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1874, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1882, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1884, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1884, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1885, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1885, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1886, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1886, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1887, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1887, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1888, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1888, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1889, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1889, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1890, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1890, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1891, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1891, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1891, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1893, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1893, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1893, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1893, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1893, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1894, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1894, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1894, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1895, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1895, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1895, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1895, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1895, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1896, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1896, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1896, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1897, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1905, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1906, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 1907, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1908, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1909, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1910, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1912, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1912, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1914, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1921, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1921, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1923, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1923, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1924, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1924, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1934, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1935, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1937, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1943, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1943, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1948, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1957, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1958, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1971, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1973, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1975, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1992, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2000, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2000, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2001, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2002, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2011, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2012, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2014, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2021, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2031, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2047, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2048, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2050, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2057, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2059, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2059, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2060, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2060, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2068, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2068, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2070, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2076, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2078, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2078, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2078, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2085, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2093, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2094, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2099, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2100, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2113, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2121, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2122, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2125, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2126, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2139, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2147, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2148, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2149, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2150, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2164, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2168, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2169, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2169, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2170, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2170, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2172, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2172, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2173, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2173, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2184, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2194, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2196, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2196, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2197, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2197, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2198, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2198, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2199, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2199, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2200, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2200, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2200, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2200, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2200, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2202, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2202, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2203, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2203, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2204, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2204, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2205, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2205, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2205, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2207, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2207, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2207, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2208, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2208, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2208, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2208, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2208, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2210, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2210, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2210, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2210, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2212, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2212, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2220, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2221, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2222, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2223, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2224, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2225, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2226, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2228, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2228, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2230, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2237, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2237, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2239, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2242, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2253, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2254, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2256, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2262, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2262, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2268, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2278, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2284, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2301, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2304, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2307, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2329, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2338, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2338, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2339, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2340, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2350, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2351, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2352, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2353, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2361, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2375, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2392, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2392, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2394, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2401, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2403, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2403, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2403, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2409, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2410, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2412, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2420, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2422, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2422, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2423, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2423, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2424, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2424, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2434, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2444, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2445, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2450, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2451, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2466, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2475, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2476, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2479, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2480, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2495, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2504, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2505, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2506, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2507, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2524, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2524, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2525, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2534, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2535, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2537, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2538, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2540, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2559, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2563, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2564, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2564, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2565, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2565, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2567, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2567, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2568, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2568, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2580, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2581, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2595, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2596, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2597, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2598, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2599, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2600, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2601, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2602, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2603, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2605, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2606, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2609, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2617, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2617, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2619, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2623, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2643, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2644, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2648, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2656, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2656, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2673, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2674, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2683, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2685, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2703, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2706, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2733, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2743, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2743, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2744, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2754, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2755, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2756, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2764, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2774, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2787, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2787, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2789, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2796, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2798, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2798, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2798, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2804, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2805, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2807, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2814, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2816, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2816, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2817, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2817, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2827, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2836, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2849, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2850, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2865, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2874, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2875, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2877, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2878, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2893, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2901, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2902, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2902, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2903, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2903, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2905, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2905, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2906, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2906, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2917, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2930, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2932, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2933, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2934, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2935, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2936, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2937, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2938, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2939, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2940, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2941, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2942, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2943, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2944, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2944, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 2946, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2946, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2946, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2946, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2947, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2947, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2949, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2949, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2949, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2949, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2951, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2951, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2951, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2952, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2954, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2954, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2954, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2955, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2955, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2956, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2958, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2958, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2958, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2958, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2981, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2981, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2983, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2991, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2991, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2993, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2996, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3006, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3007, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3009, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3017, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3017, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3018, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3018, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3020, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3022, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3033, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3041, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3042, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3042, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3047, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3048, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3048, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3049, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3049, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3050, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3055, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose], Type[sonnet.python.modules.conv.Conv3DTranspose]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 237, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 237, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 258, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 263, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 266, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 275, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 277, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 278, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 278, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 280, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 280, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 282, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 285, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 285, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 287, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 288, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 296, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 296, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 301, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 301, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 308, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 314, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "stop_gradient", "type": "Any"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 329, "col_offset": 37, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 334, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 334, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 335, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "out3", "type": "Any"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 346, "col_offset": 47, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 360, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 361, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 362, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 375, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 388, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 403, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 410, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 412, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 414, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 418, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 425, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 426, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 435, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 447, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 460, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 463, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 463, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 463, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 464, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 476, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 479, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 482, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 484, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 485, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 501, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 517, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 517, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 517, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 518, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 520, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 520, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 520, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 521, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 532, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 534, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 538, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 539, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 560, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 562, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 566, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 576, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 576, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 576, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 577, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 583, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 591, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 593, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 593, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 602, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 608, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 609, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 611, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 613, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 616, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 629, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 633, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 641, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 645, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 645, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 652, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 656, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 658, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 662, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 668, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 672, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 672, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 680, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 684, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 685, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 689, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 689, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 690, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 695, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 699, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 704, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 705, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 707, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 723, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 728, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 732, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 744, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 746, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 749, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 750, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 758, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 762, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 762, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 765, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 769, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 772, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 772, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 777, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 778, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 781, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 784, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 788, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 788, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 789, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 790, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 791, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 791, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 792, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 792, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 792, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 792, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 793, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 793, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 793, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 793, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 804, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 808, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 810, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 811, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 814, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 814, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 816, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 816, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 817, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 820, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 821, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 829, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 831, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 832, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 833, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 836, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 837, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 841, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 842, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 843, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 844, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 844, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 851, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 851, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 853, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 857, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 858, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 863, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 864, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 865, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 865, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 870, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 873, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 873, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 874, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 876, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 883, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 887, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 887, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 888, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 890, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 896, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 900, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 900, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 901, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 903, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 909, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 909, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 910, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 912, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 912, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 913, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 914, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 935, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 935, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 936, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 938, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 938, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 940, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 940, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 942, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 943, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 943, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 947, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 947, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 948, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 967, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 967, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 967, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 969, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 970, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 971, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 972, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 973, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 975, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 979, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 979, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 982, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 982, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 984, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 992, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 992, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 993, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 993, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 995, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 999, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1001, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1006, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1006, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1008, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1009, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1010, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1010, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1019, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1020, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1021, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1022, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1023, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1025, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1027, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1028, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1028, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1028, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1030, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1030, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1032, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1032, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1033, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1036, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1036, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1037, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1042, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1045, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1051, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1053, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1053, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1055, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1066, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1067, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1068, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1069, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1071, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1073, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1074, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1077, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1078, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1079, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1080, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1083, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1092, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1096, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1100, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1101, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1102, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1103, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1106, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1110, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1111, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1114, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1119, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1134, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1135, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1139, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1141, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1142, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1143, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1145, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1149, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1153, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1156, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1157, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1166, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1167, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1168, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1169, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1172, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1172, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1172, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1173, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1181, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1183, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1186, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1186, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1186, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1187, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1190, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1190, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1190, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1191, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1200, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1202, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1203, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1205, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1221, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1221, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 1221, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1222, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1230, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1233, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1234, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1239, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1239, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1240, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1250, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1251, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1253, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1257, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1258, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1262, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1262, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1264, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1268, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1278, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1278, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1278, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1279, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1290, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1293, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1298, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1300, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1300, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1302, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1309, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1311, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1315, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1317, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1317, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1319, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1319, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1320, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1322, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1322, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1329, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1333, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1334, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1338, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1339, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1343, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1347, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1347, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1354, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1358, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1359, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1363, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1364, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1368, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1372, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1372, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1380, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1384, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1385, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1388, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1389, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1389, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1390, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1390, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1395, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1399, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1404, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1405, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1407, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1426, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1427, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1428, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1429, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1439, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1439, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1440, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1449, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1449, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1450, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1451, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1452, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1453, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1455, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1458, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1458, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1460, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1460, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1463, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1464, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1465, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1465, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 1475, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1476, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1479, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1479, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1480, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1481, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1482, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1483, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1485, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1489, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1490, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1493, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1498, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1509, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1510, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1512, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1513, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1515, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1516, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1517, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1518, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1520, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1521, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1523, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1526, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1526, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1526, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1527, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1533, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1533, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1533, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1534, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1546, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1547, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1548, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1550, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1553, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1557, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1557, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1557, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1558, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1566, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1566, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1566, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1567, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1582, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1583, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1584, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1585, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1586, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1587, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1589, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1591, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1591, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1592, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1605, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1606, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1607, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1608, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1609, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1610, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1612, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1614, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1615, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1615, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1616, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1616, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1621, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1625, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1630, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1630, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1630, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1630, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1633, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1644, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1645, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1646, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1647, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1648, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1649, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1651, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1652, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1655, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1655, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1655, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1656, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1656, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1657, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1657, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1657, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1662, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1662, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1662, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1663, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1666, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1666, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1666, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1666, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1666, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1667, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1669, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1669, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1676, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1676, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1676, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1677, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1677, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1677, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1682, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1685, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1691, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1693, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1693, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1695, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1705, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1709, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1713, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1714, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1714, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1718, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1719, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1720, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1721, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1721, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1722, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1722, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1724, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1731, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1735, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1739, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1740, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1740, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1744, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1745, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1746, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1747, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1747, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1748, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1748, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1750, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1757, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1762, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1766, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1767, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1767, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1771, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1772, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1773, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1774, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1774, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1775, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1775, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1777, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1785, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1789, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1792, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1793, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1793, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1794, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1794, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1799, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1800, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 1802, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1803, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1805, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1806, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1806, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1807, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 1807, "col_offset": 35, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1808, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 1808, "col_offset": 36, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1811, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1811, "col_offset": 15, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 1813, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 1813, "col_offset": 43, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1814, "col_offset": 35, "nodeName": "run", "type": "Any"}, {"lineNumber": 1814, "col_offset": 44, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1816, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1817, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1828, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 1829, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1829, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1830, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1830, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1835, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1835, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1835, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1836, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1840, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1840, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1848, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1848, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1849, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1850, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1850, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1851, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1851, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1855, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1858, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1860, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1861, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1862, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1867, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1870, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1870, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1872, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1872, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1874, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 1884, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 1885, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 1886, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 1887, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 1888, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1889, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1890, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 1912, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1912, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1912, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1914, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1916, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1917, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1918, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1920, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1923, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1923, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1924, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1924, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1926, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1926, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1934, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1935, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1937, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1938, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1939, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1940, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1942, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1945, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1948, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1949, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1949, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1957, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1958, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1961, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1961, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1961, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1962, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1971, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1972, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1973, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1974, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1975, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1976, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1980, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1980, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1980, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1981, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1992, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1996, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1997, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2000, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2000, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2001, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2011, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2012, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2014, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2018, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2021, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2021, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2023, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2027, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2035, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2035, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2035, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2036, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2048, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2050, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2054, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2055, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2057, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2057, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2059, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2059, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2060, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2062, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2062, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2067, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2070, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2074, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2076, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2076, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2078, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2085, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2089, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2090, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2093, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2094, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2102, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2106, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2106, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2113, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2117, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2118, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2121, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2122, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2128, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2132, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2132, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2139, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2143, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2144, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2147, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2148, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2152, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2156, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2157, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2164, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2165, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2166, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2168, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2169, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2169, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2170, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2170, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2178, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2184, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2185, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2186, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2196, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2197, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2198, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2199, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2202, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2203, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2204, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2228, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2228, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2228, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2230, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2231, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2232, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2233, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2234, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2235, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2239, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2239, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2239, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2240, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2241, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2242, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2242, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2243, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2245, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2253, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2254, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2256, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2257, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2259, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2260, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2261, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2264, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2268, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2269, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2269, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2278, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2283, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2284, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2289, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2289, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2289, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2290, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2301, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2303, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2304, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2306, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2307, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2312, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2316, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2316, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2316, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2317, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2329, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2333, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2334, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2338, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2338, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2339, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2350, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2351, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2352, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2353, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2357, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2361, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2361, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2363, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2368, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2371, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2379, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2379, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2379, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2380, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2391, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2394, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2399, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2401, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2401, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2403, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2410, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2412, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2417, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2418, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2420, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2420, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2422, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2422, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2423, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2424, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2426, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2426, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2434, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2438, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2440, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2444, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2445, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2453, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2458, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2458, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2466, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2470, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2471, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2475, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2476, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2482, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2487, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2487, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2495, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2499, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2500, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2504, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2505, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2509, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2514, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2514, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2525, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2526, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2527, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2529, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2530, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2534, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2534, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2534, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2535, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2535, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2536, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2540, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2540, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2543, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2548, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2549, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2559, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2561, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2563, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2564, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2564, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2565, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2565, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2570, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2574, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2580, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2581, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2582, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2583, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2584, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2595, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 2596, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2597, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 2598, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2599, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 2600, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 2601, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2602, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2603, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2605, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2606, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2609, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2610, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2612, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2614, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2619, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2620, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2623, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2624, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2628, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2643, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2644, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2648, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2650, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2652, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2654, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2658, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2662, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2666, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2667, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2673, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2674, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2676, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2676, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 2677, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2678, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2683, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2685, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2691, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2691, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 2692, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2694, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2703, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2705, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2706, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2708, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2724, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2724, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 2724, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2725, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2727, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2727, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 2727, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2728, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2733, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2736, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2743, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2743, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2744, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2745, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2745, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2746, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2746, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 2754, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2755, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2756, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2761, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2764, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2764, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2766, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2770, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2779, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 2779, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2780, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2786, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2789, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2794, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2796, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2796, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2798, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2805, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2807, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2811, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2812, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2814, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2814, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2816, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2816, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2817, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2819, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2819, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2827, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2831, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2833, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2836, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2852, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2856, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2857, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2865, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2869, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2871, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2874, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2880, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2884, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2885, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2893, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2897, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2898, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2901, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2902, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2902, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2903, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2903, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2908, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2912, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2917, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2918, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2920, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2946, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2946, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2947, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2947, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2949, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2949, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2949, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2951, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2952, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2954, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2955, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2955, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2956, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2958, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2958, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2958, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2961, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2961, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2962, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2981, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2981, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2981, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 2983, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2984, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2985, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2986, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2987, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2989, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2993, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2993, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2996, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2996, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2996, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 2998, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3006, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3006, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3007, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3007, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3009, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3013, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3015, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3020, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3020, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3022, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3023, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3024, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3024, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3033, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 3034, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3035, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3036, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3037, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3039, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3041, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3042, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3042, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3042, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 3044, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3044, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 3046, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3046, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3047, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3050, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3050, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3051, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3055, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 261, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 261, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 266, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 277, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 285, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 285, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 285, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 287, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 289, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 298, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 301, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 310, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 322, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 322, "col_offset": 30, "nodeName": "getter", "type": "Any"}, {"lineNumber": 324, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 334, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 337, "col_offset": 51, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 337, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 337, "col_offset": 63, "nodeName": "g", "type": "Any"}, {"lineNumber": 337, "col_offset": 68, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 342, "col_offset": 28, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 343, "col_offset": 52, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 345, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 367, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 367, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 367, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 372, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 381, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 381, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 381, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 385, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 385, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 388, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 405, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 411, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 412, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 418, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 423, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 425, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 426, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 427, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 427, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 463, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 463, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 464, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 484, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 485, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 504, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 517, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 517, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 518, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 519, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 520, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 520, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 521, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 522, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 532, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 535, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 536, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 539, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 539, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 539, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 541, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 541, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 542, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 558, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 558, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 558, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 558, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 560, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 562, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 566, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 568, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 568, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 576, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 577, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 583, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 593, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 593, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 602, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 611, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 613, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 614, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 616, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 630, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 632, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 641, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 645, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 645, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 656, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 659, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 659, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 668, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 672, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 672, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 684, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 689, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 695, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 699, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 700, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 701, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 704, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 707, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 709, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 724, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 724, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 726, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 728, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 732, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 732, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 744, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 747, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 747, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 749, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 749, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 758, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 762, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 780, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 783, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 789, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 791, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 791, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 814, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 814, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 815, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 815, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 831, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 837, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 839, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 842, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 844, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 844, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 851, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 858, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 860, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 863, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 865, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 865, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 873, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 874, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 874, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 875, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 876, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 877, "col_offset": 10, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 877, "col_offset": 14, "nodeName": "exception", "type": "Any"}, {"lineNumber": 878, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 878, "col_offset": 41, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 887, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 888, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 888, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 889, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 890, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 890, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 900, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 901, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 901, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 902, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 903, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 903, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 909, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 912, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 913, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 923, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 923, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 923, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 947, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 948, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 967, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 970, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 971, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 972, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 973, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 982, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 984, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 984, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 992, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 993, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 999, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 1008, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1010, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1011, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1011, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 1012, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1020, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1021, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1022, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1023, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1028, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1030, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1030, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1031, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1031, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1036, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1037, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1042, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1053, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1053, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1075, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1075, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1075, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1080, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1089, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1089, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1089, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1093, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1093, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1093, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1096, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1097, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1103, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1112, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1112, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1116, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1116, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1116, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1119, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1120, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1136, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1143, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1149, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1153, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1154, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1156, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1157, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1158, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1158, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1158, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1172, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1172, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1173, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1186, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1186, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1187, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1190, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1190, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1191, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1208, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1208, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1210, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1221, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1221, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1222, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1223, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1233, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1236, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1237, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1240, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1240, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1240, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1242, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1242, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1242, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1243, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1243, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1257, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1260, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1260, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1260, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1260, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1262, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1262, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1264, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1268, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1269, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1270, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1270, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1273, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1278, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1279, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1282, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1283, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1290, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1300, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1300, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1309, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1317, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1317, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1319, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1320, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1322, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1333, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1336, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1336, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1338, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1338, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1343, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1347, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1347, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1358, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1361, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1361, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1363, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1363, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1368, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1372, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1372, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1384, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1388, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1389, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1390, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1395, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1399, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1400, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1401, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1404, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1407, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1408, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1409, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1427, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1429, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1439, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1440, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1461, "col_offset": 15, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1461, "col_offset": 26, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1463, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1465, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1477, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1477, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1477, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1491, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1491, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1491, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1495, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1495, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1495, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1498, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1499, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1526, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1526, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1527, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1527, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1528, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1531, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1533, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1533, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1534, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1534, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1535, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1538, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1557, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1557, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1558, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1558, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1559, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1561, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1564, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1566, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1566, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1567, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1567, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1568, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1570, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1573, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1592, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1592, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1593, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1595, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1595, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1595, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1596, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1596, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1614, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1615, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1616, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1621, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1625, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1626, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1627, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1630, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1633, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1634, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1635, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1656, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1662, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1662, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1666, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1667, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1676, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1676, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1677, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1677, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1677, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1682, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1693, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1693, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1711, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1711, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1713, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1713, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1714, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1719, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1719, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1719, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1720, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1721, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1722, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1737, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1737, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1739, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1739, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1740, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1745, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1745, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1745, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1746, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1747, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1748, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1764, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1764, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1766, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1766, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1767, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1772, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1772, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1772, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1773, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1774, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1775, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1792, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1793, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1794, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1799, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1800, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1803, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1803, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1803, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1805, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1806, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1807, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1808, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1811, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1813, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1814, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1829, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1835, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1835, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1849, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1850, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1851, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1855, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1858, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1858, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1858, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1860, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1862, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1862, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1862, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1867, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1872, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1872, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1882, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1882, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 1882, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1918, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1923, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 1924, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1926, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1926, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1935, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1938, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1939, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 1940, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1945, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1948, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1948, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1949, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1949, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1949, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1949, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1961, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1961, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1962, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1963, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1980, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1980, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1981, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1984, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1996, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1998, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1998, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2001, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2001, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2001, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2003, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2003, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2003, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2004, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2004, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2012, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2019, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2019, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2019, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 2019, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2021, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2021, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2023, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2027, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2028, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2028, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 2029, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 2032, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2032, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2035, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2036, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2040, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2048, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2057, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2057, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2059, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2060, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2062, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2067, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2076, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2076, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2089, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2091, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2091, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2093, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2093, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2102, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2106, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2106, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2117, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2119, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2119, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2121, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2121, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2128, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2132, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2132, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2143, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2145, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2145, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2147, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2147, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2152, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2156, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2157, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2165, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2168, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2169, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2170, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2178, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2178, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2178, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2184, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2186, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2186, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2186, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2194, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2194, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2194, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2234, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2245, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2245, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2254, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2257, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2259, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2260, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2264, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2268, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2268, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2269, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2269, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2269, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2269, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2289, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2289, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2290, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2293, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2316, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2316, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2317, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2322, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2333, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2335, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2336, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2339, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2339, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2339, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2341, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2341, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2341, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2342, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2342, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2352, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2358, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2359, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2359, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2359, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2359, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2361, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2361, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2363, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2368, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2369, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2369, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2370, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2371, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2372, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2372, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2373, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2376, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2376, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2379, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2380, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2385, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2391, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2401, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2401, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2410, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2420, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2420, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2422, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2423, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2424, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2426, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2438, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2441, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2442, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2444, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2444, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2453, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2458, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2458, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2470, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2472, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2473, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2475, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2475, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2482, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2487, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2487, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2499, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2501, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2502, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2504, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2504, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2509, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2514, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2514, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2529, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2531, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2532, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2534, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2535, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2536, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2536, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2540, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2543, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2548, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2548, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2563, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2564, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2565, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2570, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2574, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2574, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2574, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2580, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2581, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2584, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2584, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2584, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2607, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2607, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2607, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2607, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2607, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2611, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2611, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2611, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2612, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2621, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2621, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2621, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2621, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2621, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2625, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2625, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2625, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2625, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2626, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2628, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2629, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2645, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2651, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2651, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2651, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2652, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2658, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2662, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2663, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2666, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2667, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2668, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2668, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2668, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2668, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2668, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2676, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2676, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2677, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2678, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2691, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2691, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2692, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2694, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2711, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2711, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2713, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2724, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2724, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2725, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2726, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2727, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2727, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2728, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2729, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2736, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 2744, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2744, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2744, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2745, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2762, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2762, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2762, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 2762, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2764, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2764, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2766, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2770, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2771, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2772, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 2772, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 2775, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2779, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2780, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2786, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2796, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2796, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2805, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2814, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2814, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2816, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2817, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2819, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2831, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2834, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2834, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2836, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2836, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2837, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2852, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2856, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2857, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2869, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2872, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2872, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2874, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2874, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2875, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2880, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2884, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2885, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2897, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2901, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2902, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2903, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2908, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2912, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2913, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2914, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2917, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2920, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2921, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2922, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2930, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2930, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 2930, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2961, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2962, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2981, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2984, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2985, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2986, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2987, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 2996, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 2998, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2998, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3006, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3007, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3013, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 3022, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3024, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3025, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3025, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 3026, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 3026, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3034, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3035, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3036, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3037, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 3042, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 3044, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3044, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3045, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3045, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 3050, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3051, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 288, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 322, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 322, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 334, "col_offset": 37, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 343, "col_offset": 52, "nodeName": "out2", "type": "Any"}, {"lineNumber": 345, "col_offset": 39, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 419, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 504, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 504, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 508, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 539, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 541, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 567, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 568, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 573, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 602, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 632, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 632, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 642, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 645, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 661, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 669, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 672, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 672, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 696, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 700, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 701, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 704, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 705, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 705, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 709, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 726, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 726, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 729, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 732, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 732, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 749, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 749, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 759, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 762, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 780, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 783, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 786, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 815, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 815, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 820, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 821, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 843, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 844, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 844, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 864, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 865, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 865, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 874, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 874, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 875, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 875, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 877, "col_offset": 14, "nodeName": "cm", "type": "Any"}, {"lineNumber": 878, "col_offset": 41, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 888, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 888, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 891, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 891, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 901, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 901, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 904, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 904, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 913, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 913, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 914, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 914, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 979, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 980, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 980, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 982, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 985, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1006, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1009, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1011, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1011, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 1012, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1031, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 1031, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1092, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1098, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1111, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1121, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1150, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1154, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1208, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1208, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1210, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1212, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 1240, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1242, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1265, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1269, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1270, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1270, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1273, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1274, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1275, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1282, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1309, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1322, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1338, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1338, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1344, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1347, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1347, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1363, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1363, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1369, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1372, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1372, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1396, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1400, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1401, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1404, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1405, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1405, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1408, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1409, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1427, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1427, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1458, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1460, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1464, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1465, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 1490, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1500, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1592, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1592, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1592, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1593, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1595, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1622, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1626, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1627, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1630, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1631, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1634, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1635, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1656, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1666, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1713, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1713, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1719, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1719, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1719, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1739, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1739, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1745, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1745, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1745, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1766, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1766, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1772, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1772, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1772, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1803, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1803, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1803, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1856, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1858, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1858, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1860, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1861, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1861, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1862, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1862, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1924, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1926, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 1935, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1946, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1948, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1948, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1949, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2001, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2003, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2024, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2028, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2028, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2029, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2032, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2032, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2048, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2062, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2093, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2093, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2103, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2106, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2106, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2121, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2121, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2129, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2132, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2132, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2147, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2147, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2153, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2157, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2157, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2176, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2178, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2178, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2184, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2185, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2185, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2186, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2186, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2239, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2240, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2242, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2245, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2254, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2265, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2268, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2268, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2269, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2339, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2341, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2364, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2369, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2369, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2370, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2372, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2372, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2373, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2376, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2376, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2410, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2426, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2444, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2444, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2454, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2458, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2458, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2475, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2475, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2483, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2487, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2487, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2504, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2504, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2510, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2514, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2514, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2540, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2544, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2548, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2548, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2548, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2571, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2574, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2574, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2580, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2581, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2582, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2582, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2583, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2583, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2584, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2584, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2620, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2624, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2630, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2659, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2663, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2711, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2711, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 2713, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 2715, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 2739, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2740, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2744, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2767, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2771, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2772, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2772, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2775, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2776, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2777, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 2805, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2819, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2836, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2836, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2837, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2853, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2857, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2857, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2874, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2874, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2875, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2881, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2885, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2885, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2909, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2913, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2914, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2917, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2918, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2918, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2921, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2922, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2993, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2994, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2994, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2996, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2999, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3020, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3023, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 3025, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3025, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 3026, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3045, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 3045, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 288, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 345, "col_offset": 39, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 419, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 420, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 423, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 423, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 423, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 423, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 564, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 567, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 568, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 578, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 602, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 632, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 643, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 645, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 661, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 669, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 670, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 672, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 696, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 697, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 705, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 726, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 729, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 730, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 732, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 749, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 759, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 760, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 762, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 780, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 783, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 786, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 794, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 820, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 821, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 843, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 843, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 844, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 864, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 864, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 865, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 889, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 890, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 890, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 891, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 902, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 903, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 904, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 914, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 979, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 980, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 980, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 982, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 984, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 985, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1006, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1009, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1011, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1088, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1092, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1097, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1111, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1112, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1112, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1120, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1150, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1151, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1154, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1154, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1154, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1154, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1265, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1266, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1269, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1270, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1274, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1285, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1309, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1338, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1344, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1345, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1347, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1363, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1369, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1370, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1372, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1396, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1397, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1405, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1427, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1427, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1429, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1460, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1464, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1465, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1490, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1499, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1622, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1623, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1713, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1739, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1766, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1856, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1857, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1861, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1926, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1946, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1947, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1948, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1948, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2024, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2025, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2028, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2029, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 2032, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2041, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2048, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2093, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2103, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2104, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2106, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2121, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2129, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2130, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2132, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2147, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2153, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2154, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2157, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2177, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2185, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2239, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2240, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2242, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2245, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2265, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2266, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2268, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2268, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2364, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2365, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2369, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2370, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2372, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2373, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2376, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2386, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2410, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2444, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2454, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2455, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2458, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2475, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2483, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2484, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2487, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2504, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2510, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2511, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2514, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2540, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 2544, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2545, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2548, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2571, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2572, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2582, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2583, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2620, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 2624, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 2629, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2659, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2660, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2663, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 2663, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2663, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2663, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2663, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2664, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2739, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2740, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2767, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2768, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2771, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2772, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 2776, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 2781, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2805, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2836, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2853, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2854, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2857, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2874, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2881, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2882, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2885, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2909, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2910, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2918, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2993, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2994, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2994, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 2994, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2996, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 2998, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2999, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3020, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3023, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3025, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 107, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 420, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 420, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 564, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 564, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 578, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 643, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 643, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 643, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 670, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 670, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 697, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 697, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 705, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 730, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 730, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 730, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 760, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 760, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 760, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 843, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 864, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 890, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 982, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 984, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1092, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1097, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1120, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1151, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1151, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1151, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1266, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1266, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1266, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1274, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1285, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1345, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1345, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1345, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1370, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1370, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1370, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1397, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1397, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1397, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1405, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1429, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1429, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1429, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1465, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1499, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1623, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1623, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1623, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1857, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1857, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1857, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1861, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1947, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1947, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1947, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2025, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2025, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2025, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2032, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2041, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2104, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2104, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2104, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2130, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2130, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2130, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2154, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2154, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2154, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2177, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2177, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2177, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2185, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2240, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2242, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2245, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2266, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2266, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2266, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2267, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2267, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2365, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2365, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2365, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2366, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2366, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2376, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2386, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2455, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2455, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2455, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2456, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2456, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2484, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2484, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2484, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2485, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2485, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2511, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2511, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2511, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2512, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2512, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2545, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2545, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2545, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2546, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2546, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2572, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2572, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2572, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2573, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2573, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2582, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2583, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2624, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2629, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2660, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2660, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2660, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2768, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2768, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2768, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2776, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2781, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2854, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2854, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2854, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2882, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2882, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2882, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2910, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2910, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2910, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2918, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2994, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2996, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2998, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 389, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 420, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 420, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 420, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 564, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 564, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 643, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 643, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 643, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 670, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 670, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 697, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 697, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 730, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 730, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 730, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 760, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 760, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 760, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 984, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1097, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1120, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1151, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1151, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1151, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1266, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1266, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1266, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1345, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1345, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1345, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1370, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1370, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1370, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1397, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1397, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1397, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1429, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1429, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1465, "col_offset": 58, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1499, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1623, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1623, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1623, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1857, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1857, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1857, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1947, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1947, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1947, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2025, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2025, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2025, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2104, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2104, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2104, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2130, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2130, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2130, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2154, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2154, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2154, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2177, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2177, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2177, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2245, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2266, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2266, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2266, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2267, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2267, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2365, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2365, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2365, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2366, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2366, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2455, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2455, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2455, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2456, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2456, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2484, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2484, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2484, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2485, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2485, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2511, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2511, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2511, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2512, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2512, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2545, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2545, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2545, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2546, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2546, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2572, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2572, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2572, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2573, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2573, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2629, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2660, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2660, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2660, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2768, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2768, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2768, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2854, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2854, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2854, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2882, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2882, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2882, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2910, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2910, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2910, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2998, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}]