[{"lineNumber": 31, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 148, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 256, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 32, "col_offset": 5, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 148, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 256, "col_offset": 47, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 311, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "iterations", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "conv_transpose1", "type": "sonnet.src.conv_transpose.Conv2DTranspose"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv2DTranspose"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv2DTranspose"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv1DTranspose"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv1DTranspose"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 264, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "conv_transpose1", "type": "sonnet.src.conv_transpose.Conv3DTranspose"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 292, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv3DTranspose"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 313, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "conv2", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "iterations", "type": "int"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "y1", "type": "Any"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "y2", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv2DTranspose]"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "conv_transpose1", "type": "sonnet.src.conv_transpose.Conv2DTranspose"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv2DTranspose]"}, {"lineNumber": 189, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv2DTranspose"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv2DTranspose]"}, {"lineNumber": 205, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv2DTranspose"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv1DTranspose]"}, {"lineNumber": 227, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv1DTranspose"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 229, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 238, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv1DTranspose]"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv1DTranspose"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 251, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 253, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 267, "col_offset": 22, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv3DTranspose]"}, {"lineNumber": 276, "col_offset": 10, "nodeName": "conv_transpose1", "type": "sonnet.src.conv_transpose.Conv3DTranspose"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 278, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 280, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.src.conv_transpose.Conv3DTranspose]"}, {"lineNumber": 304, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.Conv3DTranspose"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 306, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 308, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 313, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "w", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "w", "type": "Any"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "ConvNDTranspose", "type": "Type[sonnet.src.conv_transpose.ConvNDTranspose]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "autograph", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 168, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 197, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 229, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 251, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 253, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 267, "col_offset": 22, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 278, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 306, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 313, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "lib_initializers", "type": "module"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "lib_initializers", "type": "module"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "lib_initializers", "type": "module"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 6, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "n", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "conv_transpose", "type": "module"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "y1", "type": "Any"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 95, "col_offset": 59, "nodeName": "y2", "type": "Any"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "self", "type": "ConvTransposeTest"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv_transpose.ConvNDTranspose"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 6, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 153, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 166, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 6, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 274, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 276, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 302, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 302, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 166, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 47, "nodeName": "tf", "type": "Any"}]