[{"lineNumber": 30, "col_offset": 0, "nodeName": "_EXPECTED_FORMATTED_VARIABLE_LIST", "type": "str"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 305, "col_offset": 22, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 137, "col_offset": 44, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 305, "col_offset": 22, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 333, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "result", "type": "Tuple[Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "result", "type": "Tuple[Union[Any, List[Any]]]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "v", "type": "Tuple[Any, ...]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "result", "type": "Tuple[Union[Any, Tuple[Any, ...]]]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "v", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "result", "type": "Tuple[Union[Any, List[Any]]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "v", "type": "List[int]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "o", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "o", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "o", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "rank", "type": "int"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "smart_foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "func_smart_foo", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "original", "type": "NotHashable"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "wrapped", "type": "sonnet.src.utils.CompareById[nothing]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "original", "type": "NotHashable"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "wrapped", "type": "sonnet.src.utils.CompareById[nothing]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "original1", "type": "NotHashable"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "original2", "type": "NotHashable"}, {"lineNumber": 335, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "replicate", "type": "Callable"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "value", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "result", "type": "Tuple[Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "result", "type": "Tuple[Any]"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "replicate", "type": "Callable"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "result", "type": "Tuple[Union[Any, List[Any]]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "result", "type": "Tuple[Union[Any, List[Any]]]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "replicate", "type": "Callable"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "v", "type": "Tuple[Any, ...]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "result", "type": "Tuple[Union[Any, Tuple[Any, ...]]]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "result", "type": "Tuple[Union[Any, Tuple[Any, ...]]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "replicate", "type": "Callable"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "v", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assertLen", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "result", "type": "Tuple[Union[Any, List[Any]]]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "result", "type": "Tuple[Union[Any, List[Any]]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "MyObject", "type": "Type[Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "double", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "o", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "double", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "MyObject", "type": "Type[Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "MyObject", "type": "Type[Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "y", "type": "Any"}, {"lineNumber": 197, "col_offset": 6, "nodeName": "func_foo", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "smart_autograph", "type": "Callable"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "function", "type": "Any"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "smart_foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "range", "type": "Any"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "y", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "a", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "device", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 257, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "variable_like", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 302, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "NotHashable", "type": "Type[NotHashable]"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "CompareById", "type": "Type[sonnet.src.utils.CompareById[Any]]"}, {"lineNumber": 309, "col_offset": 32, "nodeName": "original", "type": "NotHashable"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 310, "col_offset": 18, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 310, "col_offset": 35, "nodeName": "original", "type": "NotHashable"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "NotHashable", "type": "Type[NotHashable]"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "CompareById", "type": "Type[sonnet.src.utils.CompareById[Any]]"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "original", "type": "NotHashable"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "NotHashable", "type": "Type[NotHashable]"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "NotHashable", "type": "Type[NotHashable]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "original1", "type": "NotHashable"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "original2", "type": "NotHashable"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 335, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "utils", "type": "module"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "utils", "type": "module"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "value", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "utils", "type": "module"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "utils", "type": "module"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "replicate", "type": "Callable"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "v", "type": "List[int]"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "instance", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "o", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "DecoratorTest"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "instance", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "self", "type": "DecoratorTest"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "instance", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "o", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "DecoratorTest"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "instance", "type": "Any"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "o", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "DecoratorTest"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "get_channel_index", "type": "Callable[[str], int]"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "get_channel_index", "type": "Callable[[str], int]"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "get_channel_index", "type": "Callable[[str], int]"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "input_fn", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "rank", "type": "int"}, {"lineNumber": 165, "col_offset": 6, "nodeName": "assert_rank", "type": "Callable[[Any, int], None]"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "rank", "type": "int"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "assert_minimum_rank", "type": "Callable[[Any, int], None]"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "rank", "type": "Any"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "assert_rank", "type": "Callable[[Any, int], None]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "assert_rank", "type": "Callable[[Any, int], None]"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "assert_minimum_rank", "type": "Callable[[Any, int], None]"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "func_foo", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 10, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 204, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "y", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 229, "col_offset": 10, "nodeName": "a", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "self", "type": "VariableLikeTest"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "self", "type": "VariableLikeTest"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "self", "type": "VariableLikeTest"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "self", "type": "VariableLikeTest"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "a", "type": "Any"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "b", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "self", "type": "VariableLikeTest"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 280, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "v1", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 287, "col_offset": 44, "nodeName": "_EXPECTED_FORMATTED_VARIABLE_LIST", "type": "str"}, {"lineNumber": 290, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "v1", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "v2", "type": "Any"}, {"lineNumber": 296, "col_offset": 6, "nodeName": "log_variables", "type": "Callable[[Any], None]"}, {"lineNumber": 309, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "self", "type": "CompareByIdTest"}, {"lineNumber": 310, "col_offset": 18, "nodeName": "wrapped", "type": "sonnet.src.utils.CompareById[nothing]"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "utils", "type": "module"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "self", "type": "CompareByIdTest"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "wrapped", "type": "sonnet.src.utils.CompareById[nothing]"}, {"lineNumber": 315, "col_offset": 36, "nodeName": "id", "type": "Callable[[Any], int]"}, {"lineNumber": 315, "col_offset": 39, "nodeName": "original", "type": "NotHashable"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "self", "type": "CompareByIdTest"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "CompareById", "type": "Type[sonnet.src.utils.CompareById[Any]]"}, {"lineNumber": 321, "col_offset": 39, "nodeName": "original1", "type": "NotHashable"}, {"lineNumber": 321, "col_offset": 51, "nodeName": "CompareById", "type": "Type[sonnet.src.utils.CompareById[Any]]"}, {"lineNumber": 321, "col_offset": 69, "nodeName": "original1", "type": "NotHashable"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "self", "type": "CompareByIdTest"}, {"lineNumber": 323, "col_offset": 35, "nodeName": "CompareById", "type": "Type[sonnet.src.utils.CompareById[Any]]"}, {"lineNumber": 323, "col_offset": 53, "nodeName": "original1", "type": "NotHashable"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "self", "type": "CompareByIdTest"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "CompareById", "type": "Type[sonnet.src.utils.CompareById[Any]]"}, {"lineNumber": 325, "col_offset": 53, "nodeName": "original1", "type": "NotHashable"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "self", "type": "CompareByIdTest"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "CompareById", "type": "Type[sonnet.src.utils.CompareById[Any]]"}, {"lineNumber": 327, "col_offset": 48, "nodeName": "original1", "type": "NotHashable"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "self", "type": "CompareByIdTest"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "CompareById", "type": "Type[sonnet.src.utils.CompareById[Any]]"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "original1", "type": "NotHashable"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "CompareById", "type": "Type[sonnet.src.utils.CompareById[Any]]"}, {"lineNumber": 330, "col_offset": 56, "nodeName": "original2", "type": "NotHashable"}, {"lineNumber": 335, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "value", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "self", "type": "ReplicateTest"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "self", "type": "DecoratorTest"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "self", "type": "DecoratorTest"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "self", "type": "DecoratorTest"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "o", "type": "Any"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "self", "type": "DecoratorTest"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "wrapped", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "double", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "f", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "utils", "type": "module"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "utils", "type": "module"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 151, "col_offset": 66, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 165, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "rank", "type": "int"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "rank", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "rank", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "rank", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "self", "type": "SmartAutographTest"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 204, "col_offset": 6, "nodeName": "self", "type": "SmartAutographTest"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "smart_foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "self", "type": "SmartAutographTest"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "func_smart_foo", "type": "Any"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 240, "col_offset": 43, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 280, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "self", "type": "FormatVariablesTest"}, {"lineNumber": 287, "col_offset": 10, "nodeName": "format_variables", "type": "Callable[..., str]"}, {"lineNumber": 290, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 296, "col_offset": 6, "nodeName": "utils", "type": "module"}, {"lineNumber": 296, "col_offset": 27, "nodeName": "v2", "type": "Any"}, {"lineNumber": 296, "col_offset": 31, "nodeName": "v1", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "utils", "type": "module"}, {"lineNumber": 321, "col_offset": 51, "nodeName": "utils", "type": "module"}, {"lineNumber": 323, "col_offset": 35, "nodeName": "utils", "type": "module"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "utils", "type": "module"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "utils", "type": "module"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "utils", "type": "module"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "o", "type": "Any"}, {"lineNumber": 172, "col_offset": 68, "nodeName": "rank", "type": "Any"}, {"lineNumber": 175, "col_offset": 68, "nodeName": "rank", "type": "Any"}, {"lineNumber": 179, "col_offset": 59, "nodeName": "rank", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 240, "col_offset": 43, "nodeName": "initializers", "type": "module"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 287, "col_offset": 10, "nodeName": "utils", "type": "module"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "v2", "type": "Any"}, {"lineNumber": 287, "col_offset": 38, "nodeName": "v1", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "tf", "type": "Any"}]