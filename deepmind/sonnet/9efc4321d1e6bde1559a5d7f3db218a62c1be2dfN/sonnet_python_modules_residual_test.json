[{"lineNumber": 27, "col_offset": 29, "nodeName": "RNNCore", "type": "Type[sonnet.python.modules.rnn_core.RNNCore]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 254, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "residual_wrapper", "type": "sonnet.python.modules.residual.Residual"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "residual", "type": "sonnet.python.modules.residual.Residual"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "residual_output", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "residual_wrapper", "type": "sonnet.python.modules.residual.ResidualCore"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "residual", "type": "sonnet.python.modules.residual.ResidualCore"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "in_to_hid", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "in_to_hidden_variables", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "hid_to_hid", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "hidden_to_hidden_variables", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "real_in_to_hid", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "real_hid_to_hid", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "vanilla_output", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "residual_output", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "core", "type": "HeterogeneousStateCore"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "residual", "type": "sonnet.python.modules.residual.ResidualCore"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "residual_state", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "skip_wrapper", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "skip_wrapper", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "state_shape", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "residual", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "in_to_hid", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "in_to_hidden_variables", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "hid_to_hid", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "hidden_to_hidden_variables", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "real_in_to_hid", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "real_hid_to_hid", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "vanilla_output", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "skip_output", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "core", "type": "HeterogeneousStateCore"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "skip_wrapper", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "skip_state", "type": "Any"}, {"lineNumber": 255, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "self", "type": "HeterogeneousStateCore"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "in_size", "type": "int"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "Residual", "type": "Type[sonnet.python.modules.residual.Residual]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "residual_wrapper", "type": "sonnet.python.modules.residual.Residual"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "Residual", "type": "Type[sonnet.python.modules.residual.Residual]"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "residual", "type": "sonnet.python.modules.residual.Residual"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "linear", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "output", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "output_v", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "w_v", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "b_v", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "b_v", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "residual_output", "type": "Any"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "output_v", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "in_size", "type": "int"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "ResidualCore", "type": "Type[sonnet.python.modules.residual.ResidualCore]"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "residual_wrapper", "type": "sonnet.python.modules.residual.ResidualCore"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 104, "col_offset": 50, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "in_size", "type": "int"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "ResidualCore", "type": "Type[sonnet.python.modules.residual.ResidualCore]"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "residual", "type": "sonnet.python.modules.residual.ResidualCore"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "output_v", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "new_state_v", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "in_to_hid_w", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "in_to_hid_b", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "hid_to_hid_w", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "hid_to_hid_b", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "in_to_hid_b", "type": "Any"}, {"lineNumber": 136, "col_offset": 62, "nodeName": "hid_to_hid_b", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "vanilla_output", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "residual_output", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "output_v", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "vanilla_output", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "new_state_v", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "HeterogeneousStateCore", "type": "Type[HeterogeneousStateCore]"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "ResidualCore", "type": "Type[sonnet.python.modules.residual.ResidualCore]"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "core", "type": "HeterogeneousStateCore"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "SkipConnectionCore", "type": "Type[sonnet.python.modules.residual.SkipConnectionCore]"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 178, "col_offset": 10, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "skip_wrapper", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "SkipConnectionCore", "type": "Type[sonnet.python.modules.residual.SkipConnectionCore]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "SkipConnectionCore", "type": "Type[sonnet.python.modules.residual.SkipConnectionCore]"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "skip_wrapper", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "output_shape", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "state_shape", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "VanillaRNN", "type": "Type[sonnet.python.modules.basic_rnn.VanillaRNN]"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "SkipConnectionCore", "type": "Type[sonnet.python.modules.residual.SkipConnectionCore]"}, {"lineNumber": 209, "col_offset": 38, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "residual", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "vanilla_rnn", "type": "sonnet.python.modules.basic_rnn.VanillaRNN"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "output_v", "type": "Any"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "new_state_v", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "in_to_hid_w", "type": "Any"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "in_to_hid_b", "type": "Any"}, {"lineNumber": 224, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "hid_to_hid_w", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "hid_to_hid_b", "type": "Any"}, {"lineNumber": 225, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 227, "col_offset": 55, "nodeName": "in_to_hid_b", "type": "Any"}, {"lineNumber": 228, "col_offset": 62, "nodeName": "hid_to_hid_b", "type": "Any"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "skip_output", "type": "Any"}, {"lineNumber": 232, "col_offset": 37, "nodeName": "output_v", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "vanilla_output", "type": "Any"}, {"lineNumber": 233, "col_offset": 40, "nodeName": "new_state_v", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "HeterogeneousStateCore", "type": "Type[HeterogeneousStateCore]"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "SkipConnectionCore", "type": "Type[sonnet.python.modules.residual.SkipConnectionCore]"}, {"lineNumber": 239, "col_offset": 42, "nodeName": "core", "type": "HeterogeneousStateCore"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 255, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "custom_getter", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "in_size", "type": "int"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "in_size", "type": "int"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "in_size", "type": "int"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "w", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "dot", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "w_v", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "in_size", "type": "int"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "residual_wrapper", "type": "sonnet.python.modules.residual.ResidualCore"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "in_size", "type": "int"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "in_size", "type": "int"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "randn", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "in_size", "type": "int"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "dot", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "in_to_hid_w", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "dot", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "hid_to_hid_w", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "real_in_to_hid", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "real_hid_to_hid", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 146, "col_offset": 58, "nodeName": "in_size", "type": "int"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "core", "type": "HeterogeneousStateCore"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "residual", "type": "sonnet.python.modules.residual.ResidualCore"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 178, "col_offset": 10, "nodeName": "skip_wrapper", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 208, "col_offset": 57, "nodeName": "in_size", "type": "int"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 216, "col_offset": 52, "nodeName": "in_size", "type": "int"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "randn", "type": "Any"}, {"lineNumber": 217, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 217, "col_offset": 57, "nodeName": "in_size", "type": "int"}, {"lineNumber": 218, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 21, "nodeName": "dot", "type": "Any"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "in_to_hid_w", "type": "Any"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "dot", "type": "Any"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "hid_to_hid_w", "type": "Any"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "real_in_to_hid", "type": "Any"}, {"lineNumber": 229, "col_offset": 46, "nodeName": "real_hid_to_hid", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 230, "col_offset": 46, "nodeName": "vanilla_output", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 238, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "core", "type": "HeterogeneousStateCore"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "skip_wrapper", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 255, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "HeterogeneousStateCore", "type": "Type[HeterogeneousStateCore]"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "self", "type": "HeterogeneousStateCore"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 48, "col_offset": 60, "nodeName": "float32", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "_hidden_size", "type": "Any"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "int32", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "ResidualTest", "type": "Type[ResidualTest]"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 69, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "ResidualCoreTest", "type": "Type[ResidualCoreTest]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "in_size", "type": "int"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 112, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 114, "col_offset": 56, "nodeName": "in_size", "type": "int"}, {"lineNumber": 116, "col_offset": 57, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "in_to_hid", "type": "Any"}, {"lineNumber": 128, "col_offset": 50, "nodeName": "in_to_hid", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "hid_to_hid", "type": "Any"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "hid_to_hid", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 58, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "residual_state", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "residual_state", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "SkipConnectionCoreTest", "type": "Type[SkipConnectionCoreTest]"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 171, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "in_size", "type": "int"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "in_size", "type": "int"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "in_size", "type": "int"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 190, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 190, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "in_size", "type": "int"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 204, "col_offset": 64, "nodeName": "in_size", "type": "int"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 206, "col_offset": 56, "nodeName": "in_size", "type": "int"}, {"lineNumber": 208, "col_offset": 57, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 216, "col_offset": 52, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 217, "col_offset": 40, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 217, "col_offset": 57, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 220, "col_offset": 36, "nodeName": "in_to_hid", "type": "Any"}, {"lineNumber": 220, "col_offset": 50, "nodeName": "in_to_hid", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "hid_to_hid", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "hid_to_hid", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "prev_state", "type": "Any"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 223, "col_offset": 57, "nodeName": "prev_state_data", "type": "Any"}, {"lineNumber": 227, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 58, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "skip_state", "type": "Any"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "skip_state", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "self", "type": "HeterogeneousStateCore"}, {"lineNumber": 48, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "self", "type": "HeterogeneousStateCore"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 69, "col_offset": 64, "nodeName": "self", "type": "ResidualTest"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 112, "col_offset": 47, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 114, "col_offset": 56, "nodeName": "self", "type": "ResidualCoreTest"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 171, "col_offset": 64, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "skip_wrapper", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "skip_wrapper", "type": "sonnet.python.modules.residual.SkipConnectionCore"}, {"lineNumber": 190, "col_offset": 47, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 190, "col_offset": 64, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 204, "col_offset": 64, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 206, "col_offset": 56, "nodeName": "self", "type": "SkipConnectionCoreTest"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 79, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "residual_state", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "residual_state", "type": "Any"}, {"lineNumber": 218, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "skip_state", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "core_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "skip_state", "type": "Any"}]