[{"lineNumber": 31, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "test", "type": "Any"}, {"lineNumber": 627, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "batch_norm1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "batch_norm2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "batch_norm3", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "batch_norm4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "is_training_ph", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_local_stats_ph", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "bn3", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "bn4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "input_v", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "update_ops_1", "type": "Tuple[Any, ...]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "update_ops_2", "type": "Tuple[Any, ...]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "out3", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "update_ops", "type": "Tuple[Any, ...]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "update_ops", "type": "Any"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "condition", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "update_ops", "type": "Tuple[Any, ...]"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 462, "col_offset": 7, "nodeName": "scale", "type": "Any"}, {"lineNumber": 464, "col_offset": 7, "nodeName": "offset", "type": "Any"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 494, "col_offset": 7, "nodeName": "offset", "type": "Any"}, {"lineNumber": 496, "col_offset": 7, "nodeName": "scale", "type": "Any"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 525, "col_offset": 7, "nodeName": "scale", "type": "Any"}, {"lineNumber": 527, "col_offset": 7, "nodeName": "offset", "type": "Any"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 531, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 536, "col_offset": 7, "nodeName": "scale", "type": "Any"}, {"lineNumber": 538, "col_offset": 7, "nodeName": "offset", "type": "Any"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "iterations", "type": "int"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "xx", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "iterations", "type": "int"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "o1", "type": "Any"}, {"lineNumber": 612, "col_offset": 4, "nodeName": "o2", "type": "Any"}, {"lineNumber": 628, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "batch_norm1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 41, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "beta", "type": "Any"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "batch_norm2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "batch_norm2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "batch_norm3", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "batch_norm3", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "batch_norm4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "batch_norm4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "batch_norm4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "batch_norm4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "batch_norm4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "bool", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "bool", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "batch_norm4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "bn3", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "bn4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "bn5", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "bn6", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "bn7", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "base_dtype", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "base_dtype", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "base_dtype", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "base_dtype", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "float16", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "float16", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "base_dtype", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "base_dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "float16", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "base_dtype", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "float16", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "base_dtype", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "input_v", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "input_v", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 7, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "_get_inputs", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 151, "col_offset": 7, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 155, "col_offset": 6, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 163, "col_offset": 6, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 197, "col_offset": 7, "nodeName": "_", "type": "Any"}, {"lineNumber": 197, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "_get_inputs", "type": "Any"}, {"lineNumber": 197, "col_offset": 36, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 198, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "correct_mm", "type": "Any"}, {"lineNumber": 226, "col_offset": 6, "nodeName": "correct_mm", "type": "Any"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "correct_mv", "type": "Any"}, {"lineNumber": 229, "col_offset": 6, "nodeName": "atol", "type": "float"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 7, "nodeName": "input_v", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "_get_inputs", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 247, "col_offset": 6, "nodeName": "out1", "type": "Any"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 256, "col_offset": 6, "nodeName": "correct_mm", "type": "Any"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "correct_mv", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "v", "type": "Any"}, {"lineNumber": 282, "col_offset": 7, "nodeName": "input_v", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "_get_inputs", "type": "Any"}, {"lineNumber": 284, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "bool", "type": "Any"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 290, "col_offset": 38, "nodeName": "bool", "type": "Any"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 296, "col_offset": 7, "nodeName": "update_ops_collection", "type": "Any"}, {"lineNumber": 297, "col_offset": 6, "nodeName": "update_ops", "type": "Tuple[Any, ...]"}, {"lineNumber": 303, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 314, "col_offset": 6, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 318, "col_offset": 6, "nodeName": "correct_mm", "type": "Any"}, {"lineNumber": 319, "col_offset": 6, "nodeName": "correct_mv", "type": "Any"}, {"lineNumber": 353, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 354, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 358, "col_offset": 7, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 359, "col_offset": 7, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 364, "col_offset": 35, "nodeName": "UPDATE_OPS", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 372, "col_offset": 7, "nodeName": "input_v", "type": "numpy.ndarray"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "_get_inputs", "type": "Callable[..., Any]"}, {"lineNumber": 373, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "bool", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "cond", "type": "Any"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "condition", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 383, "col_offset": 6, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 386, "col_offset": 6, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 402, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 403, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 406, "col_offset": 10, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 406, "col_offset": 13, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 413, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 416, "col_offset": 10, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 469, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 470, "col_offset": 21, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 470, "col_offset": 38, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 471, "col_offset": 7, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 473, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 474, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 477, "col_offset": 6, "nodeName": "ones_v", "type": "Any"}, {"lineNumber": 481, "col_offset": 9, "nodeName": "scale", "type": "Any"}, {"lineNumber": 483, "col_offset": 9, "nodeName": "offset", "type": "Any"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 501, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 502, "col_offset": 21, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 502, "col_offset": 38, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 503, "col_offset": 7, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 505, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 505, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 508, "col_offset": 7, "nodeName": "offset", "type": "Any"}, {"lineNumber": 510, "col_offset": 7, "nodeName": "scale", "type": "Any"}, {"lineNumber": 512, "col_offset": 7, "nodeName": "scale", "type": "Any"}, {"lineNumber": 512, "col_offset": 17, "nodeName": "offset", "type": "Any"}, {"lineNumber": 531, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 531, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 532, "col_offset": 9, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 533, "col_offset": 21, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 533, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 534, "col_offset": 7, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "float32", "type": "Any"}, {"lineNumber": 559, "col_offset": 10, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 563, "col_offset": 6, "nodeName": "xlinear", "type": "Any"}, {"lineNumber": 571, "col_offset": 10, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 573, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 573, "col_offset": 26, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 574, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 574, "col_offset": 20, "nodeName": "xx", "type": "Any"}, {"lineNumber": 575, "col_offset": 11, "nodeName": "is_training_python_bool", "type": "Any"}, {"lineNumber": 576, "col_offset": 6, "nodeName": "is_training_node", "type": "Any"}, {"lineNumber": 578, "col_offset": 6, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "is_training_node", "type": "Any"}, {"lineNumber": 579, "col_offset": 6, "nodeName": "test_local_stats_node", "type": "Any"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "test_local_stats_node", "type": "Any"}, {"lineNumber": 583, "col_offset": 9, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 583, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 584, "col_offset": 9, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 586, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 592, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 605, "col_offset": 23, "nodeName": "float16", "type": "Any"}, {"lineNumber": 606, "col_offset": 10, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 607, "col_offset": 10, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 609, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 611, "col_offset": 9, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 611, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 612, "col_offset": 9, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 612, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 614, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 620, "col_offset": 10, "nodeName": "_", "type": "int"}, {"lineNumber": 628, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "batch_norm1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "batch_norm1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "snt", "type": "module"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "is_training_ph", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "test_local_stats_ph", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 80, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 94, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 96, "col_offset": 6, "nodeName": "bn5", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 99, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "bn6", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 104, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "bn7", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "snt", "type": "module"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "as_numpy_dtype", "type": "Any"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 42, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "run", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "out1", "type": "Any"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "assertBetween", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "run", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "out1", "type": "Any"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "assertBetween", "type": "Any"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 201, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 204, "col_offset": 6, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 204, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 206, "col_offset": 43, "nodeName": "UPDATE_OPS", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "update_ops_1", "type": "Tuple[Any, ...]"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "UPDATE_OPS", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "update_ops_2", "type": "Tuple[Any, ...]"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 212, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 214, "col_offset": 6, "nodeName": "mm", "type": "Any"}, {"lineNumber": 214, "col_offset": 10, "nodeName": "mv", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "mm", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 217, "col_offset": 43, "nodeName": "mv", "type": "Any"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "update_ops_1", "type": "Tuple[Any, ...]"}, {"lineNumber": 220, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "update_ops_2", "type": "Tuple[Any, ...]"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 225, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 230, "col_offset": 58, "nodeName": "mm", "type": "Any"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 231, "col_offset": 58, "nodeName": "mv", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "UPDATE_OPS", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "update_ops", "type": "Tuple[Any, ...]"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "control_dependencies", "type": "Any"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "update_ops", "type": "Tuple[Any, ...]"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "out1", "type": "Any"}, {"lineNumber": 249, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 250, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "run", "type": "Any"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "out1", "type": "Any"}, {"lineNumber": 253, "col_offset": 6, "nodeName": "mm", "type": "Any"}, {"lineNumber": 253, "col_offset": 10, "nodeName": "mv", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 256, "col_offset": 44, "nodeName": "v", "type": "numpy.ndarray"}, {"lineNumber": 257, "col_offset": 37, "nodeName": "_decay_rate", "type": "Any"}, {"lineNumber": 259, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 259, "col_offset": 58, "nodeName": "mm", "type": "Any"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 260, "col_offset": 58, "nodeName": "mv", "type": "Any"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 261, "col_offset": 44, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "out2_", "type": "Any"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "out3_", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "run", "type": "Any"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 267, "col_offset": 44, "nodeName": "out2_", "type": "Any"}, {"lineNumber": 270, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 272, "col_offset": 10, "nodeName": "out3_", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 287, "col_offset": 45, "nodeName": "update_ops_collection", "type": "Any"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 294, "col_offset": 30, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 298, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 303, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 304, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "run", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 312, "col_offset": 44, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "moving_variance", "type": "Any"}, {"lineNumber": 315, "col_offset": 6, "nodeName": "mm1", "type": "Any"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "mv1", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "run", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 318, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 319, "col_offset": 37, "nodeName": "_decay_rate", "type": "Any"}, {"lineNumber": 321, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 321, "col_offset": 58, "nodeName": "mm1", "type": "Any"}, {"lineNumber": 322, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 322, "col_offset": 58, "nodeName": "mv1", "type": "Any"}, {"lineNumber": 326, "col_offset": 14, "nodeName": "run", "type": "Any"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 330, "col_offset": 6, "nodeName": "mm2", "type": "Any"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "mv2", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "run", "type": "Any"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 331, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "mm1", "type": "Any"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "mm2", "type": "Any"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 332, "col_offset": 26, "nodeName": "mv1", "type": "Any"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "mv2", "type": "Any"}, {"lineNumber": 334, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 334, "col_offset": 44, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 338, "col_offset": 14, "nodeName": "run", "type": "Any"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 342, "col_offset": 6, "nodeName": "mm3", "type": "Any"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "mv3", "type": "Any"}, {"lineNumber": 342, "col_offset": 17, "nodeName": "run", "type": "Any"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 343, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "mm1", "type": "Any"}, {"lineNumber": 343, "col_offset": 31, "nodeName": "mm3", "type": "Any"}, {"lineNumber": 344, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "mv1", "type": "Any"}, {"lineNumber": 344, "col_offset": 31, "nodeName": "mv3", "type": "Any"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 348, "col_offset": 10, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 353, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 354, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 364, "col_offset": 35, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "update_ops", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 373, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 381, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 382, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 383, "col_offset": 14, "nodeName": "run", "type": "Any"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "cond", "type": "Any"}, {"lineNumber": 384, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 384, "col_offset": 26, "nodeName": "input_v", "type": "numpy.ndarray"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 386, "col_offset": 14, "nodeName": "run", "type": "Any"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "cond", "type": "Any"}, {"lineNumber": 387, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 387, "col_offset": 44, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 390, "col_offset": 6, "nodeName": "mm", "type": "Any"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "mv", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 391, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 391, "col_offset": 44, "nodeName": "mm", "type": "Any"}, {"lineNumber": 392, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 392, "col_offset": 43, "nodeName": "mv", "type": "Any"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 402, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 403, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "UPDATE_OPS", "type": "Any"}, {"lineNumber": 413, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 414, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 424, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 424, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 425, "col_offset": 6, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 429, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 429, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 429, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 430, "col_offset": 6, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 433, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 438, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 438, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 438, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 439, "col_offset": 6, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 442, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 443, "col_offset": 6, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 447, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 447, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 447, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 448, "col_offset": 6, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 458, "col_offset": 23, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 459, "col_offset": 27, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 463, "col_offset": 6, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 465, "col_offset": 6, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 465, "col_offset": 29, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 468, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 469, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 469, "col_offset": 30, "nodeName": "offset", "type": "Any"}, {"lineNumber": 469, "col_offset": 44, "nodeName": "scale", "type": "Any"}, {"lineNumber": 469, "col_offset": 64, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 470, "col_offset": 21, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 473, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 475, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 475, "col_offset": 15, "nodeName": "init", "type": "Any"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 478, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 479, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 495, "col_offset": 6, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 497, "col_offset": 6, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "l2_regularizer", "type": "Any"}, {"lineNumber": 500, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 501, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 501, "col_offset": 30, "nodeName": "offset", "type": "Any"}, {"lineNumber": 501, "col_offset": 44, "nodeName": "scale", "type": "Any"}, {"lineNumber": 501, "col_offset": 64, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 502, "col_offset": 21, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 505, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 505, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 506, "col_offset": 11, "nodeName": "offset", "type": "Any"}, {"lineNumber": 506, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 507, "col_offset": 6, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 507, "col_offset": 23, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 508, "col_offset": 22, "nodeName": "scale", "type": "Any"}, {"lineNumber": 509, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 509, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 510, "col_offset": 21, "nodeName": "offset", "type": "Any"}, {"lineNumber": 511, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 513, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 513, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 514, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 514, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 526, "col_offset": 6, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 526, "col_offset": 30, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 528, "col_offset": 6, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 528, "col_offset": 29, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 531, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 531, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 532, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 532, "col_offset": 30, "nodeName": "offset", "type": "Any"}, {"lineNumber": 532, "col_offset": 44, "nodeName": "scale", "type": "Any"}, {"lineNumber": 532, "col_offset": 64, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 533, "col_offset": 21, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 537, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 537, "col_offset": 39, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 539, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 539, "col_offset": 38, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 558, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 558, "col_offset": 41, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 559, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 559, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 561, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 561, "col_offset": 27, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 563, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 564, "col_offset": 45, "nodeName": "xlinear", "type": "Any"}, {"lineNumber": 566, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 566, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 569, "col_offset": 10, "nodeName": "x", "type": "Any"}, {"lineNumber": 571, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 571, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 573, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 576, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 576, "col_offset": 40, "nodeName": "bool", "type": "Any"}, {"lineNumber": 577, "col_offset": 6, "nodeName": "update", "type": "Callable"}, {"lineNumber": 579, "col_offset": 30, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 579, "col_offset": 45, "nodeName": "bool", "type": "Any"}, {"lineNumber": 580, "col_offset": 6, "nodeName": "update", "type": "Callable"}, {"lineNumber": 583, "col_offset": 28, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 583, "col_offset": 58, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 584, "col_offset": 28, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 584, "col_offset": 58, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 586, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 589, "col_offset": 10, "nodeName": "o1", "type": "Any"}, {"lineNumber": 589, "col_offset": 14, "nodeName": "o2", "type": "Any"}, {"lineNumber": 589, "col_offset": 18, "nodeName": "_moving_mean", "type": "Any"}, {"lineNumber": 589, "col_offset": 36, "nodeName": "_moving_variance", "type": "Any"}, {"lineNumber": 589, "col_offset": 58, "nodeName": "_moving_mean", "type": "Any"}, {"lineNumber": 590, "col_offset": 10, "nodeName": "_moving_variance", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 592, "col_offset": 21, "nodeName": "iterations", "type": "int"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 605, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 605, "col_offset": 41, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 606, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 607, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 609, "col_offset": 37, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 611, "col_offset": 28, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 611, "col_offset": 58, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 612, "col_offset": 28, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 612, "col_offset": 58, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 614, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 615, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 617, "col_offset": 10, "nodeName": "o1", "type": "Any"}, {"lineNumber": 617, "col_offset": 14, "nodeName": "o2", "type": "Any"}, {"lineNumber": 617, "col_offset": 18, "nodeName": "_moving_mean", "type": "Any"}, {"lineNumber": 617, "col_offset": 36, "nodeName": "_moving_variance", "type": "Any"}, {"lineNumber": 617, "col_offset": 58, "nodeName": "_moving_mean", "type": "Any"}, {"lineNumber": 618, "col_offset": 10, "nodeName": "_moving_variance", "type": "Any"}, {"lineNumber": 620, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 620, "col_offset": 21, "nodeName": "iterations", "type": "int"}, {"lineNumber": 628, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "constant", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "constant", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "moving_variance", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "beta", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "moving_variance", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "beta", "type": "Any"}, {"lineNumber": 135, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "sess", "type": "Any"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "sess", "type": "Any"}, {"lineNumber": 164, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 206, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 214, "col_offset": 41, "nodeName": "moving_variance", "type": "Any"}, {"lineNumber": 216, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 217, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 220, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "moving_variance", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "_decay_rate", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "_decay_rate", "type": "Any"}, {"lineNumber": 226, "col_offset": 65, "nodeName": "correct_mm", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "_decay_rate", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "float16", "type": "Any"}, {"lineNumber": 230, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "correct_mm", "type": "Any"}, {"lineNumber": 230, "col_offset": 67, "nodeName": "atol", "type": "float"}, {"lineNumber": 231, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "correct_mv", "type": "Any"}, {"lineNumber": 231, "col_offset": 67, "nodeName": "atol", "type": "float"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 250, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "sess", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "moving_variance", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "_decay_rate", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 257, "col_offset": 37, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 259, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 259, "col_offset": 37, "nodeName": "correct_mm", "type": "Any"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 260, "col_offset": 37, "nodeName": "correct_mv", "type": "Any"}, {"lineNumber": 261, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 261, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "sess", "type": "Any"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "out2", "type": "Any"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "out3", "type": "Any"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 270, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "update_ops_collection", "type": "Any"}, {"lineNumber": 298, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "update_ops", "type": "Tuple[Any, ...]"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "control_dependencies", "type": "Any"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "update_ops", "type": "Tuple[Any, ...]"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "identity", "type": "Any"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 303, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "sess", "type": "Any"}, {"lineNumber": 312, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "sess", "type": "Any"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "_decay_rate", "type": "Any"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 319, "col_offset": 37, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 321, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "correct_mm", "type": "Any"}, {"lineNumber": 322, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 322, "col_offset": 37, "nodeName": "correct_mv", "type": "Any"}, {"lineNumber": 326, "col_offset": 14, "nodeName": "sess", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "sess", "type": "Any"}, {"lineNumber": 331, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 338, "col_offset": 14, "nodeName": "sess", "type": "Any"}, {"lineNumber": 342, "col_offset": 17, "nodeName": "sess", "type": "Any"}, {"lineNumber": 343, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 344, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 361, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 361, "col_offset": 43, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 364, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 376, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 381, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 382, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 383, "col_offset": 14, "nodeName": "sess", "type": "Any"}, {"lineNumber": 384, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 386, "col_offset": 14, "nodeName": "sess", "type": "Any"}, {"lineNumber": 387, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 387, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "sess", "type": "Any"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 390, "col_offset": 41, "nodeName": "moving_variance", "type": "Any"}, {"lineNumber": 391, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 392, "col_offset": 6, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 402, "col_offset": 55, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 413, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 414, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 417, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "run", "type": "Any"}, {"lineNumber": 418, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 419, "col_offset": 65, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "update_ops", "type": "Tuple[Any, ...]"}, {"lineNumber": 424, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 425, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 429, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 430, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 438, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 439, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 443, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 447, "col_offset": 9, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 448, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 458, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 459, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 465, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 468, "col_offset": 55, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 474, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 475, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 478, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 478, "col_offset": 49, "nodeName": "ones_v", "type": "Any"}, {"lineNumber": 479, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 479, "col_offset": 53, "nodeName": "ones_v", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 500, "col_offset": 55, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 505, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 507, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 509, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 511, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 513, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 514, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 526, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 528, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 531, "col_offset": 55, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 537, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 537, "col_offset": 28, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 537, "col_offset": 39, "nodeName": "variables", "type": "Any"}, {"lineNumber": 539, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 539, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "beta", "type": "Any"}, {"lineNumber": 539, "col_offset": 38, "nodeName": "variables", "type": "Any"}, {"lineNumber": 561, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 563, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 564, "col_offset": 6, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 566, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 568, "col_offset": 6, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 573, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 576, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 576, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 577, "col_offset": 6, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 577, "col_offset": 24, "nodeName": "is_training_node", "type": "Any"}, {"lineNumber": 577, "col_offset": 42, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 579, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 579, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 580, "col_offset": 6, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 580, "col_offset": 24, "nodeName": "test_local_stats_node", "type": "Any"}, {"lineNumber": 580, "col_offset": 47, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 586, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 589, "col_offset": 18, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 589, "col_offset": 36, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 589, "col_offset": 58, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 590, "col_offset": 10, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "y2", "type": "Any"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "mean1", "type": "Any"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "var1", "type": "Any"}, {"lineNumber": 593, "col_offset": 29, "nodeName": "mean2", "type": "Any"}, {"lineNumber": 593, "col_offset": 36, "nodeName": "var2", "type": "Any"}, {"lineNumber": 593, "col_offset": 43, "nodeName": "run", "type": "Any"}, {"lineNumber": 593, "col_offset": 52, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 594, "col_offset": 28, "nodeName": "y1", "type": "Any"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "y2", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 595, "col_offset": 28, "nodeName": "mean1", "type": "Any"}, {"lineNumber": 595, "col_offset": 35, "nodeName": "mean2", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 596, "col_offset": 28, "nodeName": "var1", "type": "Any"}, {"lineNumber": 596, "col_offset": 34, "nodeName": "var2", "type": "Any"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 614, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 615, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 617, "col_offset": 18, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 617, "col_offset": 36, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 617, "col_offset": 58, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 618, "col_offset": 10, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "y2", "type": "Any"}, {"lineNumber": 621, "col_offset": 16, "nodeName": "mean1", "type": "Any"}, {"lineNumber": 621, "col_offset": 23, "nodeName": "var1", "type": "Any"}, {"lineNumber": 621, "col_offset": 29, "nodeName": "mean2", "type": "Any"}, {"lineNumber": 621, "col_offset": 36, "nodeName": "var2", "type": "Any"}, {"lineNumber": 621, "col_offset": 43, "nodeName": "run", "type": "Any"}, {"lineNumber": 621, "col_offset": 52, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 622, "col_offset": 28, "nodeName": "y1", "type": "Any"}, {"lineNumber": 622, "col_offset": 32, "nodeName": "y2", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 623, "col_offset": 28, "nodeName": "mean1", "type": "Any"}, {"lineNumber": 623, "col_offset": 35, "nodeName": "mean2", "type": "Any"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 624, "col_offset": 28, "nodeName": "var1", "type": "Any"}, {"lineNumber": 624, "col_offset": 34, "nodeName": "var2", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "bn1", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "bn2", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "bn3", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "bn4", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "batch_norm", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "abs", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "UPDATE_OPS", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "abs", "type": "Any"}, {"lineNumber": 206, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 214, "col_offset": 41, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "_decay_rate", "type": "Any"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 261, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "input_v", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "mm", "type": "Any"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 326, "col_offset": 39, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 327, "col_offset": 39, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 39, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 339, "col_offset": 39, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "input_v", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "mm3", "type": "Any"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 361, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 361, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 383, "col_offset": 40, "nodeName": "condition", "type": "Any"}, {"lineNumber": 386, "col_offset": 40, "nodeName": "condition", "type": "Any"}, {"lineNumber": 387, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 390, "col_offset": 41, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 396, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 417, "col_offset": 49, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "sess", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 419, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 477, "col_offset": 30, "nodeName": "inputs_shape", "type": "List[int]"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "moving_mean", "type": "Any"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "moving_variance", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 482, "col_offset": 45, "nodeName": "ones_v", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 484, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 484, "col_offset": 44, "nodeName": "ones_v", "type": "Any"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 509, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 511, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 513, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 514, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 537, "col_offset": 28, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 564, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 564, "col_offset": 38, "nodeName": "scale", "type": "Any"}, {"lineNumber": 568, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 568, "col_offset": 54, "nodeName": "scale", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 593, "col_offset": 43, "nodeName": "sess", "type": "Any"}, {"lineNumber": 593, "col_offset": 70, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 609, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 621, "col_offset": 43, "nodeName": "sess", "type": "Any"}, {"lineNumber": 621, "col_offset": 70, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 58, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "out_v", "type": "Any"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "mv", "type": "Any"}, {"lineNumber": 271, "col_offset": 40, "nodeName": "_eps", "type": "Any"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 36, "nodeName": "mv3", "type": "Any"}, {"lineNumber": 347, "col_offset": 42, "nodeName": "_eps", "type": "Any"}, {"lineNumber": 361, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 396, "col_offset": 23, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 396, "col_offset": 41, "nodeName": "UPDATE_OPS", "type": "Any"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 418, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 418, "col_offset": 49, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 419, "col_offset": 41, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 421, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 421, "col_offset": 48, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 426, "col_offset": 37, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 430, "col_offset": 43, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 484, "col_offset": 28, "nodeName": "beta", "type": "Any"}, {"lineNumber": 495, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 271, "col_offset": 40, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 347, "col_offset": 42, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 396, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 396, "col_offset": 41, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 419, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 419, "col_offset": 55, "nodeName": "_eps", "type": "Any"}, {"lineNumber": 426, "col_offset": 37, "nodeName": "layers", "type": "Any"}, {"lineNumber": 430, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "layers", "type": "Any"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "layers", "type": "Any"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 484, "col_offset": 28, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 396, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 419, "col_offset": 55, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 426, "col_offset": 37, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 426, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 435, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 37, "nodeName": "tf", "type": "Any"}]