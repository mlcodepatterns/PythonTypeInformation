[{"lineNumber": 140, "col_offset": 0, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "logging", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "logging", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "base", "type": "module"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "base", "type": "module"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "base", "type": "module"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "base", "type": "module"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 141, "col_offset": 2, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 2, "nodeName": "weight", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 174, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "connected_subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 141, "col_offset": 52, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "weight", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 175, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "custom_key", "type": "bool"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "PY3", "type": "bool"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "msg", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 6, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "builder", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "in_size", "type": "int"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 175, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "name", "type": "str"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "ModuleWithClassKeys", "type": "Type[ModuleWithClassKeys]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "ModuleWithNoInitializerKeys", "type": "Type[ModuleWithNoInitializerKeys]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "six", "type": "module"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 81, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "graph", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 111, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 142, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 150, "col_offset": 6, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "exception", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "base", "type": "module"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 175, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "self", "type": "IdentityModule"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "DifferentGraphError", "type": "Type[sonnet.python.modules.base.DifferentGraphError]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 101, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 111, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 150, "col_offset": 6, "nodeName": "base", "type": "module"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "cm", "type": "Any"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 157, "col_offset": 60, "nodeName": "in_size", "type": "int"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "in_size", "type": "int"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 166, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 171, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "base", "type": "module"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "tf", "type": "Any"}]