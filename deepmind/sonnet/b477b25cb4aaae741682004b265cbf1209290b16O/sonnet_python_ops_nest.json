[{"lineNumber": 46, "col_offset": 0, "nodeName": "_yield_flat_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "_iterable_like", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "_yield_value_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "_yield_flat_nest_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "flatten_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "_packed_iterable_nest_with_indices", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "pack_iterable_as", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "map", "type": "Any"}, {"lineNumber": 40, "col_offset": 6, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "map_up_to", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "map_structure_up_to", "type": "Any"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "assert_shallow_structure", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "assert_shallow_structure", "type": "Any"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "flatten_up_to", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "flatten_up_to", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "nest", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "nest", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "nest", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "nest", "type": "Any"}, {"lineNumber": 40, "col_offset": 6, "nodeName": "nest", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "nest", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "nest", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "nest", "type": "Any"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "n", "type": "Any"}, {"lineNumber": 175, "col_offset": 2, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "s", "type": "Any"}, {"lineNumber": 217, "col_offset": 2, "nodeName": "flat_structure", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 5, "nodeName": "is_sequence", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 75, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "instance", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 91, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "_yield_value_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 150, "col_offset": 5, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "structure", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "_yield_value_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "structure", "type": "Any"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "index", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "flatten_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "structure", "type": "Any"}, {"lineNumber": 224, "col_offset": 2, "nodeName": "_", "type": "Any"}, {"lineNumber": 224, "col_offset": 5, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 224, "col_offset": 14, "nodeName": "_packed_iterable_nest_with_indices", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 49, "nodeName": "structure", "type": "Any"}, {"lineNumber": 224, "col_offset": 60, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "_iterable_like", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "structure", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "shallow_tree", "type": "Any"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "input_leaf", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "input_tree", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "collections", "type": "module"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "instance", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 93, "col_offset": 10, "nodeName": "key", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 97, "col_offset": 10, "nodeName": "key", "type": "Any"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "n", "type": "Any"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "ni", "type": "Any"}, {"lineNumber": 122, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "seq", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 122, "col_offset": 53, "nodeName": "seq", "type": "Any"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "seq", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "structure", "type": "Any"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "index", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "new_index", "type": "Any"}, {"lineNumber": 183, "col_offset": 6, "nodeName": "index", "type": "Any"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 209, "col_offset": 10, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "is_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "structure", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 218, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 218, "col_offset": 9, "nodeName": "flat_structure", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 219, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "_yield_flat_up_to", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "shallow_branch", "type": "Any"}, {"lineNumber": 50, "col_offset": 58, "nodeName": "input_branch", "type": "Any"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "iterkeys", "type": "Callable"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "dict_", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "collections", "type": "module"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 76, "col_offset": 63, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "collections", "type": "module"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "_yield_flat_nest_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 47, "nodeName": "n", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "six", "type": "module"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "_yield_flat_nest_from_iterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "structure", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "new_index", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "child", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "_packed_iterable_nest_with_indices", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "s", "type": "Any"}, {"lineNumber": 178, "col_offset": 63, "nodeName": "flat", "type": "Any"}, {"lineNumber": 178, "col_offset": 69, "nodeName": "index", "type": "Any"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 182, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 212, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "input_leaf", "type": "Any"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "six", "type": "module"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "iterkeys", "type": "Callable"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "instance", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "instance", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "instance", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "_fields", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "Sequence", "type": "Type[Sequence[Any]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "ni", "type": "Any"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "_iterable_like", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "child", "type": "Any"}, {"lineNumber": 182, "col_offset": 6, "nodeName": "packed", "type": "List[Union[Dict[Any, Any], Any, collections.OrderedDict[Any, Any]]]"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "flat", "type": "Any"}, {"lineNumber": 222, "col_offset": 52, "nodeName": "structure", "type": "Any"}, {"lineNumber": 222, "col_offset": 63, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "six", "type": "module"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "instance", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "instance", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "collections", "type": "module"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "instance", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "args", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "instance", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "iterable", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "index", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "flat_structure", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "flat_iterable", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "f", "type": "Any"}, {"lineNumber": 82, "col_offset": 53, "nodeName": "_fields", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "six", "type": "module"}, {"lineNumber": 82, "col_offset": 53, "nodeName": "instance", "type": "Any"}]