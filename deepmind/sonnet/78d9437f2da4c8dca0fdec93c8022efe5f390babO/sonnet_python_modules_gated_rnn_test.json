[{"lineNumber": 37, "col_offset": 0, "nodeName": "_get_lstm_variable_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "_get_possible_initializer_keys", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 802, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 802, "col_offset": 37, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1151, "col_offset": 14, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1299, "col_offset": 22, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1299, "col_offset": 40, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1402, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1402, "col_offset": 42, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 51, "col_offset": 2, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 802, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 802, "col_offset": 37, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1151, "col_offset": 14, "nodeName": "test", "type": "Any"}, {"lineNumber": 1299, "col_offset": 22, "nodeName": "test", "type": "Any"}, {"lineNumber": 1299, "col_offset": 40, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1402, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 1402, "col_offset": 42, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1446, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 5, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 58, "col_offset": 5, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 73, "col_offset": 5, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "hidden_state_size", "type": "Union[Any, int]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 214, "col_offset": 56, "nodeName": "output", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "lstm_variable_names", "type": "Set[str]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "lstm_variables", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "lstm_variables_v", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "lstm_variable_v", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "lstm_variables_v", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "almost_one", "type": "Any"}, {"lineNumber": 325, "col_offset": 7, "nodeName": "almost_one", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 332, "col_offset": 7, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 396, "col_offset": 7, "nodeName": "deterministic", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "var_names", "type": "Set[str]"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "var_name", "type": "str"}, {"lineNumber": 488, "col_offset": 20, "nodeName": "var_names", "type": "Set[str]"}, {"lineNumber": 498, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 551, "col_offset": 4, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "static_output", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 632, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "expected", "type": "int"}, {"lineNumber": 644, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 645, "col_offset": 4, "nodeName": "obs", "type": "Any"}, {"lineNumber": 647, "col_offset": 4, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 648, "col_offset": 4, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "clipped", "type": "Any"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 653, "col_offset": 4, "nodeName": "cell", "type": "Any"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "obs", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "clipped", "type": "Any"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "cell", "type": "Any"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 681, "col_offset": 4, "nodeName": "cell", "type": "Any"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 710, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 724, "col_offset": 7, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 726, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 728, "col_offset": 7, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 730, "col_offset": 7, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 771, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "lstm1", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "lstm2", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "unnamed_init_state", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "named_init_state", "type": "Any"}, {"lineNumber": 802, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 816, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "expected_shape", "type": "numpy.ndarray"}, {"lineNumber": 846, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 852, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 907, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 910, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 911, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 913, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 952, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 954, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 972, "col_offset": 4, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "num_reg_losses_expected", "type": "int"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 988, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 989, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 990, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1014, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 1039, "col_offset": 4, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1041, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1042, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1045, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1067, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 1083, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1084, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1092, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1093, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1116, "col_offset": 4, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 1117, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1118, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1119, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1120, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1121, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1123, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1131, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1132, "col_offset": 4, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1145, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 1151, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1154, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1155, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1156, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1157, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 1158, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1160, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1165, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1166, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1167, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1168, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1169, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 1171, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1177, "col_offset": 4, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1181, "col_offset": 8, "nodeName": "part", "type": "str"}, {"lineNumber": 1196, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1197, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1201, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 1202, "col_offset": 4, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1203, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 1206, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1208, "col_offset": 4, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1218, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1220, "col_offset": 51, "nodeName": "output", "type": "Any"}, {"lineNumber": 1221, "col_offset": 4, "nodeName": "z", "type": "Any"}, {"lineNumber": 1222, "col_offset": 4, "nodeName": "r", "type": "Any"}, {"lineNumber": 1223, "col_offset": 4, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "h_twiddle", "type": "Any"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "state_real", "type": "Any"}, {"lineNumber": 1231, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1235, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 1235, "col_offset": 11, "nodeName": "POSSIBLE_KEYS", "type": "Set[str]"}, {"lineNumber": 1239, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1242, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1243, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 1245, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 1248, "col_offset": 4, "nodeName": "gru_variables", "type": "List[Any]"}, {"lineNumber": 1250, "col_offset": 4, "nodeName": "gru_variables_v", "type": "Any"}, {"lineNumber": 1257, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1258, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1261, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 1261, "col_offset": 11, "nodeName": "POSSIBLE_KEYS", "type": "Set[str]"}, {"lineNumber": 1265, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1268, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1269, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 1273, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 1273, "col_offset": 15, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 1278, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1279, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1282, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 1282, "col_offset": 11, "nodeName": "POSSIBLE_KEYS", "type": "Set[str]"}, {"lineNumber": 1286, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1289, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1290, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 1299, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1302, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1303, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1304, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1305, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 1306, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1308, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1313, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1314, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1315, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1316, "col_offset": 4, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 1317, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1318, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1319, "col_offset": 4, "nodeName": "state", "type": "Any"}, {"lineNumber": 1320, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1326, "col_offset": 4, "nodeName": "core_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1336, "col_offset": 8, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 1358, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1359, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1360, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1361, "col_offset": 4, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 1362, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 1363, "col_offset": 4, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1364, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1365, "col_offset": 4, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 1366, "col_offset": 7, "nodeName": "with_dropout", "type": "Any"}, {"lineNumber": 1379, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 1380, "col_offset": 4, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 1383, "col_offset": 4, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 1384, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1386, "col_offset": 63, "nodeName": "output", "type": "Any"}, {"lineNumber": 1388, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 1389, "col_offset": 4, "nodeName": "h", "type": "Any"}, {"lineNumber": 1390, "col_offset": 4, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 1393, "col_offset": 4, "nodeName": "h", "type": "Any"}, {"lineNumber": 1394, "col_offset": 4, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1396, "col_offset": 7, "nodeName": "with_dropout", "type": "Any"}, {"lineNumber": 1402, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1405, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1406, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1407, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1408, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 1409, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 1410, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTMBlockCell"}, {"lineNumber": 1413, "col_offset": 4, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1423, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1424, "col_offset": 4, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1425, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1426, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1427, "col_offset": 4, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 1428, "col_offset": 4, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 1429, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTMBlockCell"}, {"lineNumber": 1435, "col_offset": 4, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1447, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 47, "col_offset": 6, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 73, "col_offset": 10, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Set[str]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Set[str]]"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 109, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "projection_size", "type": "Any"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 131, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 133, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 134, "col_offset": 69, "nodeName": "float32", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "constant", "type": "Any"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 141, "col_offset": 7, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "next_hidden", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "next_cell", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 150, "col_offset": 7, "nodeName": "projection_size", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "gate_weights_ex", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "gate_biases_ex", "type": "Any"}, {"lineNumber": 154, "col_offset": 53, "nodeName": "output", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 156, "col_offset": 54, "nodeName": "gate_biases_ex", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 158, "col_offset": 7, "nodeName": "j", "type": "Any"}, {"lineNumber": 158, "col_offset": 10, "nodeName": "f", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "o", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 162, "col_offset": 7, "nodeName": "projection_size", "type": "Any"}, {"lineNumber": 163, "col_offset": 6, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "real_cell", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 173, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 176, "col_offset": 69, "nodeName": "float32", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "constant", "type": "Any"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 184, "col_offset": 7, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "next_hidden", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "next_cell", "type": "Any"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "w_ex", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "b_ex", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "wfd_ex", "type": "Any"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "wid_ex", "type": "Any"}, {"lineNumber": 214, "col_offset": 47, "nodeName": "wod_ex", "type": "Any"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 216, "col_offset": 43, "nodeName": "b_ex", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "i", "type": "Any"}, {"lineNumber": 218, "col_offset": 7, "nodeName": "j", "type": "Any"}, {"lineNumber": 218, "col_offset": 10, "nodeName": "f", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "o", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "real_gate", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "real_cell", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "_get_possible_initializer_keys", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 239, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "_construct_lstm", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "wrapped_lstm", "type": "Any"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "_get_lstm_variable_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 51, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "init", "type": "Any"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "lstm_variables", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "W_F_DIAG", "type": "str"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "W_I_DIAG", "type": "str"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "W_O_DIAG", "type": "str"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "lstm_with_recurrent_dropout", "type": "Callable[..., Tuple[sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper, sonnet.python.modules.gated_rnn.LSTM]]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 304, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 306, "col_offset": 54, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "train_cell", "type": "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "test_cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 320, "col_offset": 17, "nodeName": "stack", "type": "Any"}, {"lineNumber": 322, "col_offset": 41, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "almost_one", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "lstm_with_zoneout", "type": "Callable[..., Tuple[sonnet.python.modules.gated_rnn.ZoneoutWrapper, sonnet.python.modules.gated_rnn.ZoneoutWrapper]]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 370, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 371, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 372, "col_offset": 39, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "train_cell", "type": "sonnet.python.modules.gated_rnn.ZoneoutWrapper"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 376, "col_offset": 38, "nodeName": "train_cell", "type": "sonnet.python.modules.gated_rnn.ZoneoutWrapper"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "test_cell", "type": "sonnet.python.modules.gated_rnn.ZoneoutWrapper"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 385, "col_offset": 14, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 423, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 425, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 461, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 466, "col_offset": 11, "nodeName": "_get_possible_initializer_keys", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 467, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 467, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 467, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "_construct_lstm", "type": "Callable[..., Any]"}, {"lineNumber": 481, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 483, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "wrapped_lstm", "type": "Any"}, {"lineNumber": 484, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 487, "col_offset": 16, "nodeName": "_get_lstm_variable_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 487, "col_offset": 41, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 501, "col_offset": 11, "nodeName": "_get_possible_initializer_keys", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 502, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 502, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 502, "col_offset": 59, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 504, "col_offset": 13, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 508, "col_offset": 22, "nodeName": "_construct_lstm", "type": "Callable[..., Any]"}, {"lineNumber": 516, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 517, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "wrapped_lstm", "type": "Any"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 522, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 523, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 523, "col_offset": 27, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 547, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 551, "col_offset": 20, "nodeName": "unstack", "type": "Any"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 570, "col_offset": 6, "nodeName": "static_output", "type": "Any"}, {"lineNumber": 581, "col_offset": 10, "nodeName": "connect", "type": "Callable[[Any], Any]"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 583, "col_offset": 30, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 583, "col_offset": 44, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 584, "col_offset": 24, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 584, "col_offset": 36, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 587, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 594, "col_offset": 10, "nodeName": "connect", "type": "Callable[[Any], Any]"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 595, "col_offset": 16, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 595, "col_offset": 30, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 595, "col_offset": 44, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 596, "col_offset": 24, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 596, "col_offset": 36, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 604, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 608, "col_offset": 20, "nodeName": "unstack", "type": "Any"}, {"lineNumber": 608, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 610, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "static_rnn", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 613, "col_offset": 14, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 616, "col_offset": 24, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 617, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 621, "col_offset": 20, "nodeName": "stack", "type": "Any"}, {"lineNumber": 621, "col_offset": 29, "nodeName": "static_output_unpacked", "type": "Any"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 626, "col_offset": 16, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 626, "col_offset": 30, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 627, "col_offset": 24, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 627, "col_offset": 36, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 630, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 633, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 634, "col_offset": 22, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 635, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 638, "col_offset": 20, "nodeName": "use_layer_norm", "type": "Any"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 641, "col_offset": 48, "nodeName": "expected", "type": "int"}, {"lineNumber": 644, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 645, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 649, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 649, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 650, "col_offset": 14, "nodeName": "clip", "type": "Any"}, {"lineNumber": 652, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 652, "col_offset": 25, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 653, "col_offset": 23, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 654, "col_offset": 13, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 654, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 656, "col_offset": 32, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 656, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 658, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 658, "col_offset": 25, "nodeName": "clipped", "type": "Any"}, {"lineNumber": 659, "col_offset": 13, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 659, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 661, "col_offset": 32, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 661, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 662, "col_offset": 24, "nodeName": "output1", "type": "Any"}, {"lineNumber": 662, "col_offset": 33, "nodeName": "output2", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 663, "col_offset": 24, "nodeName": "hidden1", "type": "Any"}, {"lineNumber": 663, "col_offset": 33, "nodeName": "hidden2", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 664, "col_offset": 24, "nodeName": "cell1", "type": "Any"}, {"lineNumber": 664, "col_offset": 31, "nodeName": "cell2", "type": "Any"}, {"lineNumber": 667, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 668, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 672, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 672, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 673, "col_offset": 14, "nodeName": "clip", "type": "Any"}, {"lineNumber": 675, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 675, "col_offset": 25, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 676, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 676, "col_offset": 23, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 677, "col_offset": 13, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 677, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 679, "col_offset": 32, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 679, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 681, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 681, "col_offset": 23, "nodeName": "clipped", "type": "Any"}, {"lineNumber": 682, "col_offset": 13, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 682, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 683, "col_offset": 32, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 683, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 684, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 684, "col_offset": 24, "nodeName": "output1", "type": "Any"}, {"lineNumber": 684, "col_offset": 33, "nodeName": "output2", "type": "Any"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 685, "col_offset": 24, "nodeName": "hidden1", "type": "Any"}, {"lineNumber": 685, "col_offset": 33, "nodeName": "hidden2", "type": "Any"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 686, "col_offset": 24, "nodeName": "cell1", "type": "Any"}, {"lineNumber": 686, "col_offset": 31, "nodeName": "cell2", "type": "Any"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "_construct_lstm", "type": "Callable[..., Any]"}, {"lineNumber": 710, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 711, "col_offset": 22, "nodeName": "wrapped_cell", "type": "Any"}, {"lineNumber": 711, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 714, "col_offset": 21, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 714, "col_offset": 36, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 715, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 715, "col_offset": 27, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 715, "col_offset": 47, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 720, "col_offset": 7, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 720, "col_offset": 27, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 721, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 723, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 725, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 727, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 729, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 731, "col_offset": 6, "nodeName": "expected", "type": "int"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 733, "col_offset": 48, "nodeName": "expected", "type": "int"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 736, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 738, "col_offset": 28, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 752, "col_offset": 11, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 754, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 756, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 757, "col_offset": 20, "nodeName": "float32", "type": "Any"}, {"lineNumber": 757, "col_offset": 32, "nodeName": "trainable_initial_state", "type": "Any"}, {"lineNumber": 768, "col_offset": 15, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 771, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 772, "col_offset": 18, "nodeName": "init", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 773, "col_offset": 18, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 779, "col_offset": 12, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 780, "col_offset": 12, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 781, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 784, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 785, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 788, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 790, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 791, "col_offset": 25, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 792, "col_offset": 23, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 793, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 812, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 819, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 820, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 821, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 822, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 827, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 827, "col_offset": 25, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 827, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 829, "col_offset": 21, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 829, "col_offset": 32, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 831, "col_offset": 26, "nodeName": "expected_shape", "type": "numpy.ndarray"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 832, "col_offset": 26, "nodeName": "expected_shape", "type": "numpy.ndarray"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 833, "col_offset": 26, "nodeName": "expected_shape", "type": "numpy.ndarray"}, {"lineNumber": 833, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Any]"}, {"lineNumber": 846, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 852, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 859, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 860, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 864, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 871, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 876, "col_offset": 18, "nodeName": "init", "type": "Any"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "conv_key", "type": "Any"}, {"lineNumber": 877, "col_offset": 18, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 877, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 898, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Any]"}, {"lineNumber": 900, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 906, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 913, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 914, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 915, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 918, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 925, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "conv_key", "type": "Any"}, {"lineNumber": 928, "col_offset": 18, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 928, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 929, "col_offset": 10, "nodeName": "key", "type": "Any"}, {"lineNumber": 929, "col_offset": 17, "nodeName": "keys", "type": "Any"}, {"lineNumber": 947, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Any]"}, {"lineNumber": 947, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 950, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 957, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 958, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 959, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 962, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 969, "col_offset": 4, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 969, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 972, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 974, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 976, "col_offset": 6, "nodeName": "num_reg_losses_expected", "type": "int"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 977, "col_offset": 21, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 977, "col_offset": 37, "nodeName": "num_reg_losses_expected", "type": "int"}, {"lineNumber": 989, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 995, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 999, "col_offset": 13, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 1000, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1001, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1001, "col_offset": 20, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1001, "col_offset": 32, "nodeName": "trainable_initial_state", "type": "Any"}, {"lineNumber": 1012, "col_offset": 15, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 1014, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1015, "col_offset": 18, "nodeName": "init", "type": "Any"}, {"lineNumber": 1016, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1016, "col_offset": 18, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 1041, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 1047, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 1052, "col_offset": 13, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 1053, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1054, "col_offset": 20, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1054, "col_offset": 32, "nodeName": "trainable_initial_state", "type": "Any"}, {"lineNumber": 1065, "col_offset": 15, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 1067, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1068, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1068, "col_offset": 18, "nodeName": "init", "type": "Any"}, {"lineNumber": 1069, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1069, "col_offset": 18, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 1086, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 1092, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1093, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1093, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1093, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1094, "col_offset": 4, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 1094, "col_offset": 22, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1095, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1100, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1100, "col_offset": 21, "nodeName": "use_layer_norm", "type": "Any"}, {"lineNumber": 1100, "col_offset": 37, "nodeName": "use_layer_norm", "type": "Any"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1106, "col_offset": 48, "nodeName": "expected_num_variables", "type": "Any"}, {"lineNumber": 1118, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 1125, "col_offset": 11, "nodeName": "lstm_class", "type": "Any"}, {"lineNumber": 1131, "col_offset": 13, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 1132, "col_offset": 20, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1132, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1132, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 1145, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1146, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1146, "col_offset": 18, "nodeName": "init", "type": "Any"}, {"lineNumber": 1147, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1147, "col_offset": 18, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 1156, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1157, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1158, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 1158, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1159, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1159, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 1159, "col_offset": 25, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1159, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1159, "col_offset": 37, "nodeName": "state", "type": "Any"}, {"lineNumber": 1160, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1161, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1161, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1161, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 1162, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1162, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1162, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 1169, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1170, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1171, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 1171, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1172, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1172, "col_offset": 37, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1175, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1175, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1175, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 1177, "col_offset": 20, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1201, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1201, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1201, "col_offset": 45, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1202, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1202, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1202, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1203, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1203, "col_offset": 25, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 1204, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1204, "col_offset": 27, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1206, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 1206, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1207, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 1207, "col_offset": 7, "nodeName": "state", "type": "Any"}, {"lineNumber": 1207, "col_offset": 15, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1207, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1207, "col_offset": 27, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 1208, "col_offset": 20, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1212, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1214, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1218, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1218, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 1220, "col_offset": 4, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 1220, "col_offset": 14, "nodeName": "wz", "type": "Any"}, {"lineNumber": 1220, "col_offset": 18, "nodeName": "uz", "type": "Any"}, {"lineNumber": 1220, "col_offset": 22, "nodeName": "bz", "type": "Any"}, {"lineNumber": 1220, "col_offset": 26, "nodeName": "wr", "type": "Any"}, {"lineNumber": 1220, "col_offset": 30, "nodeName": "ur", "type": "Any"}, {"lineNumber": 1220, "col_offset": 34, "nodeName": "br", "type": "Any"}, {"lineNumber": 1220, "col_offset": 38, "nodeName": "wh", "type": "Any"}, {"lineNumber": 1220, "col_offset": 42, "nodeName": "uh", "type": "Any"}, {"lineNumber": 1220, "col_offset": 46, "nodeName": "bh", "type": "Any"}, {"lineNumber": 1221, "col_offset": 8, "nodeName": "sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 1222, "col_offset": 8, "nodeName": "sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 1223, "col_offset": 18, "nodeName": "r", "type": "Any"}, {"lineNumber": 1223, "col_offset": 22, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1224, "col_offset": 16, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 1228, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1228, "col_offset": 24, "nodeName": "state_real", "type": "Any"}, {"lineNumber": 1228, "col_offset": 36, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 1235, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 1237, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 1239, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 1239, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1242, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1243, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1244, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1244, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1244, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 1245, "col_offset": 11, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1249, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1249, "col_offset": 18, "nodeName": "init", "type": "Any"}, {"lineNumber": 1250, "col_offset": 22, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1250, "col_offset": 36, "nodeName": "gru_variables", "type": "List[Any]"}, {"lineNumber": 1251, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 1251, "col_offset": 11, "nodeName": "gru_variable_v", "type": "Any"}, {"lineNumber": 1251, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1251, "col_offset": 39, "nodeName": "gru_variables_v", "type": "Any"}, {"lineNumber": 1255, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 1261, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 1263, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 1265, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 1265, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1268, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1269, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1270, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1270, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1270, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 1282, "col_offset": 11, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 1284, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 1284, "col_offset": 13, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 1286, "col_offset": 10, "nodeName": "GRU", "type": "Type[sonnet.python.modules.gated_rnn.GRU]"}, {"lineNumber": 1286, "col_offset": 18, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1289, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1291, "col_offset": 4, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1291, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1291, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1304, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1305, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1306, "col_offset": 11, "nodeName": "HighwayCore", "type": "Type[sonnet.python.modules.gated_rnn.HighwayCore]"}, {"lineNumber": 1306, "col_offset": 27, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1307, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1307, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 1307, "col_offset": 25, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1307, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1307, "col_offset": 38, "nodeName": "state", "type": "Any"}, {"lineNumber": 1308, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1309, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1309, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1309, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 1310, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1310, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1310, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 1318, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1319, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1320, "col_offset": 11, "nodeName": "HighwayCore", "type": "Type[sonnet.python.modules.gated_rnn.HighwayCore]"}, {"lineNumber": 1320, "col_offset": 27, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1320, "col_offset": 40, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 1321, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1321, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1321, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1324, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1324, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1324, "col_offset": 17, "nodeName": "state", "type": "Any"}, {"lineNumber": 1326, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1327, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1330, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1333, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1336, "col_offset": 23, "nodeName": "xrange", "type": "Type[range]"}, {"lineNumber": 1336, "col_offset": 30, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 1337, "col_offset": 6, "nodeName": "layer_str", "type": "str"}, {"lineNumber": 1362, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1362, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1362, "col_offset": 45, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1363, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1363, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1363, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1364, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1364, "col_offset": 25, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 1365, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1365, "col_offset": 27, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1369, "col_offset": 6, "nodeName": "initial_state", "type": "Tuple[Any, List[None]]"}, {"lineNumber": 1371, "col_offset": 6, "nodeName": "core_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1373, "col_offset": 6, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1375, "col_offset": 6, "nodeName": "core_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1382, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1384, "col_offset": 13, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 1384, "col_offset": 27, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 1386, "col_offset": 4, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 1386, "col_offset": 14, "nodeName": "wt", "type": "Any"}, {"lineNumber": 1386, "col_offset": 18, "nodeName": "wh", "type": "Any"}, {"lineNumber": 1386, "col_offset": 22, "nodeName": "wt0", "type": "Any"}, {"lineNumber": 1386, "col_offset": 27, "nodeName": "bt0", "type": "Any"}, {"lineNumber": 1386, "col_offset": 32, "nodeName": "wh0", "type": "Any"}, {"lineNumber": 1386, "col_offset": 37, "nodeName": "bh0", "type": "Any"}, {"lineNumber": 1386, "col_offset": 42, "nodeName": "wt1", "type": "Any"}, {"lineNumber": 1386, "col_offset": 47, "nodeName": "bt1", "type": "Any"}, {"lineNumber": 1386, "col_offset": 52, "nodeName": "wh1", "type": "Any"}, {"lineNumber": 1386, "col_offset": 57, "nodeName": "bh1", "type": "Any"}, {"lineNumber": 1388, "col_offset": 8, "nodeName": "sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 1389, "col_offset": 8, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 1392, "col_offset": 8, "nodeName": "sigmoid", "type": "Callable[[Any], Any]"}, {"lineNumber": 1393, "col_offset": 8, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 1397, "col_offset": 6, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 1398, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1398, "col_offset": 24, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1398, "col_offset": 36, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 1407, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1408, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1409, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1410, "col_offset": 11, "nodeName": "LSTMBlockCell", "type": "Type[sonnet.python.modules.gated_rnn.LSTMBlockCell]"}, {"lineNumber": 1410, "col_offset": 29, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1411, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1411, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 1411, "col_offset": 25, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTMBlockCell"}, {"lineNumber": 1411, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1413, "col_offset": 12, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1415, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1415, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1416, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1416, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1417, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1417, "col_offset": 26, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 1417, "col_offset": 33, "nodeName": "output", "type": "Any"}, {"lineNumber": 1419, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1419, "col_offset": 21, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1419, "col_offset": 34, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 1420, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1420, "col_offset": 49, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 1426, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1427, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1428, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1429, "col_offset": 11, "nodeName": "LSTMBlockCell", "type": "Type[sonnet.python.modules.gated_rnn.LSTMBlockCell]"}, {"lineNumber": 1429, "col_offset": 29, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1430, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1430, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1430, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1433, "col_offset": 4, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTMBlockCell"}, {"lineNumber": 1433, "col_offset": 9, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1435, "col_offset": 21, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1436, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1438, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 1440, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1442, "col_offset": 4, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1447, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "max_unique_stats", "type": "Any"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 131, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 140, "col_offset": 49, "nodeName": "projection_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "next_hidden", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "next_cell", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "gate_weights_ex", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "real_hidden", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 173, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 184, "col_offset": 47, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "next_hidden", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "next_cell", "type": "Any"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 210, "col_offset": 44, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 215, "col_offset": 45, "nodeName": "prev_hidden_data", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "in_and_hid", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "w_ex", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 226, "col_offset": 37, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "next_state_ex", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 241, "col_offset": 46, "nodeName": "key", "type": "str"}, {"lineNumber": 241, "col_offset": 53, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 245, "col_offset": 53, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 246, "col_offset": 55, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 247, "col_offset": 58, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 248, "col_offset": 58, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 249, "col_offset": 58, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 250, "col_offset": 54, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 256, "col_offset": 39, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 261, "col_offset": 52, "nodeName": "name", "type": "str"}, {"lineNumber": 261, "col_offset": 60, "nodeName": "lstm_variable_names", "type": "Set[str]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "lstm_variable_v", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 302, "col_offset": 31, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 304, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 306, "col_offset": 54, "nodeName": "nn", "type": "Any"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 320, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 66, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 322, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 9, "nodeName": "train_output", "type": "Any"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "valid_output", "type": "Any"}, {"lineNumber": 323, "col_offset": 37, "nodeName": "train_hidden", "type": "Any"}, {"lineNumber": 323, "col_offset": 51, "nodeName": "train_mask", "type": "Any"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "train_out", "type": "Any"}, {"lineNumber": 326, "col_offset": 37, "nodeName": "valid_out", "type": "Any"}, {"lineNumber": 328, "col_offset": 6, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "valid_out", "type": "Any"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "valid_out", "type": "Any"}, {"lineNumber": 331, "col_offset": 34, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 334, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 334, "col_offset": 23, "nodeName": "expected_zeros", "type": "Any"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "expected_zeros", "type": "Any"}, {"lineNumber": 337, "col_offset": 6, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 339, "col_offset": 35, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 367, "col_offset": 33, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 367, "col_offset": 56, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 370, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 371, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 372, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "LSTMState", "type": "Type[sonnet.python.modules.gated_rnn.`namedtuple-LSTMState-hidden-cell`]"}, {"lineNumber": 377, "col_offset": 36, "nodeName": "train_h", "type": "Any"}, {"lineNumber": 377, "col_offset": 45, "nodeName": "train_c", "type": "Any"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 381, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 385, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 21, "nodeName": "train_output", "type": "Any"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "valid_output", "type": "Any"}, {"lineNumber": 388, "col_offset": 19, "nodeName": "train_h", "type": "Any"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "train_c", "type": "Any"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "next_train_h", "type": "Any"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "next_train_c", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 49, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 398, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 399, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 399, "col_offset": 23, "nodeName": "expected_frozen_h", "type": "Any"}, {"lineNumber": 401, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "expected_frozen_c", "type": "Any"}, {"lineNumber": 405, "col_offset": 6, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 408, "col_offset": 6, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 423, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 423, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 424, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 425, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 425, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 428, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 428, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 428, "col_offset": 45, "nodeName": "err", "type": "str"}, {"lineNumber": 429, "col_offset": 13, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 430, "col_offset": 10, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "GAMMA_H", "type": "str"}, {"lineNumber": 444, "col_offset": 9, "nodeName": "GAMMA_X", "type": "str"}, {"lineNumber": 446, "col_offset": 9, "nodeName": "GAMMA_C", "type": "str"}, {"lineNumber": 448, "col_offset": 9, "nodeName": "BETA_C", "type": "str"}, {"lineNumber": 461, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 462, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 469, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 469, "col_offset": 55, "nodeName": "key", "type": "str"}, {"lineNumber": 469, "col_offset": 62, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 473, "col_offset": 53, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 474, "col_offset": 55, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 475, "col_offset": 58, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 476, "col_offset": 58, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 477, "col_offset": 58, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 478, "col_offset": 54, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 481, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 481, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 482, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 483, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 483, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 484, "col_offset": 26, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 484, "col_offset": 39, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 504, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 504, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 504, "col_offset": 38, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 508, "col_offset": 50, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 509, "col_offset": 52, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 510, "col_offset": 55, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 511, "col_offset": 55, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 512, "col_offset": 55, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 513, "col_offset": 51, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 516, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 516, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 517, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 517, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 519, "col_offset": 39, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 522, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 522, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 524, "col_offset": 23, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 526, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 526, "col_offset": 23, "nodeName": "num_reg_losses", "type": "int"}, {"lineNumber": 547, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 548, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 551, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 556, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 557, "col_offset": 25, "nodeName": "max_unique_stats", "type": "Any"}, {"lineNumber": 558, "col_offset": 22, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 564, "col_offset": 34, "nodeName": "static_rnn", "type": "Any"}, {"lineNumber": 567, "col_offset": 10, "nodeName": "static_inputs", "type": "Any"}, {"lineNumber": 570, "col_offset": 22, "nodeName": "stack", "type": "Any"}, {"lineNumber": 570, "col_offset": 31, "nodeName": "static_output_unpacked", "type": "Any"}, {"lineNumber": 572, "col_offset": 26, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 575, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 579, "col_offset": 13, "nodeName": "static_output", "type": "Any"}, {"lineNumber": 579, "col_offset": 28, "nodeName": "dynamic_output", "type": "Any"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 582, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 583, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 588, "col_offset": 9, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 590, "col_offset": 6, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 590, "col_offset": 18, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 590, "col_offset": 32, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 590, "col_offset": 46, "nodeName": "ops", "type": "Tuple[Any, Any]"}, {"lineNumber": 591, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 591, "col_offset": 26, "nodeName": "static_out", "type": "Any"}, {"lineNumber": 591, "col_offset": 38, "nodeName": "dynamic_out", "type": "Any"}, {"lineNumber": 595, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 604, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 605, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 608, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 610, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 610, "col_offset": 32, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 616, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 619, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 621, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 623, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 626, "col_offset": 30, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 626, "col_offset": 45, "nodeName": "static_output", "type": "Any"}, {"lineNumber": 626, "col_offset": 60, "nodeName": "dynamic_output", "type": "Any"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 630, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 633, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "nn", "type": "Any"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 638, "col_offset": 20, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 641, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 644, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 645, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 645, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 645, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 648, "col_offset": 23, "nodeName": "max", "type": "Any"}, {"lineNumber": 649, "col_offset": 16, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 649, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 650, "col_offset": 14, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 652, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 654, "col_offset": 24, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 654, "col_offset": 32, "nodeName": "cell", "type": "Any"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 655, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 656, "col_offset": 14, "nodeName": "hidden1", "type": "Any"}, {"lineNumber": 656, "col_offset": 23, "nodeName": "cell1", "type": "Any"}, {"lineNumber": 656, "col_offset": 32, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 658, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 659, "col_offset": 24, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 659, "col_offset": 32, "nodeName": "cell", "type": "Any"}, {"lineNumber": 661, "col_offset": 14, "nodeName": "hidden2", "type": "Any"}, {"lineNumber": 661, "col_offset": 23, "nodeName": "cell2", "type": "Any"}, {"lineNumber": 661, "col_offset": 32, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 667, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 668, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 668, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 668, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 671, "col_offset": 23, "nodeName": "max", "type": "Any"}, {"lineNumber": 672, "col_offset": 16, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 672, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 14, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 675, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 676, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 677, "col_offset": 24, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 677, "col_offset": 32, "nodeName": "cell", "type": "Any"}, {"lineNumber": 678, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 678, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 679, "col_offset": 14, "nodeName": "hidden1", "type": "Any"}, {"lineNumber": 679, "col_offset": 23, "nodeName": "cell1", "type": "Any"}, {"lineNumber": 679, "col_offset": 32, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 681, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 682, "col_offset": 32, "nodeName": "cell", "type": "Any"}, {"lineNumber": 683, "col_offset": 14, "nodeName": "hidden2", "type": "Any"}, {"lineNumber": 683, "col_offset": 23, "nodeName": "cell2", "type": "Any"}, {"lineNumber": 683, "col_offset": 32, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 684, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 703, "col_offset": 55, "nodeName": "use_peepholes", "type": "Any"}, {"lineNumber": 704, "col_offset": 58, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 705, "col_offset": 58, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 706, "col_offset": 58, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 710, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 710, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "nn", "type": "Any"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 714, "col_offset": 36, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 716, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 716, "col_offset": 23, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 716, "col_offset": 41, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 717, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 717, "col_offset": 23, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 717, "col_offset": 41, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 718, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 718, "col_offset": 23, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 718, "col_offset": 41, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 733, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 738, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 752, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 752, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 753, "col_offset": 46, "nodeName": "max_unique_stats", "type": "Any"}, {"lineNumber": 754, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 754, "col_offset": 25, "nodeName": "rand", "type": "Any"}, {"lineNumber": 754, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 754, "col_offset": 52, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 755, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 756, "col_offset": 20, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 757, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 759, "col_offset": 18, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 761, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 765, "col_offset": 13, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "loss_fn", "type": "Callable[[], Any]"}, {"lineNumber": 771, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 772, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 779, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 779, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 780, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 780, "col_offset": 33, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "lstm1", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "lstm1", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 785, "col_offset": 4, "nodeName": "lstm2", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 788, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 789, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 790, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 791, "col_offset": 25, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 792, "col_offset": 23, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 816, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 816, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 817, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 817, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 819, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 819, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 819, "col_offset": 45, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 820, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 820, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 820, "col_offset": 50, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 821, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 821, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 821, "col_offset": 48, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 826, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 827, "col_offset": 39, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 827, "col_offset": 52, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 829, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 831, "col_offset": 42, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 832, "col_offset": 42, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "Conv2DLSTM", "type": "Type[sonnet.python.modules.gated_rnn.Conv2DLSTM]"}, {"lineNumber": 848, "col_offset": 13, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 848, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 856, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 856, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 857, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 857, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 859, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 859, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 859, "col_offset": 45, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 860, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 860, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 860, "col_offset": 50, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 861, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 861, "col_offset": 48, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 866, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 868, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 869, "col_offset": 30, "nodeName": "legacy_bias_behaviour", "type": "Any"}, {"lineNumber": 870, "col_offset": 21, "nodeName": "initializers", "type": "Dict[Any, Any]"}, {"lineNumber": 871, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 871, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 877, "col_offset": 33, "nodeName": "convolutions", "type": "Any"}, {"lineNumber": 878, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 878, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 878, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 878, "col_offset": 30, "nodeName": "keys", "type": "Any"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "variable", "type": "Any"}, {"lineNumber": 898, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 899, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "Conv2DLSTM", "type": "Type[sonnet.python.modules.gated_rnn.Conv2DLSTM]"}, {"lineNumber": 902, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 902, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 902, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 910, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 910, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 911, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 911, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 913, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 913, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 913, "col_offset": 45, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 914, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 914, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 914, "col_offset": 50, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 915, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 915, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 915, "col_offset": 48, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 920, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 922, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 923, "col_offset": 30, "nodeName": "legacy_bias_behaviour", "type": "Any"}, {"lineNumber": 924, "col_offset": 21, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 925, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 925, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 928, "col_offset": 33, "nodeName": "convolutions", "type": "Any"}, {"lineNumber": 947, "col_offset": 11, "nodeName": "Conv2DLSTM", "type": "Type[sonnet.python.modules.gated_rnn.Conv2DLSTM]"}, {"lineNumber": 954, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 954, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 955, "col_offset": 19, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 955, "col_offset": 39, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 957, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 957, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 957, "col_offset": 45, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 958, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 958, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 958, "col_offset": 50, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 959, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 959, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 959, "col_offset": 48, "nodeName": "output_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 964, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 966, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 967, "col_offset": 30, "nodeName": "legacy_bias_behaviour", "type": "Any"}, {"lineNumber": 969, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 969, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 972, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 972, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 973, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 973, "col_offset": 34, "nodeName": "convolutions", "type": "Any"}, {"lineNumber": 973, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 973, "col_offset": 59, "nodeName": "keys", "type": "Any"}, {"lineNumber": 974, "col_offset": 24, "nodeName": "legacy_bias_behaviour", "type": "Any"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 993, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 993, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 997, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 999, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 999, "col_offset": 46, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 999, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1000, "col_offset": 20, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1001, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1004, "col_offset": 18, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 1004, "col_offset": 36, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1005, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1010, "col_offset": 13, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 1013, "col_offset": 8, "nodeName": "loss_fn", "type": "Callable[[], Any]"}, {"lineNumber": 1014, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1016, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1045, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1045, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1049, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1050, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1051, "col_offset": 13, "nodeName": "rate", "type": "Any"}, {"lineNumber": 1052, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1052, "col_offset": 46, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1052, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1053, "col_offset": 20, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1054, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1057, "col_offset": 18, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 1057, "col_offset": 36, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1058, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1063, "col_offset": 13, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 1066, "col_offset": 8, "nodeName": "loss_fn", "type": "Callable[[], Any]"}, {"lineNumber": 1067, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1068, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1069, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1084, "col_offset": 25, "nodeName": "dim", "type": "Any"}, {"lineNumber": 1087, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1090, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1091, "col_offset": 23, "nodeName": "use_layer_norm", "type": "Any"}, {"lineNumber": 1092, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1092, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1093, "col_offset": 20, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1093, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1094, "col_offset": 4, "nodeName": "nn", "type": "Any"}, {"lineNumber": 1097, "col_offset": 36, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1098, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1100, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1100, "col_offset": 37, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1106, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1123, "col_offset": 34, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1123, "col_offset": 49, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1127, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1128, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1129, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1131, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1131, "col_offset": 46, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1131, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1132, "col_offset": 20, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1132, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1135, "col_offset": 18, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 1135, "col_offset": 36, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1136, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1141, "col_offset": 13, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 1144, "col_offset": 8, "nodeName": "loss_fn", "type": "Callable[[], Any]"}, {"lineNumber": 1145, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1146, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1147, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1156, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1156, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1157, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1157, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1158, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1160, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1160, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1160, "col_offset": 36, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1161, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1162, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1169, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1169, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1170, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1170, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1171, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1171, "col_offset": 36, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1172, "col_offset": 21, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1173, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1173, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1174, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1177, "col_offset": 20, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1178, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1178, "col_offset": 25, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1180, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 1180, "col_offset": 30, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1182, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1184, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1187, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1201, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1202, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1203, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1204, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1206, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1208, "col_offset": 20, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1210, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 1210, "col_offset": 30, "nodeName": "gru_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1212, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1212, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1214, "col_offset": 15, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1214, "col_offset": 32, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1214, "col_offset": 49, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1215, "col_offset": 8, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1215, "col_offset": 25, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1215, "col_offset": 42, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1215, "col_offset": 59, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1216, "col_offset": 8, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1216, "col_offset": 25, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1218, "col_offset": 13, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1221, "col_offset": 66, "nodeName": "bz", "type": "Any"}, {"lineNumber": 1222, "col_offset": 66, "nodeName": "br", "type": "Any"}, {"lineNumber": 1224, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1224, "col_offset": 74, "nodeName": "bh", "type": "Any"}, {"lineNumber": 1226, "col_offset": 27, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1226, "col_offset": 40, "nodeName": "z", "type": "Any"}, {"lineNumber": 1226, "col_offset": 44, "nodeName": "h_twiddle", "type": "Any"}, {"lineNumber": 1228, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1235, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 1237, "col_offset": 13, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1237, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 1239, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1239, "col_offset": 44, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1242, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1242, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1243, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1243, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1245, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1248, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1248, "col_offset": 29, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1248, "col_offset": 49, "nodeName": "key", "type": "str"}, {"lineNumber": 1248, "col_offset": 56, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 1249, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1250, "col_offset": 22, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1252, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1252, "col_offset": 26, "nodeName": "gru_variable_v", "type": "Any"}, {"lineNumber": 1255, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1256, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 1261, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 1263, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 1263, "col_offset": 55, "nodeName": "key", "type": "str"}, {"lineNumber": 1263, "col_offset": 62, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 1265, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1265, "col_offset": 44, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 1268, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1268, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1269, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1269, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1274, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1275, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 1282, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 1284, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 1284, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 1284, "col_offset": 38, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 1286, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1286, "col_offset": 44, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1289, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1289, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1290, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1290, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1294, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1295, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1295, "col_offset": 25, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 1304, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1304, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1305, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1305, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1306, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 1308, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1308, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1308, "col_offset": 36, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1309, "col_offset": 4, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1310, "col_offset": 4, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1318, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1318, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1319, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1319, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1320, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 1320, "col_offset": 57, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1321, "col_offset": 4, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1321, "col_offset": 21, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1322, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1322, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1323, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1326, "col_offset": 21, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1327, "col_offset": 4, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1327, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1327, "col_offset": 25, "nodeName": "core_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1329, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 1329, "col_offset": 30, "nodeName": "core_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1330, "col_offset": 4, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1331, "col_offset": 8, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1332, "col_offset": 8, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1333, "col_offset": 4, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1335, "col_offset": 8, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1337, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1337, "col_offset": 22, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 1338, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1341, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1344, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1347, "col_offset": 6, "nodeName": "assertShapeEqual", "type": "Any"}, {"lineNumber": 1362, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1363, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 1364, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1365, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1367, "col_offset": 24, "nodeName": "highway_core_with_recurrent_dropout", "type": "Callable[..., Tuple[sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper, sonnet.python.modules.gated_rnn.HighwayCore]]"}, {"lineNumber": 1368, "col_offset": 10, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1368, "col_offset": 23, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 1369, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, List[None]]]"}, {"lineNumber": 1369, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1370, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1370, "col_offset": 9, "nodeName": "state", "type": "Any"}, {"lineNumber": 1370, "col_offset": 17, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper"}, {"lineNumber": 1370, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1371, "col_offset": 23, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1373, "col_offset": 13, "nodeName": "HighwayCore", "type": "Type[sonnet.python.modules.gated_rnn.HighwayCore]"}, {"lineNumber": 1373, "col_offset": 29, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1373, "col_offset": 42, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 1374, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1374, "col_offset": 9, "nodeName": "state", "type": "Any"}, {"lineNumber": 1374, "col_offset": 17, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1374, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1374, "col_offset": 30, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 1375, "col_offset": 23, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1377, "col_offset": 21, "nodeName": "param", "type": "Any"}, {"lineNumber": 1377, "col_offset": 30, "nodeName": "core_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1382, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1382, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1383, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 1384, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 1388, "col_offset": 67, "nodeName": "bt0", "type": "Any"}, {"lineNumber": 1389, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1389, "col_offset": 67, "nodeName": "bh0", "type": "Any"}, {"lineNumber": 1390, "col_offset": 27, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1390, "col_offset": 40, "nodeName": "t", "type": "Any"}, {"lineNumber": 1390, "col_offset": 44, "nodeName": "h", "type": "Any"}, {"lineNumber": 1392, "col_offset": 42, "nodeName": "bt1", "type": "Any"}, {"lineNumber": 1393, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1393, "col_offset": 42, "nodeName": "bh1", "type": "Any"}, {"lineNumber": 1394, "col_offset": 27, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1394, "col_offset": 40, "nodeName": "t", "type": "Any"}, {"lineNumber": 1394, "col_offset": 44, "nodeName": "h", "type": "Any"}, {"lineNumber": 1397, "col_offset": 17, "nodeName": "state_ex", "type": "Any"}, {"lineNumber": 1398, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1407, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1407, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1408, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1408, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1409, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1409, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1410, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 1411, "col_offset": 39, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 1411, "col_offset": 52, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 1413, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 1413, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1413, "col_offset": 36, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1415, "col_offset": 4, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1415, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 1416, "col_offset": 4, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1416, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 1417, "col_offset": 4, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1419, "col_offset": 4, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1419, "col_offset": 34, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTMBlockCell"}, {"lineNumber": 1420, "col_offset": 4, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1420, "col_offset": 22, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1420, "col_offset": 35, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1420, "col_offset": 49, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTMBlockCell"}, {"lineNumber": 1426, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1426, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1427, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1427, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1428, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1428, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1429, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 1429, "col_offset": 47, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 1430, "col_offset": 4, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1430, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTMBlockCell"}, {"lineNumber": 1431, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1431, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1432, "col_offset": 6, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 1433, "col_offset": 18, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 1433, "col_offset": 31, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 1435, "col_offset": 21, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTMBlockCell"}, {"lineNumber": 1436, "col_offset": 4, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1436, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1436, "col_offset": 25, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1438, "col_offset": 27, "nodeName": "param", "type": "Any"}, {"lineNumber": 1438, "col_offset": 36, "nodeName": "lstm_variables", "type": "Tuple[Any, ...]"}, {"lineNumber": 1440, "col_offset": 4, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1440, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1441, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1442, "col_offset": 4, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1442, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1443, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1447, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 87, "col_offset": 63, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 102, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 103, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 104, "col_offset": 63, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "hidden_state_size", "type": "Union[int, Any]"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 51, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "j", "type": "Any"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "real_cell", "type": "Any"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "exp", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 174, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 175, "col_offset": 39, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 176, "col_offset": 49, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 210, "col_offset": 54, "nodeName": "W_F_DIAG", "type": "str"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "W_I_DIAG", "type": "str"}, {"lineNumber": 211, "col_offset": 55, "nodeName": "W_O_DIAG", "type": "str"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 68, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 222, "col_offset": 76, "nodeName": "j", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "exp", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 253, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 254, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 254, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 255, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 255, "col_offset": 63, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 261, "col_offset": 42, "nodeName": "name", "type": "str"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "snt", "type": "module"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 274, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "stack", "type": "Any"}, {"lineNumber": 306, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Tuple[Any, List[None]]]"}, {"lineNumber": 309, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 309, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "float32", "type": "Any"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 326, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 333, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "train_out", "type": "Any"}, {"lineNumber": 333, "col_offset": 40, "nodeName": "train_out", "type": "Any"}, {"lineNumber": 334, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 39, "nodeName": "sum", "type": "Any"}, {"lineNumber": 335, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 335, "col_offset": 39, "nodeName": "sum", "type": "Any"}, {"lineNumber": 337, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "max", "type": "Any"}, {"lineNumber": 369, "col_offset": 17, "nodeName": "stack", "type": "Any"}, {"lineNumber": 372, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 381, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 394, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 53, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 397, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 397, "col_offset": 48, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 398, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 401, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 405, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 406, "col_offset": 10, "nodeName": "max", "type": "Any"}, {"lineNumber": 408, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 409, "col_offset": 10, "nodeName": "max", "type": "Any"}, {"lineNumber": 423, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 423, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 423, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 424, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 424, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 424, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 425, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 425, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 425, "col_offset": 63, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 428, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 429, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 431, "col_offset": 27, "nodeName": "use_batch_norm_h", "type": "Any"}, {"lineNumber": 432, "col_offset": 27, "nodeName": "use_batch_norm_x", "type": "Any"}, {"lineNumber": 433, "col_offset": 27, "nodeName": "use_batch_norm_c", "type": "Any"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "prev_cell", "type": "Any"}, {"lineNumber": 434, "col_offset": 31, "nodeName": "prev_hidden", "type": "Any"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 444, "col_offset": 9, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 446, "col_offset": 9, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 448, "col_offset": 9, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 450, "col_offset": 35, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "BatchNormLSTM", "type": "Type[sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 462, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 469, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 481, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 481, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 481, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 482, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 482, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 482, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 483, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 483, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 483, "col_offset": 63, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 489, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 504, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 516, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 516, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 516, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 517, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 517, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 517, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 518, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 518, "col_offset": 63, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 522, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 522, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 526, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 526, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 526, "col_offset": 43, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 548, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 549, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 549, "col_offset": 27, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 549, "col_offset": 36, "nodeName": "input_size", "type": "int"}, {"lineNumber": 564, "col_offset": 34, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 565, "col_offset": 10, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 570, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 572, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 573, "col_offset": 10, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 577, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 582, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 588, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 589, "col_offset": 14, "nodeName": "connect", "type": "Callable[[Any], Any]"}, {"lineNumber": 590, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 591, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 605, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 606, "col_offset": 27, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 606, "col_offset": 36, "nodeName": "input_size", "type": "int"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 614, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 614, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 614, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 616, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 618, "col_offset": 22, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 618, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 618, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 619, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 623, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 633, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 634, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 636, "col_offset": 36, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 636, "col_offset": 55, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 636, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 641, "col_offset": 25, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 645, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 645, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 648, "col_offset": 23, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 655, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 668, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 668, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 671, "col_offset": 23, "nodeName": "unclipped", "type": "Any"}, {"lineNumber": 678, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 710, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 710, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 712, "col_offset": 36, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 712, "col_offset": 55, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 712, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 716, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 716, "col_offset": 41, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 717, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 717, "col_offset": 41, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 718, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 718, "col_offset": 41, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 733, "col_offset": 25, "nodeName": "get_variables", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 754, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 755, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 759, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 760, "col_offset": 10, "nodeName": "with_batch_norm_control", "type": "Callable[..., Any]"}, {"lineNumber": 762, "col_offset": 24, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 763, "col_offset": 16, "nodeName": "float32", "type": "Any"}, {"lineNumber": 765, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 765, "col_offset": 28, "nodeName": "square", "type": "Any"}, {"lineNumber": 768, "col_offset": 15, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 769, "col_offset": 19, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 769, "col_offset": 47, "nodeName": "loss_fn", "type": "Callable[[], Any]"}, {"lineNumber": 789, "col_offset": 6, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 793, "col_offset": 21, "nodeName": "unnamed_init_state", "type": "Any"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "unnamed_init_state", "type": "Any"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "named_init_state", "type": "Any"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "named_init_state", "type": "Any"}, {"lineNumber": 816, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 819, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 820, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 821, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 823, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 848, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 848, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 848, "col_offset": 47, "nodeName": "key", "type": "Any"}, {"lineNumber": 848, "col_offset": 54, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 848, "col_offset": 64, "nodeName": "keys", "type": "Any"}, {"lineNumber": 856, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 859, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 860, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 861, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 877, "col_offset": 33, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 882, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 882, "col_offset": 27, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 882, "col_offset": 40, "nodeName": "key", "type": "Any"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 899, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 902, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 910, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 913, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 914, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 915, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 919, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 928, "col_offset": 33, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 933, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 934, "col_offset": 25, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 947, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 954, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 957, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 958, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 959, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 963, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 968, "col_offset": 22, "nodeName": "key", "type": "Any"}, {"lineNumber": 968, "col_offset": 27, "nodeName": "l2_loss", "type": "Any"}, {"lineNumber": 972, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 972, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 973, "col_offset": 34, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 993, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 996, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 999, "col_offset": 31, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 999, "col_offset": 65, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1004, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 1007, "col_offset": 50, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1008, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1010, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1010, "col_offset": 28, "nodeName": "square", "type": "Any"}, {"lineNumber": 1010, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 1012, "col_offset": 15, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 1013, "col_offset": 19, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 1013, "col_offset": 47, "nodeName": "loss_fn", "type": "Callable[[], Any]"}, {"lineNumber": 1045, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1048, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1052, "col_offset": 31, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 1052, "col_offset": 65, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1057, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 1060, "col_offset": 50, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1061, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1063, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1063, "col_offset": 28, "nodeName": "square", "type": "Any"}, {"lineNumber": 1063, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 1065, "col_offset": 15, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 1066, "col_offset": 19, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 1066, "col_offset": 47, "nodeName": "loss_fn", "type": "Callable[[], Any]"}, {"lineNumber": 1092, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1092, "col_offset": 64, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1094, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1098, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1106, "col_offset": 25, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 1123, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1126, "col_offset": 20, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1131, "col_offset": 31, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 1131, "col_offset": 65, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1135, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 1138, "col_offset": 50, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 1139, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1141, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1141, "col_offset": 28, "nodeName": "square", "type": "Any"}, {"lineNumber": 1141, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "GradientDescentOptimizer", "type": "Any"}, {"lineNumber": 1144, "col_offset": 19, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 1144, "col_offset": 47, "nodeName": "loss_fn", "type": "Callable[[], Any]"}, {"lineNumber": 1156, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1156, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1156, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1157, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1157, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1157, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1169, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1169, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1169, "col_offset": 58, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1170, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1170, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1170, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1173, "col_offset": 9, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1173, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1174, "col_offset": 6, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1182, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1183, "col_offset": 10, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1183, "col_offset": 21, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1183, "col_offset": 35, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1184, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1185, "col_offset": 10, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1186, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1187, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1188, "col_offset": 10, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1189, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1201, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1202, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1212, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1226, "col_offset": 22, "nodeName": "z", "type": "Any"}, {"lineNumber": 1237, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1237, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 1237, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 1237, "col_offset": 54, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1237, "col_offset": 64, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 1242, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1242, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1242, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1243, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1243, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1243, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1248, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 1252, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1252, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 1256, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1263, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1268, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1268, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1268, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1269, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1269, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1269, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1274, "col_offset": 6, "nodeName": "self", "type": "GRUTest"}, {"lineNumber": 1274, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 1275, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 1284, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1289, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1289, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1289, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1290, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1290, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1290, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1294, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1294, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1304, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1304, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1304, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1305, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1305, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1305, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1318, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1318, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1318, "col_offset": 58, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1319, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1319, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1319, "col_offset": 57, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1322, "col_offset": 9, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1322, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1323, "col_offset": 6, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1327, "col_offset": 50, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 1331, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1331, "col_offset": 20, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1331, "col_offset": 32, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1332, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1332, "col_offset": 29, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1334, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1334, "col_offset": 20, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1334, "col_offset": 32, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1335, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1335, "col_offset": 29, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1338, "col_offset": 6, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1339, "col_offset": 10, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1339, "col_offset": 21, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1340, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1341, "col_offset": 6, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1342, "col_offset": 10, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1342, "col_offset": 21, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1343, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1344, "col_offset": 6, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1345, "col_offset": 10, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1346, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1347, "col_offset": 6, "nodeName": "self", "type": "HighwayCoreTest"}, {"lineNumber": 1348, "col_offset": 10, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 1349, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1362, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1363, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 1367, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 1369, "col_offset": 22, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper"}, {"lineNumber": 1369, "col_offset": 59, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1370, "col_offset": 31, "nodeName": "state_in", "type": "Any"}, {"lineNumber": 1371, "col_offset": 23, "nodeName": "test_core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1373, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1375, "col_offset": 23, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.HighwayCore"}, {"lineNumber": 1382, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1383, "col_offset": 25, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1383, "col_offset": 45, "nodeName": "name", "type": "str"}, {"lineNumber": 1383, "col_offset": 53, "nodeName": "param_names", "type": "List[str]"}, {"lineNumber": 1390, "col_offset": 22, "nodeName": "t", "type": "Any"}, {"lineNumber": 1392, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1392, "col_offset": 23, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1392, "col_offset": 35, "nodeName": "wt1", "type": "Any"}, {"lineNumber": 1393, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1393, "col_offset": 23, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1393, "col_offset": 35, "nodeName": "wh1", "type": "Any"}, {"lineNumber": 1394, "col_offset": 22, "nodeName": "t", "type": "Any"}, {"lineNumber": 1407, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1407, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1407, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1408, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1408, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1408, "col_offset": 63, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1409, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1409, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1409, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1426, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1426, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1426, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1427, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1427, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1427, "col_offset": 61, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1428, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1428, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1428, "col_offset": 63, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1431, "col_offset": 9, "nodeName": "self", "type": "LSTMBlockCellTest"}, {"lineNumber": 1431, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1432, "col_offset": 6, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTMBlockCell"}, {"lineNumber": 1440, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1440, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1441, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1441, "col_offset": 47, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1442, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1443, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1443, "col_offset": 47, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 148, "col_offset": 51, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "W_H_PROJECTION", "type": "str"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "exp", "type": "Any"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "o", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "B_GATES", "type": "str"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "W_GATES", "type": "str"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "W_F_DIAG", "type": "str"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "W_I_DIAG", "type": "str"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "W_O_DIAG", "type": "str"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 210, "col_offset": 54, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 211, "col_offset": 55, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "exp", "type": "Any"}, {"lineNumber": 222, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 266, "col_offset": 49, "nodeName": "ones", "type": "Any"}, {"lineNumber": 266, "col_offset": 57, "nodeName": "shape", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "train_cell", "type": "sonnet.python.modules.gated_rnn.RecurrentDropoutWrapper"}, {"lineNumber": 309, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "test_cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "rand", "type": "Any"}, {"lineNumber": 320, "col_offset": 42, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 320, "col_offset": 51, "nodeName": "input_size", "type": "int"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "train_out", "type": "Any"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "valid_out", "type": "Any"}, {"lineNumber": 334, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 46, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 335, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 46, "nodeName": "mask", "type": "Any"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 370, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 395, "col_offset": 28, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 398, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 398, "col_offset": 51, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 17, "nodeName": "abs", "type": "Any"}, {"lineNumber": 409, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "abs", "type": "Any"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 444, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 446, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 448, "col_offset": 9, "nodeName": "snt", "type": "module"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "self", "type": "LSTMTest"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 453, "col_offset": 14, "nodeName": "options", "type": "Dict[str, bool]"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 36, "nodeName": "lstm", "type": "Union[sonnet.python.modules.gated_rnn.BatchNormLSTM, sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 522, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 524, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 524, "col_offset": 43, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 564, "col_offset": 34, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 565, "col_offset": 10, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 565, "col_offset": 51, "nodeName": "training", "type": "bool"}, {"lineNumber": 566, "col_offset": 56, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 568, "col_offset": 24, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 568, "col_offset": 43, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 568, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 572, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 573, "col_offset": 10, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 573, "col_offset": 51, "nodeName": "training", "type": "bool"}, {"lineNumber": 574, "col_offset": 56, "nodeName": "test_local_stats", "type": "bool"}, {"lineNumber": 576, "col_offset": 24, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 576, "col_offset": 43, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 576, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 577, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 614, "col_offset": 22, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 614, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 618, "col_offset": 22, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 618, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 636, "col_offset": 36, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 636, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 641, "col_offset": 25, "nodeName": "core", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 645, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 647, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 668, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 712, "col_offset": 36, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 712, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 733, "col_offset": 25, "nodeName": "cell", "type": "Union[sonnet.python.modules.gated_rnn.LSTM, sonnet.python.modules.gated_rnn.BatchNormLSTM]"}, {"lineNumber": 754, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 759, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 760, "col_offset": 10, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 763, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 765, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 766, "col_offset": 10, "nodeName": "output", "type": "Any"}, {"lineNumber": 768, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 769, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 879, "col_offset": 15, "nodeName": "legacy_bias_behaviour", "type": "Any"}, {"lineNumber": 879, "col_offset": 41, "nodeName": "conv_key", "type": "Any"}, {"lineNumber": 879, "col_offset": 66, "nodeName": "key", "type": "Any"}, {"lineNumber": 880, "col_offset": 10, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 883, "col_offset": 28, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 883, "col_offset": 42, "nodeName": "variable", "type": "Any"}, {"lineNumber": 884, "col_offset": 28, "nodeName": "full", "type": "Any"}, {"lineNumber": 885, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 930, "col_offset": 15, "nodeName": "legacy_bias_behaviour", "type": "Any"}, {"lineNumber": 930, "col_offset": 41, "nodeName": "conv_key", "type": "Any"}, {"lineNumber": 930, "col_offset": 66, "nodeName": "key", "type": "Any"}, {"lineNumber": 931, "col_offset": 10, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 933, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 933, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 934, "col_offset": 25, "nodeName": "variables", "type": "Any"}, {"lineNumber": 968, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 968, "col_offset": 45, "nodeName": "key", "type": "Any"}, {"lineNumber": 968, "col_offset": 52, "nodeName": "keys", "type": "Any"}, {"lineNumber": 972, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1004, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1008, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1010, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1012, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 1013, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1057, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1061, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1063, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1065, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 1066, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1092, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1106, "col_offset": 25, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 1135, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1139, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1141, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 1144, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1183, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1183, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1183, "col_offset": 56, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1185, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1185, "col_offset": 22, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1185, "col_offset": 35, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1186, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1186, "col_offset": 31, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1188, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1188, "col_offset": 22, "nodeName": "input_size", "type": "int"}, {"lineNumber": 1188, "col_offset": 34, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1189, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1189, "col_offset": 31, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1194, "col_offset": 22, "nodeName": "exp", "type": "Any"}, {"lineNumber": 1221, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1221, "col_offset": 23, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 1221, "col_offset": 35, "nodeName": "wz", "type": "Any"}, {"lineNumber": 1221, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1221, "col_offset": 48, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1221, "col_offset": 60, "nodeName": "uz", "type": "Any"}, {"lineNumber": 1222, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1222, "col_offset": 23, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 1222, "col_offset": 35, "nodeName": "wr", "type": "Any"}, {"lineNumber": 1222, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1222, "col_offset": 48, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1222, "col_offset": 60, "nodeName": "ur", "type": "Any"}, {"lineNumber": 1224, "col_offset": 24, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1224, "col_offset": 31, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 1224, "col_offset": 43, "nodeName": "wh", "type": "Any"}, {"lineNumber": 1224, "col_offset": 49, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1224, "col_offset": 56, "nodeName": "reset_state", "type": "Any"}, {"lineNumber": 1224, "col_offset": 69, "nodeName": "uh", "type": "Any"}, {"lineNumber": 1252, "col_offset": 46, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1252, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1274, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1274, "col_offset": 36, "nodeName": "gru", "type": "sonnet.python.modules.gated_rnn.GRU"}, {"lineNumber": 1294, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1294, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1339, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1340, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1340, "col_offset": 31, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1342, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1343, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1343, "col_offset": 31, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1345, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1345, "col_offset": 22, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1345, "col_offset": 35, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1346, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1346, "col_offset": 31, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1348, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1348, "col_offset": 22, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1348, "col_offset": 35, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1349, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1349, "col_offset": 31, "nodeName": "param_map", "type": "Dict[Any, Any]"}, {"lineNumber": 1356, "col_offset": 22, "nodeName": "exp", "type": "Any"}, {"lineNumber": 1369, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1370, "col_offset": 41, "nodeName": "initial_state", "type": "Tuple[Any, List[None]]"}, {"lineNumber": 1383, "col_offset": 35, "nodeName": "name", "type": "str"}, {"lineNumber": 1388, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1388, "col_offset": 23, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 1388, "col_offset": 35, "nodeName": "wt", "type": "Any"}, {"lineNumber": 1388, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1388, "col_offset": 48, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1388, "col_offset": 60, "nodeName": "wt0", "type": "Any"}, {"lineNumber": 1389, "col_offset": 16, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1389, "col_offset": 23, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 1389, "col_offset": 35, "nodeName": "wh", "type": "Any"}, {"lineNumber": 1389, "col_offset": 41, "nodeName": "dot", "type": "Any"}, {"lineNumber": 1389, "col_offset": 48, "nodeName": "state_data", "type": "Any"}, {"lineNumber": 1389, "col_offset": 60, "nodeName": "wh0", "type": "Any"}, {"lineNumber": 1392, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1393, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1442, "col_offset": 42, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 1442, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 51, "nodeName": "snt", "type": "module"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "exp", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "LSTM", "type": "Type[sonnet.python.modules.gated_rnn.LSTM]"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "snt", "type": "module"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 210, "col_offset": 54, "nodeName": "snt", "type": "module"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 211, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "exp", "type": "Any"}, {"lineNumber": 266, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 57, "nodeName": "lstm_variable_v", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 337, "col_offset": 32, "nodeName": "train_out", "type": "Any"}, {"lineNumber": 337, "col_offset": 47, "nodeName": "train_out", "type": "Any"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 400, "col_offset": 52, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 402, "col_offset": 30, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 402, "col_offset": 52, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 406, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 39, "nodeName": "key", "type": "str"}, {"lineNumber": 489, "col_offset": 48, "nodeName": "var_name", "type": "str"}, {"lineNumber": 564, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 568, "col_offset": 24, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 568, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 576, "col_offset": 24, "nodeName": "cell", "type": "sonnet.python.modules.gated_rnn.BatchNormLSTM"}, {"lineNumber": 576, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 766, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 766, "col_offset": 34, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 766, "col_offset": 46, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 766, "col_offset": 58, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 768, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 880, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 880, "col_offset": 27, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 880, "col_offset": 35, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 880, "col_offset": 48, "nodeName": "key", "type": "Any"}, {"lineNumber": 883, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 884, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 884, "col_offset": 36, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 885, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 931, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 931, "col_offset": 27, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 931, "col_offset": 35, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 931, "col_offset": 48, "nodeName": "key", "type": "Any"}, {"lineNumber": 933, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 933, "col_offset": 38, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 933, "col_offset": 51, "nodeName": "key", "type": "Any"}, {"lineNumber": 968, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1012, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1065, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1143, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1194, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1194, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 1221, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1221, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1222, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1222, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1224, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 1224, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 1252, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 1252, "col_offset": 54, "nodeName": "gru_variable_v", "type": "Any"}, {"lineNumber": 1274, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 1294, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1356, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1356, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 1388, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1388, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1389, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1389, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "snt", "type": "module"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "f", "type": "Any"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "_forget_bias", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "i", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "snt", "type": "module"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "snt", "type": "module"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "snt", "type": "module"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "snt", "type": "module"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "snt", "type": "module"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 36, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "rand", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "input_size", "type": "int"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 370, "col_offset": 9, "nodeName": "rand", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 370, "col_offset": 33, "nodeName": "input_size", "type": "int"}, {"lineNumber": 406, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 406, "col_offset": 47, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 452, "col_offset": 44, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 766, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 884, "col_offset": 36, "nodeName": "variable", "type": "Any"}, {"lineNumber": 885, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 1183, "col_offset": 72, "nodeName": "part", "type": "str"}, {"lineNumber": 1186, "col_offset": 47, "nodeName": "part", "type": "str"}, {"lineNumber": 1189, "col_offset": 47, "nodeName": "part", "type": "str"}, {"lineNumber": 1340, "col_offset": 48, "nodeName": "layer_str", "type": "str"}, {"lineNumber": 1343, "col_offset": 48, "nodeName": "layer_str", "type": "str"}, {"lineNumber": 1346, "col_offset": 48, "nodeName": "layer_str", "type": "str"}, {"lineNumber": 1349, "col_offset": 48, "nodeName": "layer_str", "type": "str"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "_forget_bias", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "wfd_ex", "type": "Any"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 276, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 370, "col_offset": 9, "nodeName": "random", "type": "Any"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 409, "col_offset": 50, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 452, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 766, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "lstm", "type": "sonnet.python.modules.gated_rnn.LSTM"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "wid_ex", "type": "Any"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "prev_cell_data", "type": "Any"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 370, "col_offset": 9, "nodeName": "np", "type": "module"}]