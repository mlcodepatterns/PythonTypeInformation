[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 353, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 922, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 922, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1062, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1062, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1416, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1416, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1702, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1702, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1824, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1824, "col_offset": 48, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1881, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1881, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2193, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2193, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2591, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2591, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2946, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2946, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 353, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 922, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 922, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1062, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1062, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1416, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1416, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1419, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1420, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1421, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1422, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1423, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1424, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1425, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1426, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1427, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1435, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1436, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1437, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1438, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1439, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1702, "col_offset": 23, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1702, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 1824, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1824, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 1881, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1881, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2193, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2193, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2591, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2591, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 2946, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2946, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3092, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 311, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 353, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 391, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 404, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 619, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 845, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 855, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 866, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 891, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 904, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 913, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 922, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 937, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 937, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 987, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 997, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1007, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1008, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1031, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1032, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1037, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1038, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1039, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1046, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1047, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1062, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1071, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1072, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1073, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1075, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1089, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1099, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1112, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1122, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1133, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1135, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1135, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1136, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1151, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1175, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1189, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1211, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1243, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1254, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1255, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1281, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1294, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1295, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1323, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1325, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1342, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1343, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1367, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1368, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1392, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1393, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1394, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1396, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1397, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1416, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1425, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1425, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1425, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1425, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1425, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1429, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1429, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1429, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1429, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1435, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1436, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1436, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1437, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1437, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1438, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1439, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1439, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1462, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1463, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1491, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1501, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1559, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1595, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1618, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1619, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1620, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1622, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1623, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1656, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1665, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1679, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1686, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1687, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1702, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1717, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1718, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1719, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1743, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1744, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1745, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1770, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1771, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1772, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1796, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1797, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1798, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1800, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1801, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1803, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 1804, "col_offset": 4, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 1824, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1832, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1833, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1834, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1838, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1852, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1853, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1854, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1855, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1856, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1857, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1871, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1872, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1874, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1881, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1888, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1888, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1889, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1889, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1890, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1890, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1891, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1891, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1892, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1892, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1893, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1893, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1894, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1894, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1895, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1895, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1897, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 1898, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1899, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 1909, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1909, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1910, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1910, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1911, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1911, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1912, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1912, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1913, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1913, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1914, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1914, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1916, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1925, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1929, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1947, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1963, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1982, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2004, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2015, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2016, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2038, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2063, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2065, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2071, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2072, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2097, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2125, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2151, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2152, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2172, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2173, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2174, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2176, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2177, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2193, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2200, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2200, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2201, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2201, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2202, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2202, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2203, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2203, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2204, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2206, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2206, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2207, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2207, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2208, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2208, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2209, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2211, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2211, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2216, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2224, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2224, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2225, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2225, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2226, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2226, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2227, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2227, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2228, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2228, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2229, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2229, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2230, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2230, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2232, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2241, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2248, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2266, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2291, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2318, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2342, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2354, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2356, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2382, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2395, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2396, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2426, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2429, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2448, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2479, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2508, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2509, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2526, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2527, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2528, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2538, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2539, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2540, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2567, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2568, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2569, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2571, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2572, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2591, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2599, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2600, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2601, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2602, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2603, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2604, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2605, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2606, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2607, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2621, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2631, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2642, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2643, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2643, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2643, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2644, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2644, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2645, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2645, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2645, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2660, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2714, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2727, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2747, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2758, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2759, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 2790, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2791, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2837, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2839, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2857, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2895, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2896, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2922, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2923, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2924, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2926, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2927, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2946, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2953, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2954, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2955, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2956, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2957, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2958, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2959, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2960, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2961, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2962, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2963, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2964, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2965, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 2965, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2970, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 2979, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 3002, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3012, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3018, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3027, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3028, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3038, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3039, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3079, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3080, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3081, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3085, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3086, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3087, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3093, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 266, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 271, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 331, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 345, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 347, "col_offset": 6, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 348, "col_offset": 6, "nodeName": "out3", "type": "Any"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 365, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 381, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 420, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 453, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 542, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 543, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 544, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 574, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 588, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 588, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 599, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 599, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 617, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 617, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 618, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 636, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 637, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 642, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 643, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 665, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 666, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 669, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 670, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 693, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 693, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 694, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 694, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 696, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 696, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 697, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 708, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 730, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 753, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 754, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 759, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 760, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 769, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 773, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 774, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 776, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 776, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 777, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 777, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 778, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 778, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 779, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 779, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 781, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 782, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 785, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 788, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 792, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 792, "col_offset": 42, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 793, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 794, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 800, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 808, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 814, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 815, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 815, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 822, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 822, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 823, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 823, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 833, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 836, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 844, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 844, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 845, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 855, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 857, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 865, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 865, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 866, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 874, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 877, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 887, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 891, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 900, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 904, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 913, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 916, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 930, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 932, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 937, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 937, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 939, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 939, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 939, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 939, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 940, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 942, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 942, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 944, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 944, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 946, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 946, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 946, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 947, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 947, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 971, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 971, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 981, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 981, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 996, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 997, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 999, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1007, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1007, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1008, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1008, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1012, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1023, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1031, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1032, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1032, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1037, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1038, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1038, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1039, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1039, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1047, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1047, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1049, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1059, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1059, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1070, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1071, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1072, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1073, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1075, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1077, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1081, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1089, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1089, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1095, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1112, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1112, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1114, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1118, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1138, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1139, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1151, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1151, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1185, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1207, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1234, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1243, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1243, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1244, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1245, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1254, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1255, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1257, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1266, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1276, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1295, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1295, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1297, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1304, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1306, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1306, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1306, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1312, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1313, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1315, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1321, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1323, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1323, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1324, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1324, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1333, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1342, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1343, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1344, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1345, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1358, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1367, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1368, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1369, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1370, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1384, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1392, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1393, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1393, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1394, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1394, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1396, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1396, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1397, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1397, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1408, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1425, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1425, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1425, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1425, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1425, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1430, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1430, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1432, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1432, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1435, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1435, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1435, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1435, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1438, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1438, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1438, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1438, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1453, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1462, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1462, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1463, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1463, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 1464, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1467, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1479, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1480, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1483, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1491, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1491, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1493, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1497, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1512, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1520, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1550, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1586, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1595, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1595, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1598, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1609, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1618, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1618, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1618, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1619, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1619, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1620, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1620, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1622, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1622, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1623, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1623, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1634, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1648, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1656, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1659, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1659, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1659, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1660, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1660, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1661, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1661, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1661, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1667, "col_offset": 6, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1670, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1672, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1672, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1673, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1673, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1673, "col_offset": 34, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1687, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1687, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1689, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1697, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1699, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1699, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1699, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1709, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1717, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1718, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1720, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1722, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1724, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1726, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1728, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1728, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1728, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1735, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1743, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1744, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1746, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1748, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1750, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1752, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1754, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1754, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1754, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1761, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1770, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1771, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1773, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1775, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1777, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1779, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1781, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1781, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1781, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1789, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1796, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1797, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1797, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1798, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1798, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1800, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1800, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1801, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1801, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1803, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1804, "col_offset": 23, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1804, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 1806, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1809, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1811, "col_offset": 6, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 1812, "col_offset": 6, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 1817, "col_offset": 6, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 1818, "col_offset": 6, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 1820, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1820, "col_offset": 24, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 1820, "col_offset": 43, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 1821, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1821, "col_offset": 24, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 1821, "col_offset": 51, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 1832, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1833, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1833, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1834, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1840, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1840, "col_offset": 10, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1843, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1843, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1844, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1844, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1844, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1852, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1853, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1854, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1854, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1855, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1855, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1856, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1856, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1857, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1857, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1864, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1872, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1872, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1874, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1876, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1878, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1878, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1878, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1886, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1888, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1888, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1889, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1889, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1890, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1890, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1891, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1891, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1892, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1892, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1893, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1893, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1894, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1894, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1895, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1895, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1895, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1897, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1897, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1897, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1897, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1897, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1898, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1898, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1898, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1899, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1899, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1899, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1899, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1899, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1900, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1900, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1900, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1901, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1909, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1910, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 1911, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1912, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1913, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1914, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1916, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1916, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1918, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1925, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1925, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1927, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1927, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1928, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1928, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1938, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1939, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1941, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1947, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1947, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1952, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1961, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1962, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1975, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1977, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1979, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1996, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2004, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2004, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2005, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2006, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2015, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2016, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2018, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2025, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2035, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2051, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2052, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2054, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2061, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2063, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2063, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2064, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2064, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2072, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2072, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2074, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2080, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2082, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2082, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2082, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2089, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2097, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2098, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2103, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2104, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2117, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2125, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2126, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2129, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2130, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2143, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2151, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2152, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2153, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2154, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2168, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2172, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2173, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2173, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2174, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2174, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2176, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2176, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2177, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2177, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2188, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2198, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2200, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2200, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2201, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2201, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2202, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2202, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2203, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2203, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2204, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2204, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2204, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2204, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2204, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2206, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2206, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2207, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2207, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2208, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2208, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2209, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2209, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2209, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2211, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2211, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2211, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2212, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2212, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2212, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2212, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2214, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2214, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2214, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2214, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2216, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2216, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2216, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2224, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2225, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2226, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2227, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2228, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2229, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2230, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2232, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2232, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2234, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2241, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2241, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2243, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2244, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2246, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2257, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2258, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2260, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2266, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2266, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2272, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2282, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2288, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2305, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2308, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2311, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2333, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2342, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2342, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2343, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2344, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2354, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2355, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2356, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2357, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2365, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2379, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2396, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2396, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2398, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2405, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2407, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2407, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2407, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2413, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2414, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2416, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2424, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2426, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2426, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2427, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2427, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2428, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2428, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2438, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2448, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2449, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2454, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2455, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2470, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2479, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2480, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2483, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2484, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2499, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2508, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2509, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2510, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2511, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2528, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2528, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2529, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2538, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2539, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2541, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2542, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2544, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2563, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2567, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2568, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2568, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2569, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2569, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2571, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2571, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2572, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2572, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2584, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2585, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2599, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2600, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2601, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2602, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2603, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2604, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2605, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2606, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2607, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2609, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2610, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2613, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2621, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2621, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2623, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2627, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2647, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2648, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2652, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2660, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2660, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2677, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2678, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2689, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2691, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2707, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2710, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2737, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2747, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2747, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2748, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2758, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2759, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2760, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2768, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2778, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2791, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2791, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2793, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2800, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2802, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2802, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2802, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2807, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2812, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2825, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2826, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2828, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2835, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2837, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2837, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2838, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2838, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2848, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2857, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2870, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2871, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2886, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2895, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2896, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2898, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2899, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2914, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2922, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2923, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2923, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2924, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2924, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2926, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2926, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2927, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2927, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2938, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2951, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2953, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2954, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2955, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2956, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2957, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2958, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2959, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2960, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2961, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2962, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2963, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2964, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2965, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2965, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 2967, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2967, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2967, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2967, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2968, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2968, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2970, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2970, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2970, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2970, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2972, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2972, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2972, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2973, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2975, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2975, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2975, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2976, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2976, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2977, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2979, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2979, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2979, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2979, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 3002, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3002, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3004, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3012, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3012, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3014, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3017, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3027, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3028, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3030, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3038, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3038, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3039, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3039, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3041, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3043, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3052, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3057, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3071, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3079, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3080, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3080, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3085, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3086, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3086, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3087, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3087, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3088, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3093, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 237, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 237, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 265, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 269, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 282, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 289, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 300, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 305, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 306, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 318, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 318, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 319, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "stop_gradient", "type": "Any"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 333, "col_offset": 37, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 35, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 347, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "out3", "type": "Any"}, {"lineNumber": 350, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 350, "col_offset": 47, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 365, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 392, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 429, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 430, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 451, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 464, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 467, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 467, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 467, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 468, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 486, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 488, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 502, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 505, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 521, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 521, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 524, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 524, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 524, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 536, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 538, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 542, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 543, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 561, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 564, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 564, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 566, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 570, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 580, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 580, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 580, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 587, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 595, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 597, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 606, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 612, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 613, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 615, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 615, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 617, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 617, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 620, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 620, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 633, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 636, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 637, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 649, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 649, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 660, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 662, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 666, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 672, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 676, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 676, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 688, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 689, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 693, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 693, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 694, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 694, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 699, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 703, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 711, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 725, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 727, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 730, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 736, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 748, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 750, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 753, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 754, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 762, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 766, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 766, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 769, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 773, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 774, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 776, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 776, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 781, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 782, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 785, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 788, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 792, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 792, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 793, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 793, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 794, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 795, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 796, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 796, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 796, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 797, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 797, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 797, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 800, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 800, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 808, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 812, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 814, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 815, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 815, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 818, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 818, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 820, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 820, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 825, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 833, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 835, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 836, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 840, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 841, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 845, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 846, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 847, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 848, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 848, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 855, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 855, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 857, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 861, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 862, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 866, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 867, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 868, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 869, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 869, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 874, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 877, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 877, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 878, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 880, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 887, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 891, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 891, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 892, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 894, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 900, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 904, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 904, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 905, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 907, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 913, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 913, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 916, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 916, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 917, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 918, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 918, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 939, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 939, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 940, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 942, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 942, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 944, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 944, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 946, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 947, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 947, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 951, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 951, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 952, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 971, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 971, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 971, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 974, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 975, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 976, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 977, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 979, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 983, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 986, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 986, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 988, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 996, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 996, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 997, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 997, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 999, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1003, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1005, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1010, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1012, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1013, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1014, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1014, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1023, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1024, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1025, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1026, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1027, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1029, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1031, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1032, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1032, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1032, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1034, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1034, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1036, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1036, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1037, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1040, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1040, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1041, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1046, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1049, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1055, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1057, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1057, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1070, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1071, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1072, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1073, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1075, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1077, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1078, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1081, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1082, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1083, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1084, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1087, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1092, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1095, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1096, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1100, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1104, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1105, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1106, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1107, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1110, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1114, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1118, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1119, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1123, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1138, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1139, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1143, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1145, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1146, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1147, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1149, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1153, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1157, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1160, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1161, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1170, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1171, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1173, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1176, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1176, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1176, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1177, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1185, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1187, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1190, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1190, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1190, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1191, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1194, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1194, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1194, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1195, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1204, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1206, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1207, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1209, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1225, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1225, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 1225, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1226, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1234, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1237, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1238, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1243, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1243, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1244, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1254, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1255, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1257, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1261, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1262, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1266, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1266, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1268, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1272, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1282, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1282, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1282, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1283, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1294, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1297, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1302, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1304, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1304, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1306, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1313, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1315, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1319, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1321, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1321, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1323, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1323, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1324, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1326, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1326, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1333, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1337, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1338, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1342, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1343, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1347, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1351, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1351, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1358, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1362, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1363, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1367, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1368, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1372, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1376, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1376, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1384, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1388, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1389, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1392, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1393, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1393, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1394, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1394, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1399, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1403, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1408, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1409, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1411, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1430, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1431, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1432, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1433, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1443, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1443, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1444, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1453, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1453, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1454, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1455, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1456, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1457, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1459, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1462, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1462, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1464, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1464, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1467, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1468, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1469, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1469, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 1479, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1480, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1483, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1483, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1484, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1485, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1486, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1487, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1489, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1493, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1497, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1498, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1502, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1512, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1513, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1514, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1516, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1517, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1519, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1520, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1521, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1522, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1524, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1525, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1527, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1530, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1530, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1530, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1531, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1537, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1537, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1537, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1538, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1550, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1551, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1552, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1554, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1557, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1561, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1561, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1561, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1562, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1570, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1570, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1570, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1571, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1586, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1587, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1588, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1589, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1590, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1591, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1593, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1595, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1595, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1596, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1609, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1610, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1611, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1612, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1613, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1614, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1616, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1619, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1619, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1620, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1620, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1625, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1629, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1634, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1634, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1634, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1634, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1635, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1637, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1648, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1649, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1650, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1651, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1652, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1653, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1655, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1656, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1659, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1659, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1659, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1660, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1660, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1661, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1661, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1661, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1666, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1666, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1666, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1667, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1670, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1670, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1670, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1670, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1670, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1671, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1673, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1673, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1680, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1680, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1680, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1681, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1681, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1681, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1686, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1689, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1695, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1697, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1697, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1699, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1709, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1713, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1717, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1718, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1718, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1722, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1723, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1724, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1725, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1725, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1726, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1726, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1728, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1735, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1739, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1743, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1744, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1744, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1748, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1749, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1750, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1751, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1751, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1752, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1752, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1754, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1761, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1766, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1770, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1771, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1771, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1775, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1776, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1777, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1778, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1778, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1779, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1779, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1781, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1789, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1793, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1796, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1797, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1797, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1798, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1798, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1803, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1804, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 1806, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1807, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1809, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1810, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1810, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1811, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 1811, "col_offset": 35, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1812, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 1812, "col_offset": 36, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1815, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1815, "col_offset": 15, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 1817, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 1817, "col_offset": 43, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1818, "col_offset": 35, "nodeName": "run", "type": "Any"}, {"lineNumber": 1818, "col_offset": 44, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1820, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1821, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1832, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 1833, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1833, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1834, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1834, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1839, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1839, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1839, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1840, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1844, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1844, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1852, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1852, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1853, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1854, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1854, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1855, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1855, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1859, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1862, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1864, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1865, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1866, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1871, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1874, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1874, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1876, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1876, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1878, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 1888, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 1889, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 1890, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 1891, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 1892, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1893, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1894, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 1916, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1916, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1916, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1918, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1920, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1921, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1922, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1924, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1927, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1927, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1928, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1928, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1930, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1930, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1938, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1939, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1941, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1942, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1943, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1944, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1946, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1949, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1952, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1953, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1953, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1961, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1962, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1965, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1965, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1965, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1966, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1975, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1976, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1977, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1978, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1979, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1980, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1984, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1984, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1984, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1985, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1996, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2000, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2001, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2004, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2004, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2005, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2015, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2016, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2018, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2022, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2025, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2025, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2027, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2031, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2039, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2039, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2039, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2040, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2052, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2054, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2058, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2059, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2061, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2061, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2063, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2063, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2064, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2066, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2066, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2071, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2074, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2078, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2080, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2080, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2082, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2089, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2093, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2094, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2097, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2098, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2106, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2110, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2110, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2117, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2121, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2122, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2125, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2126, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2132, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2136, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2136, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2143, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2147, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2148, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2151, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2152, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2156, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2160, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2161, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2168, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2169, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2170, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2172, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2173, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2173, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2174, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2174, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2179, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2182, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2188, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2189, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2190, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2200, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2201, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2202, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2203, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2206, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2207, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2208, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2232, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2232, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2232, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2234, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2235, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2236, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2237, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2238, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2239, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2243, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2243, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2243, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2244, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2244, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2245, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2246, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2246, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2247, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2249, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2257, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2258, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2260, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2261, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2263, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2264, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2265, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2268, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2272, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2273, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2273, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2282, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2287, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2288, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2293, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2293, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2293, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2294, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2305, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2307, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2308, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2310, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2311, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2316, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2320, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2320, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2320, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2321, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2333, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2337, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2338, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2342, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2342, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2343, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2354, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2355, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2356, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2357, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2361, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2365, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2365, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2367, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2372, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2375, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2383, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2383, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2383, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2384, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2395, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2398, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2403, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2405, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2405, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2407, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2414, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2416, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2421, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2422, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2424, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2424, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2426, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2426, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2427, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2428, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2430, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2430, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2438, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2442, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2444, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2448, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2449, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2457, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2462, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2462, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2470, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2474, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2475, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2479, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2480, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2486, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2491, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2491, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2499, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2503, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2504, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2508, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2509, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2513, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2518, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2518, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2529, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2530, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2531, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2533, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2534, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2538, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2538, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2538, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2539, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2539, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2540, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2544, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2544, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2547, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2552, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2553, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2563, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2565, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2567, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2568, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2568, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2569, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2569, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2574, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2578, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2584, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2585, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2586, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2587, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2588, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2599, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 2600, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2601, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 2602, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2603, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 2604, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 2605, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2606, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2607, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2609, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2610, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2613, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2614, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2616, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2618, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2623, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2624, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2627, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2628, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2632, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2647, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2648, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2652, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2654, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2656, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2658, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2662, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2666, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2670, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2671, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2677, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2678, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2680, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2680, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 2681, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2682, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2689, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2691, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2695, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2695, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 2696, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2698, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2707, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2709, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2710, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2712, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2728, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2728, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 2728, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2729, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2731, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2731, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 2731, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2732, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2737, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2740, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2747, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2747, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2748, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2749, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2749, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2750, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2750, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 2758, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2759, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2760, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2765, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2768, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2768, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2770, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2774, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2783, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 2783, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2784, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2790, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2793, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2798, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2800, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2800, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2802, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2807, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2812, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2812, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2814, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2815, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2817, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2826, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2828, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2832, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2833, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2835, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2835, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2837, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2837, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2838, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2840, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2840, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2848, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2852, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2854, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2857, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2873, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2877, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2878, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2886, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2890, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2892, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2895, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2901, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2905, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2906, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2914, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2918, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2919, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2922, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2923, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2923, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2924, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2924, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2929, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2933, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2938, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2939, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2941, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2967, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2967, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2968, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2968, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2970, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2970, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2970, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2972, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2973, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2975, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2976, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2976, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2977, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2979, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2979, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2979, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2982, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2982, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2983, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3002, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3002, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3002, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 3004, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3005, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3006, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3007, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3008, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3010, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3014, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3014, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3017, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3017, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3017, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 3019, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3027, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3027, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3028, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3028, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3030, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3034, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3036, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3041, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3041, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3043, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3044, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3045, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3045, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3052, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3057, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3057, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3059, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3060, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3062, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3071, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 3072, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3073, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3074, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3075, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3077, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3079, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3080, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3080, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3080, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 3082, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3082, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 3084, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3084, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3085, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3088, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3088, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3089, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3093, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 263, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 269, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 289, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 289, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 293, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 302, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 314, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 318, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 326, "col_offset": 30, "nodeName": "getter", "type": "Any"}, {"lineNumber": 328, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 341, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 341, "col_offset": 51, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 341, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 341, "col_offset": 63, "nodeName": "g", "type": "Any"}, {"lineNumber": 341, "col_offset": 68, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 52, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 350, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 32, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 371, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 371, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 376, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 385, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 385, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 389, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 389, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 392, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 393, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 415, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 427, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 429, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 430, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 431, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 431, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 467, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 467, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 468, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 488, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 508, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 521, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 523, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 524, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 526, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 536, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 539, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 543, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 543, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 545, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 545, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 562, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 562, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 562, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 562, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 564, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 564, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 566, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 570, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 571, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 572, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 572, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 580, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 587, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 597, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 606, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 615, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 615, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 617, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 618, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 620, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 634, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 634, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 636, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 649, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 649, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 660, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 663, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 663, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 665, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 672, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 676, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 676, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 688, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 693, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 694, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 699, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 703, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 704, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 705, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 711, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 712, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 713, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 725, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 728, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 728, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 730, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 730, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 736, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 736, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 748, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 751, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 751, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 753, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 762, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 766, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 766, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 790, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 793, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 795, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 795, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 818, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 818, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 819, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 819, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 835, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 841, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 843, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 846, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 848, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 848, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 855, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 862, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 864, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 867, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 869, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 877, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 878, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 878, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 880, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 881, "col_offset": 10, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 881, "col_offset": 14, "nodeName": "exception", "type": "Any"}, {"lineNumber": 882, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 882, "col_offset": 41, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 891, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 892, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 892, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 893, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 894, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 894, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 904, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 905, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 905, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 906, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 907, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 907, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 913, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 916, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 917, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 927, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 927, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 951, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 952, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 971, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 974, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 975, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 976, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 977, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 986, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 988, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 988, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 996, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 997, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1003, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 1012, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1014, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1015, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1015, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1016, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 1016, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1024, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1025, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1026, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1027, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1032, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1034, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1034, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1035, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1035, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1040, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1041, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1046, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1057, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1057, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1079, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1079, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1079, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1084, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1093, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1093, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1093, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1097, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1097, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1097, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1100, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1101, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1107, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1116, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1116, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1120, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1120, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1120, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1123, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1124, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1140, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1147, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1153, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1157, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1158, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1160, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1161, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1162, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1162, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1162, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1176, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1176, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1177, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1190, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1190, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1191, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1194, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1194, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1195, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1212, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1212, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1214, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1225, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1225, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1226, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1227, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1237, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1240, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1241, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1244, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1244, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1244, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1246, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1246, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1246, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1247, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1247, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1261, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1264, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1264, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1264, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1264, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1266, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1266, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1268, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1272, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1273, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1274, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1274, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1277, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1282, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1283, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1286, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1287, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1294, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1304, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1304, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1313, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1321, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1321, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1323, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1324, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1326, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1337, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1340, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1340, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1342, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1342, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1347, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1351, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1351, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1362, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1365, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1365, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1367, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1367, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1372, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1376, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1376, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1388, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1392, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1393, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1394, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1399, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1403, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1404, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1405, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1408, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1411, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1412, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1413, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1431, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1433, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1443, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1444, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1465, "col_offset": 15, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1465, "col_offset": 26, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1467, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1469, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1481, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1481, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1481, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1495, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1495, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1495, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1499, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1499, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1499, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1502, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1503, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1530, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1530, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1531, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1531, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1532, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1535, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1537, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1537, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1538, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1538, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1539, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1542, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1561, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1561, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1562, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1562, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1563, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1565, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1568, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1570, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1570, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1571, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1571, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1572, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1574, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1577, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1596, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1596, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1597, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1599, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1599, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1599, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1600, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1600, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1619, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1620, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1625, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1629, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1630, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1631, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1634, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1637, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1638, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1639, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1660, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1666, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1666, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1670, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1671, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1680, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1680, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1681, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1681, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1681, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1686, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1697, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1697, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1715, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1715, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1717, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1717, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1718, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1723, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1723, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1723, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1724, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1725, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1726, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1741, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1741, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1743, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1743, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1744, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1749, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1749, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1749, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1750, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1751, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1752, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1768, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1768, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1770, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1770, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1771, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1776, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1776, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1776, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1777, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1778, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1779, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1796, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1797, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1798, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1803, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1804, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1807, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1807, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1807, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1809, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1810, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1811, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1812, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1815, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1817, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1818, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1833, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1839, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1839, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1853, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1854, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1855, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1859, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1862, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1862, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1862, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1864, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1866, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1866, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1866, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1871, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1876, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1876, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1886, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1886, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 1886, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1922, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1927, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 1928, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1930, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1930, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1939, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1942, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1943, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 1944, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1949, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1952, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1952, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1953, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1953, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1953, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1953, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1965, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1965, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1966, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1967, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1984, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1984, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1985, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1988, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2000, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2002, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2002, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2005, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2005, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2005, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2007, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2007, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2007, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2008, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2008, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2016, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2023, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2023, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2023, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 2023, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2025, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2025, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2027, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2031, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2032, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2032, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 2033, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 2036, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2036, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2039, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2040, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2044, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2052, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2061, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2061, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2063, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2064, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2066, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2071, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2080, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2080, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2093, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2095, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2095, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2097, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2097, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2106, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2110, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2110, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2121, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2123, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2123, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2125, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2125, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2132, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2136, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2136, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2147, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2149, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2149, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2151, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2151, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2156, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2160, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2161, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2169, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2172, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2173, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2174, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2179, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2182, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2182, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2182, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2188, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2190, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2190, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2190, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2198, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2198, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2198, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2238, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2249, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2249, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2258, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2261, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2263, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2264, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2268, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2272, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2272, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2273, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2273, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2273, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2273, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2293, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2293, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2294, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2297, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2320, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2320, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2321, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2326, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2337, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2339, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2340, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2343, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2343, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2343, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2345, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2345, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2345, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2346, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2346, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2356, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2362, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2363, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2363, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2363, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2363, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2365, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2365, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2367, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2372, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2373, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2373, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2374, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2375, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2376, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2376, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2377, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2380, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2380, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2383, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2384, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2389, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2395, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2405, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2405, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2414, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2424, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2424, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2426, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2427, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2428, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2430, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2442, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2445, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2446, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2448, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2448, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2457, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2462, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2462, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2474, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2476, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2477, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2479, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2479, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2486, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2491, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2491, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2503, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2505, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2506, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2508, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2508, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2513, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2518, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2518, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2533, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2535, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2536, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2538, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2539, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2540, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2540, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2544, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2547, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2552, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2552, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2567, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2568, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2569, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2574, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2578, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2578, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2578, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2584, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2585, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2588, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2588, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2588, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2611, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2611, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2611, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2611, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2611, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2615, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2615, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2615, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2616, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2625, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2625, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2625, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2625, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2625, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2629, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2629, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2629, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2629, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2630, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2632, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2633, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2649, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2655, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2655, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2655, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2656, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2662, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2666, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2667, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2670, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2671, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2672, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2672, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2672, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2672, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2672, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2680, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2680, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2681, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2682, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2695, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2695, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2696, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2698, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2715, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2715, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2717, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2728, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2728, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2729, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2730, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2731, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2731, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2732, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2733, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2740, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 2748, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2748, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2748, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2749, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2766, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2766, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2766, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 2766, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2768, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2768, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2770, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2774, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2775, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2776, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 2776, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 2779, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2783, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2784, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2790, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2800, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2800, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2812, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2812, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2814, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2817, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2818, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2819, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2826, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2835, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2835, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2837, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2838, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2840, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2852, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2855, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2855, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2857, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2857, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2858, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2873, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2877, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2878, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2890, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2893, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2893, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2895, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2895, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2896, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2901, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2905, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2906, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2918, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2922, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2923, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2924, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2929, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2933, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2934, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2935, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2938, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2941, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2942, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2943, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2951, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2951, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 2951, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2982, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2983, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3002, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3005, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 3006, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 3007, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 3008, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 3017, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 3019, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3019, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3027, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3028, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3034, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 3043, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3045, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3046, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3046, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 3047, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 3047, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3057, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3057, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3059, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3062, "col_offset": 6, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3063, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3064, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3072, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3073, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3074, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3075, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 3080, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 3082, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3082, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3083, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3083, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 3088, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3089, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 326, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 326, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 341, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 52, "nodeName": "out2", "type": "Any"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 508, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 512, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 571, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 572, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 572, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 577, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 606, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 620, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 636, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 649, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 649, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 665, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 665, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 673, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 676, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 704, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 705, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 709, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 712, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 713, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 730, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 733, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 736, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 736, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 753, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 763, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 766, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 766, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 790, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 800, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 819, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 819, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 825, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 847, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 848, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 848, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 868, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 869, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 878, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 878, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 879, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 881, "col_offset": 14, "nodeName": "cm", "type": "Any"}, {"lineNumber": 882, "col_offset": 41, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 892, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 892, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 895, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 895, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 905, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 905, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 908, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 908, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 917, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 917, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 918, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 918, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 983, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 984, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 984, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 986, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 989, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1010, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1013, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1015, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1015, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 1016, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1035, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 1035, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1092, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1096, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1102, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1119, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1125, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1154, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1158, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1212, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1212, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1214, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1216, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1244, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1246, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1269, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1273, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1274, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1274, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1277, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1278, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1279, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1286, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1313, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1326, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1342, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1342, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1348, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1351, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1351, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1367, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1367, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1373, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1376, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1376, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1400, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1404, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1405, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1408, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1409, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1409, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1412, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1413, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1431, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1431, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1462, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1464, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1468, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1469, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1498, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1504, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1596, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1596, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1596, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1597, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1599, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1626, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1630, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1631, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1634, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1635, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1635, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1638, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1639, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1660, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1670, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1717, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1717, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1723, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1723, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1723, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1743, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1743, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1749, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1749, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1749, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1770, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1770, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1776, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1776, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1776, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1807, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1807, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1807, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1860, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1862, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1862, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1864, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1865, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1865, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1866, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1866, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1928, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1930, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 1939, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1950, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1952, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1952, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1953, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2005, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2007, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2028, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2032, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2032, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2033, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2036, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2036, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2052, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2066, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2097, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2097, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2107, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2110, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2110, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2125, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2125, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2133, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2136, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2136, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2151, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2151, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2157, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2161, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2161, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2180, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2182, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2182, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2188, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2189, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2189, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2190, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2190, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2243, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2244, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2246, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2249, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2258, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2269, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2272, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2272, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2273, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2343, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2345, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2368, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2373, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2373, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2374, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2376, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2376, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2377, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2380, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2380, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2414, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2430, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2448, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2448, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2458, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2462, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2462, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2479, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2479, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2487, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2491, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2491, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2508, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2508, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2514, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2518, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2518, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2544, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2548, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2552, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2552, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2552, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2575, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2578, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2578, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2584, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2585, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2586, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2586, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2587, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2587, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2588, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2588, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2624, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2628, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2634, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2663, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2667, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2715, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2715, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 2717, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 2719, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 2743, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2744, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2748, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2771, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2775, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2776, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2776, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2779, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2780, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2781, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 2815, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2818, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2819, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2819, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2826, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2840, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2857, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2857, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2858, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2874, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2878, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2878, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2895, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2895, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2896, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2902, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2906, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2906, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2930, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2934, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2935, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2938, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2939, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2939, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2942, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2943, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3014, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3015, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3015, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3017, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3020, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3041, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3044, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 3046, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3046, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 3047, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3060, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3063, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3064, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3064, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3083, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 3083, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 393, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 424, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 427, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 427, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 427, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 567, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 568, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 571, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 572, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 582, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 606, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 636, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 647, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 649, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 665, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 674, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 676, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 701, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 730, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 733, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 734, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 736, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 753, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 763, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 764, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 766, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 790, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 800, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 825, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 847, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 847, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 848, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 868, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 868, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 869, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 893, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 894, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 894, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 895, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 906, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 906, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 907, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 907, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 908, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 918, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 983, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 984, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 984, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 986, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 988, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 989, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1010, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1013, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1015, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1092, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1096, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1101, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1115, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1116, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1116, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1119, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1124, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1154, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1155, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1158, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1158, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1158, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1158, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1269, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1270, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1273, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1274, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1278, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1289, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1313, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1342, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1348, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1349, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1351, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1367, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1373, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1374, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1376, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1400, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1401, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1409, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1431, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1431, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1433, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1464, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1468, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1469, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1494, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1498, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1503, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1626, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1627, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1635, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1717, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1743, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1770, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1860, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1861, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1865, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1930, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1950, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1951, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1952, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1952, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2028, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2029, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2032, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2033, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 2036, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2045, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2052, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2097, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2107, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2108, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2110, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2125, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2133, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2134, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2136, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2151, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2157, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2158, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2161, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2180, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2181, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2189, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2243, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2244, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2246, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2249, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2269, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2270, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2272, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2272, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2368, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2369, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2373, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2374, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2376, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2377, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2380, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2390, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2414, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2448, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2458, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2459, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2462, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2479, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2487, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2488, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2491, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2508, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2514, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2515, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2518, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2544, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 2548, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2549, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2552, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2575, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2576, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2586, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2587, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2624, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 2628, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 2633, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2663, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2664, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2667, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 2667, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2667, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2667, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2667, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2668, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2743, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2744, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2771, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2772, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2775, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2776, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 2780, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 2785, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2815, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2815, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 2815, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 2818, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2819, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2826, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2857, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2874, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2875, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2878, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2895, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2902, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2903, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2906, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2930, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2931, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2939, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3014, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3015, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 3015, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 3015, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3017, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 3019, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3020, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3041, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3044, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3046, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3060, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3060, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3060, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 3063, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3064, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 107, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 393, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 424, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 568, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 568, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 582, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 647, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 647, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 647, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 674, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 674, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 701, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 701, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 734, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 734, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 764, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 764, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 764, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 847, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 868, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 894, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 907, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 986, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 988, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1096, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1101, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1119, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1124, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1155, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1155, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1155, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1270, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1270, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1270, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1278, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1289, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1349, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1349, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1349, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1374, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1374, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1374, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1401, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1401, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1401, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1409, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1433, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1433, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1433, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1469, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1498, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1503, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1627, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1627, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1627, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1635, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1861, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1861, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1861, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1865, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1951, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1951, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1951, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2029, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2029, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2029, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2036, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2045, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2108, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2108, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2108, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2134, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2134, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2134, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2158, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2158, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2158, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2181, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2181, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2181, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2189, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2244, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2246, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2249, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2270, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2270, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2270, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2271, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2271, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2369, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2369, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2369, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2370, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2370, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2380, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2390, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2459, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2459, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2459, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2460, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2460, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2488, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2488, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2488, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2489, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2489, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2515, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2515, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2515, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2516, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2516, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2549, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2549, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2549, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2550, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2550, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2576, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2576, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2576, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2577, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2577, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2586, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2587, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2628, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2633, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2664, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2664, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2664, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2772, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2772, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2772, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2780, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2785, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2815, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2815, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2875, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2875, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2875, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2903, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2903, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2903, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2931, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2931, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2931, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2939, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3015, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3017, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3019, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 3060, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3060, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 393, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 424, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 568, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 568, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 647, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 647, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 647, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 674, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 674, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 701, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 701, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 734, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 734, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 764, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 764, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 764, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 988, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1101, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1124, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1155, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1155, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1155, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1270, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1270, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1270, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1349, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1349, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1349, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1374, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1374, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1374, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1401, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1401, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1401, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1433, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1433, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1469, "col_offset": 58, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1503, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1627, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1627, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1627, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1861, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1861, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1861, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1951, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1951, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1951, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2029, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2029, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2029, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2108, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2108, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2108, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2134, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2134, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2134, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2158, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2158, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2158, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2181, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2181, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2181, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2249, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2270, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2270, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2270, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2271, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2271, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2369, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2369, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2369, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2370, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2370, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2459, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2459, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2459, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2460, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2460, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2488, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2488, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2488, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2489, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2489, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2515, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2515, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2515, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2516, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2516, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2549, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2549, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2549, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2550, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2550, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2576, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2576, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2576, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2577, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2577, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2633, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2664, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2664, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2664, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2772, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2772, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2772, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2875, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2875, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2875, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2903, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2903, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2903, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2931, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2931, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2931, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3019, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}]