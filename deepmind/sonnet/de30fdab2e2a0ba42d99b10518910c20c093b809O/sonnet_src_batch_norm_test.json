[{"lineNumber": 31, "col_offset": 24, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 276, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "scale", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "scale", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "scale", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "scale", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "scale", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "expected1", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "expected2", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "layer", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "scale", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "test", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "test", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "layer", "type": "sonnet.src.batch_norm.BatchNorm"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "scale", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "_foo", "type": "None"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "_built", "type": "bool"}, {"lineNumber": 262, "col_offset": 7, "nodeName": "_built", "type": "bool"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "_foo", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "_foo", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "_built", "type": "bool"}, {"lineNumber": 278, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "_axis", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "_axis", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "_axis", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "_axis", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "device_types", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "fill", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "product", "type": "Callable"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "device_types", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "function", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "product", "type": "Callable"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "nditer", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "_channel_index", "type": "int"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "_channel_index", "type": "int"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "BatchNorm", "type": "Type[sonnet.src.batch_norm.BatchNorm]"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 262, "col_offset": 7, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "_foo", "type": "Any"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "_built", "type": "bool"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 278, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "fill", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "fill", "type": "Any"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "fill", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "fill", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "autograph", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "itertools", "type": "module"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "is_training", "type": "bool"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "use_batch_stats", "type": "bool"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "expected1", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 133, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "is_training", "type": "bool"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "use_batch_stats", "type": "bool"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "expected2", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "autograph", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "itertools", "type": "module"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "fill", "type": "Any"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "fill", "type": "Any"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "test", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "test", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 224, "col_offset": 6, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "BaseBatchNorm", "type": "Type[sonnet.src.batch_norm.BaseBatchNorm]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "self", "type": "BatchNormTest"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "fill", "type": "Any"}, {"lineNumber": 252, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 278, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 54, "nodeName": "scale", "type": "Any"}, {"lineNumber": 133, "col_offset": 68, "nodeName": "offset", "type": "Any"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "constant", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "is_training", "type": "bool"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "constant", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "use_batch_stats", "type": "bool"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "layer", "type": "sonnet.src.batch_norm.BaseBatchNorm"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 191, "col_offset": 65, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 224, "col_offset": 6, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "self", "type": "BaseBatchNormTest"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "layer", "type": "sonnet.src.batch_norm.BatchNorm"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 252, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "_foo", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "scale", "type": "Any"}, {"lineNumber": 44, "col_offset": 54, "nodeName": "offset", "type": "Any"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "scale", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "offset", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "scale", "type": "Any"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "offset", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "scale", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "offset", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "scale", "type": "Any"}, {"lineNumber": 171, "col_offset": 54, "nodeName": "offset", "type": "Any"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "scale", "type": "Any"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "offset", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "Ones", "type": "Type[sonnet.src.initializers.Ones]"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "TestMetric", "type": "Type[TestMetric]"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "Zeros", "type": "Type[sonnet.src.initializers.Zeros]"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "scale", "type": "Any"}, {"lineNumber": 251, "col_offset": 54, "nodeName": "offset", "type": "Any"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "self", "type": "TestMetric"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "initializers", "type": "module"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "initializers", "type": "module"}]