[{"lineNumber": 29, "col_offset": 14, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "test", "type": "Any"}, {"lineNumber": 398, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "output_sizes", "type": "List[int]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "module_name", "type": "str"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 157, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 184, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "mlp_out", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "mlp_clone_output", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "clone_variables", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "mlp_out", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "mlp_transposed_output", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "variables", "type": "Any"}, {"lineNumber": 292, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "mlp_activate_final", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "mlp_no_activate_final", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "mlp_inherit_activate_final", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "use_dropout", "type": "bool"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "correct_variable_names", "type": "Set[str]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "variable_names", "type": "List[Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "pi", "type": "float"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "mlpi", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "mlp_variables", "type": "List[Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "var_value", "type": "Any"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "mlp_name", "type": "str"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "op_names", "type": "List[Any]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "op_to_look_for", "type": "str"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "mlp_name", "type": "str"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "op_names", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "op_to_look_for", "type": "str"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "mlp_name", "type": "str"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "op_names", "type": "List[Any]"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "op_to_look_for", "type": "str"}, {"lineNumber": 399, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 145, "col_offset": 10, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 169, "col_offset": 57, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "output_sizes", "type": "List[int]"}, {"lineNumber": 188, "col_offset": 6, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 206, "col_offset": 6, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 208, "col_offset": 6, "nodeName": "mlp_clone", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 210, "col_offset": 51, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "module_name", "type": "str"}, {"lineNumber": 211, "col_offset": 39, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 218, "col_offset": 14, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "input_to_mlp", "type": "Any"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "mlp_clone", "type": "Any"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "mlp_out", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "assertNotEqual", "type": "Any"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 250, "col_offset": 51, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 255, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 267, "col_offset": 14, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "input_to_mlp", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 268, "col_offset": 42, "nodeName": "mlp_out", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 273, "col_offset": 51, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 276, "col_offset": 9, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 283, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "mlp_transposed_output", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 300, "col_offset": 33, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 301, "col_offset": 27, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 323, "col_offset": 10, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 343, "col_offset": 6, "nodeName": "variable", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "mlpi", "type": "Any"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 348, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "mlp_variables", "type": "List[Any]"}, {"lineNumber": 355, "col_offset": 10, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 356, "col_offset": 10, "nodeName": "defun", "type": "Any"}, {"lineNumber": 356, "col_offset": 33, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 362, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 365, "col_offset": 10, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 370, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 370, "col_offset": 49, "nodeName": "mlp_name", "type": "str"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 371, "col_offset": 21, "nodeName": "op_to_look_for", "type": "str"}, {"lineNumber": 371, "col_offset": 37, "nodeName": "op_names", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 377, "col_offset": 10, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 382, "col_offset": 49, "nodeName": "mlp_name", "type": "str"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "op_to_look_for", "type": "str"}, {"lineNumber": 383, "col_offset": 34, "nodeName": "op_names", "type": "List[Any]"}, {"lineNumber": 387, "col_offset": 7, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 395, "col_offset": 49, "nodeName": "mlp_name", "type": "str"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 396, "col_offset": 18, "nodeName": "op_to_look_for", "type": "str"}, {"lineNumber": 396, "col_offset": 34, "nodeName": "op_names", "type": "List[Any]"}, {"lineNumber": 399, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "fixed_size_partitioner", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "nets", "type": "module"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "nets", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "nets", "type": "module"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "module_name", "type": "str"}, {"lineNumber": 165, "col_offset": 59, "nodeName": "output_sizes", "type": "List[int]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "input_size", "type": "int"}, {"lineNumber": 169, "col_offset": 57, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 190, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "nets", "type": "module"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 192, "col_offset": 59, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 193, "col_offset": 36, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 193, "col_offset": 62, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 199, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "clone", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "module_name", "type": "str"}, {"lineNumber": 210, "col_offset": 51, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 211, "col_offset": 39, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "mlp_clone", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "mlp_clone", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "variables", "type": "Any"}, {"lineNumber": 225, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 41, "nodeName": "clone_variables", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 241, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "MLP", "type": "Any"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 250, "col_offset": 51, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 255, "col_offset": 21, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "float32", "type": "Any"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 264, "col_offset": 6, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "input_to_mlp", "type": "Any"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 272, "col_offset": 45, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 273, "col_offset": 51, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "executing_eagerly", "type": "Any"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 284, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 295, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 300, "col_offset": 33, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 27, "nodeName": "mlp_activate_final", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "mlp_no_activate_final", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 304, "col_offset": 21, "nodeName": "mlp_inherit_activate_final", "type": "Any"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "var_names_w", "type": "List[str]"}, {"lineNumber": 321, "col_offset": 47, "nodeName": "var_names_b", "type": "List[str]"}, {"lineNumber": 323, "col_offset": 10, "nodeName": "nets", "type": "module"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "module_name", "type": "str"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "output_sizes", "type": "List[int]"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "use_dropout", "type": "bool"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 330, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 330, "col_offset": 60, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 334, "col_offset": 35, "nodeName": "var", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 336, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "variable_names", "type": "List[Any]"}, {"lineNumber": 336, "col_offset": 42, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 336, "col_offset": 46, "nodeName": "correct_variable_names", "type": "Set[str]"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "getter", "type": "Any"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "pi", "type": "float"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "nets", "type": "module"}, {"lineNumber": 346, "col_offset": 57, "nodeName": "get_pi", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 9, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 352, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "var_value", "type": "Any"}, {"lineNumber": 355, "col_offset": 10, "nodeName": "nets", "type": "module"}, {"lineNumber": 356, "col_offset": 10, "nodeName": "eager", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 362, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 363, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 365, "col_offset": 10, "nodeName": "nets", "type": "module"}, {"lineNumber": 366, "col_offset": 49, "nodeName": "mlp_name", "type": "str"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "op", "type": "Any"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "op", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 374, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 375, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 377, "col_offset": 10, "nodeName": "nets", "type": "module"}, {"lineNumber": 378, "col_offset": 49, "nodeName": "mlp_name", "type": "str"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "op", "type": "Any"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "op", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 387, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 388, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "nets", "type": "module"}, {"lineNumber": 391, "col_offset": 49, "nodeName": "mlp_name", "type": "str"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "op", "type": "Any"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "op", "type": "Any"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 399, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "MLPTest", "type": "Type[MLPTest]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "layers", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "nets", "type": "module"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "output_sizes", "type": "List[int]"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "nets", "type": "module"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "nets", "type": "module"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "nets", "type": "module"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "nets", "type": "module"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "nets", "type": "module"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 158, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "variables", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "variables", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "input_size", "type": "int"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 165, "col_offset": 59, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 168, "col_offset": 9, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "l2_regularizer", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 191, "col_offset": 50, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 197, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 199, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 205, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "nets", "type": "module"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "module_name", "type": "str"}, {"lineNumber": 206, "col_offset": 61, "nodeName": "output_sizes", "type": "List[int]"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "module_name", "type": "str"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 216, "col_offset": 50, "nodeName": "input_size", "type": "int"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "mlp_out", "type": "Any"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "mlp_clone_output", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 241, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "nets", "type": "module"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 246, "col_offset": 37, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 258, "col_offset": 50, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "mlp_transposed_output", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "input_to_mlp", "type": "Any"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 284, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "variables", "type": "Any"}, {"lineNumber": 295, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "variables", "type": "Any"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 295, "col_offset": 43, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 323, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 330, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 334, "col_offset": 42, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "variable", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 347, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "layers", "type": "Any"}, {"lineNumber": 348, "col_offset": 39, "nodeName": "layers", "type": "Any"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 352, "col_offset": 6, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 352, "col_offset": 64, "nodeName": "pi", "type": "float"}, {"lineNumber": 355, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 356, "col_offset": 10, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 363, "col_offset": 6, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 365, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 369, "col_offset": 34, "nodeName": "get_operations", "type": "Any"}, {"lineNumber": 375, "col_offset": 6, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 377, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 381, "col_offset": 34, "nodeName": "get_operations", "type": "Any"}, {"lineNumber": 388, "col_offset": 6, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 390, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 392, "col_offset": 41, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 392, "col_offset": 68, "nodeName": "bool", "type": "Any"}, {"lineNumber": 394, "col_offset": 34, "nodeName": "get_operations", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 9, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "output_sizes", "type": "List[int]"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "layers", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "layers", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "layers", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 206, "col_offset": 61, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 216, "col_offset": 50, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 227, "col_offset": 32, "nodeName": "variables", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "var", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "var", "type": "Any"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "clone_variables", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 43, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 295, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 42, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "mlpi", "type": "Any"}, {"lineNumber": 348, "col_offset": 39, "nodeName": "mlpi", "type": "Any"}, {"lineNumber": 352, "col_offset": 37, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 352, "col_offset": 51, "nodeName": "var_value", "type": "Any"}, {"lineNumber": 356, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 392, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 392, "col_offset": 68, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "truncated_normal_initializer", "type": "Any"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "self", "type": "MLPTest"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "layers", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "mlp_transposed_output", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "op", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "mlp_transpose", "type": "Any"}, {"lineNumber": 284, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 293, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 34, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 381, "col_offset": 34, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 394, "col_offset": 34, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "mlp_transposed_output", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "mlp_transposed_output", "type": "Any"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 369, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 381, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 394, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 285, "col_offset": 39, "nodeName": "i", "type": "int"}]