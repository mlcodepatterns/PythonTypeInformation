[{"lineNumber": 32, "col_offset": 10, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "base", "type": "module"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "base", "type": "module"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "relu", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "_output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "_num_layers", "type": "int"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "_input_shape", "type": "None"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "possible_keys", "type": "Set[str]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "_activation", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "activation", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "_activate_final", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "_use_bias", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "_use_dropout", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "_input_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 158, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "final_index", "type": "int"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "layer_id", "type": "int"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "net", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "_layers", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "last_size", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "_use_bias", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "_use_dropout", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "_initializers", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "_partitioners", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "_regularizers", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "_activation", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "_activate_final", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "_input_shape", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "output_sizes", "type": "List[Callable[..., Any]]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "_output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "possible_keys", "type": "Set[str]"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "possible_keys", "type": "Set[str]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "possible_keys", "type": "Set[str]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "_instantiate_layers", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[..., Set[str]]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "_num_layers", "type": "int"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "xrange", "type": "Type[range]"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "_num_layers", "type": "int"}, {"lineNumber": 162, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "_output_sizes", "type": "Any"}, {"lineNumber": 196, "col_offset": 51, "nodeName": "last_size", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "_ensure_is_connected", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 251, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 252, "col_offset": 7, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 253, "col_offset": 6, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "reverse", "type": "Callable[[], None]"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "MLP", "type": "Type[MLP]"}, {"lineNumber": 278, "col_offset": 7, "nodeName": "name", "type": "Any"}, {"lineNumber": 279, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "MLP", "type": "Type[MLP]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "custom_getter", "type": "Any"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "name", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "output_sizes", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "Iterable", "type": "Type[Iterable[Any]]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "self", "type": "MLP"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "self", "type": "MLP"}, {"lineNumber": 96, "col_offset": 69, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "self", "type": "MLP"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "self", "type": "MLP"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "self", "type": "MLP"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "activation", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "self", "type": "MLP"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "_enter_variable_scope", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 143, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "self", "type": "MLP"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "self", "type": "MLP"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "net", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "_activate_final", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "_use_dropout", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "last_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "last_size", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "self", "type": "MLP"}, {"lineNumber": 254, "col_offset": 57, "nodeName": "layer", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 254, "col_offset": 66, "nodeName": "_layers", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "output_sizes", "type": "List[Callable[..., Any]]"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "output_sizes", "type": "List[Callable[..., Any]]"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "activation", "type": "Any"}, {"lineNumber": 260, "col_offset": 23, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "initializers", "type": "Dict[Any, Any]"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "partitioners", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[Any, Any]"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 281, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "output_sizes", "type": "Tuple[Any, ...]"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "activation", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "activate_final", "type": "Any"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "initializers", "type": "Dict[Any, Any]"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "partitioners", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[Any, Any]"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "use_dropout", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "MLP", "type": "Type[MLP]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "self", "type": "MLP"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "collections", "type": "module"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "self", "type": "MLP"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "basic", "type": "module"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "_layers", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "final_index", "type": "int"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "layer_id", "type": "int"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "self", "type": "MLP"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "self", "type": "MLP"}, {"lineNumber": 171, "col_offset": 10, "nodeName": "net", "type": "Any"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "_activation", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "net", "type": "Any"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "l", "type": "Any"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "l", "type": "Any"}, {"lineNumber": 184, "col_offset": 53, "nodeName": "_output_sizes", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "self", "type": "MLP"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "layer", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 254, "col_offset": 66, "nodeName": "self", "type": "MLP"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "self", "type": "MLP"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "self", "type": "MLP"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "self", "type": "MLP"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "self", "type": "MLP"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "self", "type": "MLP"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "self", "type": "MLP"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "self", "type": "MLP"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "self", "type": "MLP"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "self", "type": "MLP"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "self", "type": "MLP"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "self", "type": "MLP"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "self", "type": "MLP"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "self", "type": "MLP"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "self", "type": "MLP"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "self", "type": "MLP"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "xrange", "type": "Type[range]"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "_num_layers", "type": "int"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "MLP"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "layer_id", "type": "int"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "smart_cond", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "net", "type": "Any"}, {"lineNumber": 172, "col_offset": 14, "nodeName": "self", "type": "MLP"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "l", "type": "Any"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "l", "type": "Any"}, {"lineNumber": 184, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "l", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "self", "type": "MLP"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "utils", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "dropout_keep_prob", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "constant", "type": "Any"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "tf", "type": "Any"}]