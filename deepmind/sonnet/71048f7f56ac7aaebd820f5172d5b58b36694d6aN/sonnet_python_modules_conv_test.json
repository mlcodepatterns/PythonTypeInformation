[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 319, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 877, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 878, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1018, "col_offset": 17, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1018, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1372, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1373, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1655, "col_offset": 24, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1655, "col_offset": 61, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1712, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1713, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2025, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 2026, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2424, "col_offset": 17, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 2424, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2762, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 2763, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "test", "type": "Any"}, {"lineNumber": 190, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 191, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 319, "col_offset": 54, "nodeName": "test", "type": "Any"}, {"lineNumber": 877, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 878, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 1018, "col_offset": 17, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1018, "col_offset": 54, "nodeName": "test", "type": "Any"}, {"lineNumber": 1372, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1373, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 1376, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1377, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1378, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1379, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1380, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1381, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1382, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1383, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1384, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1392, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1393, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1394, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1395, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1396, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1655, "col_offset": 24, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1655, "col_offset": 61, "nodeName": "test", "type": "Any"}, {"lineNumber": 1712, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1713, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 2025, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 2026, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 2424, "col_offset": 17, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 2424, "col_offset": 54, "nodeName": "test", "type": "Any"}, {"lineNumber": 2762, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 2763, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 2892, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 254, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 296, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 308, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 319, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 357, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 370, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 371, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 585, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 719, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 739, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 743, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 745, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 747, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 780, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 783, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 878, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 893, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 927, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 937, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 943, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 952, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 953, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 963, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 964, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 987, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 988, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 989, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 994, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 995, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1003, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1018, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1031, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1045, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1055, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1068, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1078, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1089, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1091, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1091, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1092, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1107, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1131, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1145, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1167, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1180, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1199, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1210, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1211, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1237, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1250, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1279, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1281, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1298, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1299, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1323, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1324, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1348, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1349, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1350, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1352, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1353, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1373, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1382, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1382, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1382, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1382, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1382, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1386, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1386, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1386, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1386, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1392, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1393, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1393, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1394, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1394, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1395, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1396, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1396, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1419, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1420, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1444, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1454, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1482, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1512, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1548, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1571, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1572, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1573, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1575, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1576, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1609, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1618, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1632, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1639, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1640, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1655, "col_offset": 61, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1663, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1664, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1665, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1669, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1683, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1684, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1685, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1686, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1687, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1688, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1702, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1703, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1705, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1713, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1720, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1720, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1721, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1721, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1722, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1722, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1723, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1723, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1724, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1724, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1725, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1725, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1726, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1726, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1727, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1727, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1729, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 1730, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 1741, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1741, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1742, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1742, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1743, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1743, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1744, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1744, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1745, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1745, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1746, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1746, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1748, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1757, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1761, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1779, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1795, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1814, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1836, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1847, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1848, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 1870, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1895, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1897, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1903, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1904, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1929, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1957, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1983, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1984, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2004, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2005, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2006, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2008, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2009, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2026, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2033, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2033, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2034, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2034, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2035, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2035, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2036, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2037, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2039, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2039, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2040, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2040, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2041, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2041, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2042, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2044, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2044, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2045, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2049, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2057, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2057, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2058, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2058, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2059, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2059, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2060, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2060, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2061, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2061, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2062, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2062, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2063, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2063, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2065, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2074, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2081, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2099, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2124, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2151, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2175, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2187, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2188, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2189, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2215, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2228, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2229, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2259, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2262, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2281, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2312, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2341, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2342, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2359, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2360, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2361, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2371, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2372, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2373, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2400, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2401, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2402, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2404, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2405, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2424, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2432, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2433, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2434, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2435, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2436, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2437, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2438, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2439, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2440, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2454, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2464, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2475, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2476, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2476, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2476, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2477, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2477, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2478, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2478, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2478, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2493, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2547, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2560, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2580, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2591, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2592, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 2623, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2624, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2653, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2655, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2673, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2711, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2712, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2738, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2739, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2740, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2742, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2743, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2763, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2770, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2771, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2772, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2773, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2774, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2775, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2776, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2777, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2778, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2779, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2780, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2781, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2782, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 2782, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2787, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 2796, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 2819, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2829, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2835, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2844, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2845, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 2855, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2856, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 2879, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2880, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2881, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2885, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2886, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2887, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 2893, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose]]"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv2DTranspose, sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 227, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 229, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 240, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 247, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 259, "col_offset": 40, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 262, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 265, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 288, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 312, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 333, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 419, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 508, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 508, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 509, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 510, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 530, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 540, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 554, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 554, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 563, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 565, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 565, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 571, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 581, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 583, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 583, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 584, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 602, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 608, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 609, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 631, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 635, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 636, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 659, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 659, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 660, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 660, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 662, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 662, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 663, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 663, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 674, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 686, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 696, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 719, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 720, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 725, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 726, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 735, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 739, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 740, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 742, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 743, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 743, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 744, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 744, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 745, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 745, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 747, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 748, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 751, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 754, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 758, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 758, "col_offset": 42, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 759, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 760, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 760, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 761, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 762, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 774, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 781, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 781, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 787, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 788, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 788, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 789, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 789, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 799, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 802, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 810, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 810, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 821, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 823, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 831, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 831, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 832, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 840, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 841, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 850, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 851, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 859, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 861, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 869, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 871, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 885, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 893, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 895, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 895, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 895, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 895, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 896, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 898, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 898, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 900, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 900, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 902, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 902, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 903, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 927, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 927, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 929, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 937, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 937, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 939, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 952, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 955, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 963, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 963, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 964, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 964, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 966, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 968, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 979, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 987, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 988, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 988, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 993, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 994, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 994, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 995, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 995, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1003, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1003, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1005, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1013, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1015, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1015, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1026, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1027, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1028, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1029, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1031, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1033, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1034, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1037, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1045, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1045, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1047, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1051, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1060, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1068, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1068, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1074, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1094, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1095, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1099, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1107, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1107, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1126, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1141, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1160, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1163, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1190, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1199, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1199, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1200, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1201, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1210, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1211, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1213, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1222, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1232, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1251, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1251, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1253, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1260, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1262, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1262, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1262, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1268, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1269, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1271, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1277, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1279, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1279, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1280, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1280, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1289, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1298, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1299, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1300, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1301, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1314, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1323, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1324, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1325, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1326, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1340, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1348, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1349, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1349, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1350, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1350, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1352, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1352, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1353, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1353, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1364, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1382, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1382, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1382, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1382, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1382, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1387, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1387, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1389, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1389, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1392, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1392, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1392, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1392, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1395, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1395, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1395, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1395, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1410, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1419, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1419, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1432, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1433, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1436, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1444, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1444, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1446, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1450, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1465, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1473, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1503, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1539, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1548, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1548, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1551, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1562, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1571, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1571, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1571, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1571, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1572, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1572, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1573, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1573, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1575, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1575, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1576, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1576, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1587, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1601, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1609, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1612, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1612, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1612, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1613, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1613, "col_offset": 56, "nodeName": "stride", "type": "Tuple[Any, ...]"}, {"lineNumber": 1614, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1614, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1614, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1620, "col_offset": 6, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1623, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1625, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1625, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1626, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1626, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1626, "col_offset": 34, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1640, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1640, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1642, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1650, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1652, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1652, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1652, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1663, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1664, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1664, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1665, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1671, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1671, "col_offset": 10, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1674, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1674, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1675, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1675, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1675, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1683, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1684, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1685, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1685, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1686, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1686, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1687, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1687, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1688, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1688, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1695, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1703, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1703, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1705, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1707, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1709, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1709, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1709, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1718, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1720, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1720, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1721, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1721, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1722, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1722, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1723, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1723, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1724, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1724, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1725, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1725, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1726, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1726, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1727, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1727, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1727, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1729, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1729, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1729, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1729, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1729, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1730, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1730, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1730, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1731, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1731, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1731, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1731, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1731, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1732, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1732, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1732, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1733, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1741, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1742, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 1743, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1744, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1745, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1746, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1748, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1748, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1750, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1757, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1757, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1759, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1759, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1760, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1760, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1770, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1771, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1773, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1779, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1779, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1784, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1793, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1794, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1807, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1809, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1811, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1828, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1836, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1836, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1837, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1838, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1847, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1848, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1850, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1857, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1867, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1883, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1884, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1886, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1893, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1895, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1895, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1896, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1896, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1904, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1904, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1906, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1912, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1914, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1914, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1914, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1921, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1929, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1930, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1935, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1936, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1949, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1957, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1958, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1961, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1962, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1975, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1983, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1984, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1985, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1986, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2000, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2004, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2005, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2005, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2006, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2006, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2008, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2008, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2009, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2009, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2020, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2031, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2033, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2033, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2034, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2034, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2035, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2035, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2036, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2037, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2037, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2037, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2037, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2037, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2039, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2039, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2040, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2040, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2041, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2041, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2042, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2042, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2042, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2044, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2044, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2044, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2045, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2045, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2045, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2045, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2045, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2047, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2047, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2047, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2047, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2049, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2049, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2049, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2057, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2058, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2059, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2060, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2061, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2062, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2063, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2065, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2065, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2067, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2074, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2074, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2076, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2077, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2079, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2090, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2091, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2093, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2099, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2099, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2105, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2115, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2121, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2138, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2141, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2144, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2166, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2175, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2175, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2176, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2177, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2187, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2188, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2189, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2190, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2198, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2212, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2229, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2229, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2231, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2238, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2240, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2240, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2246, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2247, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2249, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2257, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2259, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2259, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2260, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2260, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2261, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2261, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2271, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2281, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2282, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2287, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2288, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2303, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2312, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2313, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2316, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2317, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2332, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2341, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2342, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2343, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2344, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2361, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2361, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2362, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2371, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2372, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2374, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2375, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2377, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2396, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2400, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2401, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2401, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2402, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2402, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2404, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2404, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2405, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2405, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2417, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2418, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2432, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2433, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2434, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2435, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2436, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2437, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2438, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2439, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2440, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2442, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2443, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2446, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2454, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2454, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2456, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2460, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2480, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2481, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2485, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2493, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2493, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2510, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2511, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2520, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2522, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2524, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2540, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2543, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2570, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2580, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2580, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2581, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2591, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2592, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2593, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2601, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2611, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2624, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2624, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2626, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2633, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2635, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2635, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2635, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2641, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2642, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2644, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2651, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2653, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2653, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2654, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2654, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2664, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2673, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2686, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2687, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2702, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2711, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2712, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2714, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2715, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2730, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2738, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2739, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2739, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2740, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2740, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2742, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2742, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2743, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2743, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2754, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2768, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2770, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2771, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2772, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2773, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2774, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2775, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2776, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2777, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2778, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2779, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2780, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2781, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2782, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2782, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 2784, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2784, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2784, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2784, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2785, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2785, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2787, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2787, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2787, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2787, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2789, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2789, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2789, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2790, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2792, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2792, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2792, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2793, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2793, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2794, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2796, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2796, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2796, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2796, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2819, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2819, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2821, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2829, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2829, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2831, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2834, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2844, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2845, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2847, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2855, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2855, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2856, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2856, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 2858, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2860, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2871, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2879, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2880, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2880, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2885, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2886, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2886, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2887, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2887, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2888, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2893, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 163, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 238, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 240, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 240, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 244, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 264, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 267, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 279, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 281, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 283, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 283, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 286, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 302, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 302, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 309, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 315, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 316, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 333, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 335, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 388, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 396, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 417, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 428, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 430, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 433, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 433, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 446, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 449, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 452, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 454, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 454, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 455, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 468, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 471, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 487, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 487, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 487, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 488, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 490, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 490, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 490, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 491, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 502, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 504, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 508, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 508, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 509, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 527, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 530, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 532, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 536, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 546, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 546, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 546, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 547, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 561, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 563, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 563, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 572, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 578, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 579, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 581, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 583, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 583, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 584, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 586, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 599, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 611, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 615, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 615, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 626, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 638, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 642, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 642, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 654, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 655, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 659, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 659, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 660, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 660, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 665, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 669, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 674, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 675, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 677, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 686, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 693, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 698, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 702, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 716, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 719, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 720, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 728, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 732, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 732, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 735, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 739, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 740, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 742, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 742, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 747, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 748, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 751, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 754, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 758, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 758, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 759, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 760, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 760, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 761, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 761, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 761, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 762, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 762, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 762, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 762, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 762, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 763, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 763, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 763, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 763, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 764, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 765, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 766, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 767, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 774, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 778, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 781, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 781, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 784, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 784, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 786, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 787, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 790, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 791, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 799, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 801, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 802, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 803, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 806, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 807, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 812, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 813, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 814, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 814, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 821, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 821, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 823, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 827, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 828, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 832, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 833, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 834, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 835, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 835, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 840, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 841, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 841, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 842, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "exception", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 845, "col_offset": 39, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 850, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 851, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 851, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 852, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "exception", "type": "Any"}, {"lineNumber": 854, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 859, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 860, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 861, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 861, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 862, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 863, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 869, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 871, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 871, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 872, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 873, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 873, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 895, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 895, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 896, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 898, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 898, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 900, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 900, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 902, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 903, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 907, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 907, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 908, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 927, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 927, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 927, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 929, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 930, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 931, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 932, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 933, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 935, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 939, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 939, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 942, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 942, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 944, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 952, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 952, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 953, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 953, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 955, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 959, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 961, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 966, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 966, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 968, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 969, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 970, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 970, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 979, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 980, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 981, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 982, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 983, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 985, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 987, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 988, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 988, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 988, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 990, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 990, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 992, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 992, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 993, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 996, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 996, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 997, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1002, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1005, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1011, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1013, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1013, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1026, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1027, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1028, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1029, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1031, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1033, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1034, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1037, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1038, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1039, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1040, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1043, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1047, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1051, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1052, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1056, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1060, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1061, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1062, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1063, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1066, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1074, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1075, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1079, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1094, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1095, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1099, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1101, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1102, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1103, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1105, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1109, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1113, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1116, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1117, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1126, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1127, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1129, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1132, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1132, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1132, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1133, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1141, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1143, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1146, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1146, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1146, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1147, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1150, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1150, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1150, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1151, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1160, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1162, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1163, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1165, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1181, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1181, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 1181, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1182, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1190, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1193, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1194, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1199, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1199, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1200, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1210, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1211, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1213, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1217, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1218, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1222, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1222, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1224, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1228, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1238, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1238, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1238, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1239, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1250, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1253, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1258, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1260, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1260, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1262, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1269, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1271, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1275, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1277, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1277, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1279, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1279, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1280, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1282, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1282, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1289, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1293, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1294, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1298, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1299, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1303, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1307, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1307, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1314, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1318, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1319, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1323, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1324, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1328, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1332, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1332, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1340, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1344, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1345, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1348, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1349, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1349, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1350, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1350, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1355, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1359, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1364, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1365, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1367, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1387, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1388, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1389, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1390, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1400, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1400, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1401, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1410, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1410, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1411, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1412, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1413, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1414, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1416, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1419, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1419, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1421, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1421, "col_offset": 33, "nodeName": "UnderspecifiedError", "type": "Type[sonnet.python.modules.base.UnderspecifiedError]"}, {"lineNumber": 1421, "col_offset": 58, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1422, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1422, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 1432, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1433, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1436, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1436, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1437, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1438, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1439, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1440, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1442, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1446, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1447, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1450, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1451, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1455, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1465, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1466, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1467, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1469, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1470, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1472, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1473, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1474, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1475, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1477, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1478, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1480, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1483, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1483, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1483, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1484, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1490, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1490, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1490, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1491, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1503, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1504, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1505, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1507, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1510, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1514, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1514, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1514, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1515, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1523, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1523, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1523, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1524, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1539, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1540, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1541, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1542, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1543, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1544, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1546, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1548, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1548, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1549, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1562, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1563, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1564, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1565, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1566, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1567, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1569, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1571, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1572, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1572, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1573, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1573, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1578, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1582, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1587, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1587, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1587, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1587, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1588, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1590, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1601, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1602, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1603, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1604, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1605, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1606, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1608, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1609, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1612, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1612, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1612, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1613, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1613, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1614, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1614, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1614, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1619, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1619, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 1619, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1620, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1623, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1623, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1623, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1623, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1623, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1624, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1626, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1626, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1633, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1633, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 1633, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1634, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1634, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1634, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1639, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1642, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1648, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1650, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1650, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1652, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1663, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 1664, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1664, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1665, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1665, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1670, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1670, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 1670, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1671, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1675, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1675, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1683, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1683, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1684, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1685, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1685, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1686, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1686, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1690, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1693, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1695, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1696, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1697, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1702, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1705, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1705, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1707, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1707, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1709, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 1720, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 1721, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 1722, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 1723, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 1724, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1725, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1726, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 1748, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1748, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1748, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1750, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1752, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1753, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1754, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1756, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1759, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1759, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1760, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1760, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1762, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1762, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1770, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1771, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1773, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1774, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1775, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1776, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1778, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1781, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1784, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1785, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1785, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1793, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1794, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1797, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1797, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1797, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1798, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1807, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1808, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1809, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1810, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1811, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1812, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1816, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1816, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1816, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1817, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1828, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1832, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1833, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1836, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1836, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1837, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1847, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1848, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1850, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1854, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1857, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1857, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1859, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1863, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1871, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1871, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1871, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1872, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1884, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1886, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1890, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1891, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1893, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1893, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1895, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1895, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1896, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1898, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1898, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1903, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1906, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1910, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1912, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1912, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1914, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1921, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1925, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1926, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1929, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1930, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1938, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1942, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1942, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1949, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1953, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1954, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1957, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1958, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1964, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1968, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1968, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1975, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1979, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1980, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1983, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1984, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1988, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1992, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1993, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2000, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2001, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2002, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2004, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2005, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2005, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2006, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2006, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2011, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2014, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2020, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2021, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2022, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2033, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2034, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2035, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2036, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2039, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2040, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2041, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2065, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2065, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2065, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2067, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2068, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2069, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2070, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2071, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2072, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2076, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2076, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2076, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2077, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2077, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2078, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2079, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2079, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2080, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2082, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2090, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2091, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2093, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2094, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2096, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2097, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2098, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2101, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2105, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2106, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2106, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2115, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2120, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2121, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2126, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2126, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 2126, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2127, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2138, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2140, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2141, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2143, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2144, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2149, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2153, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2153, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 2153, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2154, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2166, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2170, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2171, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2175, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2175, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2176, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2187, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2188, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2189, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2190, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2194, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2198, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2198, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2200, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2205, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2208, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2216, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2216, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2216, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2217, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2228, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2231, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2236, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2238, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2238, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2247, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2249, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2254, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2255, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2257, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2257, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2259, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2259, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2260, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2261, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2263, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2263, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2271, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2275, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2277, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2281, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2282, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2290, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2295, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2295, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2303, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2307, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2308, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2312, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2313, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2319, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2324, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2324, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2332, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2336, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2337, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2341, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2342, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2346, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2351, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2351, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2362, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2363, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2364, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2366, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2367, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2371, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2371, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2371, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2372, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2372, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2373, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2377, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2377, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2380, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2385, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2386, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2396, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2398, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2400, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2401, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2401, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2402, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2402, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2407, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2411, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2417, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2418, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2419, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2420, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2421, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2432, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 2433, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2434, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 2435, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2436, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 2437, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 2438, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2439, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2440, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2442, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2443, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2446, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2447, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2449, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2451, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2456, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2457, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2460, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2461, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2465, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2480, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2481, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2485, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2487, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2489, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2491, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2495, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2499, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2503, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2504, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2510, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2511, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2513, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2513, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 2514, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2515, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2520, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2522, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2524, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2528, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2528, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 2529, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2531, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2540, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2542, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2543, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2545, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2561, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2561, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 2561, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2562, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2564, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2564, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 2564, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2565, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2570, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2573, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2580, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2580, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2581, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2582, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2582, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2583, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2583, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 2591, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2592, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2593, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2598, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2601, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2601, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2603, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2607, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2616, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 2616, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2617, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2623, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2626, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2631, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2633, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2633, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2635, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2642, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2644, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2648, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2649, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2651, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2651, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2653, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2653, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2654, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2656, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2656, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2664, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2668, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2670, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2673, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2689, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2693, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2694, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2702, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2706, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2708, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2711, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2717, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2721, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2722, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2730, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2734, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2735, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2738, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2739, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2739, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2740, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2740, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2745, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2749, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2754, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2755, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2757, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2784, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2784, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2785, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2785, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2787, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2787, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2787, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2789, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2790, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2792, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2793, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2793, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2794, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2796, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2796, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2796, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2799, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2799, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 2800, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2819, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2819, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2819, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 2821, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2822, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2823, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2824, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2825, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2827, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2831, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2831, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2834, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2834, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2834, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 2836, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2844, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2844, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2845, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2845, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2847, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2851, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2853, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2858, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2858, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2860, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2861, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2862, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2862, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2871, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 2872, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2873, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2874, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2875, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2877, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2879, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2880, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2880, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2880, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 2882, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2882, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 2884, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2884, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2885, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2888, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2888, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2889, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2893, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 119, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 138, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 178, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 178, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 179, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 181, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 261, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 262, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 262, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 267, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 286, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 286, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 288, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 299, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 302, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 311, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 315, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 337, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 337, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 337, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 342, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 342, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 351, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 351, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 351, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 355, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 355, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 355, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 381, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 388, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 393, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 396, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 397, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 397, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 397, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 433, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 433, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 434, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 454, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 454, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 455, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 474, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 474, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 487, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 487, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 488, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 489, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 490, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 490, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 491, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 492, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 502, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 505, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 506, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 509, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 509, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 511, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 511, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 511, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 512, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 528, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 528, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 528, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 530, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 532, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 536, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 537, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 538, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 538, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 546, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 547, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 563, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 563, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 572, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 581, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 583, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 584, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 600, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 600, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 602, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 611, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 615, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 615, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 626, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 629, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 631, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 638, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 642, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 642, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 654, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 659, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 660, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 665, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 669, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 670, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 671, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 674, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 677, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 678, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 679, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 694, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 694, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 696, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 698, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 702, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 702, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 717, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 717, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 719, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 719, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 728, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 732, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 732, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 750, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 753, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 756, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 761, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 761, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 784, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 784, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 785, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 785, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 801, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 807, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 809, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 812, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 814, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 814, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 821, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 828, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 830, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 833, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 835, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 835, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 841, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 841, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 842, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 842, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "cm", "type": "Any"}, {"lineNumber": 845, "col_offset": 39, "nodeName": "mask", "type": "Any"}, {"lineNumber": 851, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 852, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 852, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "cm", "type": "Any"}, {"lineNumber": 854, "col_offset": 62, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 854, "col_offset": 67, "nodeName": "mask", "type": "Any"}, {"lineNumber": 861, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 861, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 862, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 864, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 864, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 871, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 871, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 872, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 874, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 874, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 883, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 883, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 907, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 908, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 927, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 930, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 931, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 932, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 933, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 942, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 944, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 944, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 952, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 953, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 959, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 968, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 970, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 971, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 971, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 972, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 980, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 981, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 982, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 983, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 988, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 990, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 990, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 991, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 991, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 996, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 997, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1002, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1013, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1013, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1035, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1035, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1035, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1040, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1049, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1049, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1049, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1053, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1053, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1053, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1056, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1057, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1063, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1072, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1072, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1076, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1076, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1076, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1079, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1080, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1096, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1103, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1109, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1113, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1114, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1116, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1117, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1118, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1118, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1118, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1132, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1132, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1133, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1146, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1146, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1147, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1150, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1150, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1151, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1168, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1168, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1170, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1181, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1181, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1182, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1183, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1193, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1196, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1197, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1200, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1200, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1200, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1202, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1202, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1202, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1203, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1203, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1217, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1220, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1220, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1220, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1220, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1222, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1222, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1224, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1228, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1229, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1230, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1230, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1233, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1238, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1239, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1242, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1243, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1250, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1260, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1260, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1269, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1277, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1277, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1279, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1280, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1282, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1293, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1296, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1296, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1298, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1298, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1303, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1307, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1307, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1318, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1321, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1321, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1323, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1323, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1328, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1332, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1332, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1344, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1348, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1349, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1350, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1355, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1359, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1360, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1361, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1364, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1367, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1368, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1369, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1388, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1390, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1400, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1401, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1421, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1421, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1434, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1434, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1434, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1448, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1448, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1448, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1452, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1452, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1452, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1455, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1456, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1483, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1483, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1484, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1484, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1485, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1488, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1490, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1490, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1491, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1491, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1492, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1495, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1514, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1514, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1515, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1515, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1516, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1518, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1521, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1523, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1523, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1524, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1524, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1525, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1527, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1530, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1549, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1549, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1550, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1552, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1552, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1552, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1553, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1553, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1571, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1572, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1573, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1578, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1582, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1583, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1584, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1587, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1590, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1591, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1592, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1613, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1619, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1619, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1623, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1624, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1633, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1633, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1634, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1634, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1634, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1639, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1650, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1650, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1664, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1670, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1670, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1684, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1685, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1686, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1690, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1693, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1693, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1693, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1695, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1697, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1697, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1697, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1702, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1707, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1707, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1718, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1718, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 1718, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1754, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1759, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 1760, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1762, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1762, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1771, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1774, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1775, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 1776, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1781, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1784, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1784, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1785, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1785, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1785, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1785, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1797, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1797, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1798, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1799, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1816, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1816, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1817, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1820, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1832, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1834, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1834, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1837, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1837, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1837, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1839, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1839, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1839, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1840, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1840, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1848, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1855, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1855, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1855, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 1855, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1857, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1857, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1859, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1863, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1864, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1864, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 1865, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 1868, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1868, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 1871, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1872, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1876, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1884, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1893, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1893, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1895, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1896, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1898, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1903, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1912, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1912, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1925, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1927, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1927, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1929, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1929, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1938, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1942, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1942, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1953, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1955, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1955, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1957, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1957, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1964, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1968, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1968, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1979, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1981, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1981, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1983, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1983, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1988, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1992, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1993, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2001, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2004, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2005, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2006, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2011, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2014, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2014, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2014, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2020, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2022, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2022, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2022, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2031, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2031, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2031, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2071, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2082, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2082, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2091, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2094, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2096, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2097, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2101, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2105, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2105, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2106, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2106, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2106, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2106, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2126, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2126, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2127, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2130, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2153, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2153, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2154, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2159, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2170, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2172, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2173, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2176, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2176, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2176, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2178, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2178, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2178, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2179, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2179, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2189, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2195, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2196, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2196, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2196, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2196, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2198, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2198, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2200, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2205, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2206, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2206, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2207, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2208, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2209, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2209, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2210, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2213, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2213, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2216, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2217, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2222, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2228, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2238, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2238, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2247, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2257, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2257, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2259, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2260, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2261, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2263, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2275, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2278, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2279, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2281, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2281, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2290, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2295, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2295, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2307, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2309, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2310, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2312, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2312, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2319, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2324, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2324, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2336, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2338, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2339, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2341, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2341, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2346, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2351, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2351, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2366, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2368, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2369, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2371, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2372, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2373, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2373, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2377, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2380, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2385, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2385, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2400, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2401, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2402, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2407, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2411, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2411, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2411, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2417, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2418, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2421, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2421, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2421, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2444, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2444, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2444, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2444, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2444, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2448, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2448, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2448, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2449, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2458, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2458, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2458, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2458, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2458, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2462, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2462, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2462, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2462, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2463, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2465, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2466, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2482, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2488, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2488, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2488, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2489, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2495, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2499, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2500, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2503, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2504, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2505, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2505, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2505, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2505, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2505, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2513, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2513, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2514, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2515, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2528, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2528, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2529, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2531, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2548, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2548, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 2550, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2561, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2561, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2562, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2563, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2564, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2564, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2565, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2566, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2573, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 2581, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2581, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2581, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2582, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2599, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2599, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2599, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 2599, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2601, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2601, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2603, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2607, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2608, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2609, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 2609, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 2612, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2616, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2617, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2623, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2633, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2633, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2642, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2651, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2651, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2653, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2654, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2656, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2668, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2671, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2671, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2673, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2673, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2674, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2689, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2693, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2694, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2706, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2709, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2709, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2711, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2711, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2712, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2717, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2721, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2722, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2734, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2738, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2739, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2740, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2745, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2749, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2750, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2751, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2754, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2757, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2758, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2759, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2768, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2768, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 2768, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2799, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2800, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2819, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2822, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2823, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2824, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2825, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 2834, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 2836, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2836, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2844, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2845, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2851, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 2860, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2862, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2863, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 2863, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 2864, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 2864, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 2872, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2873, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 2874, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 2875, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 2880, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 2882, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2882, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2883, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 2883, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 2888, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 2889, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 132, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 244, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 291, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 389, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 393, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 474, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 474, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 511, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 533, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 537, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 538, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 538, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 543, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 572, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 586, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 602, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 612, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 615, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 615, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 631, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 631, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 639, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 642, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 642, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 666, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 670, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 671, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 674, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 675, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 675, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 678, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 679, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 696, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 696, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 699, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 702, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 702, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 719, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 719, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 729, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 732, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 732, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 750, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 753, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 756, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 765, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 766, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 767, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 785, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 785, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 790, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 791, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 813, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 814, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 814, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 834, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 835, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 835, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 862, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 862, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 863, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 863, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 864, "col_offset": 40, "nodeName": "mask", "type": "Any"}, {"lineNumber": 872, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 872, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 873, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 873, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 874, "col_offset": 40, "nodeName": "mask", "type": "Any"}, {"lineNumber": 939, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 940, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 940, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 942, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 945, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 966, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 969, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 971, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 971, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 991, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 991, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1052, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1058, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1075, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1081, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1110, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1114, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1168, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1168, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1170, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1172, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 1200, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1202, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1225, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1229, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1230, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1230, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1233, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1234, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1235, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1242, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1269, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1282, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1298, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1298, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1304, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1307, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1307, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1323, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1323, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1329, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1332, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1332, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1356, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1360, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1361, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1364, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1365, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1365, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1368, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1369, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1388, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1388, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1419, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1447, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1451, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1457, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1549, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1549, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1549, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1550, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1552, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1579, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1583, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1584, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1587, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1588, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1588, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1591, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1592, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1613, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1623, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1691, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1693, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1693, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1695, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1696, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1696, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1697, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1697, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1760, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1762, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 1771, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1782, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1784, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1784, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1785, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1837, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1839, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1860, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1864, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1864, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1865, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1868, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1868, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1884, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1898, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1929, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1929, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1939, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1942, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1942, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1957, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1957, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1965, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1968, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1968, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1983, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1983, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1989, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1993, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1993, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2012, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2014, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2014, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2020, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2021, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2021, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2022, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2022, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2076, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2077, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2079, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2082, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2091, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2102, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2105, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2105, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2106, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2176, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2178, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2201, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2206, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2206, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2207, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2209, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2209, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2210, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2213, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2213, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2247, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2263, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2281, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2281, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2291, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2295, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2295, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2312, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2312, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2320, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2324, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2324, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2341, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2341, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2347, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2351, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2351, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2377, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2381, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2385, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2385, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2385, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2408, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2411, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2411, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2417, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2418, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2419, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2419, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2420, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2420, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2421, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2421, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2457, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2461, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2467, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2496, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2500, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2548, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2548, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 2550, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 2552, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 2576, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2577, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2581, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2604, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2608, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2609, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2609, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2612, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2613, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2614, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 2642, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2656, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2673, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2673, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2674, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2690, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2694, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2694, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2711, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2711, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2712, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2718, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2722, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2722, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2746, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2750, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2751, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2754, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2755, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2755, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2758, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2759, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2831, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2832, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2832, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2834, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2837, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2858, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2861, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 2863, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2863, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 2864, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 2883, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 2883, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 359, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 389, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 390, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 393, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 393, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 393, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 393, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 533, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 534, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 537, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 538, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 548, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 572, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 602, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 612, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 613, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 615, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 631, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 639, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 640, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 642, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 666, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 667, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 675, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 696, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 699, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 700, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 702, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 719, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 729, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 730, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 732, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 750, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 753, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 756, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 764, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 765, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 766, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 767, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 790, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 791, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 813, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 813, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 814, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 834, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 834, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 835, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 863, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 873, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 939, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 940, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 940, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 942, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 944, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 945, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 966, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 969, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 971, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1052, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1057, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1072, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1072, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1075, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1080, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1110, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1111, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1114, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1114, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1114, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1114, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1225, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1226, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1229, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1230, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1234, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1245, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1269, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1298, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1304, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1305, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1307, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1323, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1329, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1330, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1332, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1356, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1357, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1365, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1388, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1388, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1390, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1447, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1451, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1456, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1579, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1580, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1588, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1691, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1692, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1696, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1762, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1782, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1783, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1784, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1784, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 1860, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1861, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1864, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1865, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 1868, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 1877, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1884, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1929, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1939, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1940, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1942, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1957, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1965, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1966, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1968, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1983, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1989, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1990, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1993, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2012, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2013, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2021, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2076, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2077, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2079, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2082, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2102, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2103, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2105, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2105, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2201, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2202, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2206, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2207, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2209, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2210, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2213, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2223, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2247, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2281, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2291, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2292, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2295, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2312, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2320, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2321, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2324, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2341, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2347, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2348, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2351, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2377, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 2381, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2382, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2385, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2408, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2409, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2419, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2420, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2457, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 2461, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 2466, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2496, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2497, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2500, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 2500, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2500, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2500, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2500, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2501, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2576, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2577, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2604, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2605, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2608, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2609, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 2613, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 2618, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2642, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2673, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2690, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2691, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2694, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2711, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2718, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2719, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2722, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2746, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2747, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2755, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2831, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2832, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2832, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 2832, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2834, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 2836, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2837, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2858, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2861, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2863, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 108, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 111, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 359, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 390, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 390, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 534, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 548, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 613, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 613, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 613, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 640, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 640, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 667, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 667, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 667, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 675, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 700, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 730, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 730, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 730, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 813, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 834, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 942, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 944, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1052, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1057, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1075, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1080, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1111, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1111, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1111, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1226, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1226, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1226, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1234, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1245, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1305, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1305, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1305, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1330, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1330, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1330, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1357, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1357, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1357, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1365, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1390, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1390, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1390, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1451, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1456, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1580, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1580, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1580, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1588, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1692, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1692, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1692, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1696, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1783, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1783, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1783, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1861, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1861, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1861, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1868, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1877, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1940, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1940, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1940, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1966, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1966, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1966, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1990, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1990, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1990, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2013, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2013, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2013, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2021, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2077, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2079, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2082, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2103, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2103, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2103, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2104, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2104, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2202, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2202, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2202, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2203, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2203, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2213, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2223, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2292, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2292, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2292, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2293, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2293, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2321, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2321, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2321, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2322, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2322, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2348, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2348, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2348, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2349, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2349, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2382, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2382, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2382, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2383, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2383, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2409, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2409, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2409, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2410, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2410, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2419, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2420, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2461, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2466, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2497, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2497, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2497, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2605, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2605, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2605, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2613, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2618, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2691, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2691, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2691, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2719, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2719, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2719, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2747, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2747, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2747, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2755, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2832, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2834, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2836, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 108, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 108, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 359, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 390, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 390, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 534, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 534, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 613, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 613, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 613, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 640, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 640, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 667, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 667, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 667, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 700, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 700, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 730, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 730, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 730, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 944, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1057, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1080, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1111, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1111, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1111, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1226, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1226, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1226, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1305, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1305, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1305, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1330, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1330, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1330, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1357, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1357, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1357, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1390, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1390, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1456, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1580, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1580, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1580, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1692, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1692, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1692, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1783, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1783, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1783, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1861, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1861, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1861, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1940, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1940, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1940, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1966, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1966, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1966, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1990, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1990, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1990, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2013, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2013, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2013, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2082, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2103, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2103, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2103, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2104, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2104, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2202, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2202, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2202, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2203, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2203, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2292, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2292, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2292, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2293, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2293, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2321, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2321, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2321, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2322, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2322, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2348, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2348, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2348, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2349, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2349, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2382, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2382, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2382, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2383, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2383, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2409, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2409, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2409, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2410, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2410, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2466, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2497, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2497, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2497, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2605, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2605, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2605, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2691, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2691, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2691, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2719, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2719, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2719, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2747, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2747, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2747, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2836, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}]