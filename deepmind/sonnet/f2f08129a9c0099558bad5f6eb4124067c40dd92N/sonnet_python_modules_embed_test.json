[{"lineNumber": 32, "col_offset": 16, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "test", "type": "Any"}, {"lineNumber": 198, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "_ids", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "expected_shape", "type": "List[int]"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "densify_gradients", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 199, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "_embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 62, "col_offset": 6, "nodeName": "embed_mod", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "_embed_mod_dense", "type": "Any"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "embed_mod", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "_embed_mod", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "embeddings_", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "copy", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "ids", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "_embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "ids", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "copy", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "ids", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "_embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "ids", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "embed_dim", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "embed_dim", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "embeddings_", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "embed", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "embed_dim", "type": "Any"}, {"lineNumber": 171, "col_offset": 48, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 175, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "_embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 177, "col_offset": 54, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "true_vocab_size", "type": "int"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "true_embed_dim", "type": "int"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "existing", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "embeddings_", "type": "Any"}, {"lineNumber": 199, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "snt", "type": "module"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "_ids", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "expected_shape", "type": "List[int]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "_embed_dim", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "_ids", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "_ids", "type": "Any"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "embeddings_", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "expected_embeddings", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "_ids", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "_ids", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "zeros_initializer", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "_ids", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "embeddings_", "type": "Any"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "partitioners", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "_ids", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "variables", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 147, "col_offset": 6, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "Embed", "type": "Type[sonnet.python.modules.embed.Embed]"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "_ids", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "_embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "_embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 171, "col_offset": 48, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "_embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "_ids", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "_embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 177, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "int32", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "existing", "type": "numpy.ndarray"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "run", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 194, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "embeddings_", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 195, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 195, "col_offset": 45, "nodeName": "true_vocab_size", "type": "int"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "embed_dim", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "true_embed_dim", "type": "int"}, {"lineNumber": 199, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "EmbedTest", "type": "Type[EmbedTest]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "_ids", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "sess", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "sess", "type": "Any"}, {"lineNumber": 124, "col_offset": 6, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "embeddings_", "type": "Any"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 141, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 142, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 147, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 153, "col_offset": 9, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "_embed_dim", "type": "int"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 164, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 182, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 192, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "sess", "type": "Any"}, {"lineNumber": 194, "col_offset": 6, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 195, "col_offset": 6, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "embed_mod", "type": "sonnet.python.modules.embed.Embed"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "self", "type": "EmbedTest"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 77, "col_offset": 55, "nodeName": "_embed_dim", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 44, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "_ids", "type": "Any"}, {"lineNumber": 77, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "self", "type": "Any"}]