[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 353, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 969, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 969, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1109, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1109, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1564, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1564, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1850, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1850, "col_offset": 47, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1972, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1972, "col_offset": 48, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2029, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2029, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2341, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2341, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2739, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2739, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3255, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 3255, "col_offset": 50, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 2, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 100, "col_offset": 2, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 101, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 353, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 969, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 969, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1109, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1109, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 1564, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1564, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 1567, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1568, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1569, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1570, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1571, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1572, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1573, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1574, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1575, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1583, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1584, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1585, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1586, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1587, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1850, "col_offset": 23, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1850, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 1972, "col_offset": 24, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 1972, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 2029, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2029, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2341, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2341, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 2739, "col_offset": 17, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 2739, "col_offset": 41, "nodeName": "test", "type": "Any"}, {"lineNumber": 3255, "col_offset": 26, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 3255, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 3401, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "VALID", "type": "str"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "VALID", "type": "str"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 311, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 353, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 391, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 404, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 554, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 619, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 636, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 753, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 773, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 781, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 821, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 839, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 899, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 908, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 909, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 925, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 938, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 951, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 960, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 969, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 978, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 979, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 984, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 984, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 989, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 1018, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1034, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1043, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1044, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1054, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1055, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1084, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1086, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1093, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1094, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1109, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1117, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1118, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1119, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1120, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1122, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1136, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1146, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1159, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1169, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1180, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1181, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1182, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1182, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1183, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1222, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1236, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1258, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1271, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1290, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1301, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1302, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1328, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1341, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1342, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1370, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1372, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1389, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1390, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1414, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1415, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1439, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1440, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1441, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1443, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1444, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1464, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1465, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1473, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1474, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1482, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1490, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1491, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1498, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1499, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1507, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1516, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1517, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1520, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1529, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1530, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1533, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1542, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1543, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1546, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1555, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1556, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1564, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1573, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1573, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1573, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1573, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1573, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1577, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1577, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1577, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1577, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1583, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1584, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1584, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1585, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1585, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1586, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1587, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1587, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1610, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1611, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1639, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1649, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1677, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1707, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1743, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1766, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1767, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1768, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1770, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1771, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1804, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1813, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1827, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1834, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1835, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1850, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1865, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1866, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1867, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1891, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1892, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1893, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1918, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1919, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1920, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1944, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1945, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1946, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1948, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1949, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1951, "col_offset": 4, "nodeName": "w", "type": "Any"}, {"lineNumber": 1952, "col_offset": 4, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 1972, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1980, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1981, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1982, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1986, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2000, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2001, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2002, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2003, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2004, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2005, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2019, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2020, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2022, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2029, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2036, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2037, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2037, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2038, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2038, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2039, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2039, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2040, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2040, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2041, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2041, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2042, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2042, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2043, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2043, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2045, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2046, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2047, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2057, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2057, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2058, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2058, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2059, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2059, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2060, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2060, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2061, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2061, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2062, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2062, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2064, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2073, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2077, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2095, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2111, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2130, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2152, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2163, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2164, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2186, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2211, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2213, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2219, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2220, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2245, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2273, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2299, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2300, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2320, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2321, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2322, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2324, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2325, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2341, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2348, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2348, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2349, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2349, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2350, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2350, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2351, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2352, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 2354, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2354, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2355, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2356, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2356, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2357, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 2359, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2359, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2360, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 2364, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 2372, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2372, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2373, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2373, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2374, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2374, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2375, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2375, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2376, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2376, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2377, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2377, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2378, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2378, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2380, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2389, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2396, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2414, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2439, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2466, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2490, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2502, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2503, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2504, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2530, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2543, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2544, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2574, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2577, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2596, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2627, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2656, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2657, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2674, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2675, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2676, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2686, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2687, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2688, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2715, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2716, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2717, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2719, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2720, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2739, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2747, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2748, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2749, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2750, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2751, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2752, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2753, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2754, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2755, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2769, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2779, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2790, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2791, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2791, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2791, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2792, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2792, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2793, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2793, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2793, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2808, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2862, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2875, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2895, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2906, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2907, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 2938, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2939, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2985, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2987, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3005, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3043, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3044, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3070, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3071, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3072, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3074, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3075, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3095, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3096, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3104, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3105, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3112, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3113, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3121, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3122, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3129, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3130, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3138, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3139, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3146, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3147, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3155, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3156, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3163, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3164, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3172, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 3173, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3181, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3182, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3185, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3194, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3195, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3198, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3207, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3208, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3211, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3220, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3221, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3224, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3233, "col_offset": 4, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3234, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3237, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3246, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3247, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 3255, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3262, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3263, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3264, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3265, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3266, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3267, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3268, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3269, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3270, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3271, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 3272, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 3273, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 3274, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 3274, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3279, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 3288, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 3311, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3321, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3327, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3336, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3337, "col_offset": 4, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3347, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3348, "col_offset": 4, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3388, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3389, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3390, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 3394, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3395, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3396, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3402, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "snt", "type": "module"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv3DTranspose], Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "conv1", "type": "Union[sonnet.python.modules.conv.Conv3DTranspose, sonnet.python.modules.conv.Conv1DTranspose, sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "new_inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 246, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 266, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 271, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 299, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 331, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "out2", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "grads2", "type": "Any"}, {"lineNumber": 345, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 347, "col_offset": 6, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 348, "col_offset": 6, "nodeName": "out3", "type": "Any"}, {"lineNumber": 349, "col_offset": 6, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 365, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 381, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 420, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 420, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 453, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 542, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 543, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 544, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 564, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 574, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 588, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 588, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 599, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 599, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 615, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 617, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 617, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 618, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 636, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 637, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 642, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 643, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 665, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 666, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 669, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 670, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 693, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 693, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 694, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 694, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 696, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 696, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 697, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 697, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 708, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 730, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 753, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 754, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 759, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 760, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 769, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 773, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 774, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 776, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 776, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 777, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 777, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 778, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 778, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 779, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 779, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 781, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 782, "col_offset": 15, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 785, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 788, "col_offset": 18, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 792, "col_offset": 21, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 792, "col_offset": 42, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 793, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 794, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 800, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 808, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 814, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 815, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 815, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 822, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 822, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 823, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 823, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 829, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 830, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 831, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 838, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 838, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 850, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 853, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 861, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 869, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 870, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 878, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 878, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 889, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 891, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 899, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 899, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 900, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 912, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 921, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 925, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 934, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 935, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 938, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 947, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 951, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 960, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 963, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 965, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 974, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 978, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 979, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 982, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 983, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 984, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 984, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 986, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 986, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 986, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 986, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 987, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 989, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 989, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 989, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 991, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 991, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 991, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 993, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 993, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 993, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 994, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 994, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1018, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1018, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1020, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1028, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1028, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1030, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1043, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1044, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1046, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1054, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1054, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1055, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1059, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1070, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1078, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1079, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1079, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1084, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 1085, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1085, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1086, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1086, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1094, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1094, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1096, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1104, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1106, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1106, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1117, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1118, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1119, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1120, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1122, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1124, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1125, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1128, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1136, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1136, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1142, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1151, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1159, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1159, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1161, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1165, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1185, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1186, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1190, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1198, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1198, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1217, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1219, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1254, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1281, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1290, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1290, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1291, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1292, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1301, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1302, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1304, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1313, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1323, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1342, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1342, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1344, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1351, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1353, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1353, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1353, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1359, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1360, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1362, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1368, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1370, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1370, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1371, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1371, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1380, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1389, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1390, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1391, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1392, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1405, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1414, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1415, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1416, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1417, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1431, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1439, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1440, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1440, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1441, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1441, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1443, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1443, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1444, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1444, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1455, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1464, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1465, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1466, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1473, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1473, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1474, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1481, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1482, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1483, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1490, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1490, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1491, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1498, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1499, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1500, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1507, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1507, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1508, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1516, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1520, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1529, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1530, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1533, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1542, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1543, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1546, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1555, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1556, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1558, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1560, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1573, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1573, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1573, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1573, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1573, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1578, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1578, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1580, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1580, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1583, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1583, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1583, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1583, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1586, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1586, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1586, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1586, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1601, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1610, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1610, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1611, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1611, "col_offset": 19, "nodeName": "image", "type": "Any"}, {"lineNumber": 1612, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1615, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1627, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1628, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1631, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1639, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1639, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1641, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1645, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1660, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1668, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1698, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1734, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1743, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 1743, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1746, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1757, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1766, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1766, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1766, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1766, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1767, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1767, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1768, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1768, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1770, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1770, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1771, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1771, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1782, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1796, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1804, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1807, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1807, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1807, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1808, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1808, "col_offset": 56, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1809, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1809, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1809, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1815, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1818, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1820, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1820, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1821, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1821, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1821, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 1835, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1835, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1837, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1845, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1847, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1847, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1847, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1857, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1865, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1866, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1868, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1870, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1872, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1874, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1876, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1876, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1876, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1883, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1891, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1892, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1894, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1896, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1898, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1900, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1902, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1902, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1902, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1909, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1918, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1919, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1921, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1923, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1925, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1927, "col_offset": 6, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1929, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1929, "col_offset": 24, "nodeName": "actual_out", "type": "Any"}, {"lineNumber": 1929, "col_offset": 36, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1937, "col_offset": 12, "nodeName": "CausalConv1D", "type": "Type[sonnet.python.modules.conv.CausalConv1D]"}, {"lineNumber": 1944, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1945, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1945, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1946, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1946, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1948, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1948, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1949, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1949, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1951, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1952, "col_offset": 23, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1952, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 1954, "col_offset": 14, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1957, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1959, "col_offset": 6, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 1960, "col_offset": 6, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 1965, "col_offset": 6, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 1966, "col_offset": 6, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 1968, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1968, "col_offset": 24, "nodeName": "first_replica_out", "type": "Any"}, {"lineNumber": 1968, "col_offset": 43, "nodeName": "second_replica_out", "type": "Any"}, {"lineNumber": 1969, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1969, "col_offset": 24, "nodeName": "first_replica_out_changed", "type": "Any"}, {"lineNumber": 1969, "col_offset": 51, "nodeName": "second_replica_out_changed", "type": "Any"}, {"lineNumber": 1980, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1981, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1981, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1982, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1988, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1988, "col_offset": 10, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1991, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1991, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1992, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1992, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1992, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2000, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2001, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2002, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2002, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2003, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2003, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2004, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2004, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2005, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2005, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2012, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2020, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2020, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2022, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 2024, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2026, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2026, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2026, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2034, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2036, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2036, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2037, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2037, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2038, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2038, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2039, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2039, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2040, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2040, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2041, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2041, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2042, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2042, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2043, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2043, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2043, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2045, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2045, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2045, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2045, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2045, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2046, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2046, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2046, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2047, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2047, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2047, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2047, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2047, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2048, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2048, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2048, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2049, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2057, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2058, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2059, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2060, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2061, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2062, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2064, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2064, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2066, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2073, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2073, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2075, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2075, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2076, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2076, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 2086, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2087, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2089, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2095, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2095, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2100, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2109, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2110, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2123, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2125, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2127, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2144, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2152, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2152, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2153, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2154, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2163, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2164, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2166, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2173, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2183, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2199, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2200, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2202, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2209, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2211, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2211, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2212, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2220, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2220, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2222, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2228, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2230, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2230, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2230, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2237, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2245, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2246, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2251, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2252, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2265, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2273, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2274, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2277, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2278, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2291, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2299, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2300, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2301, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2302, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2316, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2320, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2321, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2321, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2322, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2322, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2324, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2324, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2325, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2325, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2336, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2346, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2348, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2348, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2349, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2349, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2350, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2350, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2351, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2351, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2352, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2352, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2352, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2352, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2352, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2354, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2354, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2355, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2355, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2356, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2356, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2357, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2357, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2357, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2359, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2359, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2359, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2360, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2360, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2360, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2360, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2360, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2362, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2362, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2362, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2362, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2364, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2364, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2364, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 2372, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2373, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 2374, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2375, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 2376, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2377, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 2378, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 2380, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2380, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2382, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2389, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2389, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2391, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2392, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2394, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2405, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2406, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2408, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2414, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2414, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2420, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2430, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2436, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2453, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2456, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2459, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2481, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2490, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2490, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2491, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2492, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2502, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2503, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2504, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2505, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2513, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2527, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2544, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2544, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2546, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2553, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2555, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2555, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2555, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2561, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2562, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2564, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2572, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2574, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2574, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2575, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2575, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2576, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2576, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2586, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2596, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2597, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2602, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2603, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2618, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2627, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2628, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2631, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2632, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2647, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2656, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2657, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2658, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2659, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2676, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2676, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2677, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2686, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2687, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2689, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2690, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2692, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2711, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2715, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2716, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2716, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2717, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2717, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2719, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2719, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2720, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2720, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2732, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2733, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2747, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2748, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2749, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2750, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2751, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2752, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2753, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2754, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2755, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2757, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2758, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2761, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2769, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2769, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2771, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2775, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2795, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2796, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2800, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2808, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2808, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2825, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2826, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2835, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2837, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2839, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2855, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2858, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2885, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2895, "col_offset": 18, "nodeName": "uint32", "type": "Any"}, {"lineNumber": 2895, "col_offset": 29, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2896, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2906, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2907, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2908, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2916, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2926, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2939, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2939, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2941, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2948, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2950, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2950, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2950, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2955, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2960, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2973, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2974, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2976, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2983, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2985, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2985, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2986, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2986, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2996, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3005, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3018, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3019, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3034, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3043, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3044, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3046, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3047, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3062, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3070, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3071, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3071, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3072, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3072, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 3074, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3074, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 3075, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3075, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 3086, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3096, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3097, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3104, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3104, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3112, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3113, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3114, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3121, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3121, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3129, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3130, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3131, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3138, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3138, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3146, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3147, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3148, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3155, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3155, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3163, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3164, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3165, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3172, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3172, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3181, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3182, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3185, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3194, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3195, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3198, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3207, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3208, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3211, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3220, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3221, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3224, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3233, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3234, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3237, "col_offset": 17, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3246, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3247, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3249, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3251, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3260, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 3262, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3263, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3264, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3265, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3266, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3267, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3268, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3269, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3270, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3271, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3272, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3273, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3274, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3274, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 3276, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3276, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 3276, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3276, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3277, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3277, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3279, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3279, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 3279, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 3279, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 3281, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3281, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3281, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3282, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3284, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3284, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 3284, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 3285, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 3285, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 3286, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 3288, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3288, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 3288, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 3288, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 3311, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3311, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3313, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3321, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3321, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3323, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3326, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3336, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3337, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3339, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3347, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3347, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 3348, "col_offset": 16, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3348, "col_offset": 22, "nodeName": "inputs_2", "type": "Any"}, {"lineNumber": 3350, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3352, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3361, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3366, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3380, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3388, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3389, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3389, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3394, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3395, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3395, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3396, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3396, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 3397, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 3402, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "_default_transpose_size", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "stride", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "module", "type": "Union[Type[sonnet.python.modules.conv.Conv2DTranspose], Type[sonnet.python.modules.conv.Conv1DTranspose], Type[sonnet.python.modules.conv.Conv3DTranspose]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 151, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "stride", "type": "Any"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "padding", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 177, "col_offset": 6, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "new_outputs", "type": "Any"}, {"lineNumber": 220, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 221, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 222, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 225, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 226, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 228, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 237, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 237, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 239, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 260, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 265, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 269, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 282, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 286, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 289, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 300, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 305, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 306, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 312, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 318, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 318, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 319, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "stop_gradient", "type": "Any"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 333, "col_offset": 37, "nodeName": "stop_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 339, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 339, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 35, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 347, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 348, "col_offset": 13, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "inputs_transpose", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "out3", "type": "Any"}, {"lineNumber": 350, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 350, "col_offset": 47, "nodeName": "grads3", "type": "Any"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 365, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 369, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 392, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 407, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 418, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 429, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 430, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 451, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 464, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 467, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 467, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 467, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 468, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 483, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 486, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 488, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 502, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 505, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 521, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 521, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 524, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 524, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 524, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 536, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 538, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 542, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 543, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 561, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 564, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 564, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 566, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 570, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 580, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 580, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 580, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 587, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 595, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 597, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 606, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 612, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 613, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 615, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 615, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 617, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 617, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 620, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 620, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 633, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 636, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 637, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 649, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 649, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 660, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 662, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 666, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 672, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 676, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 676, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 688, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 689, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 693, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 693, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 694, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 694, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 699, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 703, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 711, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 725, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 727, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 730, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 736, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 748, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 750, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 753, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 754, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 762, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 766, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 766, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 769, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 773, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 774, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 776, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 776, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 781, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 782, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 785, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 788, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 792, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 792, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 793, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 793, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 794, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 795, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 796, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 796, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 796, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 796, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 797, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 797, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 797, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 800, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 800, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 808, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 812, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 814, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 815, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 815, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 818, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 818, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 820, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 820, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 825, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 829, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 829, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 830, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 831, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 834, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 835, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 839, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 840, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 841, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 842, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 842, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 850, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 852, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 853, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 857, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 858, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 863, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 864, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 865, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 865, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 869, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 869, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 870, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 874, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 875, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 879, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 880, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 881, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 882, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 882, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 889, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 889, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 891, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 895, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 896, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 900, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 901, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 902, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 903, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 903, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 909, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 912, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 912, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 913, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 915, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 921, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 925, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 925, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 926, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 928, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 934, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 935, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 938, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 938, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 939, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 941, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 947, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 951, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 951, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 952, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 954, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 960, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 960, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 961, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 963, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 963, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 964, "col_offset": 68, "nodeName": "x", "type": "Any"}, {"lineNumber": 965, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 965, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 986, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 986, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 987, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 989, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 989, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 991, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 991, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 993, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 994, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 994, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 998, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 998, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 999, "col_offset": 6, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 1018, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1018, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1018, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1020, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1021, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1022, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1023, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1024, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1026, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1030, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1030, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1033, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1033, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1033, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 1035, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1043, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1043, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1044, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1044, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1046, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1050, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1052, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1057, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1057, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1059, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1060, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1061, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1061, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1070, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 1071, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1072, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1073, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1074, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1076, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1078, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1079, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1079, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1079, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1081, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1081, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1083, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1083, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1084, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1087, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1088, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1093, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1096, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1102, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1104, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1104, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1106, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 1117, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 1118, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 1119, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 1120, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1122, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 1124, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1125, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1128, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1129, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1130, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1131, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1134, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1139, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1142, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1143, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1147, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1151, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1152, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1153, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1154, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1157, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1161, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1162, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1165, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1170, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1185, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1186, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1190, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1192, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1193, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1194, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1196, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1200, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1204, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1207, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1208, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1217, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1218, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1219, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1220, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1223, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1223, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1223, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1224, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1232, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1234, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1237, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1237, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1237, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1238, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1241, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1241, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1241, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1242, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1251, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1253, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1254, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1256, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1272, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1272, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 1272, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1273, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1281, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1284, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1285, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1290, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1290, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1291, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1301, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1302, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1304, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1308, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1309, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1313, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1313, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1315, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1319, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1329, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1329, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1329, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1330, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1341, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1344, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1349, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1351, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1351, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1353, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1360, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1362, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1366, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1368, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1368, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1370, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1370, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1371, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1373, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1373, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1380, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1384, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1385, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1389, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1390, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1394, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1398, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1398, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1405, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1409, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1410, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1414, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1415, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1419, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1423, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1423, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1431, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1435, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1436, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1439, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1440, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1440, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1441, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1441, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1446, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1450, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1455, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1456, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1458, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1464, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1464, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1465, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1466, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1469, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1470, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1474, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1474, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1475, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1476, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1477, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1477, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1481, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1481, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1482, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1483, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1486, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1487, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1491, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1491, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1492, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1493, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1494, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1494, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1498, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 1498, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1499, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1500, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1503, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1504, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1508, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1508, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1509, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1510, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1511, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1511, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1516, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1517, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1520, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1520, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1521, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1523, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1529, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1530, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1533, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1533, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1534, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1536, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1542, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1543, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1546, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 1546, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1547, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1549, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1555, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1555, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 1556, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1558, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1558, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1559, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 1560, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1560, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1578, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1579, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1580, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1581, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1591, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1591, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1592, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1601, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1601, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1602, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1603, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1604, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1605, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1607, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1610, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1610, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1612, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1612, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1615, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1616, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1617, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1617, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 1627, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1628, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1631, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1631, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1632, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1633, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1634, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1635, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1637, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1641, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1642, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1645, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1646, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1650, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1660, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1661, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1662, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1664, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1665, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1667, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1668, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1669, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1670, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1672, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1673, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1675, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1678, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1678, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1678, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1679, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1685, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1685, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1685, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1686, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1698, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1699, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1700, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1702, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1705, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1709, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1709, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1709, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1710, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1718, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1718, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1718, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1719, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1734, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1735, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1736, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1737, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1738, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1739, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1741, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1743, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1743, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1744, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1757, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1758, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1759, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1760, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1761, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1762, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1764, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1766, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1767, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1767, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1768, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1768, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1773, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1777, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1782, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1782, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1782, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1782, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1783, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1785, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1796, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1797, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1798, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1799, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1800, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1801, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1803, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1804, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1807, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1807, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1807, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1808, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1808, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1809, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1809, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1809, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1814, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1814, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1814, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1815, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1818, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1818, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1818, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1818, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1818, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1819, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1821, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1821, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1828, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1828, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1828, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1829, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1829, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1829, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1834, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1837, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1843, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1845, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1845, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1847, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1857, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1861, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1865, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1866, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1866, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1870, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1871, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1872, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1873, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1873, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1874, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1874, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1876, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1883, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1887, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1891, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1892, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1892, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1896, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1897, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1898, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1899, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1899, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1900, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1900, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1902, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1909, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1914, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1918, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1919, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1919, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1923, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1924, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1925, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1926, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1926, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1927, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 1927, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 1929, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1937, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1941, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1944, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1945, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1945, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1946, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1946, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1951, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1952, "col_offset": 23, "nodeName": "w", "type": "Any"}, {"lineNumber": 1954, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1955, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1957, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1958, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1958, "col_offset": 15, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 1959, "col_offset": 26, "nodeName": "run", "type": "Any"}, {"lineNumber": 1959, "col_offset": 35, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1960, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 1960, "col_offset": 36, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1963, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 1963, "col_offset": 15, "nodeName": "weight_change_op", "type": "Any"}, {"lineNumber": 1965, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 1965, "col_offset": 43, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1966, "col_offset": 35, "nodeName": "run", "type": "Any"}, {"lineNumber": 1966, "col_offset": 44, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1968, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1969, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1980, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 1981, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1981, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1982, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1982, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1987, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1987, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 1987, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1988, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1992, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1992, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2000, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2000, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2001, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2002, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2002, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2003, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2003, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2007, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2010, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2012, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2013, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2014, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2019, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2022, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2022, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2024, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2024, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2026, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 2036, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2037, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2038, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2039, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2040, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2041, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2042, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2064, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2064, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2064, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2066, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2068, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2069, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2070, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2072, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2075, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2075, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2076, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2076, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2078, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2078, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2086, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2087, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2089, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2090, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2091, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2092, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2094, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2097, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2100, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2101, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2101, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2109, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2110, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2113, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2113, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2113, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2114, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2123, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2124, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2125, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2126, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2127, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2128, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2132, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2132, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2132, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2133, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2144, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2148, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2149, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2152, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2152, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2153, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2163, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2164, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2166, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2170, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2173, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2173, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2175, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2179, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2187, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2187, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2187, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2188, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 2200, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2202, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2206, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2207, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2209, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2209, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2211, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2211, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2212, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2214, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2214, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2219, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2222, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2226, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2228, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2228, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2230, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2237, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2241, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2242, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2245, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2246, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2254, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2258, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2258, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2265, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2269, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2270, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2273, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2274, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2280, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2284, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2284, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2291, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2295, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2296, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2299, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2300, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2304, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2308, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2309, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2316, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2317, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2318, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2320, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2321, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2321, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2322, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2322, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2327, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2330, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2336, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2337, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2338, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2348, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 2349, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 2350, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 2351, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 2354, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2355, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 2356, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 2380, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2380, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2380, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2382, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2383, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2384, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 2385, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2386, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2387, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2391, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2391, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2391, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2392, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2392, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2393, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 2394, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2394, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2395, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 2397, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2405, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2406, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2408, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2409, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 2411, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2412, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2413, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2416, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2420, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2421, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2421, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2430, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2435, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2436, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2441, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2441, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2441, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2442, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2453, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2455, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2456, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2458, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2459, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2464, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2468, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2468, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2468, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2469, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2481, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2485, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2486, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2490, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2490, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2491, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2502, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2503, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2504, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2505, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2509, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2513, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2513, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2515, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2520, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2523, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2531, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2531, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2531, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2532, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2543, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2546, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2551, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2553, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2553, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2555, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2562, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2564, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2569, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2570, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2572, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2572, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2574, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2574, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2575, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2576, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2578, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2578, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2586, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2590, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2592, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2596, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2597, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2605, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2610, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2610, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2618, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2622, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2623, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2627, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2628, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2634, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2639, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2639, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2647, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2651, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2652, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2656, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2657, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2661, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2666, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2666, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2677, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2678, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2679, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2681, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2682, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2686, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2686, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2686, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2687, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2687, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2688, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2692, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2692, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2695, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2700, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2701, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2711, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2713, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2715, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2716, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2716, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2717, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2717, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2722, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2726, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2732, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2733, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2734, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2735, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2736, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2747, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 2748, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2749, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 2750, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2751, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 2752, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 2753, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2754, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2755, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2757, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2758, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2761, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2762, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2764, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2766, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2771, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2772, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2775, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2776, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2780, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2795, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2796, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2800, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2802, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2804, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2806, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2810, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2814, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2818, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2819, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2825, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2826, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2828, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2828, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 2829, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2830, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2835, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2837, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2839, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2843, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2843, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 2844, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2846, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2855, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2857, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2858, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2860, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2876, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2876, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 2876, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2877, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2879, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2879, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base_errors.NotSupportedError]"}, {"lineNumber": 2879, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2880, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2885, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2888, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2895, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2895, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2896, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2897, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2897, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2898, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2898, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 2906, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2907, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2908, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2913, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2916, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2916, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2918, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2922, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2931, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 2931, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2932, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2938, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2941, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2946, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2948, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2948, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2950, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2955, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2960, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2960, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2962, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2963, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 2965, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2974, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2976, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2980, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2981, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2983, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2983, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2985, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2985, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2986, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2988, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2988, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2996, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3000, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3002, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3005, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3021, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3025, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3026, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3034, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3038, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3040, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3043, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 3049, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3053, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3054, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3062, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3066, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3067, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3070, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 3071, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3071, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3072, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3072, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3077, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3081, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3086, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 3087, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3089, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3095, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3096, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3097, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3100, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3101, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3105, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3106, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3107, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3108, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3108, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3112, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3112, "col_offset": 33, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3113, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3114, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3117, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3118, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3122, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3123, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3124, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3125, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3125, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3129, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3129, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3130, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3131, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3134, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3135, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3139, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3140, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3141, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3142, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3142, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3146, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3146, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3147, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3148, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3151, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3152, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3156, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3157, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3158, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3159, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3159, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3163, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 3163, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3164, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3165, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3168, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3169, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 3173, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3174, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3175, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3176, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3176, "col_offset": 38, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 3181, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3181, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3182, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3182, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3185, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3185, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3186, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3188, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3194, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3194, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3195, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3195, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3198, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3198, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3199, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3201, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3207, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3207, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3208, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3208, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3211, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3211, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3212, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3214, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3220, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3220, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3221, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3221, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3224, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3224, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3225, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3227, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3233, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 3233, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3234, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3234, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3237, "col_offset": 26, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 3237, "col_offset": 47, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3238, "col_offset": 43, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3240, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3246, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3246, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 3247, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3249, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3249, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 3250, "col_offset": 71, "nodeName": "x", "type": "Any"}, {"lineNumber": 3251, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3251, "col_offset": 20, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3276, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3276, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3277, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3277, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3279, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3279, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3279, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3281, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3282, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3284, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3285, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3285, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3286, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3288, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3288, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3288, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3291, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3291, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 3292, "col_offset": 6, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 3311, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3311, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3311, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 3313, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3314, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3315, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3316, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3317, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3319, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3323, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3323, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3326, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3326, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3326, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 3328, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 3336, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3336, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3337, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3337, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3339, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3343, "col_offset": 40, "nodeName": "SAME", "type": "str"}, {"lineNumber": 3345, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3350, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3350, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3352, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3353, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3354, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3354, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3361, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 3366, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 3366, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3368, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 3369, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 3371, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 3380, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 3381, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3382, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3383, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 3384, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 3386, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3388, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3389, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3389, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3389, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 3391, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 3391, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base_errors.NotConnectedError]"}, {"lineNumber": 3393, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3393, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 3394, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3397, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 3397, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3398, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3402, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "output_shape", "type": "List[Union[List[int], List[Any]]]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "padding", "type": "Any"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "stride", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "padding", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "module", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "channels", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 177, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 178, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "outputs_array", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "outputs_array_2", "type": "Any"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 263, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 269, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 289, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 289, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 293, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 294, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 302, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 314, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 318, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 326, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 326, "col_offset": 30, "nodeName": "getter", "type": "Any"}, {"lineNumber": 328, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 341, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 341, "col_offset": 51, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 341, "col_offset": 56, "nodeName": "g", "type": "Any"}, {"lineNumber": 341, "col_offset": 63, "nodeName": "g", "type": "Any"}, {"lineNumber": 341, "col_offset": 68, "nodeName": "grads1", "type": "Any"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 52, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 350, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 32, "nodeName": "num_variables", "type": "int"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 371, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 371, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 376, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 376, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 385, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 385, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 389, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 389, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 392, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 393, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 415, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 426, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 427, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 429, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 430, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 431, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 431, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 431, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 431, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 467, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 467, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 468, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 488, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 489, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 508, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 521, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 522, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 523, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 524, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 525, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 526, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 536, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 539, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 540, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 543, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 543, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 545, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 545, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 546, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 562, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 562, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 562, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 562, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 564, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 564, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 566, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 570, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 571, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 572, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 572, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 580, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 587, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 597, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 606, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 615, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 615, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 617, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 618, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 620, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 634, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 634, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 636, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 649, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 649, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 660, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 663, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 663, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 665, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 672, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 676, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 676, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 688, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 693, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 694, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 699, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 703, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 704, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 705, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 711, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 712, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 713, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 725, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 728, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 728, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 730, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 730, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 732, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 736, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 736, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 748, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 751, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 751, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 753, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 762, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 766, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 766, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 790, "col_offset": 14, "nodeName": "name", "type": "Any"}, {"lineNumber": 793, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 795, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 795, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 818, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 818, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 819, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 819, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 829, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 835, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 837, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 839, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 840, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 842, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 842, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 852, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 858, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 860, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 863, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 865, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 865, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 869, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 875, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 877, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 879, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 880, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 882, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 889, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 896, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 898, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 901, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 903, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 912, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 913, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 913, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 914, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 915, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 915, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 925, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 926, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 926, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 927, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 928, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 928, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 938, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 939, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 939, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 940, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 941, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 941, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 951, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 952, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 952, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 953, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 954, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 954, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 960, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 963, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 964, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 974, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 974, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 974, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 998, "col_offset": 9, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 999, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1018, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1021, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1022, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1023, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1024, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 1033, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 1035, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1035, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1043, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1044, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1050, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 1059, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1061, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1062, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1062, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 1063, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 1063, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 1071, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1072, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1073, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 1074, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 1079, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 1081, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1081, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1082, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1082, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 1087, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 1088, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 1093, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1104, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1104, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1126, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1126, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1126, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1131, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1140, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1140, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1140, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1144, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1144, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1144, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1147, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1148, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1154, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1163, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1163, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1167, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1167, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1167, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1170, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1171, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1187, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1194, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1200, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1204, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1205, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1207, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1208, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1209, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1209, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1209, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1223, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1223, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1224, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1237, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1237, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1238, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1241, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1241, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1242, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1259, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1259, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 1261, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1272, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1272, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1273, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1274, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1284, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1287, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1288, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1291, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1291, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1291, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1293, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1293, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1293, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1294, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1294, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1308, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1311, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1311, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1311, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1311, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1313, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1313, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1315, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1319, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1320, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1321, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1321, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1324, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1329, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1330, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1333, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1334, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1341, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1351, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1351, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1360, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1368, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1368, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1370, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1371, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1373, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1384, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1387, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1387, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1389, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1389, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1394, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1398, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1398, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1409, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1412, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1412, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1414, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1414, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1419, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1423, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1423, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1435, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1439, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1440, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1441, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1446, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1450, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1451, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1452, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1455, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1458, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1459, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1460, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1464, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 1470, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1472, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1474, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1475, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1477, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1477, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1481, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 1487, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1489, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1491, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1492, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1494, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1494, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1498, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 1504, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1506, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1508, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1509, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1511, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1511, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1520, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1521, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1521, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1522, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1523, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1523, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1533, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1534, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1534, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1535, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1536, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1536, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1546, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1547, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 1547, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 1548, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 1549, "col_offset": 6, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1549, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1555, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1558, "col_offset": 9, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1559, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1579, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1581, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1591, "col_offset": 9, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1592, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1613, "col_offset": 15, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1613, "col_offset": 26, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1615, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1617, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1629, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1629, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1629, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1643, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1643, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1643, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1647, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1647, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1647, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1650, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1651, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1678, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1678, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1679, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1679, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1680, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1683, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1685, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1685, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1686, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1686, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1687, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1690, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1709, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1709, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1710, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1710, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1711, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1713, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1716, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1718, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1718, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1719, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1719, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1720, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1722, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1725, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1744, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1744, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1745, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1747, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1747, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1747, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1748, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1748, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1766, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1767, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1768, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1773, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1777, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1778, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1779, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1782, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1785, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1786, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1787, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1808, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1814, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1814, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1818, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1819, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1828, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1828, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1829, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1829, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1829, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1834, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1845, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1845, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1863, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1863, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1865, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1865, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1866, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1871, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1871, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1871, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1872, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1873, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1874, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1889, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1889, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1891, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1891, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1892, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1897, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1897, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1897, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1898, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1899, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1900, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1916, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1916, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1918, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1918, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1919, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1924, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1924, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1924, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1925, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1926, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1927, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1944, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1945, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1946, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1951, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1952, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1955, "col_offset": 9, "nodeName": "w", "type": "Any"}, {"lineNumber": 1955, "col_offset": 18, "nodeName": "b", "type": "Any"}, {"lineNumber": 1955, "col_offset": 45, "nodeName": "w", "type": "Any"}, {"lineNumber": 1957, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1958, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1959, "col_offset": 26, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1960, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1963, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1965, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1966, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1981, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1987, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1987, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2001, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2002, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2003, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2007, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2010, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2010, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2010, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2012, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2014, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2014, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2014, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2019, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2024, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2024, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2034, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2034, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 2034, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 2070, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2075, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 2076, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2078, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2078, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2087, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2090, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 2091, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2092, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2097, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2100, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2100, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2101, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2101, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2101, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2101, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2113, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2113, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2114, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2115, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2132, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2132, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2133, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2136, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2148, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2150, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2150, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2153, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2153, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2153, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2155, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2155, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2155, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2156, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2156, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2164, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2171, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2171, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2171, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 2171, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2173, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2173, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2175, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2179, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2180, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2180, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 2181, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 2184, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2184, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2187, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2188, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2192, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2200, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2209, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2209, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2211, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2212, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2214, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2219, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2228, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2228, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2241, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2243, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2243, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2245, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2245, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2254, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2258, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2258, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2269, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2271, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2271, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2273, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2273, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2280, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2284, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2284, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2295, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2297, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2297, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2299, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2299, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2304, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2308, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2309, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2317, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 2320, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2321, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2322, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2327, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2330, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2330, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2330, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2336, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2338, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2338, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2338, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2346, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2346, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 2346, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2386, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2397, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2397, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2406, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 2409, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 2411, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 2412, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2416, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2420, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2420, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2421, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2421, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2421, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 2421, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 2441, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2441, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2442, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2445, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2468, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2468, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2469, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2474, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2485, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2487, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2488, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2491, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2491, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2491, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2493, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2493, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2493, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2494, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2494, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2504, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2510, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2511, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2511, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2511, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2511, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2513, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2513, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2515, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2520, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2521, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2521, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2522, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2523, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2524, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2524, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2525, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2528, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2528, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2531, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2532, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2537, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2543, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2553, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2553, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2562, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2572, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2572, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2574, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2575, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2576, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2578, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2590, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2593, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2594, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2596, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2596, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2605, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2610, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2610, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2622, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2624, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2625, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2627, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2627, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2634, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2639, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2639, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2651, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2653, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2654, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2656, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2656, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2661, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2666, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2666, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2681, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2683, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2684, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2686, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2687, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2688, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2688, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2692, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2695, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2700, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2700, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2715, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2716, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2717, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2722, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2726, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2726, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2726, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2732, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2733, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2736, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2736, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2736, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2759, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2759, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2759, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2759, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2759, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2763, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2763, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2763, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2764, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2773, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2773, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2773, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2773, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2773, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2777, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2777, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2777, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2777, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2778, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2780, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2781, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2797, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2803, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2803, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2803, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2804, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2810, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2814, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2815, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2818, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2819, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2820, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2820, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2820, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2820, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2820, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2828, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2828, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2829, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2830, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2843, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2843, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2844, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2846, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2863, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2863, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base_errors.IncompatibleShapeError]"}, {"lineNumber": 2865, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2876, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2876, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2877, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2878, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2879, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2879, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2880, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2881, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2888, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 2896, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2896, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2896, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2897, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2914, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2914, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2914, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 2914, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2916, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2916, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2918, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2922, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2923, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2924, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 2924, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 2927, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2931, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2932, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2938, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2948, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2948, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2960, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2960, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2962, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2965, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2966, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2967, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2974, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2983, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2983, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2985, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2986, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2988, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3000, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3003, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3003, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3005, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3005, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3006, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3021, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3025, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3026, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3038, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3041, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3041, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3043, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3043, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 3044, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 3049, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3053, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3054, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 3066, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3070, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 3071, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3072, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 3077, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3081, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3082, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3083, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3086, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 3089, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3090, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3091, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3095, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 3095, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3101, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3103, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3105, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 3105, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3106, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3108, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3108, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3112, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 3118, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3120, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3122, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3122, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3123, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3125, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3125, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3129, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3135, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3137, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3139, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3139, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3140, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3142, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3142, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3146, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3152, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3154, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3156, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3156, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3157, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3159, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3159, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3163, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3169, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 3171, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 3173, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 3173, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3174, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3176, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3176, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3181, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 3182, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3185, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3186, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3186, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3187, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3188, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3188, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3194, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 3195, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3198, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3199, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3199, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3200, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3201, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3201, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3207, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 3208, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3211, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3212, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3212, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3213, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3214, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3214, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3220, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 3221, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3224, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3225, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3225, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3226, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3227, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3227, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3233, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 3234, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 3237, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3238, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3238, "col_offset": 29, "nodeName": "Error", "type": "Type[sonnet.python.modules.base_errors.Error]"}, {"lineNumber": 3239, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 3240, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3240, "col_offset": 22, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 3246, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3249, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3250, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3260, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 3260, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 3260, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3291, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3292, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3311, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3314, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 3315, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 3316, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 3317, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 3326, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 3328, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 3328, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 3336, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3337, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3343, "col_offset": 40, "nodeName": "snt", "type": "module"}, {"lineNumber": 3352, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3354, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3355, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 3355, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 3356, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 3356, "col_offset": 17, "nodeName": "outputs_2", "type": "Any"}, {"lineNumber": 3366, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3366, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3368, "col_offset": 9, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3371, "col_offset": 6, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 3372, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3373, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 3381, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3382, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3383, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 3384, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 3389, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 3391, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 3391, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 3392, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3392, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 3397, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 3398, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "snt", "type": "module"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "new_input_shape", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 326, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 326, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 338, "col_offset": 37, "nodeName": "conv_mod1", "type": "Any"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "conv_mod2", "type": "Any"}, {"lineNumber": 341, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 52, "nodeName": "out2", "type": "Any"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 508, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 512, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 567, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 571, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 572, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 572, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 577, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 606, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 620, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 636, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 649, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 649, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 665, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 665, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 673, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 676, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 676, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 704, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 705, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 708, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 709, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 712, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 713, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 730, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 730, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 733, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 736, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 736, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 753, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 753, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 763, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 766, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 766, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 790, "col_offset": 14, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 800, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 819, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 819, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 825, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 841, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 842, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 864, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 865, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 865, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 881, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 902, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 903, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 913, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 913, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 916, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 916, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 926, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 926, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 929, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 929, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 939, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 939, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 942, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 942, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 952, "col_offset": 11, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 952, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 953, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 955, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 955, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 964, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 964, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 965, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 965, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1030, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1031, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1031, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1033, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1036, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1057, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1060, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1062, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1062, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 1063, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 1082, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 1082, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1139, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1143, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1149, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1162, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1172, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1201, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1205, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1259, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1259, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1261, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1263, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 1291, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1293, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1316, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1320, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1321, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1321, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1324, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1325, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1326, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1333, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1360, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1373, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1389, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1389, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1395, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1398, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1398, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1414, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1414, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1420, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1423, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1423, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1447, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1451, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1452, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1455, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1456, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1456, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1459, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1460, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1476, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1477, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1493, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1494, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1510, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1511, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 1521, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1521, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1522, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1524, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1524, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1534, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1534, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1535, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1537, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1537, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1547, "col_offset": 11, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1547, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 1548, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1550, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1550, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1559, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1559, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1560, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1560, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1579, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1579, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1610, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1612, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1616, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 1617, "col_offset": 34, "nodeName": "image", "type": "Any"}, {"lineNumber": 1642, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1646, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1652, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1744, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1744, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1744, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1745, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1747, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1774, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1778, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1779, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1782, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1783, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1783, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1786, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1787, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1808, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1818, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1865, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1865, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1871, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1871, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1871, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1891, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1891, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1897, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1897, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1897, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1918, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1918, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1924, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1924, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1924, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1955, "col_offset": 9, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1955, "col_offset": 18, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 1955, "col_offset": 45, "nodeName": "conv1", "type": "sonnet.python.modules.conv.CausalConv1D"}, {"lineNumber": 2008, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2010, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2010, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2012, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2013, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2013, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2014, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2014, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2076, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2078, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 2087, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2098, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2100, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2100, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2101, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2153, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2155, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2176, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2180, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2180, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2181, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2184, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2200, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2214, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2245, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2245, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2255, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2258, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2258, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2273, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2273, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2281, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2284, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2284, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2299, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2299, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2305, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2309, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2309, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2328, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2330, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2330, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2336, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2337, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2337, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2338, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2338, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2391, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2392, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2394, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2397, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2406, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2417, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2420, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2420, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 2421, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2491, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2493, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2516, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2521, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2521, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2522, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2524, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2524, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2525, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2528, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2528, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2562, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2578, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2596, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2596, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2606, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2610, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2610, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2627, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2627, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2635, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2639, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2639, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2656, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2656, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2662, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2666, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2666, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2692, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2696, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2700, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2700, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2700, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2723, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2726, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2726, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2732, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2733, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2734, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2734, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2735, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2735, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2736, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2736, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2772, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2776, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2782, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2811, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2815, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2863, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2863, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 2865, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 2867, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2891, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2892, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2896, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2919, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2923, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2924, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2924, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2927, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2928, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2929, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 2963, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2966, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2967, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2967, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2974, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2988, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 3005, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3005, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3006, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3022, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3026, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3026, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3043, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 3043, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3044, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 3050, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3054, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3054, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 3078, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3082, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3083, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3086, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3087, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 3087, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 3090, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 3091, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 3095, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 3105, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 3107, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3108, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3122, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3124, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3125, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3139, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3141, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3142, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3156, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3158, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3159, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3173, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 3175, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3176, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 3186, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3186, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3187, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3189, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3189, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3199, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3199, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3200, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3202, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3202, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3212, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3212, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3213, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3215, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3215, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3225, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3225, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3226, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3228, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3228, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3238, "col_offset": 11, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 3238, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 3239, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 3241, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 3241, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 3250, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 3250, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3251, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3251, "col_offset": 24, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3323, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3324, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 3324, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3326, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3329, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 3350, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3353, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 3355, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3355, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 3356, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 3369, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 3372, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 3373, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 3373, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 3392, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 3392, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "x", "type": "int"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "y", "type": "int"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "z", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 292, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "conv_mod2_transpose", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 393, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 424, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 427, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 427, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 427, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 427, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 567, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 568, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 571, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 572, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 582, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 606, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 636, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 646, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 647, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 649, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 665, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 674, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 676, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 700, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 701, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 730, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 733, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 734, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 736, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 753, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 763, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 764, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 766, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 784, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 787, "col_offset": 14, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 790, "col_offset": 14, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 798, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 800, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 825, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 841, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 841, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 864, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 864, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 865, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 881, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 881, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 902, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 902, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 903, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 914, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 915, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 915, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 916, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 927, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 928, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 928, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 929, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 940, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 941, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 941, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 942, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 953, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 953, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 954, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 954, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 955, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 965, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1030, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1031, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1031, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 1031, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 1033, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 1035, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1036, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1057, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 1060, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1062, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1139, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 1143, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1148, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1162, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 1163, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1163, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1171, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1201, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1202, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1205, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1205, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1205, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 1205, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1316, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1317, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1320, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1321, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1325, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1336, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1360, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1389, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1395, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1396, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1398, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1414, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1420, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1421, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1423, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1447, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1448, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1456, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1476, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1476, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1493, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1493, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1510, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1510, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 1522, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1522, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1523, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1523, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1524, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1535, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1535, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1536, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1536, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1537, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1548, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1548, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 1549, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1549, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 1550, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 1560, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1579, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1579, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1581, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1612, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1616, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1617, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1642, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1646, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1651, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1774, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1775, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1783, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1865, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1891, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1918, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 2008, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2009, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2013, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2078, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2098, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2099, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2100, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2100, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2176, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2177, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2180, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2181, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 2184, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2193, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2200, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2245, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2255, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2256, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2258, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2273, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2281, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2282, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2284, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2299, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2305, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2306, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2309, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2328, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2329, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2337, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2391, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2392, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2394, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2397, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2417, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2418, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2420, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 2420, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2516, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2517, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2521, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2522, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2524, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2525, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2528, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2538, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2562, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2596, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2606, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2607, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2610, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2627, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2635, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2636, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2639, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2656, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2662, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2663, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2666, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2692, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 2696, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2697, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2700, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2723, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2724, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2734, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2735, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2772, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 2776, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 2781, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2811, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2812, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2815, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 2815, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2815, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2815, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2815, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2816, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2891, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2892, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2919, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2920, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2923, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2924, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 2928, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 2933, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2963, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2963, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 2963, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 2966, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2967, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2974, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3005, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3022, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3023, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3026, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3043, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 3050, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3051, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3054, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 3078, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3079, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 3087, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 3107, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3107, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3124, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3124, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3141, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3141, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3158, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3158, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3175, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3175, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3187, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3187, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3188, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3188, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3189, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3200, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3200, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3201, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3201, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3202, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3213, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3213, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3214, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3214, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3215, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3226, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3226, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3227, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3227, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3228, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3239, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 3239, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 3240, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 3240, "col_offset": 26, "nodeName": "exception", "type": "Any"}, {"lineNumber": 3241, "col_offset": 42, "nodeName": "np_mask", "type": "Any"}, {"lineNumber": 3251, "col_offset": 24, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3323, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3324, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 3324, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 3324, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 3326, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 3328, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 3329, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 3350, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 3353, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3355, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3369, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 3369, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 3369, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 3372, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3373, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 107, "col_offset": 65, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "input_shape", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "stride", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "kernel_shape", "type": "List[List[int]]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 393, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 424, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 568, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 568, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 582, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 647, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 647, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 647, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 674, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 674, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 701, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 701, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 709, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 734, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 734, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 764, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 764, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 764, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 841, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 864, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 881, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 902, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 915, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 928, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 941, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 954, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1031, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1033, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1035, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1143, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1148, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1166, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1171, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1202, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1202, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1202, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1317, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1317, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1317, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1325, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1336, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1396, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1396, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1396, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1421, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1421, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1421, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1448, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1448, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1448, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1456, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1476, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1493, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1510, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1523, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1536, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1549, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 1581, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1581, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1581, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1617, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1646, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1651, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1775, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1775, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1775, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1783, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2009, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2009, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2009, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2013, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2099, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2099, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2099, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2177, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2177, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2177, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2184, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2193, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2256, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2256, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2256, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2282, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2282, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2282, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2306, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2306, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2306, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2329, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2329, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2329, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2337, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2392, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2394, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2397, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 2418, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2418, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2418, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2419, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2419, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2517, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2517, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2517, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2518, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2518, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2528, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2538, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2607, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2607, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2607, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2608, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2608, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2636, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2636, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2636, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2637, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2637, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2663, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2663, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2663, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2664, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2664, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2697, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2697, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2697, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2698, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2698, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2724, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2724, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2724, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2725, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2725, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2734, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2735, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2776, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2781, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2812, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2812, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2812, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2920, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2920, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2920, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2928, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2933, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2963, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2963, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3023, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3023, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3023, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3051, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3051, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3051, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3079, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 3079, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 3079, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 3087, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3107, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3124, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3141, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3158, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3175, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3188, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3201, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3214, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3227, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3240, "col_offset": 26, "nodeName": "cm", "type": "Any"}, {"lineNumber": 3324, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 3326, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3328, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 3369, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 3369, "col_offset": 41, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 107, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 393, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 424, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 568, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 568, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 647, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 647, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 647, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 674, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 674, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 674, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 701, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 701, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 734, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 734, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 734, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 764, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 764, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 764, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 1035, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 1148, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1171, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1202, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1202, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1202, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1317, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1317, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1317, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1396, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1396, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1396, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1421, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1421, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1421, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1448, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1448, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1448, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1581, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1581, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1617, "col_offset": 58, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1651, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1775, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1775, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1775, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 2009, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2009, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2009, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 2099, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2099, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2099, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2177, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2177, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2177, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2256, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2256, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2256, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2282, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2282, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2282, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2306, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2306, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2306, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2329, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2329, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2329, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 2397, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2418, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2418, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2418, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2419, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2419, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2517, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2517, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2517, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2518, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2518, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2607, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2607, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2607, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2608, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2608, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2636, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2636, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2636, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2637, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2637, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2663, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2663, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2663, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2664, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2664, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2697, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2697, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2697, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2698, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2698, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2724, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2724, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2724, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2725, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2725, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2781, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2812, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2812, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2812, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2920, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2920, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2920, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3023, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3023, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3023, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3051, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3051, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3051, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3079, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3079, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3079, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 3328, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}]