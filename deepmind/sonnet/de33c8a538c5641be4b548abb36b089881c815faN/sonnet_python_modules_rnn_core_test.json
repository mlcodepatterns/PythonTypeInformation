[{"lineNumber": 30, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "MASK_TUPLE", "type": "Tuple[bool, Tuple[bool, bool]]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "_state_size_tuple", "type": "Tuple[int, Tuple[int, int]]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "_state_size_element", "type": "int"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "test", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "test", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 184, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "flat_state_size", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.rnn_core.RNNCore"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "use_custom_initial_value", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "flat_initial_state", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "flat_state_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.rnn_core.RNNCore"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "tuple_state", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "trainable_state_module", "type": "sonnet.python.modules.rnn_core.TrainableInitialState"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "trainable_state", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "flat_initial_state", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "flat_trainable_state", "type": "Any"}, {"lineNumber": 185, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "RNNCore", "type": "Type[sonnet.python.modules.rnn_core.RNNCore]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "RNNCore", "type": "Type[sonnet.python.modules.rnn_core.RNNCore]"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "flat_initializer", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "trainable_initializers", "type": "None"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "flat_initial_state", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "flat_state_size", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "flat_initial_state_value", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "RNNCore", "type": "Type[sonnet.python.modules.rnn_core.RNNCore]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "RNNCore", "type": "Type[sonnet.python.modules.rnn_core.RNNCore]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "initial_state", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 114, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "TrainableInitialState", "type": "Type[sonnet.python.modules.rnn_core.TrainableInitialState]"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "trainable_state_module", "type": "sonnet.python.modules.rnn_core.TrainableInitialState"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "assert_same_structure", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "trainable_state", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "trainable_state", "type": "Any"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "mask", "type": "Any"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "flat_mask", "type": "Any"}, {"lineNumber": 140, "col_offset": 6, "nodeName": "flat_mask", "type": "Tuple[bool, ...]"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "variable", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 185, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "core", "type": "sonnet.python.modules.rnn_core.RNNCore"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "trainable_initializers", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "nest", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "nest", "type": "Any"}, {"lineNumber": 73, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "run", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "flat_initial_state", "type": "Any"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "value", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "size", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "flat_initial_state_value", "type": "Any"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "flat_state_size", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "expected_initial_state", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "nest", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "snt", "type": "module"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "flat_state_size", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "nest", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "flat_regularizer", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "core", "type": "sonnet.python.modules.rnn_core.RNNCore"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 107, "col_offset": 63, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "trainable_regularizers", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "fill", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "snt", "type": "module"}, {"lineNumber": 132, "col_offset": 75, "nodeName": "mask", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "nest", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "nest", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "nest", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "mask", "type": "Any"}, {"lineNumber": 142, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "flat_trainable_state", "type": "Any"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "flat_initial_state", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 157, "col_offset": 54, "nodeName": "flat_trainable_state", "type": "Any"}, {"lineNumber": 158, "col_offset": 54, "nodeName": "flat_initial_state", "type": "Any"}, {"lineNumber": 159, "col_offset": 54, "nodeName": "flat_mask", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "trainable_state_value", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "TrainableInitialState", "type": "Type[sonnet.python.modules.rnn_core.TrainableInitialState]"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "initial_state", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "TrainableInitialState", "type": "Type[sonnet.python.modules.rnn_core.TrainableInitialState]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "initial_state", "type": "Tuple[Any, Tuple[Any, Any]]"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 185, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 60, "col_offset": 60, "nodeName": "flat_state_size", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "nest", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "flat_initializer", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "size", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "sess", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "empty", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "use_custom_initial_value", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "expected_initial_state", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "flat_state_size", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "fill", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "nest", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "flat_initial_state", "type": "Any"}, {"lineNumber": 142, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "run", "type": "Any"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "trainable_state", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 163, "col_offset": 10, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 165, "col_offset": 10, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "trainable_state_value", "type": "Any"}, {"lineNumber": 167, "col_offset": 51, "nodeName": "expected_value", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "random_normal", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "self", "type": "TrainableInitialState"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "self", "type": "TrainableInitialState"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "size", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "fill", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "value_row", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "expected_initial_state", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "layers", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "fill", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "fill", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "run", "type": "Any"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "trainable_state", "type": "Any"}, {"lineNumber": 149, "col_offset": 55, "nodeName": "run", "type": "Any"}, {"lineNumber": 149, "col_offset": 64, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "assign", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "variable", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "initial_state_value", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "self", "type": "TrainableInitialState"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "expected_initial_state", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "fill", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "tile", "type": "Any"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "value_row", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "sess", "type": "Any"}, {"lineNumber": 149, "col_offset": 55, "nodeName": "sess", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 153, "col_offset": 50, "nodeName": "variable", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "expected_initial_state", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "tf", "type": "Any"}]