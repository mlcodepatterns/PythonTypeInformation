[{"lineNumber": 35, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 783, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 784, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 892, "col_offset": 17, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 892, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1246, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1247, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1524, "col_offset": 24, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1524, "col_offset": 61, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1581, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1582, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 1894, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 1895, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2293, "col_offset": 17, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 2293, "col_offset": 54, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 2631, "col_offset": 26, "nodeName": "ParameterizedTestCase", "type": "Type[sonnet.testing.parameterized.parameterized.ParameterizedTestCase]"}, {"lineNumber": 2632, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "use_bias", "type": "bool"}, {"lineNumber": 44, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "test", "type": "Any"}, {"lineNumber": 102, "col_offset": 2, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 2, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "test", "type": "Any"}, {"lineNumber": 783, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 784, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 892, "col_offset": 17, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 892, "col_offset": 54, "nodeName": "test", "type": "Any"}, {"lineNumber": 1246, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1247, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 1250, "col_offset": 2, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1251, "col_offset": 2, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1252, "col_offset": 2, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1253, "col_offset": 2, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1254, "col_offset": 2, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1255, "col_offset": 2, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1256, "col_offset": 2, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1257, "col_offset": 2, "nodeName": "use_bias", "type": "List[bool]"}, {"lineNumber": 1258, "col_offset": 2, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1266, "col_offset": 2, "nodeName": "in_shape", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1267, "col_offset": 2, "nodeName": "out_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1268, "col_offset": 2, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1269, "col_offset": 2, "nodeName": "kernel_shape2", "type": "Tuple[Tuple[Any, ...], ...]"}, {"lineNumber": 1270, "col_offset": 2, "nodeName": "stride_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1524, "col_offset": 24, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1524, "col_offset": 61, "nodeName": "test", "type": "Any"}, {"lineNumber": 1581, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1582, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 1894, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 1895, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 2293, "col_offset": 17, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 2293, "col_offset": 54, "nodeName": "test", "type": "Any"}, {"lineNumber": 2631, "col_offset": 26, "nodeName": "parameterized", "type": "module"}, {"lineNumber": 2632, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 2730, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 220, "col_offset": 44, "nodeName": "module_info", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 269, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "in_width", "type": "int"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 497, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 514, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 572, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 574, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 631, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 655, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 659, "col_offset": 4, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 687, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 695, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 716, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 717, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 746, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 756, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 765, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 775, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 784, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 799, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int]"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 844, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 892, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 901, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 903, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 905, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 919, "col_offset": 4, "nodeName": "output1", "type": "Any"}, {"lineNumber": 929, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 942, "col_offset": 4, "nodeName": "output2", "type": "Any"}, {"lineNumber": 952, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 963, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 964, "col_offset": 4, "nodeName": "in_length", "type": "int"}, {"lineNumber": 965, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 965, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 966, "col_offset": 4, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 981, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1005, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1054, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1073, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1084, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1085, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 1111, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1124, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1125, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1153, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1155, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1172, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1173, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1197, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1222, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1223, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1224, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1226, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1227, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1247, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1256, "col_offset": 13, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1256, "col_offset": 23, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1256, "col_offset": 33, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1256, "col_offset": 44, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1256, "col_offset": 55, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1260, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 1260, "col_offset": 9, "nodeName": "pad", "type": "str"}, {"lineNumber": 1260, "col_offset": 16, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1260, "col_offset": 26, "nodeName": "padding", "type": "List[str]"}, {"lineNumber": 1266, "col_offset": 13, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1267, "col_offset": 14, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1267, "col_offset": 20, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1268, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1268, "col_offset": 23, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1269, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1270, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1270, "col_offset": 23, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1288, "col_offset": 4, "nodeName": "image", "type": "Any"}, {"lineNumber": 1289, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1313, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1323, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1351, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1381, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1417, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1440, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1441, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1442, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1444, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1445, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1478, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1487, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1501, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1508, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1509, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1524, "col_offset": 61, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1532, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1533, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1534, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1538, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 1552, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1553, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1554, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1555, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1556, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1557, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1571, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1572, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1574, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1582, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1589, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1589, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1590, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1590, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1591, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1591, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1592, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1592, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1593, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1593, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1594, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1594, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1595, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1595, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1596, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1596, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1598, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 1599, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1600, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 1610, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1610, "col_offset": 19, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1611, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1611, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1612, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1612, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1613, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1613, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1614, "col_offset": 4, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1614, "col_offset": 19, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1615, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1615, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1617, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1626, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1630, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1648, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1664, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1683, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1705, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1716, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 1717, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 1739, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1764, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1766, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1772, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1773, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1798, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1826, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1852, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 1853, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 1873, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 1874, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1875, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1877, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1878, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1895, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1902, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1902, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1903, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1903, "col_offset": 21, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1904, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1904, "col_offset": 20, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1905, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1905, "col_offset": 23, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1906, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 1908, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1908, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1909, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1909, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1910, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1910, "col_offset": 30, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1911, "col_offset": 4, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1913, "col_offset": 4, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1913, "col_offset": 27, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1914, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 1918, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "List[int]"}, {"lineNumber": 1926, "col_offset": 4, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1926, "col_offset": 19, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 1927, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1927, "col_offset": 18, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1928, "col_offset": 4, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1928, "col_offset": 19, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1929, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1929, "col_offset": 19, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1930, "col_offset": 4, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 1930, "col_offset": 29, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 1931, "col_offset": 4, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 1931, "col_offset": 29, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 1932, "col_offset": 4, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1932, "col_offset": 25, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1934, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1943, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1950, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1968, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 1993, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2020, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2044, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2056, "col_offset": 4, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2057, "col_offset": 4, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2058, "col_offset": 4, "nodeName": "b", "type": "Any"}, {"lineNumber": 2084, "col_offset": 4, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2097, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2098, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2128, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2131, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2150, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2181, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2210, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2211, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 2228, "col_offset": 4, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2229, "col_offset": 4, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2230, "col_offset": 4, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2240, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2241, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2242, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2269, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2270, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2271, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2273, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2274, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2293, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2301, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2302, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2303, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2304, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2305, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2306, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2307, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2308, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2309, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2323, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2333, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2344, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2345, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2345, "col_offset": 15, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2345, "col_offset": 27, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2346, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2346, "col_offset": 18, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2347, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2347, "col_offset": 21, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2347, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2362, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 2416, "col_offset": 8, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2429, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2449, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2460, "col_offset": 4, "nodeName": "w", "type": "float"}, {"lineNumber": 2461, "col_offset": 4, "nodeName": "b", "type": "float"}, {"lineNumber": 2492, "col_offset": 4, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2493, "col_offset": 4, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2522, "col_offset": 4, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2524, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2542, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2580, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 2581, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2607, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 2608, "col_offset": 4, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2609, "col_offset": 4, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2611, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2612, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2632, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2639, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2640, "col_offset": 4, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2641, "col_offset": 4, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2642, "col_offset": 4, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2643, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2644, "col_offset": 4, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2645, "col_offset": 4, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2646, "col_offset": 4, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2647, "col_offset": 4, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2648, "col_offset": 4, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2649, "col_offset": 4, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2650, "col_offset": 4, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2651, "col_offset": 4, "nodeName": "padding", "type": "str"}, {"lineNumber": 2651, "col_offset": 19, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2656, "col_offset": 4, "nodeName": "out_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 2665, "col_offset": 4, "nodeName": "strides", "type": "Tuple[int, int, int]"}, {"lineNumber": 2684, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2694, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2700, "col_offset": 7, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2717, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2718, "col_offset": 4, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2719, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 2723, "col_offset": 4, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2724, "col_offset": 4, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2725, "col_offset": 4, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 2731, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "CONV_1D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 135, "col_offset": 7, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "CONV_3D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "CONV_1D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "CONV_2D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "CONV_3D_TRANSPOSE_KWARGS", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "DEPTHWISE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "IN_PLANE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 141, "col_offset": 7, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "SEPARABLE_CONV_2D_KWARGS", "type": "Dict[str, int]"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "Transposable", "type": "Type[sonnet.python.modules.base.Transposable]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 174, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "get_possible_initializer_keys", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "GLOBAL_VARIABLES", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 202, "col_offset": 6, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "module", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "module", "type": "Any"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 317, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 331, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 420, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 421, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 422, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 452, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 466, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 466, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 477, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 477, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 483, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 495, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 495, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 514, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 520, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 521, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 543, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 544, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 547, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 548, "col_offset": 6, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 571, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 571, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 572, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 574, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 574, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 575, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 575, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 586, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 608, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 631, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 632, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 637, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 638, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 647, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 651, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 652, "col_offset": 13, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 654, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 654, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 655, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 655, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 656, "col_offset": 17, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 656, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 657, "col_offset": 17, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 657, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 659, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 661, "col_offset": 18, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 662, "col_offset": 18, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 664, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 664, "col_offset": 42, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 665, "col_offset": 49, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 666, "col_offset": 31, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 680, "col_offset": 10, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 686, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 687, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 687, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 693, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 694, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 694, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 695, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 695, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 705, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 708, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 716, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 716, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 717, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 727, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 737, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 737, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 738, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 746, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 747, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 756, "col_offset": 11, "nodeName": "constant", "type": "Any"}, {"lineNumber": 757, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 767, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 775, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 777, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 793, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 795, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 799, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 801, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 801, "col_offset": 38, "nodeName": "in_height", "type": "int"}, {"lineNumber": 801, "col_offset": 54, "nodeName": "in_width", "type": "int"}, {"lineNumber": 802, "col_offset": 21, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 804, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 804, "col_offset": 22, "nodeName": "in_height", "type": "int"}, {"lineNumber": 804, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 806, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 806, "col_offset": 46, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 808, "col_offset": 26, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 808, "col_offset": 47, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 809, "col_offset": 26, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 809, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 828, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 828, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 830, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 838, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 838, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 853, "col_offset": 10, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 861, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 862, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 867, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 868, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 868, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 869, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 869, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 877, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 877, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 879, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Type[sonnet.python.modules.conv.Conv2DTranspose]"}, {"lineNumber": 887, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 889, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 889, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 900, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 901, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 902, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 903, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 905, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 907, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 919, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 919, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 934, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 942, "col_offset": 14, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 942, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 968, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 981, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 981, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1000, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1037, "col_offset": 4, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1064, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1073, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1073, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1074, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1075, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1085, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1087, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1096, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1106, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1125, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1125, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1127, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1136, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1136, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1136, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1142, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1143, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1145, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1151, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1153, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1153, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1154, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1154, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1163, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1172, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1173, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1174, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1175, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1188, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1197, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1198, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1199, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1200, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1214, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1222, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1223, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1223, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1224, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1224, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1226, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1226, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1227, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1227, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1238, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1256, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 1256, "col_offset": 23, "nodeName": "snt", "type": "module"}, {"lineNumber": 1256, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1256, "col_offset": 44, "nodeName": "snt", "type": "module"}, {"lineNumber": 1256, "col_offset": 55, "nodeName": "snt", "type": "module"}, {"lineNumber": 1261, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1261, "col_offset": 14, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1263, "col_offset": 7, "nodeName": "pad", "type": "str"}, {"lineNumber": 1263, "col_offset": 14, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1266, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1266, "col_offset": 23, "nodeName": "batch_size", "type": "List[int]"}, {"lineNumber": 1266, "col_offset": 35, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1266, "col_offset": 46, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1269, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1269, "col_offset": 28, "nodeName": "kernel_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 1269, "col_offset": 42, "nodeName": "out_channels", "type": "List[int]"}, {"lineNumber": 1269, "col_offset": 56, "nodeName": "in_channels", "type": "List[int]"}, {"lineNumber": 1279, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1288, "col_offset": 12, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1288, "col_offset": 27, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1301, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1302, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1305, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1313, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1313, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1315, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1319, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1334, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1342, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1408, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1417, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1417, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1420, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1431, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1440, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1440, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1440, "col_offset": 36, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1440, "col_offset": 47, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1441, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1441, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1442, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1442, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1444, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1444, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1445, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1445, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1456, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1470, "col_offset": 22, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1478, "col_offset": 12, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1481, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1481, "col_offset": 51, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1482, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1482, "col_offset": 56, "nodeName": "stride", "type": "Tuple[Any, ...]"}, {"lineNumber": 1483, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1483, "col_offset": 21, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1483, "col_offset": 46, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1489, "col_offset": 6, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1492, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1494, "col_offset": 4, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1494, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 1495, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1495, "col_offset": 21, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1495, "col_offset": 34, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1509, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1509, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1511, "col_offset": 12, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1519, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1521, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1521, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1521, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1532, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1533, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1533, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1534, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1540, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 1540, "col_offset": 10, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1543, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1543, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1544, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1544, "col_offset": 21, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 1544, "col_offset": 44, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1552, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1553, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1554, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1554, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1555, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1555, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1556, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1556, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1557, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1557, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1564, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1572, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1572, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1574, "col_offset": 12, "nodeName": "InPlaneConv2D", "type": "Type[sonnet.python.modules.conv.InPlaneConv2D]"}, {"lineNumber": 1576, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1578, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1578, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1578, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1587, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1589, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1589, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1590, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1590, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1591, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1591, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1592, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1592, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1593, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1593, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1594, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1594, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1595, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1595, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1596, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1596, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1596, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1598, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1598, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1598, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1598, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1598, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1599, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1599, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1599, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1600, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1600, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1600, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1600, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1600, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1601, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1601, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1601, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1602, "col_offset": 25, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1610, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1611, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 1612, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1613, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1614, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1615, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1617, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1617, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1619, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1626, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1626, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1628, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1628, "col_offset": 41, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1629, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1629, "col_offset": 42, "nodeName": "weight_shape", "type": "Any"}, {"lineNumber": 1639, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1640, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1642, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1648, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1648, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1653, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1662, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1663, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1676, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1678, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1680, "col_offset": 4, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1697, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1705, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 1705, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 1706, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 1707, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 1716, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 1717, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1719, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1726, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1736, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1752, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1753, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1755, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1762, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1764, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 1764, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 1765, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1765, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 1773, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1773, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1775, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1781, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1783, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 1783, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1783, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 1790, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1798, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1799, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1804, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1805, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1818, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1826, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1827, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1830, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1831, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1844, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1852, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1853, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1854, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1855, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1869, "col_offset": 12, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1873, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1874, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1874, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1875, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1875, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 1877, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1877, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 1878, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1878, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 1889, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1900, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 1902, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1902, "col_offset": 35, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1903, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1903, "col_offset": 33, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1904, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1904, "col_offset": 31, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1905, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1905, "col_offset": 37, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1906, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1906, "col_offset": 24, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1906, "col_offset": 36, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1906, "col_offset": 47, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1906, "col_offset": 57, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1908, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1908, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1909, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1909, "col_offset": 43, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1910, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1910, "col_offset": 51, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 1911, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1911, "col_offset": 25, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1911, "col_offset": 41, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1913, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1913, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1913, "col_offset": 59, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1914, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1914, "col_offset": 25, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 1914, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 1914, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 1914, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1916, "col_offset": 8, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 1916, "col_offset": 24, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 1916, "col_offset": 40, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1916, "col_offset": 53, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 1918, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1918, "col_offset": 41, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1918, "col_offset": 58, "nodeName": "out_channels_dw", "type": "int"}, {"lineNumber": 1926, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1927, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 1928, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1929, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 1930, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 1931, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 1932, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 1934, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1934, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1936, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 1943, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1943, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1945, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1946, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1948, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1959, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1960, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1962, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 1968, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1968, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1974, "col_offset": 6, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1984, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 1990, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2007, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2010, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2013, "col_offset": 4, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2035, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2044, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2044, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2045, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2046, "col_offset": 6, "nodeName": "err", "type": "str"}, {"lineNumber": 2056, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2057, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2058, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2059, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2067, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2081, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2098, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2098, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2100, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2107, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2109, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2109, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2109, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2115, "col_offset": 19, "nodeName": "create_separable_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2116, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2118, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2126, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2128, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2128, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2129, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2129, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2130, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2130, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2140, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2150, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2151, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2156, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2157, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2172, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2181, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2182, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2185, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2186, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2201, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2210, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2211, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2212, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2213, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2230, "col_offset": 22, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2230, "col_offset": 39, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2231, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2240, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2241, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2243, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2244, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2246, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2265, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2269, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2270, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2270, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2271, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2271, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2273, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2273, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2274, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2274, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2286, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2287, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2301, "col_offset": 17, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2302, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2303, "col_offset": 16, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2304, "col_offset": 15, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2305, "col_offset": 18, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2306, "col_offset": 19, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2307, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2308, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2309, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 2311, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2312, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2315, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2323, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2323, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2325, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2329, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2349, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2350, "col_offset": 8, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2354, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2362, "col_offset": 13, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2362, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2379, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2380, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2389, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2391, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2393, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2409, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2412, "col_offset": 4, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2439, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2449, "col_offset": 18, "nodeName": "float16", "type": "Any"}, {"lineNumber": 2449, "col_offset": 30, "nodeName": "float64", "type": "Any"}, {"lineNumber": 2450, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 2460, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2461, "col_offset": 8, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 2462, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2470, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2480, "col_offset": 9, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2493, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 2493, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2495, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2502, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2504, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 2504, "col_offset": 24, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2504, "col_offset": 38, "nodeName": "initializers_copy", "type": "Dict[str, Any]"}, {"lineNumber": 2510, "col_offset": 19, "nodeName": "create_regularizers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 2511, "col_offset": 8, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2513, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2520, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2522, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 2522, "col_offset": 43, "nodeName": "REGULARIZATION_LOSSES", "type": "Any"}, {"lineNumber": 2523, "col_offset": 4, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2523, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 2533, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2542, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2555, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2556, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2571, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2580, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2581, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2583, "col_offset": 11, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2584, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2599, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2607, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2608, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2608, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2609, "col_offset": 9, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2609, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 2611, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2611, "col_offset": 17, "nodeName": "x1", "type": "Any"}, {"lineNumber": 2612, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2612, "col_offset": 17, "nodeName": "x2", "type": "Any"}, {"lineNumber": 2623, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2637, "col_offset": 4, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 2639, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2640, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2641, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2642, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2643, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2644, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2645, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2646, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2647, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2648, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2649, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2650, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2651, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2651, "col_offset": 19, "nodeName": "snt", "type": "module"}, {"lineNumber": 2653, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2653, "col_offset": 21, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2653, "col_offset": 38, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2653, "col_offset": 53, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2654, "col_offset": 21, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2654, "col_offset": 36, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2656, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2656, "col_offset": 22, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2656, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2656, "col_offset": 53, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2658, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2658, "col_offset": 25, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2658, "col_offset": 46, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2659, "col_offset": 25, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2661, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2661, "col_offset": 26, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2661, "col_offset": 47, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2662, "col_offset": 26, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2662, "col_offset": 47, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2663, "col_offset": 26, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2665, "col_offset": 4, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2665, "col_offset": 20, "nodeName": "stride_d", "type": "int"}, {"lineNumber": 2665, "col_offset": 35, "nodeName": "stride_h", "type": "int"}, {"lineNumber": 2665, "col_offset": 50, "nodeName": "stride_w", "type": "int"}, {"lineNumber": 2684, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2684, "col_offset": 28, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2686, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2694, "col_offset": 14, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2694, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2696, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2699, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2709, "col_offset": 10, "nodeName": "Conv3DTranspose", "type": "Type[sonnet.python.modules.conv.Conv3DTranspose]"}, {"lineNumber": 2717, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2718, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2718, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2723, "col_offset": 20, "nodeName": "transpose", "type": "Callable[..., sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2724, "col_offset": 14, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2724, "col_offset": 18, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2725, "col_offset": 28, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2725, "col_offset": 42, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 2726, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2731, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "w", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "w", "type": "float"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "x", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "_fill_shape", "type": "Callable"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 135, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 141, "col_offset": 7, "nodeName": "snt", "type": "module"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "variable_axis_size_partitioner", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 150, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "partitioners", "type": "Dict[Any, Any]"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "PartitionedVariable", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "snt", "type": "module"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 176, "col_offset": 53, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "get_variables", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "graph_variables", "type": "Any"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 47, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 193, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 193, "col_offset": 46, "nodeName": "supposed_variables", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "conv_variables", "type": "Any"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 198, "col_offset": 64, "nodeName": "variable_names", "type": "Set[Any]"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 209, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 214, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 215, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 221, "col_offset": 43, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 227, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 270, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 307, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 308, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 317, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 345, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 345, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 345, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 358, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 366, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 366, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 367, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 380, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 399, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 399, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 399, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 400, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 402, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 402, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 402, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 403, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 414, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 416, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 420, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 421, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 442, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 444, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 448, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 458, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 458, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 459, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 465, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 473, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 475, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 475, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 484, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 490, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 491, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 493, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 493, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 495, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 495, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 496, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 498, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 498, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 523, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 527, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 527, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 540, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 544, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 550, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 554, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 554, "col_offset": 58, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 566, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 567, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 571, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 571, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 572, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 577, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 586, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 589, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 605, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 608, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 610, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 614, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 626, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 628, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 632, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 640, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 644, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 644, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 647, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 651, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 652, "col_offset": 13, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 654, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 654, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 659, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 661, "col_offset": 18, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 662, "col_offset": 18, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 664, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 664, "col_offset": 42, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 665, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 665, "col_offset": 49, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 666, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 666, "col_offset": 31, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 667, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 667, "col_offset": 25, "nodeName": "all_vars", "type": "Any"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 668, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 668, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 668, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 668, "col_offset": 40, "nodeName": "clone1_vars", "type": "Any"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 669, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 669, "col_offset": 25, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 669, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 669, "col_offset": 40, "nodeName": "clone2_vars", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 670, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 671, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 672, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 672, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 673, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 680, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 684, "col_offset": 30, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 686, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 687, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 687, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 690, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 690, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 692, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 692, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 693, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 696, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 697, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 705, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 707, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 708, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 709, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 712, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 717, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 718, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 719, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 720, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 727, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 727, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 733, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 734, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 738, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 739, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 740, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 741, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 741, "col_offset": 58, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 746, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 747, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 747, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 748, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "exception", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 751, "col_offset": 39, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 756, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 757, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 757, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 758, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "exception", "type": "Any"}, {"lineNumber": 760, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 765, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 767, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 767, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 768, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "exception", "type": "Any"}, {"lineNumber": 770, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 770, "col_offset": 62, "nodeName": "shape", "type": "Any"}, {"lineNumber": 775, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 777, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 777, "col_offset": 27, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 778, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "exception", "type": "Any"}, {"lineNumber": 780, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 780, "col_offset": 62, "nodeName": "shape", "type": "Any"}, {"lineNumber": 801, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 801, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 802, "col_offset": 21, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 804, "col_offset": 22, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 804, "col_offset": 38, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 806, "col_offset": 25, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 806, "col_offset": 46, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 808, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 809, "col_offset": 26, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 809, "col_offset": 45, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 828, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 828, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 828, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 830, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 831, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 832, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 833, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 834, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 836, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 840, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 843, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 845, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 853, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 854, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 855, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 856, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 857, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 859, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 861, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 862, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 862, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 864, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 864, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 866, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 866, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 867, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 870, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 871, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 876, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 879, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 885, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 887, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 887, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 900, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 901, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 902, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 903, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 905, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 907, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 912, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 913, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 914, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 917, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 930, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 934, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 935, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 936, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 937, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 940, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 945, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 953, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 968, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 969, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 975, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 976, "col_offset": 21, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 977, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 979, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 983, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 987, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 990, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 991, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1000, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1001, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1003, "col_offset": 24, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1006, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1006, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1006, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1007, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1017, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1020, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1020, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1020, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1021, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1024, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1024, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1024, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1025, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1034, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1036, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1037, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1039, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1055, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1055, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 1055, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1056, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1064, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1067, "col_offset": 31, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1068, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1073, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1073, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1074, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1084, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1085, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1087, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1091, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1092, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1096, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1096, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1098, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1102, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1112, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1112, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1112, "col_offset": 44, "nodeName": "err", "type": "str"}, {"lineNumber": 1113, "col_offset": 6, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1124, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1127, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1132, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1134, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1134, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1136, "col_offset": 4, "nodeName": "self", "type": "Conv1DTest"}, {"lineNumber": 1143, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1145, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1149, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1151, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1151, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1153, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1153, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1154, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1156, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1156, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1163, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1168, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1172, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1173, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1177, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1181, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1181, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1188, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1192, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1193, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1197, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1198, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1202, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1206, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1206, "col_offset": 55, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1214, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1218, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1219, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1222, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1223, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1223, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1224, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1224, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1229, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1233, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1238, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1239, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1241, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1261, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1262, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1263, "col_offset": 14, "nodeName": "snt", "type": "module"}, {"lineNumber": 1264, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1279, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1279, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1280, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1281, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1282, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1283, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1285, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1288, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1288, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1290, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1290, "col_offset": 33, "nodeName": "UnderspecifiedError", "type": "Type[sonnet.python.modules.base.UnderspecifiedError]"}, {"lineNumber": 1290, "col_offset": 58, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1291, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1291, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 1301, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1302, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1305, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1305, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1306, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1307, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1308, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1309, "col_offset": 39, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1311, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1315, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1316, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1319, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1320, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1324, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1334, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1335, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1336, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1338, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1339, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1341, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1342, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1343, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1344, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1346, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1347, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1349, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1352, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1352, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1352, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1353, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1359, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1359, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1359, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1360, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1372, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1373, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1374, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1376, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1379, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1383, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1383, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1383, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1384, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1392, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1392, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1392, "col_offset": 61, "nodeName": "err", "type": "str"}, {"lineNumber": 1393, "col_offset": 6, "nodeName": "Conv1DTranspose", "type": "Type[sonnet.python.modules.conv.Conv1DTranspose]"}, {"lineNumber": 1408, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1409, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1410, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1411, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1412, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1413, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1415, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1417, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1417, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1418, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1431, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1432, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1433, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1434, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1435, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1436, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1438, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1440, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1441, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1441, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1442, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1442, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1447, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1451, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1456, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1456, "col_offset": 29, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1456, "col_offset": 43, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1456, "col_offset": 57, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1457, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1459, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1470, "col_offset": 22, "nodeName": "snt", "type": "module"}, {"lineNumber": 1471, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1472, "col_offset": 21, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1473, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1474, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1475, "col_offset": 15, "nodeName": "stride_shape", "type": "Any"}, {"lineNumber": 1477, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1478, "col_offset": 12, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1481, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1481, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1481, "col_offset": 51, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1482, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1482, "col_offset": 56, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1483, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1483, "col_offset": 21, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1483, "col_offset": 46, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1488, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1488, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 1488, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1489, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1492, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1492, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1492, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1492, "col_offset": 48, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1492, "col_offset": 59, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1493, "col_offset": 26, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1495, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1495, "col_offset": 34, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1502, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1502, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 1502, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1503, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1503, "col_offset": 23, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1503, "col_offset": 53, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1508, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1511, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1517, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1519, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1519, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1521, "col_offset": 4, "nodeName": "self", "type": "Conv1DTransposeTest"}, {"lineNumber": 1532, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 1533, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1533, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1534, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1534, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1539, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1539, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 1539, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 1540, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1544, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1544, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1552, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1552, "col_offset": 55, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1553, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1554, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1554, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1555, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1555, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1559, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1562, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1564, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1565, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1566, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1571, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1574, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1574, "col_offset": 59, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1576, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1576, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1578, "col_offset": 4, "nodeName": "self", "type": "InPlaneConv2DTest"}, {"lineNumber": 1589, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 1590, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 1591, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 1592, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 1593, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1594, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1595, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 1617, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1617, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1617, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1619, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1621, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1622, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1623, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1625, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1628, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1628, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1629, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1629, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1631, "col_offset": 44, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1639, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1640, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1642, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1643, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1644, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1645, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1647, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1650, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1653, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1654, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1654, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1662, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1663, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1666, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1666, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1666, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1667, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1676, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1677, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1678, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1679, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1680, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1681, "col_offset": 33, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1685, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1685, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1685, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1686, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1697, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1701, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1702, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1705, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1705, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1706, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1716, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 1717, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1719, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1723, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1726, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1726, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1728, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1732, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1740, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1740, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1740, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1741, "col_offset": 6, "nodeName": "DepthwiseConv2D", "type": "Type[sonnet.python.modules.conv.DepthwiseConv2D]"}, {"lineNumber": 1753, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 1755, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1759, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 1760, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1762, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1762, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1764, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1764, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 1765, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1767, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 1767, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 1772, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 1775, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1779, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 1781, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 1781, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1783, "col_offset": 4, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1790, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1794, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1795, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1798, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1799, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1807, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1811, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1811, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1818, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1822, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1823, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1826, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1827, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1833, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1837, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1837, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1844, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1848, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 1849, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1852, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 1853, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1857, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1861, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1862, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 1869, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1870, "col_offset": 64, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1871, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1873, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 1874, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1874, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1875, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1875, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1880, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1883, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1889, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 1890, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1891, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1902, "col_offset": 35, "nodeName": "random", "type": "module"}, {"lineNumber": 1903, "col_offset": 33, "nodeName": "random", "type": "module"}, {"lineNumber": 1904, "col_offset": 31, "nodeName": "random", "type": "module"}, {"lineNumber": 1905, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 1908, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1909, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 1910, "col_offset": 51, "nodeName": "random", "type": "module"}, {"lineNumber": 1934, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1934, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1934, "col_offset": 46, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1936, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1937, "col_offset": 24, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1938, "col_offset": 27, "nodeName": "channel_multiplier", "type": "Any"}, {"lineNumber": 1939, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1940, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1941, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1945, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1945, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1945, "col_offset": 58, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1946, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1946, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1947, "col_offset": 8, "nodeName": "depthwise_filter_shape", "type": "Any"}, {"lineNumber": 1948, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 1948, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1949, "col_offset": 8, "nodeName": "pointwise_filter_shape", "type": "Any"}, {"lineNumber": 1951, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 1959, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1960, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1962, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 1963, "col_offset": 24, "nodeName": "out_channels_dw", "type": "Any"}, {"lineNumber": 1965, "col_offset": 21, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1966, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1967, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1970, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 1974, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1975, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 1975, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1984, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1989, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1990, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 1995, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1995, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1995, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2007, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2009, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2010, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2012, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2013, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2018, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2022, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2022, "col_offset": 33, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 2022, "col_offset": 61, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2023, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2035, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2039, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2040, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2044, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2044, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2045, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2056, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2057, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 2058, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2059, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2063, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2067, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2067, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2069, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2074, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2077, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2085, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2085, "col_offset": 33, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2085, "col_offset": 44, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 2086, "col_offset": 6, "nodeName": "SeparableConv2D", "type": "Type[sonnet.python.modules.conv.SeparableConv2D]"}, {"lineNumber": 2097, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2100, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2105, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2107, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2107, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2109, "col_offset": 4, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 2116, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2118, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2123, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2124, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2126, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2126, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2128, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2128, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2129, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2130, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2132, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2132, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2140, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2144, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2146, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2150, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2151, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2159, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2164, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2164, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2172, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2176, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2177, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2181, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2182, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2188, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2193, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2193, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2201, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2205, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2206, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2210, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2211, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2215, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2220, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2220, "col_offset": 61, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2231, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2232, "col_offset": 24, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2233, "col_offset": 27, "nodeName": "channel_multiplier", "type": "int"}, {"lineNumber": 2235, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2236, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2240, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 2240, "col_offset": 35, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 2240, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2241, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2241, "col_offset": 28, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 2242, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2246, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2246, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2249, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2254, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2255, "col_offset": 26, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2265, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2267, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2269, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2270, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2270, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2271, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2271, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2276, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2280, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2286, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2287, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2288, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2289, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2290, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2301, "col_offset": 17, "nodeName": "random", "type": "module"}, {"lineNumber": 2302, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2303, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 2304, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 2305, "col_offset": 18, "nodeName": "random", "type": "module"}, {"lineNumber": 2306, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 2307, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2308, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2309, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 2311, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2312, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2315, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2316, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2318, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2320, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2325, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2326, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2329, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2330, "col_offset": 8, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2334, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2349, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2350, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2354, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2356, "col_offset": 24, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2358, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2360, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2364, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2368, "col_offset": 20, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2372, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 2373, "col_offset": 10, "nodeName": "shape", "type": "Any"}, {"lineNumber": 2379, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2380, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2382, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2382, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 2383, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2384, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2389, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2391, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2393, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2397, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2397, "col_offset": 33, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 2398, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2400, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2409, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2411, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2412, "col_offset": 4, "nodeName": "snt", "type": "module"}, {"lineNumber": 2414, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2430, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2430, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 2430, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2431, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2433, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2433, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 2433, "col_offset": 56, "nodeName": "err", "type": "str"}, {"lineNumber": 2434, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2439, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2442, "col_offset": 31, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2449, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2449, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2450, "col_offset": 10, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2451, "col_offset": 6, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2451, "col_offset": 30, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2452, "col_offset": 30, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2452, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 2460, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2461, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 2462, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2467, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2470, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2470, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2472, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2476, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2485, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 2485, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2486, "col_offset": 6, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2492, "col_offset": 25, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2495, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2500, "col_offset": 21, "nodeName": "initializers", "type": "Dict[str, Any]"}, {"lineNumber": 2502, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2502, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2504, "col_offset": 4, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2511, "col_offset": 18, "nodeName": "l1_regularizer", "type": "Any"}, {"lineNumber": 2513, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2517, "col_offset": 21, "nodeName": "regularizers", "type": "Dict[str, Any]"}, {"lineNumber": 2518, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2520, "col_offset": 10, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 2520, "col_offset": 25, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2522, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2522, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 2523, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2525, "col_offset": 6, "nodeName": "assertRegexpMatches", "type": "Any"}, {"lineNumber": 2525, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 2533, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2537, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2539, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2542, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2558, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2562, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2563, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2571, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2575, "col_offset": 16, "nodeName": "VALID", "type": "str"}, {"lineNumber": 2577, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2580, "col_offset": 16, "nodeName": "constant", "type": "Any"}, {"lineNumber": 2586, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2590, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2591, "col_offset": 45, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 2599, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2603, "col_offset": 16, "nodeName": "SAME", "type": "str"}, {"lineNumber": 2604, "col_offset": 17, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2607, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 2608, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2608, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2609, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2609, "col_offset": 30, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2614, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 2618, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2623, "col_offset": 10, "nodeName": "randn", "type": "Any"}, {"lineNumber": 2624, "col_offset": 6, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2626, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2653, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2653, "col_offset": 38, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2654, "col_offset": 21, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2654, "col_offset": 36, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2656, "col_offset": 22, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2656, "col_offset": 37, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2656, "col_offset": 53, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2658, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2659, "col_offset": 25, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2661, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2662, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2662, "col_offset": 47, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2663, "col_offset": 26, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2665, "col_offset": 20, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2665, "col_offset": 35, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2665, "col_offset": 50, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2684, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2684, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2684, "col_offset": 46, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 2686, "col_offset": 12, "nodeName": "snt", "type": "module"}, {"lineNumber": 2687, "col_offset": 48, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2688, "col_offset": 45, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2689, "col_offset": 45, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2690, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2692, "col_offset": 41, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2696, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2696, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2699, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2699, "col_offset": 20, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2699, "col_offset": 59, "nodeName": "kernel_shape2", "type": "Any"}, {"lineNumber": 2701, "col_offset": 6, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 2709, "col_offset": 10, "nodeName": "snt", "type": "module"}, {"lineNumber": 2710, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2711, "col_offset": 43, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2712, "col_offset": 43, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 2713, "col_offset": 38, "nodeName": "padding", "type": "Any"}, {"lineNumber": 2715, "col_offset": 39, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2717, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2718, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2718, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2718, "col_offset": 52, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 2720, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2720, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 2722, "col_offset": 6, "nodeName": "net_transpose", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2722, "col_offset": 20, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 2723, "col_offset": 20, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2726, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 2726, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2727, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2731, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "conv", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "x", "type": "int"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 82, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 87, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 89, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 90, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 91, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "FillListTest"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "variables", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 174, "col_offset": 48, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 174, "col_offset": 60, "nodeName": "module_kwargs", "type": "Any"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "conv_mod", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "mod_name", "type": "str"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 202, "col_offset": 36, "nodeName": "input_shape", "type": "Tuple[int, ...]"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 211, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 223, "col_offset": 49, "nodeName": "num_input_dims", "type": "Any"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "snt", "type": "module"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "in_height", "type": "int"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "in_width", "type": "int"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 254, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "in_height", "type": "int"}, {"lineNumber": 263, "col_offset": 36, "nodeName": "in_width", "type": "int"}, {"lineNumber": 263, "col_offset": 46, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 267, "col_offset": 45, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 267, "col_offset": 58, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 270, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 293, "col_offset": 22, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 305, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 307, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "in_height", "type": "int"}, {"lineNumber": 309, "col_offset": 34, "nodeName": "in_width", "type": "int"}, {"lineNumber": 309, "col_offset": 44, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 345, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 345, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 346, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 366, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 366, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 367, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 386, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 399, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 400, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 401, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 402, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 403, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 404, "col_offset": 63, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 414, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 417, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 418, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 421, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 421, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 421, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 423, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 423, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 424, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 440, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 440, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 440, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 442, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 444, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 448, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 449, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 450, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 450, "col_offset": 32, "nodeName": "w", "type": "float"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 458, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 459, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 465, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 475, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 475, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 484, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 493, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 493, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 495, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 498, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 512, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 512, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 514, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 523, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 527, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 527, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 541, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 541, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 550, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 554, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 554, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 566, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 572, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 577, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 581, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 582, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 583, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 586, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 589, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 590, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 591, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 606, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 606, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 608, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 610, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 614, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 614, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 626, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 629, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 631, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 640, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 644, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 644, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 661, "col_offset": 18, "nodeName": "clone1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 662, "col_offset": 18, "nodeName": "clone2", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 667, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 667, "col_offset": 42, "nodeName": "net_vars", "type": "Any"}, {"lineNumber": 690, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 690, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 691, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 691, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 707, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 715, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 718, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 720, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 720, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 727, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 734, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 736, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 739, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 741, "col_offset": 6, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 741, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 747, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 747, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 748, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 748, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 751, "col_offset": 39, "nodeName": "mask", "type": "Any"}, {"lineNumber": 757, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 758, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 758, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 760, "col_offset": 65, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 760, "col_offset": 70, "nodeName": "mask", "type": "Any"}, {"lineNumber": 767, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 767, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 768, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 770, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 777, "col_offset": 9, "nodeName": "self", "type": "Conv2DTest"}, {"lineNumber": 777, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 778, "col_offset": 6, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 780, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 789, "col_offset": 10, "nodeName": "Conv2DTransposeTest", "type": "Type[Conv2DTransposeTest]"}, {"lineNumber": 789, "col_offset": 31, "nodeName": "self", "type": "Conv2DTransposeTest"}, {"lineNumber": 828, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 831, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 832, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 833, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 834, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 843, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 845, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 845, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 854, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 855, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 856, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 857, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 862, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 864, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 864, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 865, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 865, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 870, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 871, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 876, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 887, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 887, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 909, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 909, "col_offset": 27, "nodeName": "in_length", "type": "int"}, {"lineNumber": 909, "col_offset": 38, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 914, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 923, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 923, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 923, "col_offset": 36, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 927, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 927, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 927, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 930, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 931, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 937, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 946, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 946, "col_offset": 55, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 950, "col_offset": 13, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 950, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 950, "col_offset": 40, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 953, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 954, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 970, "col_offset": 27, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 977, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 983, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 987, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 988, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 990, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 991, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 992, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 992, "col_offset": 23, "nodeName": "in_length", "type": "int"}, {"lineNumber": 992, "col_offset": 34, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 1006, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1006, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1007, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1020, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1020, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1021, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1024, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1024, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1025, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1042, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1042, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 1044, "col_offset": 8, "nodeName": "Conv1D", "type": "Type[sonnet.python.modules.conv.Conv1D]"}, {"lineNumber": 1055, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1055, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1056, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1057, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1067, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 1070, "col_offset": 36, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1071, "col_offset": 37, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1074, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1074, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1074, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1076, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1076, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1076, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1077, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1077, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1091, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1094, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1094, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1094, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 1094, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1096, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1096, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1098, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1102, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1103, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1104, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 1104, "col_offset": 29, "nodeName": "w", "type": "float"}, {"lineNumber": 1107, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1112, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1113, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1116, "col_offset": 25, "nodeName": "SAME", "type": "str"}, {"lineNumber": 1117, "col_offset": 26, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1124, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1134, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1134, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1143, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1151, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1151, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1153, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1154, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1156, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1170, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1170, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1172, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1172, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1177, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1181, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1181, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1192, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1195, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1195, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1197, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1197, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1202, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1206, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1206, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1218, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1222, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1223, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1224, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1229, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1233, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1234, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1235, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1238, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1241, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1242, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1243, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1262, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1264, "col_offset": 6, "nodeName": "out_length", "type": "List[int]"}, {"lineNumber": 1290, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1290, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1303, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1303, "col_offset": 27, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1303, "col_offset": 38, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1317, "col_offset": 13, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1317, "col_offset": 25, "nodeName": "out_length", "type": "Any"}, {"lineNumber": 1317, "col_offset": 37, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1321, "col_offset": 16, "nodeName": "kernel_shape", "type": "Any"}, {"lineNumber": 1321, "col_offset": 30, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1321, "col_offset": 44, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1324, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1325, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1352, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1352, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1353, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1353, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1354, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1357, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1359, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1359, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1360, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1360, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1361, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1364, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1383, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1383, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1384, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1384, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1385, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1387, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1390, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1392, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1392, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1393, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1393, "col_offset": 42, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1394, "col_offset": 39, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 1396, "col_offset": 34, "nodeName": "padding", "type": "Any"}, {"lineNumber": 1399, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1418, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1418, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1419, "col_offset": 52, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1421, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1421, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1421, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1422, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1422, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1440, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1441, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1442, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1447, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1451, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1452, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1453, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1456, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1459, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1460, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1461, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1482, "col_offset": 25, "nodeName": "stride", "type": "Any"}, {"lineNumber": 1488, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1488, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1492, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 1493, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1502, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1502, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1503, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1503, "col_offset": 23, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1503, "col_offset": 53, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1508, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1519, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1519, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1533, "col_offset": 58, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 1539, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1539, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1553, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1554, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1555, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1559, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1562, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1562, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1562, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1564, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1566, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1566, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1566, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1571, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1576, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1576, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1587, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1587, "col_offset": 10, "nodeName": "DepthwiseConv2DTest", "type": "Type[DepthwiseConv2DTest]"}, {"lineNumber": 1587, "col_offset": 31, "nodeName": "self", "type": "DepthwiseConv2DTest"}, {"lineNumber": 1623, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1628, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 1629, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1631, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1631, "col_offset": 23, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1640, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1643, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 1644, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 1645, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1650, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1653, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1653, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1654, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1654, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1654, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1654, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1666, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1666, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1667, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1668, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1685, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1685, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1686, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1689, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1701, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1703, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1703, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1706, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1706, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1706, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 1708, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 1708, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1708, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 1709, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1709, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 1717, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1724, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1724, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 1724, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 1724, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1726, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1726, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1728, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1732, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1733, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1733, "col_offset": 26, "nodeName": "full", "type": "Any"}, {"lineNumber": 1734, "col_offset": 28, "nodeName": "w", "type": "float"}, {"lineNumber": 1737, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 1737, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 1740, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1741, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1745, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1753, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1762, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1762, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1764, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1765, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1767, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1772, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1781, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1781, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1794, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1796, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1796, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1798, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1798, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1807, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1811, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1811, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1822, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1824, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1824, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1826, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1826, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1833, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1837, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1837, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1848, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1850, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 1850, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1852, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1852, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1857, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1861, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1862, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 1870, "col_offset": 64, "nodeName": "snt", "type": "module"}, {"lineNumber": 1873, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1874, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1875, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 1880, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1883, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1883, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1883, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1889, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 1891, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1891, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1891, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1900, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 1900, "col_offset": 10, "nodeName": "SeparableConv2DTest", "type": "Type[SeparableConv2DTest]"}, {"lineNumber": 1900, "col_offset": 31, "nodeName": "self", "type": "SeparableConv2DTest"}, {"lineNumber": 1940, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1951, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1951, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 1960, "col_offset": 45, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1963, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 1965, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 1966, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 1970, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1974, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1974, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 1975, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 1975, "col_offset": 23, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 1975, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 1975, "col_offset": 48, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 1995, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 1995, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 1996, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 1999, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2022, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2022, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2023, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2028, "col_offset": 35, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2039, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2041, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2042, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2045, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2045, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2045, "col_offset": 51, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2047, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2047, "col_offset": 35, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 2047, "col_offset": 46, "nodeName": "err", "type": "str"}, {"lineNumber": 2048, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2048, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 2058, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2064, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2065, "col_offset": 12, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2065, "col_offset": 18, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2065, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 2065, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2067, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2067, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2069, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2074, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2075, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2075, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2076, "col_offset": 28, "nodeName": "w_dw", "type": "float"}, {"lineNumber": 2077, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2078, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2078, "col_offset": 29, "nodeName": "full", "type": "Any"}, {"lineNumber": 2079, "col_offset": 28, "nodeName": "w_pw", "type": "float"}, {"lineNumber": 2082, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2082, "col_offset": 44, "nodeName": "b", "type": "Any"}, {"lineNumber": 2085, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2086, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2091, "col_offset": 19, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2097, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2107, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2107, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2116, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2126, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2126, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2128, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2129, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2130, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2132, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2144, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2147, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2148, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2150, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2150, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2159, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2164, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2164, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2176, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2178, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2179, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2181, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2181, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2188, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2193, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2193, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2205, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2207, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2208, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2210, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2210, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2215, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2220, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2220, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2235, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2237, "col_offset": 21, "nodeName": "create_separable_constant_initializers", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 2238, "col_offset": 27, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2240, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 2241, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2242, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2242, "col_offset": 34, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2246, "col_offset": 65, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2249, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2254, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2254, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2269, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2270, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2271, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2276, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2280, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2280, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2280, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2286, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2287, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 2290, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2290, "col_offset": 26, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2290, "col_offset": 39, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2313, "col_offset": 15, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2313, "col_offset": 27, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2313, "col_offset": 37, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2313, "col_offset": 48, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2313, "col_offset": 58, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2317, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2317, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2317, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2318, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2327, "col_offset": 13, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2327, "col_offset": 25, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2327, "col_offset": 35, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2327, "col_offset": 46, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2327, "col_offset": 56, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2331, "col_offset": 13, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2331, "col_offset": 29, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2331, "col_offset": 45, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2331, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2332, "col_offset": 13, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2334, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2335, "col_offset": 10, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2351, "col_offset": 39, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2357, "col_offset": 22, "nodeName": "kernel_shape_d", "type": "int"}, {"lineNumber": 2357, "col_offset": 38, "nodeName": "kernel_shape_h", "type": "int"}, {"lineNumber": 2357, "col_offset": 54, "nodeName": "kernel_shape_w", "type": "int"}, {"lineNumber": 2358, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2364, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2368, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 2369, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 2372, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2373, "col_offset": 10, "nodeName": "output_eval", "type": "Any"}, {"lineNumber": 2374, "col_offset": 11, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2374, "col_offset": 23, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2374, "col_offset": 33, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2374, "col_offset": 44, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2374, "col_offset": 54, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2382, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2382, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2383, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2384, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2397, "col_offset": 9, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2397, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2398, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2400, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2417, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 2417, "col_offset": 35, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 2419, "col_offset": 8, "nodeName": "Conv3D", "type": "Type[sonnet.python.modules.conv.Conv3D]"}, {"lineNumber": 2430, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2430, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2431, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2432, "col_offset": 58, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2433, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2433, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2434, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2435, "col_offset": 66, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2442, "col_offset": 31, "nodeName": "snt", "type": "module"}, {"lineNumber": 2450, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2450, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2450, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 2451, "col_offset": 6, "nodeName": "self", "type": "Conv3DTest"}, {"lineNumber": 2468, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2468, "col_offset": 50, "nodeName": "w", "type": "float"}, {"lineNumber": 2468, "col_offset": 53, "nodeName": "b", "type": "float"}, {"lineNumber": 2468, "col_offset": 56, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2470, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2470, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2472, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2476, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2477, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2478, "col_offset": 10, "nodeName": "full", "type": "Any"}, {"lineNumber": 2478, "col_offset": 35, "nodeName": "w", "type": "float"}, {"lineNumber": 2481, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 2485, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2486, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 2492, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2502, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2502, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2511, "col_offset": 18, "nodeName": "layers", "type": "Any"}, {"lineNumber": 2520, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2520, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2522, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2523, "col_offset": 29, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2525, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2537, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2540, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2540, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2542, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2542, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2543, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2558, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2562, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2563, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2575, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2578, "col_offset": 21, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 2578, "col_offset": 60, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2580, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2580, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2581, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 2586, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2590, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2591, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 2603, "col_offset": 16, "nodeName": "snt", "type": "module"}, {"lineNumber": 2607, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 2608, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2609, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 2614, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2618, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2619, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2620, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2623, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 2626, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2627, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2628, "col_offset": 10, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2637, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 2637, "col_offset": 10, "nodeName": "Conv3DTransposeTest", "type": "Type[Conv3DTransposeTest]"}, {"lineNumber": 2637, "col_offset": 31, "nodeName": "self", "type": "Conv3DTransposeTest"}, {"lineNumber": 2684, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2687, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2688, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2689, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 2690, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 2699, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 2701, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 2701, "col_offset": 22, "nodeName": "is_compatible_with", "type": "Any"}, {"lineNumber": 2710, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2711, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 2712, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 2713, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 2718, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 2720, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 2720, "col_offset": 33, "nodeName": "snt", "type": "module"}, {"lineNumber": 2721, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 2721, "col_offset": 44, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 2726, "col_offset": 21, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 2727, "col_offset": 21, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "x", "type": "int"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "x", "type": "int"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "key", "type": "Any"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "inputs_data", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 301, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 390, "col_offset": 24, "nodeName": "rate", "type": "Union[float, int]"}, {"lineNumber": 421, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 445, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 449, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 450, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 455, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 484, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 498, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 514, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 514, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 527, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 527, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 551, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 554, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 554, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 578, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 582, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 583, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 586, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 587, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 590, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 591, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 608, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 611, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 614, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 614, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 631, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 631, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 641, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 644, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 644, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 670, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 671, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 672, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 673, "col_offset": 21, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 691, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 691, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 696, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 697, "col_offset": 24, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 719, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 720, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 720, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 740, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 741, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 768, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 768, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 778, "col_offset": 6, "nodeName": "snt", "type": "module"}, {"lineNumber": 778, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 840, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 841, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 841, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 865, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 865, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 932, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 945, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 955, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 984, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 988, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1042, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1042, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 1044, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 1046, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 1074, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1076, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1099, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1103, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1104, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1104, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1108, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1109, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 1116, "col_offset": 25, "nodeName": "snt", "type": "module"}, {"lineNumber": 1143, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1156, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1172, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1172, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1178, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1181, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1181, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1197, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1197, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1203, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1206, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1206, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1230, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1234, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1235, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1238, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1239, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1239, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1242, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1243, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1262, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1262, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1288, "col_offset": 55, "nodeName": "in_shape", "type": "Any"}, {"lineNumber": 1316, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1320, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1326, "col_offset": 15, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1418, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1418, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1418, "col_offset": 43, "nodeName": "in_length", "type": "Any"}, {"lineNumber": 1419, "col_offset": 31, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 1421, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1448, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1452, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1453, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1456, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1457, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1457, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1460, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1461, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1482, "col_offset": 25, "nodeName": "conv1_transpose", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1492, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1560, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1562, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1562, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1564, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1565, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1565, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1566, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1566, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1629, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1631, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 1640, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1651, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1653, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1653, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1654, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 1706, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1708, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 1729, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1733, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 1733, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1734, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1737, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1737, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1753, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 1767, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 1798, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1798, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1808, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1811, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1811, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1826, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1826, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1834, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1837, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 1837, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1852, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 1852, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 1858, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1862, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1862, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 1881, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1883, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1883, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1889, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 1890, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 1890, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 1891, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 1891, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 1945, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1946, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1948, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1951, "col_offset": 62, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 1960, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 1971, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 1974, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1974, "col_offset": 50, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 1975, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 2045, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2047, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2070, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2075, "col_offset": 10, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2075, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2076, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2078, "col_offset": 10, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2078, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 2079, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2082, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2082, "col_offset": 28, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2116, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2132, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2150, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2150, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2160, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2164, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2164, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2181, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2181, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2189, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2193, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2193, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2210, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2210, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2216, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2220, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2220, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2246, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2250, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2254, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 2254, "col_offset": 37, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2254, "col_offset": 56, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 2277, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2280, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2280, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2286, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2287, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 2288, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2288, "col_offset": 24, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2289, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2289, "col_offset": 24, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2290, "col_offset": 26, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2290, "col_offset": 39, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2326, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2330, "col_offset": 8, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2336, "col_offset": 15, "nodeName": "out_channels", "type": "int"}, {"lineNumber": 2365, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2369, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 2417, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 2417, "col_offset": 35, "nodeName": "snt", "type": "module"}, {"lineNumber": 2419, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 2421, "col_offset": 24, "nodeName": "rate", "type": "Union[int, float]"}, {"lineNumber": 2445, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2446, "col_offset": 32, "nodeName": "constant_initializer", "type": "Any"}, {"lineNumber": 2450, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 2473, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2477, "col_offset": 10, "nodeName": "w", "type": "Any"}, {"lineNumber": 2478, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2478, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2481, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2482, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2483, "col_offset": 13, "nodeName": "b", "type": "float"}, {"lineNumber": 2511, "col_offset": 18, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 2525, "col_offset": 31, "nodeName": "graph_regularizers", "type": "Any"}, {"lineNumber": 2542, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2542, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2543, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2559, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2563, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2563, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2580, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 2580, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 2581, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 2587, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2591, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2591, "col_offset": 21, "nodeName": "eval", "type": "Any"}, {"lineNumber": 2615, "col_offset": 6, "nodeName": "variables_initializer", "type": "Any"}, {"lineNumber": 2619, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2620, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2623, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 2624, "col_offset": 6, "nodeName": "assign", "type": "Any"}, {"lineNumber": 2624, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 2627, "col_offset": 10, "nodeName": "out1", "type": "Any"}, {"lineNumber": 2628, "col_offset": 10, "nodeName": "out2", "type": "Any"}, {"lineNumber": 2696, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2697, "col_offset": 28, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 2697, "col_offset": 46, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2699, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2702, "col_offset": 11, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 2721, "col_offset": 33, "nodeName": "err", "type": "str"}, {"lineNumber": 2721, "col_offset": 44, "nodeName": "net", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 271, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 301, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 302, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 305, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 305, "col_offset": 40, "nodeName": "in_height", "type": "int"}, {"lineNumber": 305, "col_offset": 51, "nodeName": "in_width", "type": "int"}, {"lineNumber": 305, "col_offset": 61, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 445, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 446, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 449, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 460, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 484, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 514, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 525, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 527, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 543, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 551, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 552, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 554, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 578, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 579, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 608, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 611, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 614, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 631, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 641, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 642, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 644, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 670, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 671, "col_offset": 21, "nodeName": "clone1_out", "type": "Any"}, {"lineNumber": 672, "col_offset": 21, "nodeName": "net_out", "type": "Any"}, {"lineNumber": 673, "col_offset": 21, "nodeName": "clone2_out", "type": "Any"}, {"lineNumber": 696, "col_offset": 24, "nodeName": "net_transposed_output", "type": "Any"}, {"lineNumber": 697, "col_offset": 24, "nodeName": "input_to_net", "type": "Any"}, {"lineNumber": 719, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 719, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 720, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 740, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 740, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 741, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 840, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 841, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 841, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 845, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 846, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "output1", "type": "Any"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 931, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 945, "col_offset": 8, "nodeName": "output2", "type": "Any"}, {"lineNumber": 946, "col_offset": 25, "nodeName": "in_length", "type": "int"}, {"lineNumber": 946, "col_offset": 37, "nodeName": "kernel_shape", "type": "int"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 954, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 984, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 985, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 988, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 988, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 988, "col_offset": 40, "nodeName": "in_length", "type": "int"}, {"lineNumber": 988, "col_offset": 51, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 1099, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1100, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1103, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1104, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 1108, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 1119, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1143, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1172, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1178, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1179, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1181, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1197, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 1203, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1204, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1206, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1230, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1231, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1239, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1262, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1262, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1264, "col_offset": 51, "nodeName": "kernel_shape", "type": "List[int]"}, {"lineNumber": 1316, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 1320, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 1325, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1448, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1449, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1457, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1560, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1561, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1565, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1631, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1651, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1652, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1653, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1653, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 1729, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1730, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1733, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1734, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 1737, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 1746, "col_offset": 29, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1753, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1798, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1808, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1809, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1811, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1826, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1834, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1835, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1837, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 1852, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 1858, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1859, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1862, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 1881, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1882, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1890, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 1945, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 1946, "col_offset": 20, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 1948, "col_offset": 20, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 1951, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 1971, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1972, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 1974, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 1974, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 2070, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2071, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2075, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2076, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2078, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2079, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 2082, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 2092, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2116, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2150, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2160, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2161, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2164, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2181, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2189, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2190, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2193, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2210, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 2216, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2217, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2220, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2246, "col_offset": 20, "nodeName": "out", "type": "Any"}, {"lineNumber": 2250, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2251, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2254, "col_offset": 37, "nodeName": "out", "type": "Any"}, {"lineNumber": 2277, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2278, "col_offset": 47, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2288, "col_offset": 6, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2289, "col_offset": 6, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2326, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 2330, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 2335, "col_offset": 10, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2365, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2366, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2369, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 2369, "col_offset": 28, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 2369, "col_offset": 40, "nodeName": "in_depth", "type": "int"}, {"lineNumber": 2369, "col_offset": 50, "nodeName": "in_height", "type": "int"}, {"lineNumber": 2369, "col_offset": 61, "nodeName": "in_width", "type": "int"}, {"lineNumber": 2370, "col_offset": 28, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 2445, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2446, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2473, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2474, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2477, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2478, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 2482, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 2487, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 2511, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2542, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2559, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2560, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2563, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2580, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 2587, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2588, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2591, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 2615, "col_offset": 6, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2616, "col_offset": 32, "nodeName": "use_bias", "type": "Any"}, {"lineNumber": 2624, "col_offset": 6, "nodeName": "w", "type": "Any"}, {"lineNumber": 2696, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 2697, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 2697, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 2697, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 2699, "col_offset": 20, "nodeName": "w", "type": "Any"}, {"lineNumber": 2701, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 2702, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 271, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 302, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 446, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 446, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 446, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 460, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 525, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 525, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 525, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 552, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 552, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 579, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 587, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 612, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 612, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 642, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 642, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 642, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 719, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 740, "col_offset": 32, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 845, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 931, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 954, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 985, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 985, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 985, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1100, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1100, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1100, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1108, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1119, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1179, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1179, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1179, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1204, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1204, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1204, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1231, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1231, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1231, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1239, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1264, "col_offset": 24, "nodeName": "in_length", "type": "List[int]"}, {"lineNumber": 1264, "col_offset": 39, "nodeName": "stride", "type": "List[int]"}, {"lineNumber": 1264, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 1320, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1325, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 1449, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1449, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1449, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1457, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1561, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1561, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1561, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1565, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1652, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1652, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1652, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1730, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1730, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1730, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1737, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1746, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 1809, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1809, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1809, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1835, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1835, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1835, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1859, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1859, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1859, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1882, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 1882, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 1882, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 1890, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1946, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1948, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1951, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 1972, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 1972, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 1972, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 1973, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 1973, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2071, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2071, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2071, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2072, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2072, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2082, "col_offset": 28, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2092, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2161, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2161, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2161, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2162, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2162, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2190, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2190, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2190, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2191, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2191, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2217, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2217, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2217, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2218, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2218, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2251, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2251, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2251, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2252, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2252, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2278, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2278, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2278, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 2279, "col_offset": 11, "nodeName": "w_dw", "type": "Any"}, {"lineNumber": 2279, "col_offset": 23, "nodeName": "w_pw", "type": "Any"}, {"lineNumber": 2288, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2289, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2330, "col_offset": 8, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2335, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 2366, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2366, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2366, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2474, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2474, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2474, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2482, "col_offset": 12, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2487, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 2560, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2560, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2560, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2588, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2588, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2588, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2616, "col_offset": 11, "nodeName": "w", "type": "Any"}, {"lineNumber": 2616, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 2616, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 2624, "col_offset": 6, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2697, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 2699, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}, {"lineNumber": 2701, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 271, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 302, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 446, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 446, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 446, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 525, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 525, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 525, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 552, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 552, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 579, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 579, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 612, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 612, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 642, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 642, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 642, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 845, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv2DTranspose"}, {"lineNumber": 931, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 954, "col_offset": 10, "nodeName": "conv2", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 985, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 985, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 985, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1100, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1100, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1100, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1179, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1179, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1179, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1204, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1204, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1204, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1231, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1231, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1231, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1D"}, {"lineNumber": 1264, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 1264, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 1325, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1449, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1449, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1449, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv1DTranspose"}, {"lineNumber": 1561, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1561, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1561, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.InPlaneConv2D"}, {"lineNumber": 1652, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1652, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1652, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1730, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1730, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1730, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1809, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1809, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1809, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1835, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1835, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1835, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1859, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1859, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1859, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1882, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1882, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1882, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.DepthwiseConv2D"}, {"lineNumber": 1951, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1972, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1972, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1972, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1973, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 1973, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2071, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2071, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2071, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2072, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2072, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2161, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2161, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2161, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2162, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2162, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2190, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2190, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2190, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2191, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2191, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2217, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2217, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2217, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2218, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2218, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2251, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2251, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2251, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2252, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2252, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2278, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2278, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2278, "col_offset": 35, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2279, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2279, "col_offset": 23, "nodeName": "conv1", "type": "sonnet.python.modules.conv.SeparableConv2D"}, {"lineNumber": 2335, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2366, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2366, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2366, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2474, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2474, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2474, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2560, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2560, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2560, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2588, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2588, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2588, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2616, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2616, "col_offset": 20, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2616, "col_offset": 47, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3D"}, {"lineNumber": 2701, "col_offset": 22, "nodeName": "conv1", "type": "sonnet.python.modules.conv.Conv3DTranspose"}]