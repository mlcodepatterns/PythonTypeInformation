[{"lineNumber": 235, "col_offset": 0, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "logging", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "logging", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 29, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "base", "type": "module"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "base", "type": "module"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "base", "type": "module"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "base", "type": "module"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "base", "type": "module"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 236, "col_offset": 2, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 2, "nodeName": "weight", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "test", "type": "Any"}, {"lineNumber": 271, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "test_cases", "type": "List[Tuple[str, str]]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test", "type": "functools.partial[nothing]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "keys", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "connected_subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "module", "type": "NoInitIdentityModule"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "module", "type": "NoSuperInitIdentityModule"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "module", "type": "IdentityModule"}, {"lineNumber": 236, "col_offset": 52, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "weight", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "in_size", "type": "int"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "build", "type": "functools.partial[nothing]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 272, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "custom_key", "type": "bool"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "camel_case", "type": "str"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "snake_case", "type": "str"}, {"lineNumber": 92, "col_offset": 6, "nodeName": "actual", "type": "str"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "test", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "test", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "test", "type": "functools.partial[nothing]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertName", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "_name_for_callable", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "func", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "PY3", "type": "bool"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "msg", "type": "str"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "get_possible_initializer_keys", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "keys", "type": "Set[str]"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "graph", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "name_scopes", "type": "Tuple[Any, ...]"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 6, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 6, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 190, "col_offset": 6, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "builder", "type": "Any"}, {"lineNumber": 195, "col_offset": 40, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 199, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 200, "col_offset": 47, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 201, "col_offset": 47, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "blah_outputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assertIs", "type": "Any"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "baz_outputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "module_name", "type": "Any"}, {"lineNumber": 223, "col_offset": 13, "nodeName": "NoSuperInitIdentityModule", "type": "Type[NoSuperInitIdentityModule]"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "IdentityModule", "type": "Type[IdentityModule]"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "weight_shape", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 238, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "cm", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "float32", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "_make_model_with_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "build", "type": "functools.partial[nothing]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "in_size", "type": "int"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "sess", "type": "Any"}, {"lineNumber": 272, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "_to_snake_case", "type": "Callable[[Any], str]"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "camel_case", "type": "str"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "actual", "type": "str"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "snake_case", "type": "str"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "InternalFunctionTest"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "self", "type": "InternalFunctionTest"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "functools", "type": "module"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "test", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "self", "type": "InternalFunctionTest"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "InternalFunctionTest"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "Test", "type": "Type[Any]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "base", "type": "module"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "self", "type": "InternalFunctionTest"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "ModuleWithClassKeys", "type": "Type[ModuleWithClassKeys]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "ModuleWithNoInitializerKeys", "type": "Type[ModuleWithNoInitializerKeys]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "six", "type": "module"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "ModuleWithCustomInitializerKeys", "type": "Type[ModuleWithCustomInitializerKeys]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 148, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "_graph", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "graph", "type": "Any"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 165, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 168, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 169, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "NotConnectedError", "type": "Type[sonnet.python.modules.base.NotConnectedError]"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "blah_inputs", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "baz_inputs", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "last_connected_subgraph", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 194, "col_offset": 50, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "args", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 209, "col_offset": 6, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 213, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 214, "col_offset": 6, "nodeName": "NoInitIdentityModule", "type": "Type[NoInitIdentityModule]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "module", "type": "NoInitIdentityModule"}, {"lineNumber": 224, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "NotInitializedError", "type": "Type[sonnet.python.modules.base.NotInitializedError]"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "module", "type": "NoSuperInitIdentityModule"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "NotSupportedError", "type": "Type[sonnet.python.modules.base.NotSupportedError]"}, {"lineNumber": 232, "col_offset": 6, "nodeName": "dumps", "type": "Callable[..., bytes]"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "module", "type": "IdentityModule"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 237, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 245, "col_offset": 6, "nodeName": "Module", "type": "Type[sonnet.python.modules.base.Module]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "exception", "type": "Any"}, {"lineNumber": 252, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "functools", "type": "module"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "base", "type": "module"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "model", "type": "sonnet.python.modules.base.Module"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "run", "type": "Any"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "run", "type": "Any"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 268, "col_offset": 36, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 272, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "base", "type": "module"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "self", "type": "InternalFunctionTest"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "functools", "type": "module"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 149, "col_offset": 6, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "DifferentGraphError", "type": "Type[sonnet.python.modules.base.DifferentGraphError]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 168, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 180, "col_offset": 6, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 188, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "float32", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "id_mod", "type": "IdentityModule"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 213, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 224, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "base", "type": "module"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "base", "type": "module"}, {"lineNumber": 232, "col_offset": 6, "nodeName": "pickle", "type": "module"}, {"lineNumber": 244, "col_offset": 9, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 245, "col_offset": 6, "nodeName": "base", "type": "module"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "cm", "type": "Any"}, {"lineNumber": 252, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 252, "col_offset": 60, "nodeName": "in_size", "type": "int"}, {"lineNumber": 253, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 253, "col_offset": 60, "nodeName": "in_size", "type": "int"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 9, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 263, "col_offset": 6, "nodeName": "sess", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "sess", "type": "Any"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "outputs1", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "outputs2", "type": "Any"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "self", "type": "ModuleTest"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "camel_case", "type": "str"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "actual", "type": "str"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "snake_case", "type": "str"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "self", "type": "AbstractModuleTest"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "base", "type": "module"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "inputs1", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "inputs2", "type": "Any"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "subgraphs", "type": "Tuple[Any, ...]"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "tf", "type": "Any"}]