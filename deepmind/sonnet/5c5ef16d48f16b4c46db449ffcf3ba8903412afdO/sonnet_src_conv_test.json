[{"lineNumber": 30, "col_offset": 0, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 319, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 31, "col_offset": 5, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 319, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 373, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "i", "type": "Any"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "i", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "reached", "type": "bool"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "err", "type": "float"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "conv2", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "iterations", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "out1", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "out2", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv2D"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv2D"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv1D"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "expected_out", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 7, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv1D"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv3D"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.Conv3D"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 375, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "conv_padding", "type": "str"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "padding_func", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "called", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "assertNear", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "conv2", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "iterations", "type": "int"}, {"lineNumber": 152, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 153, "col_offset": 6, "nodeName": "y1", "type": "Any"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "y2", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 166, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 184, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 215, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 10, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 222, "col_offset": 10, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.src.conv.Conv2D]"}, {"lineNumber": 242, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv2D"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 244, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "Conv2D", "type": "Type[sonnet.src.conv.Conv2D]"}, {"lineNumber": 263, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv2D"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "expected_out", "type": "List[List[int]]"}, {"lineNumber": 269, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 271, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.src.conv.Conv1D]"}, {"lineNumber": 287, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv1D"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 293, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 295, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "expected_out", "type": "List[int]"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "Conv1D", "type": "Type[sonnet.src.conv.Conv1D]"}, {"lineNumber": 312, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv1D"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 314, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 316, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 333, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.src.conv.Conv3D]"}, {"lineNumber": 343, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv3D"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 345, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 347, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 356, "col_offset": 6, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "Conv3D", "type": "Type[sonnet.src.conv.Conv3D]"}, {"lineNumber": 366, "col_offset": 10, "nodeName": "conv1", "type": "sonnet.src.conv.Conv3D"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 368, "col_offset": 10, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 368, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 370, "col_offset": 44, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 375, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "w", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "b", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "Constant", "type": "Type[sonnet.src.initializers.Constant]"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "w", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "ones", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 70, "col_offset": 6, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "ConvND", "type": "Type[sonnet.src.conv.ConvND]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "device_types", "type": "Any"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "float64", "type": "Any"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "normal", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "primary_device", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "std", "type": "Any"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "err", "type": "float"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "padding", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "conv1", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "out1", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "out2", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 201, "col_offset": 42, "nodeName": "autograph", "type": "Any"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 208, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "conv", "type": "module"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 220, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 220, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 220, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 225, "col_offset": 44, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 225, "col_offset": 58, "nodeName": "expected_out", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 244, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 271, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 284, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 289, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 295, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 314, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 316, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 345, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 347, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "conv", "type": "module"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 368, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 370, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 375, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "initializers", "type": "module"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "initializers", "type": "module"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "initializers", "type": "module"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "n", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "conv", "type": "module"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 156, "col_offset": 6, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "y1", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 156, "col_offset": 59, "nodeName": "y2", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 6, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 178, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "defun_conv", "type": "Any"}, {"lineNumber": 208, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "function", "type": "Any"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "c", "type": "sonnet.src.conv.ConvND"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 220, "col_offset": 44, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 225, "col_offset": 44, "nodeName": "self", "type": "ConvTest"}, {"lineNumber": 240, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 240, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 246, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 263, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 267, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 287, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 310, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 310, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 312, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 341, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 343, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 364, "col_offset": 10, "nodeName": "create_constant_initializers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 364, "col_offset": 49, "nodeName": "with_bias", "type": "Any"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 366, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "zeros_initializer", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 263, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 287, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 312, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "out", "type": "Any"}]