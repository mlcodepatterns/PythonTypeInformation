[{"lineNumber": 26, "col_offset": 0, "nodeName": "CONFIGS", "type": "List[Tuple[str, Dict[nothing, nothing]]]"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "AbstractFuzzTest", "type": "Type[sonnet.src.optimizers.optimizer_tests.AbstractFuzzTest]"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "OptimizerTestBase", "type": "Type[sonnet.src.optimizers.optimizer_tests.OptimizerTestBase]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "RMSPropTest", "type": "Type[RMSPropTest]"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "named_product", "type": "Callable[..., List[Tuple[str, Dict[Any, Any]]]]"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "optimizer_tests", "type": "module"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "optimizer_tests", "type": "module"}, {"lineNumber": 211, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 10, "nodeName": "optimizer_tests", "type": "module"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "decay", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 213, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "RMSProp", "type": "Type[sonnet.src.optimizers.rmsprop.RMSProp]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "pop", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assertParametersRemainClose", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "seed", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "RMSProp", "type": "Type[sonnet.src.optimizers.rmsprop.RMSProp]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "assign", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "float32", "type": "Any"}, {"lineNumber": 173, "col_offset": 60, "nodeName": "float64", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "is_tf_optimizer", "type": "Callable[[Any], bool]"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "updates", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "make_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "is_tf_optimizer", "type": "Callable[[Any], bool]"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 196, "col_offset": 6, "nodeName": "var", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Sequence[Any], Sequence[Any]], None]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "device", "type": "nothing"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "device", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "device", "type": "nothing"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "device", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "WrappedTFOptimizer", "type": "Type[sonnet.src.optimizers.optimizer_tests.WrappedTFOptimizer]"}, {"lineNumber": 213, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 38, "col_offset": 52, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "decay", "type": "Any"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 41, "col_offset": 46, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "centered", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "rmsprop", "type": "module"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "decay", "type": "Any"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "centered", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "rmsprop", "type": "module"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "constant", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "constant", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "IndexedSlices", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "IndexedSlices", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "IndexedSlices", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "IndexedSlices", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 150, "col_offset": 47, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "constant", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "constant", "type": "Any"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "constant", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "decay", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "momentum", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "optimizer_tests", "type": "module"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "optimizer_tests", "type": "module"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "skipTest", "type": "Any"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "device", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "var", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "var", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "var", "type": "Any"}, {"lineNumber": 206, "col_offset": 6, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "optimizer_tests", "type": "module"}, {"lineNumber": 208, "col_offset": 46, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 213, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "constant", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "constant", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "primary_device", "type": "str"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "constant", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "constant", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "constant", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 163, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 195, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "constant", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "mom", "type": "List[nothing]"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "ms", "type": "List[nothing]"}, {"lineNumber": 208, "col_offset": 46, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 208, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 10, "nodeName": "self", "type": "RMSPropTest"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 136, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 47, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "optimizer", "type": "sonnet.src.optimizers.rmsprop.RMSProp"}, {"lineNumber": 208, "col_offset": 46, "nodeName": "tf", "type": "Any"}]