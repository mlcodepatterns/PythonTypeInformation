[{"lineNumber": 29, "col_offset": 21, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 201, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "first_shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "second_shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "segment_shapes", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "inputs_shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "first_shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "second_shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "segment_shapes", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "inputs_shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "segment_shapes", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "segment_shapes", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "length", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "permutations", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "inverse_np", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "output_size", "type": "int"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "lin_a", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "input_size_a", "type": "int"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "input_size_b", "type": "int"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "output_size", "type": "int"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "lin_a", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "lin_b", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "input_a", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "input_b", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "output_size_a", "type": "int"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "output_size_b", "type": "int"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "lin_a", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "lin_b", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "input_a", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "input_b", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "modules", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "modules", "type": "Any"}, {"lineNumber": 203, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "first_shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "second_shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "final_shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "inputs_shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "second", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "segment_dim", "type": "Callable[[Any, Any, Any], Tuple[Any, ...]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "first_shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "second_shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "final_shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "inputs_shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "second", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "segment_dim", "type": "Callable[[Any, Any, Any], Tuple[Any, ...]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "constant", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "second", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "segment_dim", "type": "Callable[[Any, Any, Any], Tuple[Any, ...]]"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "empty", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "batch_invert_permutation", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "j", "type": "int"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "batch_gather", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "target", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "output_size", "type": "int"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "apply_linear", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "lin_a", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "output_size", "type": "int"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "output_size", "type": "int"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "apply_linear", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "output_size_a", "type": "int"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "output_size_b", "type": "int"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 174, "col_offset": 60, "nodeName": "input_sizes", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "module_hidden_sizes", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 194, "col_offset": 60, "nodeName": "input_sizes", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "Linear", "type": "Type[sonnet.src.linear.Linear]"}, {"lineNumber": 195, "col_offset": 48, "nodeName": "module_hidden_sizes", "type": "Any"}, {"lineNumber": 203, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "segment_shapes", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "final_shape", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 49, "col_offset": 65, "nodeName": "final_shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "segment_shapes", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 67, "col_offset": 64, "nodeName": "final_shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 69, "col_offset": 65, "nodeName": "final_shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "segment_shapes", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "SegmentDimTest"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "first", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "SegmentDimTest"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 78, "col_offset": 53, "nodeName": "second", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "segment_dim", "type": "Callable[[Any, Any, Any], Tuple[Any, ...]]"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "segment_shapes", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "length", "type": "int"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "permutations", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "length", "type": "int"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "util", "type": "module"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "constant", "type": "Any"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "permutations", "type": "Any"}, {"lineNumber": 99, "col_offset": 70, "nodeName": "int32", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "length", "type": "int"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "util", "type": "module"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "constant", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "constant", "type": "Any"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "indices", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "BatchGatherTest"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "linear", "type": "module"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "input_size", "type": "int"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "util", "type": "module"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "linear", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "linear", "type": "module"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "input_size_a", "type": "int"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "input_size_b", "type": "int"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "util", "type": "module"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "input_a", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "input_b", "type": "Any"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "lin_a", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 140, "col_offset": 59, "nodeName": "lin_b", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "relu", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "linear", "type": "module"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "linear", "type": "module"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "input_size", "type": "int"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "input_size", "type": "int"}, {"lineNumber": 157, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 159, "col_offset": 6, "nodeName": "apply_linear", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "tree", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "tree", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "linear", "type": "module"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "apply_linear", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "modules", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "tree", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "tree", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "linear", "type": "module"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "apply_linear", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "modules", "type": "Any"}, {"lineNumber": 203, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "initial_shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "initial_shape", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "initial_shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "initial_shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "initial_shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "first", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "second", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "self", "type": "SegmentDimTest"}, {"lineNumber": 84, "col_offset": 6, "nodeName": "util", "type": "module"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 70, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "j", "type": "int"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "nn", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "output", "type": "Any"}, {"lineNumber": 129, "col_offset": 62, "nodeName": "get_atol", "type": "Callable[[], float]"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "nn", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "output", "type": "Any"}, {"lineNumber": 145, "col_offset": 62, "nodeName": "get_atol", "type": "Callable[[], float]"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 9, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "errors", "type": "Any"}, {"lineNumber": 159, "col_offset": 6, "nodeName": "util", "type": "module"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "input_a", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "input_b", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "lin_a", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "lin_b", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 177, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 6, "nodeName": "util", "type": "module"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 6, "nodeName": "util", "type": "module"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "first", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "second", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "first", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "second", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "BatchInvertPermutationTest"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 129, "col_offset": 62, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "b", "type": "Any"}, {"lineNumber": 145, "col_offset": 62, "nodeName": "self", "type": "LinearTest"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "num_elements", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "num_elements", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "first_shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "second_shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "num_elements", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "num_elements", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "final_shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "first_shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "second_shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "permutations", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "w", "type": "Any"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "lin_a", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "lin_b", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "first_shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "second_shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "first_shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "second_shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "lin_a", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "input_b", "type": "Any"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "w", "type": "Any"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "inverse_np", "type": "Any"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "j", "type": "int"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "lin_b", "type": "sonnet.src.linear.Linear"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "i", "type": "int"}]