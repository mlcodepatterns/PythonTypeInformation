[{"lineNumber": 29, "col_offset": 19, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 77, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "no_checkpoint_whitelist", "type": "Set[Union[Type[sonnet.src.recurrent.UnrolledRNN], Type[sonnet.src.recurrent.DeepRNN], Type[sonnet.src.metrics.Metric], Type[sonnet.src.recurrent.RNNCore], Type[sonnet.src.nets.resnet.BlockGroup], Type[sonnet.src.optimizers.adam.Adam], Type[sonnet.src.optimizers.momentum.Momentum], Type[sonnet.src.optimizers.rmsprop.RMSProp], Type[sonnet.src.optimizers.sgd.SGD], Type[sonnet.src.batch_apply.BatchApply], Type[sonnet.src.deferred.Deferred], Type[sonnet.src.reshape.Flatten], Type[sonnet.src.base.Module], Type[sonnet.src.base.Optimizer], Type[sonnet.src.reshape.Reshape], Type[sonnet.src.sequential.Sequential], Type[sonnet.src.nets.resnet.ResNet50], Type[sonnet.src.nets.resnet.BottleNeckBlockV1], Type[sonnet.src.nets.resnet.BottleNeckBlockV2]]]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "all_sonnet_types", "type": "Set[Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "tested_modules", "type": "Set[Any]"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_", "type": "str"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "python_module", "type": "module"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "find_sonnet_python_modules", "type": "Callable[[module], Sequence[Tuple[str, module]]]"}, {"lineNumber": 61, "col_offset": 66, "nodeName": "snt", "type": "module"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "module_cls", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "assertEmpty", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 63, "nodeName": "all_sonnet_types", "type": "Set[Any]"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "Adam", "type": "Type[sonnet.src.optimizers.adam.Adam]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "Momentum", "type": "Type[sonnet.src.optimizers.momentum.Momentum]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "RMSProp", "type": "Type[sonnet.src.optimizers.rmsprop.RMSProp]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "SGD", "type": "Type[sonnet.src.optimizers.sgd.SGD]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "BatchApply", "type": "Type[sonnet.src.batch_apply.BatchApply]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "DeepRNN", "type": "Type[sonnet.src.recurrent.DeepRNN]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "Deferred", "type": "Type[sonnet.src.deferred.Deferred]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "Metric", "type": "Type[sonnet.src.metrics.Metric]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "Module", "type": "Type[sonnet.src.base.Module]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "Optimizer", "type": "Type[sonnet.src.base.Optimizer]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "RNNCore", "type": "Type[sonnet.src.recurrent.RNNCore]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "Sequential", "type": "Type[sonnet.src.sequential.Sequential]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "UnrolledRNN", "type": "Type[sonnet.src.recurrent.UnrolledRNN]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "ResNet50", "type": "Type[sonnet.src.nets.resnet.ResNet50]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "BottleNeckBlockV1", "type": "Type[sonnet.src.nets.resnet.BottleNeckBlockV1]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "BottleNeckBlockV2", "type": "Type[sonnet.src.nets.resnet.BottleNeckBlockV2]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "BlockGroup", "type": "Type[sonnet.src.nets.resnet.BlockGroup]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 62, "col_offset": 10, "nodeName": "_", "type": "str"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "cls", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "getmembers", "type": "Callable[..., List[Tuple[str, Any]]]"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "python_module", "type": "module"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "self", "type": "CoverageTest"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "tested_modules", "type": "Set[Any]"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "no_checkpoint_whitelist", "type": "Set[Union[Type[sonnet.src.recurrent.UnrolledRNN], Type[sonnet.src.recurrent.DeepRNN], Type[sonnet.src.metrics.Metric], Type[sonnet.src.recurrent.RNNCore], Type[sonnet.src.nets.resnet.BlockGroup], Type[sonnet.src.optimizers.adam.Adam], Type[sonnet.src.optimizers.momentum.Momentum], Type[sonnet.src.optimizers.rmsprop.RMSProp], Type[sonnet.src.optimizers.sgd.SGD], Type[sonnet.src.batch_apply.BatchApply], Type[sonnet.src.deferred.Deferred], Type[sonnet.src.reshape.Flatten], Type[sonnet.src.base.Module], Type[sonnet.src.base.Optimizer], Type[sonnet.src.reshape.Reshape], Type[sonnet.src.sequential.Sequential], Type[sonnet.src.nets.resnet.ResNet50], Type[sonnet.src.nets.resnet.BottleNeckBlockV1], Type[sonnet.src.nets.resnet.BottleNeckBlockV2]]]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "self", "type": "CoverageTest"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "tested_modules", "type": "Set[Any]"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "no_checkpoint_whitelist", "type": "Set[Union[Type[sonnet.src.recurrent.UnrolledRNN], Type[sonnet.src.recurrent.DeepRNN], Type[sonnet.src.metrics.Metric], Type[sonnet.src.recurrent.RNNCore], Type[sonnet.src.nets.resnet.BlockGroup], Type[sonnet.src.optimizers.adam.Adam], Type[sonnet.src.optimizers.momentum.Momentum], Type[sonnet.src.optimizers.rmsprop.RMSProp], Type[sonnet.src.optimizers.sgd.SGD], Type[sonnet.src.batch_apply.BatchApply], Type[sonnet.src.deferred.Deferred], Type[sonnet.src.reshape.Flatten], Type[sonnet.src.base.Module], Type[sonnet.src.base.Optimizer], Type[sonnet.src.reshape.Reshape], Type[sonnet.src.sequential.Sequential], Type[sonnet.src.nets.resnet.ResNet50], Type[sonnet.src.nets.resnet.BottleNeckBlockV1], Type[sonnet.src.nets.resnet.BottleNeckBlockV2]]]"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "optimizers", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "nets", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "resnet", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "resnet", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "resnet", "type": "module"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "inspect", "type": "module"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "inspect", "type": "module"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "cls", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "Module", "type": "Type[sonnet.src.base.Module]"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "module_cls", "type": "Any"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "_", "type": "str"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "_", "type": "Any"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "list_goldens", "type": "Callable[[], List[Tuple[Type[Any], str, Type[Any]]]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "nets", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "nets", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "nets", "type": "module"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "snt", "type": "module"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "add", "type": "Callable"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "cls", "type": "Any"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "goldens", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "snt", "type": "module"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "all_sonnet_types", "type": "Set[Any]"}]