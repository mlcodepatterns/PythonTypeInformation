[{"lineNumber": 43, "col_offset": 14, "nodeName": "AbstractModule", "type": "Type[sonnet.python.modules.base.AbstractModule]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "base", "type": "module"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "FULL", "type": "str"}, {"lineNumber": 53, "col_offset": 2, "nodeName": "HALF", "type": "str"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "MINI", "type": "str"}, {"lineNumber": 56, "col_offset": 2, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "HALF", "type": "str"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "_mode", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "_use_batch_norm", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "use_batch_norm", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "_min_size", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "_conv_modules", "type": "List[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "_linear_modules", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "possible_keys", "type": "Set[str]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 220, "col_offset": 10, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "net", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "_initializers", "type": "Any"}, {"lineNumber": 295, "col_offset": 11, "nodeName": "_partitioners", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "_regularizers", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "_min_size", "type": "Any"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "_conv_modules", "type": "Any"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "_linear_modules", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "batch_norm_config", "type": "Any"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "_batch_norm_config", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "batch_norm_config", "type": "Any"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "_batch_norm_config", "type": "Dict[nothing, nothing]"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "_mode", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "HALF", "type": "str"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "_fc_layers", "type": "List[int]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "_calc_min_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "_conv_layers", "type": "List[Union[Tuple[int, Tuple[int, int], Tuple[int, int]], Tuple[int, Tuple[int, int], None]]]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "check_initializers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "check_partitioners", "type": "Callable"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "partitioners", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "check_regularizers", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "POSSIBLE_INITIALIZER_KEYS", "type": "Set[str]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "conv_params", "type": "Tuple[int, int]"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "max_pooling", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 173, "col_offset": 48, "nodeName": "conv_layers", "type": "List[Union[Tuple[int, Tuple[int, int], Tuple[int, int]], Tuple[int, Tuple[int, int], None]]]"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 224, "col_offset": 6, "nodeName": "valid_inputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "params", "type": "Union[Tuple[int, Tuple[int, int], Tuple[int, int]], Tuple[int, Tuple[int, int], None]]"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "_conv_layers", "type": "List[Union[Tuple[int, Tuple[int, int], Tuple[int, int]], Tuple[int, Tuple[int, int], None]]]"}, {"lineNumber": 232, "col_offset": 50, "nodeName": "params", "type": "Union[Tuple[int, Tuple[int, int], None], Tuple[int, Tuple[int, int], Tuple[int, int]]]"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "conv_params", "type": "Tuple[int, int]"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "_use_batch_norm", "type": "Any"}, {"lineNumber": 255, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 265, "col_offset": 45, "nodeName": "net", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "output_size", "type": "int"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 267, "col_offset": 36, "nodeName": "_fc_layers", "type": "List[int]"}, {"lineNumber": 276, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 278, "col_offset": 9, "nodeName": "_use_batch_norm", "type": "Any"}, {"lineNumber": 282, "col_offset": 6, "nodeName": "net", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "_ensure_is_connected", "type": "Any"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "_ensure_is_connected", "type": "Any"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "_mode", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "FULL", "type": "str"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "_fc_layers", "type": "List[int]"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "conv_params", "type": "Tuple[int, int]"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "conv_params", "type": "Tuple[int, int]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "_min_size", "type": "Any"}, {"lineNumber": 215, "col_offset": 59, "nodeName": "_min_size", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "IncompatibleShapeError", "type": "Type[sonnet.python.modules.base.IncompatibleShapeError]"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "logical_or", "type": "Any"}, {"lineNumber": 224, "col_offset": 35, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 226, "col_offset": 10, "nodeName": "valid_inputs", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 232, "col_offset": 6, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "conv_params", "type": "Tuple[int, int]"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "max_pooling", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "stride", "type": "int"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "Conv2D", "type": "Type[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "is_connected", "type": "bool"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "conv_mod", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "net", "type": "Any"}, {"lineNumber": 251, "col_offset": 9, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 257, "col_offset": 9, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 258, "col_offset": 46, "nodeName": "max_pooling", "type": "Any"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "BatchFlatten", "type": "Type[sonnet.python.modules.basic.BatchFlatten]"}, {"lineNumber": 267, "col_offset": 36, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "Linear", "type": "Type[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "is_connected", "type": "bool"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "linear_mod", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 278, "col_offset": 9, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 284, "col_offset": 9, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "AlexNet", "type": "Type[AlexNet]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "batch_norm_config", "type": "Any"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "Mapping", "type": "Type[Mapping[Any, Any]]"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "_mode", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "MINI", "type": "str"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "_fc_layers", "type": "List[int]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "stride", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "stride", "type": "int"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 7, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 59, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "base", "type": "module"}, {"lineNumber": 217, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "_min_size", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 224, "col_offset": 48, "nodeName": "equal", "type": "Any"}, {"lineNumber": 224, "col_offset": 57, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "control_dependencies", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "identity", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "net", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "conv", "type": "module"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "output_channels", "type": "int"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "stride", "type": "int"}, {"lineNumber": 241, "col_offset": 18, "nodeName": "VALID", "type": "str"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "_initializers", "type": "Dict[Any, Any]"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "_partitioners", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "_regularizers", "type": "Dict[Any, Any]"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "conv_mod", "type": "sonnet.python.modules.conv.Conv2D"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "pooling_kernel_size", "type": "Any"}, {"lineNumber": 258, "col_offset": 29, "nodeName": "pooling_stride", "type": "Any"}, {"lineNumber": 259, "col_offset": 14, "nodeName": "max_pool", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "basic", "type": "module"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "basic", "type": "module"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "output_size", "type": "int"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "_partitioners", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "linear_mod", "type": "sonnet.python.modules.basic.Linear"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "BatchNorm", "type": "Type[sonnet.python.modules.batch_norm.BatchNorm]"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "bn", "type": "sonnet.python.modules.batch_norm.BatchNorm"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "net", "type": "Any"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "test_local_stats", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 285, "col_offset": 28, "nodeName": "net", "type": "Any"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "collections", "type": "module"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 136, "col_offset": 6, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "Error", "type": "Type[sonnet.python.modules.base.Error]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "input_size", "type": "int"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "stride", "type": "Any"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 176, "col_offset": 58, "nodeName": "stride", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "stride", "type": "int"}, {"lineNumber": 180, "col_offset": 44, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 180, "col_offset": 58, "nodeName": "stride", "type": "int"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 14, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 224, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "keep_prob_check", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 241, "col_offset": 18, "nodeName": "conv", "type": "module"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "_conv_modules", "type": "List[sonnet.python.modules.conv.Conv2D]"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 252, "col_offset": 36, "nodeName": "_batch_norm_config", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 259, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "VALID", "type": "str"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "_linear_modules", "type": "List[sonnet.python.modules.basic.Linear]"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "batch_norm", "type": "module"}, {"lineNumber": 279, "col_offset": 36, "nodeName": "_batch_norm_config", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 285, "col_offset": 43, "nodeName": "keep_prob", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "base", "type": "module"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "mode", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "HALF", "type": "str"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "FULL", "type": "str"}, {"lineNumber": 140, "col_offset": 55, "nodeName": "MINI", "type": "str"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 252, "col_offset": 36, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 259, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "pooling_kernel_size", "type": "Any"}, {"lineNumber": 261, "col_offset": 43, "nodeName": "pooling_kernel_size", "type": "Any"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "pooling_stride", "type": "Any"}, {"lineNumber": 262, "col_offset": 40, "nodeName": "pooling_stride", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "conv", "type": "module"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 279, "col_offset": 36, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 140, "col_offset": 55, "nodeName": "self", "type": "AlexNet"}]