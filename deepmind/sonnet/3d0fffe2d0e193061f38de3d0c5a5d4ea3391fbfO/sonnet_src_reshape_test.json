[{"lineNumber": 29, "col_offset": 18, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "TestCase", "type": "Type[sonnet.src.test_utils.TestCase]"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "B", "type": "int"}, {"lineNumber": 26, "col_offset": 3, "nodeName": "H", "type": "int"}, {"lineNumber": 26, "col_offset": 6, "nodeName": "W", "type": "int"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "C", "type": "int"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "D", "type": "int"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "parameterized", "type": "Any"}, {"lineNumber": 261, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "input_size", "type": "int"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "output_size", "type": "int"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "msg", "type": "str"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "out_size", "type": "List[int]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "mod_t", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "t_output", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "cf", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "expected_output_shape", "type": "List[int]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "mod_r", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "output_r", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "mod_r_r", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "output_r_r", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "mod_r", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "preserve_dims", "type": "int"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "cf", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "rng", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "cf", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "actual_input_shape", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "expected_output_shape", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "actual_input", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "actual_output", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "flattened_size", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "cf", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "flat", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "cf", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "flat", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "flattened_shape", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "mod_r", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "output_r", "type": "Any"}, {"lineNumber": 263, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "expected_output_shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "reversed", "type": "Callable"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "mod_t", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "cf", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "normal", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "expected_output_shape", "type": "List[int]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "reversed", "type": "Callable"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "mod_r", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "input_shape", "type": "List[int]"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "reversed", "type": "Callable"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "mod_r_r", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "expected_output_shape", "type": "List[int]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "input_np", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "output_r_np", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "output_r_np", "type": "Any"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "input_np", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "reversed", "type": "Callable"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "preserve", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 154, "col_offset": 48, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "cf", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "preserve", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "trailing_in", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "preserve", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 174, "col_offset": 10, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 176, "col_offset": 48, "nodeName": "input_spec", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "cf", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "expected_output_shape", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "cf", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "assertAllEqual", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "actual_output", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 194, "col_offset": 10, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "prod", "type": "Any"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 200, "col_offset": 10, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "cf", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 209, "col_offset": 10, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "function", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "TensorSpec", "type": "Any"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "get_concrete_function", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "cf", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 220, "col_offset": 21, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 221, "col_offset": 10, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "flattened_shape", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 231, "col_offset": 10, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 233, "col_offset": 6, "nodeName": "_", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 245, "col_offset": 10, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 252, "col_offset": 10, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "ones", "type": "Any"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 255, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "reversed", "type": "Callable"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "mod_r", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 258, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 263, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 38, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 38, "col_offset": 62, "nodeName": "preserve_dims", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "ones", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 43, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 48, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 56, "col_offset": 6, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "input_size", "type": "int"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "output_size", "type": "int"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "InvalidArgumentError", "type": "Any"}, {"lineNumber": 65, "col_offset": 65, "nodeName": "msg", "type": "str"}, {"lineNumber": 66, "col_offset": 6, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "out_size", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "t_output", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "output_r", "type": "Any"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "mod_r", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "output_r_r", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 51, "nodeName": "output_r", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "mod_r", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "Reshape", "type": "Type[sonnet.src.reshape.Reshape]"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 137, "col_offset": 6, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 137, "col_offset": 10, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "preserve", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 153, "col_offset": 49, "nodeName": "preserve_dims", "type": "int"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 156, "col_offset": 62, "nodeName": "output_shape", "type": "List[int]"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "trailing_out", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 178, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 178, "col_offset": 50, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 47, "nodeName": "i", "type": "Any"}, {"lineNumber": 180, "col_offset": 53, "nodeName": "i", "type": "Any"}, {"lineNumber": 180, "col_offset": 58, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 181, "col_offset": 50, "nodeName": "i", "type": "Any"}, {"lineNumber": 181, "col_offset": 56, "nodeName": "i", "type": "Any"}, {"lineNumber": 181, "col_offset": 61, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "actual_input", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "actual_input", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 36, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 194, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 197, "col_offset": 36, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 197, "col_offset": 48, "nodeName": "flattened_size", "type": "Any"}, {"lineNumber": 200, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "f", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "self", "type": "FlattenTest"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "self", "type": "FlattenTest"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "flat", "type": "Any"}, {"lineNumber": 209, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "f", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "self", "type": "FlattenTest"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "self", "type": "FlattenTest"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "flat", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 221, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "preserve_dims", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 231, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "preserve_dims", "type": "Any"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 233, "col_offset": 10, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "self", "type": "FlattenTest"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 241, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "Flatten", "type": "Type[sonnet.src.reshape.Flatten]"}, {"lineNumber": 245, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "assertRaisesRegexp", "type": "Any"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 248, "col_offset": 10, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 252, "col_offset": 10, "nodeName": "reshape", "type": "module"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "mod", "type": "sonnet.src.reshape.Flatten"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "output_r", "type": "Any"}, {"lineNumber": 258, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 263, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "D", "type": "int"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "B", "type": "int"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "H", "type": "int"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "W", "type": "int"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "C", "type": "int"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "D", "type": "int"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "errors", "type": "Any"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "ones", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "errors", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "ones", "type": "Any"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "ones", "type": "Any"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "errors", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "ones", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "function", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "reshape", "type": "module"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "self", "type": "ReshapeTest"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "function", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 156, "col_offset": 50, "nodeName": "preserve", "type": "Any"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 172, "col_offset": 60, "nodeName": "trailing_out", "type": "Any"}, {"lineNumber": 175, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 53, "nodeName": "preserve", "type": "Any"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "function", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "mod", "type": "sonnet.src.reshape.Reshape"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "i", "type": "Any"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "preserve_dims", "type": "Any"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "prod", "type": "Any"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "reshape", "type": "module"}, {"lineNumber": 241, "col_offset": 9, "nodeName": "self", "type": "FlattenTest"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "reshape", "type": "module"}, {"lineNumber": 247, "col_offset": 9, "nodeName": "self", "type": "FlattenTest"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 45, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 176, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "rng", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "actual_input_shape", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 44, "nodeName": "in_shape", "type": "List[int]"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "trailing_in", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 224, "col_offset": 53, "nodeName": "preserve_dims", "type": "Any"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "cf", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "cf", "type": "Any"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "inputs", "type": "Any"}]